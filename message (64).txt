// ==UserScript==
// @name         авыава
// @namespace    http://tampermonkey.net/
// @version      11.0.0
// @description  try to take over the Starve.io!
// @author       Loux Team
// @match        ://starve.io
// @webRequest   [{"selector":"js/u0hj8z9QNdfleKhLDI38wcEdcP6yqFp0.js","action":"cancel"}]
// @run-at       document-start
// @grant        none
// @noframes
// ==/UserScript==
!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;"undefined"!=typeof window?e=window:"undefined"!=typeof global?e=global:"undefined"!=typeof self&&(e=self),e.PF=t()}}(function(){return function t(e,r,i){function n(s,a){if(!r[s]){if(!e[s]){var u="function"==typeof require&&require;if(!a&&u)return u(s,!0);if(o)return o(s,!0);var h=new Error("Cannot find module '"+s+"'");throw h.code="MODULE_NOT_FOUND",h}var l=r[s]={exports:{}};e[s][0].call(l.exports,function(t){var r=e[s][1][t];return n(r?r:t)},l,l.exports,t,e,r,i)}return r[s].exports}for(var o="function"==typeof require&&require,s=0;s<i.length;s++)n(i[s]);return n}({1:[function(t,e){e.exports=t("./lib/heap")},{"./lib/heap":2}],2:[function(t,e){!function(){var t,r,i,n,o,s,a,u,h,l,p,c,f,d,g;i=Math.floor,l=Math.min,r=function(t,e){return e>t?-1:t>e?1:0},h=function(t,e,n,o,s){var a;if(null==n&&(n=0),null==s&&(s=r),0>n)throw new Error("lo must be non-negative");for(null==o&&(o=t.length);o>n;)a=i((n+o)/2),s(e,t[a])<0?o=a:n=a+1;return[].splice.apply(t,[n,n-n].concat(e)),e},s=function(t,e,i){return null==i&&(i=r),t.push(e),d(t,0,t.length-1,i)},o=function(t,e){var i,n;return null==e&&(e=r),i=t.pop(),t.length?(n=t[0],t[0]=i,g(t,0,e)):n=i,n},u=function(t,e,i){var n;return null==i&&(i=r),n=t[0],t[0]=e,g(t,0,i),n},a=function(t,e,i){var n;return null==i&&(i=r),t.length&&i(t[0],e)<0&&(n=[t[0],e],e=n[0],t[0]=n[1],g(t,0,i)),e},n=function(t,e){var n,o,s,a,u,h;for(null==e&&(e=r),a=function(){h=[];for(var e=0,r=i(t.length/2);r>=0?r>e:e>r;r>=0?e++:e--)h.push(e);return h}.apply(this).reverse(),u=[],o=0,s=a.length;s>o;o++)n=a[o],u.push(g(t,n,e));return u},f=function(t,e,i){var n;return null==i&&(i=r),n=t.indexOf(e),-1!==n?(d(t,0,n,i),g(t,n,i)):void 0},p=function(t,e,i){var o,s,u,h,l;if(null==i&&(i=r),s=t.slice(0,e),!s.length)return s;for(n(s,i),l=t.slice(e),u=0,h=l.length;h>u;u++)o=l[u],a(s,o,i);return s.sort(i).reverse()},c=function(t,e,i){var s,a,u,p,c,f,d,g,b,y;if(null==i&&(i=r),10*e<=t.length){if(p=t.slice(0,e).sort(i),!p.length)return p;for(u=p[p.length-1],g=t.slice(e),c=0,d=g.length;d>c;c++)s=g[c],i(s,u)<0&&(h(p,s,0,null,i),p.pop(),u=p[p.length-1]);return p}for(n(t,i),y=[],a=f=0,b=l(e,t.length);b>=0?b>f:f>b;a=b>=0?++f:--f)y.push(o(t,i));return y},d=function(t,e,i,n){var o,s,a;for(null==n&&(n=r),o=t[i];i>e&&(a=i-1>>1,s=t[a],n(o,s)<0);)t[i]=s,i=a;return t[i]=o},g=function(t,e,i){var n,o,s,a,u;for(null==i&&(i=r),o=t.length,u=e,s=t[e],n=2*e+1;o>n;)a=n+1,o>a&&!(i(t[n],t[a])<0)&&(n=a),t[e]=t[n],e=n,n=2*e+1;return t[e]=s,d(t,u,e,i)},t=function(){function t(t){this.cmp=null!=t?t:r,this.nodes=[]}return t.push=s,t.pop=o,t.replace=u,t.pushpop=a,t.heapify=n,t.nlargest=p,t.nsmallest=c,t.prototype.push=function(t){return s(this.nodes,t,this.cmp)},t.prototype.pop=function(){return o(this.nodes,this.cmp)},t.prototype.peek=function(){return this.nodes[0]},t.prototype.contains=function(t){return-1!==this.nodes.indexOf(t)},t.prototype.replace=function(t){return u(this.nodes,t,this.cmp)},t.prototype.pushpop=function(t){return a(this.nodes,t,this.cmp)},t.prototype.heapify=function(){return n(this.nodes,this.cmp)},t.prototype.updateItem=function(t){return f(this.nodes,t,this.cmp)},t.prototype.clear=function(){return this.nodes=[]},t.prototype.empty=function(){return 0===this.nodes.length},t.prototype.size=function(){return this.nodes.length},t.prototype.clone=function(){var e;return e=new t,e.nodes=this.nodes.slice(0),e},t.prototype.toArray=function(){return this.nodes.slice(0)},t.prototype.insert=t.prototype.push,t.prototype.remove=t.prototype.pop,t.prototype.top=t.prototype.peek,t.prototype.front=t.prototype.peek,t.prototype.has=t.prototype.contains,t.prototype.copy=t.prototype.clone,t}(),("undefined"!=typeof e&&null!==e?e.exports:void 0)?e.exports=t:window.Heap=t}.call(this)},{}],3:[function(t,e){function r(t,e,r){this.width=t,this.height=e,this.nodes=this._buildNodes(t,e,r)}var i=t("./Node");r.prototype._buildNodes=function(t,e,r){var n,o,s=new Array(e);for(n=0;e>n;++n)for(s[n]=new Array(t),o=0;t>o;++o)s[n][o]=new i(o,n);if(void 0===r)return s;if(r.length!==e||r[0].length!==t)throw new Error("Matrix size does not fit");for(n=0;e>n;++n)for(o=0;t>o;++o)r[n][o]&&(s[n][o].walkable=!1);return s},r.prototype.getNodeAt=function(t,e){return this.nodes[e][t]},r.prototype.isWalkableAt=function(t,e){return this.isInside(t,e)&&this.nodes[e][t].walkable},r.prototype.isInside=function(t,e){return t>=0&&t<this.width&&e>=0&&e<this.height},r.prototype.setWalkableAt=function(t,e,r){this.nodes[e][t].walkable=r},r.prototype.getNeighbors=function(t,e,r){var i=t.x,n=t.y,o=[],s=!1,a=!1,u=!1,h=!1,l=!1,p=!1,c=!1,f=!1,d=this.nodes;return this.isWalkableAt(i,n-1)&&(o.push(d[n-1][i]),s=!0),this.isWalkableAt(i+1,n)&&(o.push(d[n][i+1]),u=!0),this.isWalkableAt(i,n+1)&&(o.push(d[n+1][i]),l=!0),this.isWalkableAt(i-1,n)&&(o.push(d[n][i-1]),c=!0),e?(r?(a=c&&s,h=s&&u,p=u&&l,f=l&&c):(a=c||s,h=s||u,p=u||l,f=l||c),a&&this.isWalkableAt(i-1,n-1)&&o.push(d[n-1][i-1]),h&&this.isWalkableAt(i+1,n-1)&&o.push(d[n-1][i+1]),p&&this.isWalkableAt(i+1,n+1)&&o.push(d[n+1][i+1]),f&&this.isWalkableAt(i-1,n+1)&&o.push(d[n+1][i-1]),o):o},r.prototype.clone=function(){var t,e,n=this.width,o=this.height,s=this.nodes,a=new r(n,o),u=new Array(o);for(t=0;o>t;++t)for(u[t]=new Array(n),e=0;n>e;++e)u[t][e]=new i(e,t,s[t][e].walkable);return a.nodes=u,a},e.exports=r},{"./Node":5}],4:[function(t,e){e.exports={manhattan:function(t,e){return t+e},euclidean:function(t,e){return Math.sqrt(t*t+e*e)},octile:function(t,e){var r=Math.SQRT2-1;return e>t?r*t+e:r*e+t},chebyshev:function(t,e){return Math.max(t,e)}}},{}],5:[function(t,e){function r(t,e,r){this.x=t,this.y=e,this.walkable=void 0===r?!0:r}e.exports=r},{}],6:[function(t,e,r){function i(t){for(var e=[[t.x,t.y]];t.parent;)t=t.parent,e.push([t.x,t.y]);return e.reverse()}function n(t,e){var r=i(t),n=i(e);return r.concat(n.reverse())}function o(t){var e,r,i,n,o,s=0;for(e=1;e<t.length;++e)r=t[e-1],i=t[e],n=r[0]-i[0],o=r[1]-i[1],s+=Math.sqrt(n*n+o*o);return s}function s(t,e,r,i){var n,o,s,a,u,h,l=Math.abs,p=[];for(s=l(r-t),a=l(i-e),n=r>t?1:-1,o=i>e?1:-1,u=s-a;;){if(p.push([t,e]),t===r&&e===i)break;h=2*u,h>-a&&(u-=a,t+=n),s>h&&(u+=s,e+=o)}return p}function a(t){var e,r,i,n,o,a,u=[],h=t.length;if(2>h)return u;for(o=0;h-1>o;++o)for(e=t[o],r=t[o+1],i=s(e[0],e[1],r[0],r[1]),n=i.length,a=0;n-1>a;++a)u.push(i[a]);return u.push(t[h-1]),u}function u(t,e){var r,i,n,o,a,u,h,l,p,c,f,d=e.length,g=e[0][0],b=e[0][1],y=e[d-1][0],A=e[d-1][1];for(r=g,i=b,a=[[r,i]],u=2;d>u;++u){for(l=e[u],n=l[0],o=l[1],p=s(r,i,n,o),f=!1,h=1;h<p.length;++h)if(c=p[h],!t.isWalkableAt(c[0],c[1])){f=!0;break}f&&(lastValidCoord=e[u-1],a.push(lastValidCoord),r=lastValidCoord[0],i=lastValidCoord[1])}return a.push([y,A]),a}function h(t){if(t.length<3)return t;var e,r,i,n,o,s,a=[],u=t[0][0],h=t[0][1],l=t[1][0],p=t[1][1],c=l-u,f=p-h;for(o=Math.sqrt(c*c+f*f),c/=o,f/=o,a.push([u,h]),s=2;s<t.length;s++)e=l,r=p,i=c,n=f,l=t[s][0],p=t[s][1],c=l-e,f=p-r,o=Math.sqrt(c*c+f*f),c/=o,f/=o,(c!==i||f!==n)&&a.push([e,r]);return a.push([l,p]),a}r.backtrace=i,r.biBacktrace=n,r.pathLength=o,r.interpolate=s,r.expandPath=a,r.smoothenPath=u,r.compressPath=h},{}],7:[function(t,e){function r(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.heuristic=t.heuristic||o.manhattan,this.weight=t.weight||1}var i=t("heap"),n=t("../core/Util"),o=t("../core/Heuristic");r.prototype.findPath=function(t,e,r,o,s){var a,u,h,l,p,c,f,d,g=new i(function(t,e){return t.f-e.f}),b=s.getNodeAt(t,e),y=s.getNodeAt(r,o),A=this.heuristic,k=this.allowDiagonal,m=this.dontCrossCorners,v=this.weight,w=Math.abs,x=Math.SQRT2;for(b.g=0,b.f=0,g.push(b),b.opened=!0;!g.empty();){if(a=g.pop(),a.closed=!0,a===y)return n.backtrace(y);for(u=s.getNeighbors(a,k,m),l=0,p=u.length;p>l;++l)h=u[l],h.closed||(c=h.x,f=h.y,d=a.g+(0===c-a.x||0===f-a.y?1:x),(!h.opened||d<h.g)&&(h.g=d,h.h=h.h||v*A(w(c-r),w(f-o)),h.f=h.g+h.h,h.parent=a,h.opened?g.updateItem(h):(g.push(h),h.opened=!0)))}return[]},e.exports=r},{"../core/Heuristic":4,"../core/Util":6,heap:1}],8:[function(t,e){function r(t){i.call(this,t);var e=this.heuristic;this.heuristic=function(t,r){return 1e6*e(t,r)}}var i=t("./AStarFinder");r.prototype=new i,r.prototype.constructor=r,e.exports=r},{"./AStarFinder":7}],9:[function(t,e){function r(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.heuristic=t.heuristic||o.manhattan,this.weight=t.weight||1}var i=t("heap"),n=t("../core/Util"),o=t("../core/Heuristic");r.prototype.findPath=function(t,e,r,o,s){var a,u,h,l,p,c,f,d,g=function(t,e){return t.f-e.f},b=new i(g),y=new i(g),A=s.getNodeAt(t,e),k=s.getNodeAt(r,o),m=this.heuristic,v=this.allowDiagonal,w=this.dontCrossCorners,x=this.weight,F=Math.abs,W=Math.SQRT2,N=1,C=2;for(A.g=0,A.f=0,b.push(A),A.opened=N,k.g=0,k.f=0,y.push(k),k.opened=C;!b.empty()&&!y.empty();){for(a=b.pop(),a.closed=!0,u=s.getNeighbors(a,v,w),l=0,p=u.length;p>l;++l)if(h=u[l],!h.closed){if(h.opened===C)return n.biBacktrace(a,h);c=h.x,f=h.y,d=a.g+(0===c-a.x||0===f-a.y?1:W),(!h.opened||d<h.g)&&(h.g=d,h.h=h.h||x*m(F(c-r),F(f-o)),h.f=h.g+h.h,h.parent=a,h.opened?b.updateItem(h):(b.push(h),h.opened=N))}for(a=y.pop(),a.closed=!0,u=s.getNeighbors(a,v,w),l=0,p=u.length;p>l;++l)if(h=u[l],!h.closed){if(h.opened===N)return n.biBacktrace(h,a);c=h.x,f=h.y,d=a.g+(0===c-a.x||0===f-a.y?1:W),(!h.opened||d<h.g)&&(h.g=d,h.h=h.h||x*m(F(c-t),F(f-e)),h.f=h.g+h.h,h.parent=a,h.opened?y.updateItem(h):(y.push(h),h.opened=C))}}return[]},e.exports=r},{"../core/Heuristic":4,"../core/Util":6,heap:1}],10:[function(t,e){function r(t){i.call(this,t);var e=this.heuristic;this.heuristic=function(t,r){return 1e6*e(t,r)}}var i=t("./BiAStarFinder");r.prototype=new i,r.prototype.constructor=r,e.exports=r},{"./BiAStarFinder":9}],11:[function(t,e){function r(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners}var i=t("../core/Util");r.prototype.findPath=function(t,e,r,n,o){var s,a,u,h,l,p=o.getNodeAt(t,e),c=o.getNodeAt(r,n),f=[],d=[],g=this.allowDiagonal,b=this.dontCrossCorners,y=0,A=1;for(f.push(p),p.opened=!0,p.by=y,d.push(c),c.opened=!0,c.by=A;f.length&&d.length;){for(u=f.shift(),u.closed=!0,s=o.getNeighbors(u,g,b),h=0,l=s.length;l>h;++h)if(a=s[h],!a.closed)if(a.opened){if(a.by===A)return i.biBacktrace(u,a)}else f.push(a),a.parent=u,a.opened=!0,a.by=y;for(u=d.shift(),u.closed=!0,s=o.getNeighbors(u,g,b),h=0,l=s.length;l>h;++h)if(a=s[h],!a.closed)if(a.opened){if(a.by===y)return i.biBacktrace(a,u)}else d.push(a),a.parent=u,a.opened=!0,a.by=A}return[]},e.exports=r},{"../core/Util":6}],12:[function(t,e){function r(t){i.call(this,t),this.heuristic=function(){return 0}}var i=t("./BiAStarFinder");r.prototype=new i,r.prototype.constructor=r,e.exports=r},{"./BiAStarFinder":9}],13:[function(t,e){function r(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners}var i=t("../core/Util");r.prototype.findPath=function(t,e,r,n,o){var s,a,u,h,l,p=[],c=this.allowDiagonal,f=this.dontCrossCorners,d=o.getNodeAt(t,e),g=o.getNodeAt(r,n);for(p.push(d),d.opened=!0;p.length;){if(u=p.shift(),u.closed=!0,u===g)return i.backtrace(g);for(s=o.getNeighbors(u,c,f),h=0,l=s.length;l>h;++h)a=s[h],a.closed||a.opened||(p.push(a),a.opened=!0,a.parent=u)}return[]},e.exports=r},{"../core/Util":6}],14:[function(t,e){function r(t){i.call(this,t),this.heuristic=function(){return 0}}var i=t("./AStarFinder");r.prototype=new i,r.prototype.constructor=r,e.exports=r},{"./AStarFinder":7}],15:[function(t,e){function r(t){t=t||{},this.allowDiagonal=t.allowDiagonal,this.dontCrossCorners=t.dontCrossCorners,this.heuristic=t.heuristic||i.manhattan,this.weight=t.weight||1,this.trackRecursion=t.trackRecursion||!1,this.timeLimit=t.timeLimit||1/0}t("../core/Util");var i=t("../core/Heuristic"),n=t("../core/Node");r.prototype.findPath=function(t,e,r,i,o){var s,a,u,h=0,l=(new Date).getTime(),p=function(t,e){return this.heuristic(Math.abs(e.x-t.x),Math.abs(e.y-t.y))}.bind(this),c=function(t,e){return t.x===e.x||t.y===e.y?1:Math.SQRT2},f=function(t,e,r,i,s){if(h++,this.timeLimit>0&&(new Date).getTime()-l>1e3*this.timeLimit)return 1/0;var a=e+p(t,g)*this.weight;if(a>r)return a;if(t==g)return i[s]=[t.x,t.y],t;var u,d,b,y,A=o.getNeighbors(t,this.allowDiagonal,this.dontCrossCorners);for(b=0,u=1/0;y=A[b];++b){if(this.trackRecursion&&(y.retainCount=y.retainCount+1||1,y.tested!==!0&&(y.tested=!0)),d=f(y,e+c(t,y),r,i,s+1),d instanceof n)return i[s]=[t.x,t.y],d;this.trackRecursion&&0===--y.retainCount&&(y.tested=!1),u>d&&(u=d)}return u}.bind(this),d=o.getNodeAt(t,e),g=o.getNodeAt(r,i),b=p(d,g);for(s=0;!0;++s){if(a=[],u=f(d,0,b,a,0),1/0===u)return[];if(u instanceof n)return a;b=u}return[]},e.exports=r},{"../core/Heuristic":4,"../core/Node":5,"../core/Util":6}],16:[function(t,e){function r(t){t=t||{},this.heuristic=t.heuristic||o.manhattan,this.trackJumpRecursion=t.trackJumpRecursion||!1}var i=t("heap"),n=t("../core/Util"),o=t("../core/Heuristic");r.prototype.findPath=function(t,e,r,o,s){var a,u=this.openList=new i(function(t,e){return t.f-e.f}),h=this.startNode=s.getNodeAt(t,e),l=this.endNode=s.getNodeAt(r,o);for(this.grid=s,h.g=0,h.f=0,u.push(h),h.opened=!0;!u.empty();){if(a=u.pop(),a.closed=!0,a===l)return n.expandPath(n.backtrace(l));this._identifySuccessors(a)}return[]},r.prototype._identifySuccessors=function(t){var e,r,i,n,s,a,u,h,l,p,c=this.grid,f=this.heuristic,d=this.openList,g=this.endNode.x,b=this.endNode.y,y=t.x,A=t.y,k=Math.abs;for(Math.max,e=this._findNeighbors(t),n=0,s=e.length;s>n;++n)if(r=e[n],i=this._jump(r[0],r[1],y,A)){if(a=i[0],u=i[1],p=c.getNodeAt(a,u),p.closed)continue;h=o.octile(k(a-y),k(u-A)),l=t.g+h,(!p.opened||l<p.g)&&(p.g=l,p.h=p.h||f(k(a-g),k(u-b)),p.f=p.g+p.h,p.parent=t,p.opened?d.updateItem(p):(d.push(p),p.opened=!0))}},r.prototype._jump=function(t,e,r,i){var n=this.grid,o=t-r,s=e-i;if(!n.isWalkableAt(t,e))return null;if(this.trackJumpRecursion===!0&&(n.getNodeAt(t,e).tested=!0),n.getNodeAt(t,e)===this.endNode)return[t,e];if(0!==o&&0!==s){if(n.isWalkableAt(t-o,e+s)&&!n.isWalkableAt(t-o,e)||n.isWalkableAt(t+o,e-s)&&!n.isWalkableAt(t,e-s))return[t,e]}else if(0!==o){if(n.isWalkableAt(t+o,e+1)&&!n.isWalkableAt(t,e+1)||n.isWalkableAt(t+o,e-1)&&!n.isWalkableAt(t,e-1))return[t,e]}else if(n.isWalkableAt(t+1,e+s)&&!n.isWalkableAt(t+1,e)||n.isWalkableAt(t-1,e+s)&&!n.isWalkableAt(t-1,e))return[t,e];return 0!==o&&0!==s&&(this._jump(t+o,e,t,e)||this._jump(t,e+s,t,e))?[t,e]:n.isWalkableAt(t+o,e)||n.isWalkableAt(t,e+s)?this._jump(t+o,e+s,t,e):null},r.prototype._findNeighbors=function(t){var e,r,i,n,o,s,a,u,h=t.parent,l=t.x,p=t.y,c=this.grid,f=[];if(h)e=h.x,r=h.y,i=(l-e)/Math.max(Math.abs(l-e),1),n=(p-r)/Math.max(Math.abs(p-r),1),0!==i&&0!==n?(c.isWalkableAt(l,p+n)&&f.push([l,p+n]),c.isWalkableAt(l+i,p)&&f.push([l+i,p]),(c.isWalkableAt(l,p+n)||c.isWalkableAt(l+i,p))&&f.push([l+i,p+n]),!c.isWalkableAt(l-i,p)&&c.isWalkableAt(l,p+n)&&f.push([l-i,p+n]),!c.isWalkableAt(l,p-n)&&c.isWalkableAt(l+i,p)&&f.push([l+i,p-n])):0===i?c.isWalkableAt(l,p+n)&&(f.push([l,p+n]),c.isWalkableAt(l+1,p)||f.push([l+1,p+n]),c.isWalkableAt(l-1,p)||f.push([l-1,p+n])):c.isWalkableAt(l+i,p)&&(f.push([l+i,p]),c.isWalkableAt(l,p+1)||f.push([l+i,p+1]),c.isWalkableAt(l,p-1)||f.push([l+i,p-1]));else for(o=c.getNeighbors(t,!0),a=0,u=o.length;u>a;++a)s=o[a],f.push([s.x,s.y]);return f},e.exports=r},{"../core/Heuristic":4,"../core/Util":6,heap:1}],17:[function(t,e){function r(t){n.call(this,t),t=t||{},this.heuristic=t.heuristic||i.manhattan}var i=t("../core/Heuristic"),n=t("./JumpPointFinder");r.prototype=new n,r.prototype.constructor=r,r.prototype._jump=function(t,e,r,i){var n=this.grid,o=t-r,s=e-i;if(!n.isWalkableAt(t,e))return null;if(this.trackJumpRecursion===!0&&(n.getNodeAt(t,e).tested=!0),n.getNodeAt(t,e)===this.endNode)return[t,e];if(0!==o){if(n.isWalkableAt(t,e-1)&&!n.isWalkableAt(t-o,e-1)||n.isWalkableAt(t,e+1)&&!n.isWalkableAt(t-o,e+1))return[t,e]}else{if(0===s)throw new Error("Only horizontal and vertical movements are allowed");if(n.isWalkableAt(t-1,e)&&!n.isWalkableAt(t-1,e-s)||n.isWalkableAt(t+1,e)&&!n.isWalkableAt(t+1,e-s))return[t,e];if(this._jump(t+1,e,t,e)||this._jump(t-1,e,t,e))return[t,e]}return this._jump(t+o,e+s,t,e)},r.prototype._findNeighbors=function(t){var e,r,i,n,o,s,a,u,h=t.parent,l=t.x,p=t.y,c=this.grid,f=[];if(h)e=h.x,r=h.y,i=(l-e)/Math.max(Math.abs(l-e),1),n=(p-r)/Math.max(Math.abs(p-r),1),0!==i?(c.isWalkableAt(l,p-1)&&f.push([l,p-1]),c.isWalkableAt(l,p+1)&&f.push([l,p+1]),c.isWalkableAt(l+i,p)&&f.push([l+i,p])):0!==n&&(c.isWalkableAt(l-1,p)&&f.push([l-1,p]),c.isWalkableAt(l+1,p)&&f.push([l+1,p]),c.isWalkableAt(l,p+n)&&f.push([l,p+n]));else for(o=c.getNeighbors(t,!1),a=0,u=o.length;u>a;++a)s=o[a],f.push([s.x,s.y]);return f},e.exports=r},{"../core/Heuristic":4,"./JumpPointFinder":16}],18:[function(t,e){e.exports={Heap:t("heap"),Node:t("./core/Node"),Grid:t("./core/Grid"),Util:t("./core/Util"),Heuristic:t("./core/Heuristic"),AStarFinder:t("./finders/AStarFinder"),BestFirstFinder:t("./finders/BestFirstFinder"),BreadthFirstFinder:t("./finders/BreadthFirstFinder"),DijkstraFinder:t("./finders/DijkstraFinder"),BiAStarFinder:t("./finders/BiAStarFinder"),BiBestFirstFinder:t("./finders/BiBestFirstFinder"),BiBreadthFirstFinder:t("./finders/BiBreadthFirstFinder"),BiDijkstraFinder:t("./finders/BiDijkstraFinder"),IDAStarFinder:t("./finders/IDAStarFinder"),JumpPointFinder:t("./finders/JumpPointFinder"),OrthogonalJumpPointFinder:t("./finders/OrthogonalJumpPointFinder")}},{"./core/Grid":3,"./core/Heuristic":4,"./core/Node":5,"./core/Util":6,"./finders/AStarFinder":7,"./finders/BestFirstFinder":8,"./finders/BiAStarFinder":9,"./finders/BiBestFirstFinder":10,"./finders/BiBreadthFirstFinder":11,"./finders/BiDijkstraFinder":12,"./finders/BreadthFirstFinder":13,"./finders/DijkstraFinder":14,"./finders/IDAStarFinder":15,"./finders/JumpPointFinder":16,"./finders/OrthogonalJumpPointFinder":17,heap:1}]},{},[18])(18)});
let t = new MutationObserver(t => {
    for (const e of t) {
        for (let t of e.addedNodes) {
            if (t.tagName == "SCRIPT" && t.src.includes("u0hj8z9QNdfleKhLDI38wcEdcP6yqFp0.js")) {
                t.outerHTML = ``
            }
        }
    }
  });
 let goTos;
  t.observe(document, {
    childList: true,
    subtree: true
  });
  let SPECAXIS = {
    left: false,
    right: false,
    up: false,
    down: false
  }
  let texturePack = false , textureOn;
  let TIMELOOP = Date.now(),
  myLimit = 0,
  distTo = 0,
  curan = 0,
  AimbotRadius = {
    spear: 195, // 130 390
    sword: 105, // 75 / 200
    spike: 65 // 45 130
  },
  AimBotStfu = {
    AimArray: [],
    Angls: 0,
    SpikesAimAngle: 10,
    Dir: 0,
    myWep: null,
    AimItemType: 0,
    isTargeting: false,
    count: 0,
    lastIndex: 0
  },
  AutoFarm = {
    wateric: false,
    angles: 0
  },
  //THAT SHIT I NO GONNA TOUCH IT ANYMORE DONT ASK ME FOR ANYTHING HERE
  _Spect = {
    x: 0,
    y: 0,
    enabled: false,
    speed: 65
  },SCWeaponID = 0,ctxD, myX, myY, goommer = 0,BlizzardImg, SandstormImg, indexArr = 'no';

  let rainbow = 0;

  let   myHeal = 11;
  let _k = prompt('Put your key:');
  _k;

  setTimeout(() => {


    (function() {

        let imPlay = false,
         game = document.getElementById('game_body'), int, int2;

        window.MainSetting = {
            Hacks: {
                Visual: {
                    topPlayer: false,
                    topChest: false,
                    topBox: false,
                    topBuilding: false,
                    viewInChest: false,
                    roof: true,
                    xray: false,
                    playerTrace: false,
                    esp: false,
                    antifog: false,
                    objectInfo: false,
                    enabledHacks: false,
                    showhp: false,
                    showtimer: false,
                    fpsboost: false,
                    fpsboostx: false,
                    wolrdinfo: false,
                    hoodn: false,
                    coloredSpike: false,
                    highdetail: false,
                    playerLimit: false,
                    autofeed: false,
                    dropDeadInfo: false,
                    healTimer: false,
                    krakenTrace: true,
                    wormTrace: true,
                    seeBed: true
                },
                Misc: {
                    stealChest: false,
                    autototem: false,
                    autobook: true,
                    dropSword: false,
                    autoSpike: false,
                    autoExtractorTake: false,
                    autoBreadTake: false,
                    autoExtractorPut: false,
                    autoBreadPut: false,
                    autoCrown: false,
                    autoCraft: false,
                    autoRecycle: false,
                    autoScuba: false,
                    aimBot: false,
                    antiRotate: false,
                    smartSpikes: false,
                    SwordChest: false,
                    SmartSword: false,
                    AutoRejoin: false,
                    showConnected: false
                },
                AutoFarm: {
                    enabledfarm: false,
                    berry: false,
                    AutoStopFarming: false,
                    berryAngle: 0,
                    berryArray: [],
                    dista: 0,
                    clienticAngle: 0,
                    Wateric: false,
                    needWater: 0,
                    farmMode: 3
                },
                Aimbot: {
                    triggerBot: false,
                    enabledAim: false,
                    Aimangle: 0
                },
                PutItem: {
                    enabled: false,
                    count: 10
                },
                Others: {
                    feedType: false,
                    health: 0,
                    debugger: false,
                    connectedArray: [],
                    RainbowColors: false,
                    showhit: true
                },
                HoodBring: {
                    enabled: false,
                    pointX: 0,
                    pointY: 0
                }
            },
            settings: {
                Visual: {
                    Xray: {
                        alpha: .3
                    },
                    Roof: {
                        alpha: .3
                    }
                },
                Misc: {
                    AutoPlace: {
                        lastSend: Date.now()
                    },
                    AutoScuba: {
                        lastSend: Date.now()
                    },
                    AutoIce: {
                        range: .3
                    }
                }
            }
        };
        let playing = !1;
        window.testArr = [];
        window.isGhost = !1;
        let totemArray = [],
            lastItemCraft = null,
            lastItemRecycle = null;
        let World = {
            blizzard: 'Off',
            sandstorm: 'Off'
        };
        const FluxThemeV1 = {
            name: "FV1theme",
            colors: {
                menuBarBackground: "rgb(0,0,0)",
                menuBarText: "rgb(255, 0, 0)",
                panelBackground: "rgb(0,0,0)",
                componentBackground: "rgb(22, 22, 22)",
                componentForeground: "rgb(255, 0,0)",
                textPrimary: "rgb(255,0,0)",
                textSecondary: "rgb(255, 0,0)",
                textHover: "rgb(255, 0, 0)"
            },
            font: {
                'fontFamily': 'Baloo Paaji',
                'fontSize': '20px',
                'fontWeight': '1'
            }
        };



        let Spikes = {
            wood: {
                ally: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-wood-spike-ally.png",
                enemy: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-wood-spike-enemy.png"
            },
            stone: {
                ally: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-stone-spike-ally.png",
                enemy: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-stone-spike-enemy.png"
            },
            gold: {
                ally: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-gold-spike-ally.png",
                enemy: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-gold-spike-enemy.png"
            },
            diamond: {
                ally: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-diamond-spike-ally.png",
                enemy: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-diamond-spike-enemy.png"
            },
            amethyst: {
                ally: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-amethyst-spike-ally.png",
                enemy: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-amethyst-spike-enemy.png"
            },
            reidite: {
                ally: "https://raw.githubusercontent.com/Crusadero/For_require/main/images/day-reidite-spike-ally.png",
                    enemy: "https://cdn.discordapp.com/attachments/862042287478538312/867997349019025459/day-reidite-spike-enemy.png"
            }
        };
        let Others = {
            reidite: "https://cdn.discordapp.com/attachments/883025148431720468/883025288576004136/inv-reidite-out.png",
            amethyst: "https://cdn.discordapp.com/attachments/883025148431720468/883025289851056168/1.png",
            diamond: "https://cdn.discordapp.com/attachments/883025148431720468/883025293424623686/d580fa87d8c9f460.png",
            gold: "https://cdn.discordapp.com/attachments/883025148431720468/883025291088384051/2.png",
            stone: "https://cdn.discordapp.com/attachments/883025148431720468/883025292166303874/3.png",
            wood: "https://cdn.discordapp.com/attachments/883025148431720468/883031819929415690/4.png",
            flour: "https://cdn.discordapp.com/attachments/883025148431720468/883032465973862410/5.png",
            bread: "https://cdn.discordapp.com/attachments/883025148431720468/883032469077631026/6.png"
        };

          /* initializator */


        let redSpike = new Image(),
          allySpike = new Image(),
          AllyAme = new Image(),
          EnAme = new Image(),
          AllyDia = new Image(),
          EnDia = new Image(),
          AllyGold = new Image(),
          EnGold = new Image(),
          ExStone = new Image(),
          ExGold = new Image(),
          ExDiamond = new Image(),
          ExAmethyst = new Image(),
          ExReidite = new Image(),
          OWood = new Image(),
          OFlour = new Image(),
          OBread = new Image()
          AllyRD = new Image(),
          EnRD = new Image(),
          AllyAD = new Image(),
          EnAD = new Image(),
          AllyDD = new Image(),
          EnDD = new Image(),
          AllyGD = new Image(),
          EnGD = new Image(),
          AllyWT = new Image(),
          AllyST = new Image(),
          AllyGT = new Image(),
          AllyDT = new Image(),
          AllyAT = new Image(),
          AllyRT = new Image()
          EnWT = new Image(),
          EnST = new Image(),
          EnGT = new Image(),
          EnDT = new Image(),
          EnAT = new Image(),
          EnRT = new Image();

           /* image stuff */
        redSpike.src = Spikes.reidite.enemy;
        allySpike.src = Spikes.reidite.ally;
        AllyAme.src = Spikes.amethyst.ally;
        EnAme.src = Spikes.amethyst.enemy;
        AllyDia.src = Spikes.diamond.ally;
        EnDia.src = Spikes.diamond.enemy;
        AllyGold.src = Spikes.gold.ally;
        EnGold.src = Spikes.gold.enemy;
        ExStone.src = Others.stone;
        ExGold.src = Others.gold;
        ExDiamond.src = Others.diamond;
        ExAmethyst.src = Others.amethyst;
        ExReidite.src = Others.reidite;
        OWood.src = Others.wood;
        OFlour.src = Others.flour;
        OBread.src = Others.bread;
        AllyRD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887682586145595472/day-reidite-spike-door-ally.png";
        EnRD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887682587051560990/day-reidite-spike-door-enemy.png";
        AllyAD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887682594479689768/day-amethyst-spike-door-ally.png";
        EnAD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887682595574407168/day-amethyst-spike-door-enemy.png";
        AllyDD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887682597814157332/day-diamond-spike-door-ally.png";
        EnDD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887682646317105252/day-diamond-spike-door-enemy.png";
        AllyGD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887816323483189318/day-gold-spike-door-ally.png";
        EnGD.src = "https://cdn.discordapp.com/attachments/883025148431720468/887682584493047888/day-gold-spike-door-enemy.png";

        AllyWT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822327390285824/door_wood2.png";
        EnWT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822323305033728/door_wood1.png";
        AllyST.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822349393600532/door_stone1.png";
        EnST.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822344205250600/door_stone2.png";
        AllyGT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822365604601856/door_gold2.png";
        EnGT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822359250239498/door_gold1.png";
        AllyDT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822370574852187/door_diamond2.png";
        EnDT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822375956123668/door_diamond1.png";
        AllyAT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822384005005362/door_amethyst1.png";
        EnAT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822380024606731/door_amethyst2.png";
        AllyRT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822390128705556/door_reidite2.png";
        EnRT.src = "https://cdn.discordapp.com/attachments/883025148431720468/887822395409326100/door_reidite1.png";
        function applyCSS(css) {
            $('body').append($(`<style>${css}</style>`));
        };
        applyCSS(`
        @keyframes appear {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes disappear {
            from {
                opacity: 1;
            }

            to {
                opacity: 0;
            }
        }

        .lh-respawning-wrapper {
            display: flex;
            flex-direction: column;
            width: 100%;
            height: 100%;
            position: absolute;
            background-color: #262626;
            justify-content: center;
            align-items: center;
        }

        .lh-respawning-loader {
            display: flex;
            width: 12vh;
        }

        .lh-respawning-text {
            display: flex;
            font-size: 42px;
            font-family: 'Baloo Paaji', Verdana, sans-serif;
            color: white;
        }
    `);
    let respawningDiv = document.createElement('div');
    respawningDiv.className = 'lh-respawning-wrapper';

    let loader = document.createElement('img');
    loader.className = 'lh-respawning-loader';
    loader.src = 'https://raw.githubusercontent.com/Luminate-D/cdn/main/loading.gif';

    let text = document.createElement('span');
    text.className = 'lh-respawning-text';
    text.innerText = 'Respawning';

    respawningDiv.append(loader);
    respawningDiv.append(text);
    insertrMe (
        document.getElementById('game_canvas'),
        respawningDiv
    );
    function insertrMe (referenceNode, newNode) {
        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
    };
    respawningDiv.style.display = 'none';

        function ooOoo000(cumtext, object, x, y, item) {
            var TextImages = new Image();
            TextImages.src = (object.info.Vv[0].$Ov || object.info.Vv[0].currentSrc);
            cumtext.drawImage(TextImages, x, y, 70, 70);
            cumtext.font = '22px Baloo Paaji';
            cumtext.fillStyle = '#fff';
            cumtext.fillText("x" + item.info, x + 24, y + 55);
        };
        function rainbowText() {
          rainbow += Math.random() * 5;
          }

        function DrawSomething( Text , $X, $Y) {
            let cvf = document.getElementById('game_canvas'),
               cto = cvf.getContext('2d');
            cto.font = '28px Baloo Paaji';
            cto.fillStyle = '#fff';
            cto.fillText(Text, $X, $Y);
        };
        function autoCrownEquip() {
            var objects = window.typesArr[22];
            var nearests = getObjectsInRadius(oQ.player, objects, 0, 3, 0, 3);

            for (let item of nearests) {
                var cutTime = Date.now();
                if (cutTime - oQ.respawnCD > 5000) {
                    if (window.isGhost) {
                        oQ.socket.send(JSON.stringify([17, item.OV_, item.id]));
                        oQ.socket.send(JSON.stringify([5, 79]));
                        oQ.socket.send(JSON.stringify([5, 39]));
                    }
                };
            };
        };
        var int4, autocheck2 = false;
        var berriesHave = [];
        function sortBerries($obj) {

            for(let i = 0; i < $obj.length; i++) {

                  if($obj[i].info >= 1 && $obj[i].info <= 3 ) {
                        berriesHave.push($obj[i]);
                           window.MainSetting.Hacks.AutoFarm.needWater = 0;
                    }else if( $obj[i].info > 3) {
                        if(window.MainSetting.Hacks.AutoFarm.Wateric) {
                            window.MainSetting.Hacks.AutoFarm.needWater = 1;
                        }else{
                            window.MainSetting.Hacks.AutoFarm.needWater = 0;
                        }

                    }
            }
        }
        function autoFarmFunc() {

            berryArray = [];
            berriesHave = [];
            var objects = window.typesArr[window.MainSetting.Hacks.AutoFarm.farmMode];
            sortBerries(objects);
            var nearests = getObjectsInRadius(oQ.player, berriesHave, 0, 99, 0, 99);


            var near = getNearestObj(nearests, 'autofarm');
             //5 , 49

            if(window.MainSetting.Hacks.AutoFarm.AutoStopFarming) {
                if (!near) {
                    oQ.socket.send(wUV_o[0].stringify([2,0]))
                    oQ.socket.send(JSON.stringify([14]))
                }else{

                    berryArray.push(near);
                    let dir = 0;
                    dir = calcRoute(berryArray[0], objects);
                    oQ.socket.send(ma[Aa].stringify([3, berryAngle]))
                    oQ.socket.send(ma[Aa].stringify([4, berryAngle]));

                    if(window.MainSetting.Hacks.AutoFarm.dista >= 150){
                        oQ.socket.send(wUV_o[0].stringify([2, dir]));

                    }else{
                        oQ.socket.send(wUV_o[0].stringify([2,0]))
                    }

                }
            }else{
                if (!near) {
                    oQ.socket.send(wUV_o[0].stringify([2,0]))
                    oQ.socket.send(JSON.stringify([14]))
                }else{

                    berryArray.push(near);
                    let dir = 0;
                    dir = calcRoute(berryArray[0], objects);

                        oQ.socket.send(wUV_o[0].stringify([2, dir]));
                        oQ.socket.send(ma[Aa].stringify([3, berryAngle]))
                        oQ.socket.send(ma[Aa].stringify([4, berryAngle]));



                }
            }



        };
        const calcQ = (p1, p2) => {
            var dy = p2.y - p1.y;
            var dx = p2.x - p1.x;
            var theta = Math.atan2(dy, dx);
            return theta;
        };

        function testBringer() {
            if(imPlay) {
                var path = 0;
                path = PathFinder(window.MainSetting.Hacks.HoodBring.pointX , window.MainSetting.Hacks.HoodBring.pointY);
                oQ.socket.send(wUV_o[0].stringify([2,path]));
            }

        }

        function PathFinder(objx , objy) {
           const dx = oQ.player.x - objx;
           const dy = oQ.player.y - objy;

           let dist = Math.sqrt(dx ** 2 + dy ** 2);
           if(dist < 1500) {
               oQ.socket.send(JSON.stringify([21,7]))
           }
           if(dist < 200) {
              chestScripts('hood');
           }
           let dir = 0;
           if (Math.abs(dx) / Math.abs(dy) > 0.5 && Math.abs(dx) / Math.abs(dy) < 2) {

            let dir = 0;
            if (dx >= 0) {
                dir += 1;
            }
            if (dx < 0) {
                dir += 2;
            }
            if (dy >= 0) {
                dir += 8;
            }
            if (dy < 0) {
                dir += 4;
            }
            return dir;

        } else if (Math.abs(dy) > Math.abs(dx)) {

            if (dy > 0) {
                let dir = 8;
                return dir;

            } else {

                let dir = 4;
                return dir;

            }

        } else {

            if (dx > 0) {
                let dir = 1;
                return dir;

            } else {

                let dir = 2;
                return dir;

            }

        }
        }
        function calcRoute(point, objects) {

            const dx = oQ.player.x - (point.x)-10;
            const dy = oQ.player.y - (point.y)+10;
            let rot = 2 * Math.PI;

            let dist = Math.sqrt(dx ** 2 + dy ** 2);
            window.MainSetting.Hacks.AutoFarm.dista = dist;
            if (dist < 350 && dist) {
                let angle = calcQ(oQ.player, point);

                    berryAngle =  Math.floor((((angle + rot) % rot) * 255) / rot);
                    window.MainSetting.Hacks.AutoFarm.clienticAngle = angle;
                    oQ.socket.send(ma[Aa].stringify([3, berryAngle]))
                    oQ.socket.send(ma[Aa].stringify([4, berryAngle]));



            };
            if (Math.abs(dx) / Math.abs(dy) > 0.5 && Math.abs(dx) / Math.abs(dy) < 2) {

                let dir = 0;
                if (dx >= 0) {
                    dir += 1;
                }
                if (dx < 0) {
                    dir += 2;
                }
                if (dy >= 0) {
                    dir += 8;
                }
                if (dy < 0) {
                    dir += 4;
                }
                return dir;

            } else if (Math.abs(dy) > Math.abs(dx)) {

                if (dy > 0) {
                    let dir = 8;
                    return dir;

                } else {

                    let dir = 4;
                    return dir;

                }

            } else {

                if (dx > 0) {
                    let dir = 1;
                    return dir;

                } else {

                    let dir = 2;
                    return dir;

                }

            }

        };

        let Fluxu_ = {
            loadGrid: (x1 , y1 , x2 , y2) => {

                  let  grid = new PF.Grid(p.$$$ , p.WV_);

                let types = [ 'la', 'cs', 't', 'b', 'f', 'plm', 'p', 'g', 's', 're', 'c', 'a', 'm', 53 ];
                Ka.w$u.flat(2).map(a => {
                    let type = Object.keys(a)[0];
                    let _a = a[type];
                    if(_a.length != undefined) _a = _a[_a.length - 1];
                    if(_a.length != undefined) _a = _a[_a.length - 1];
                    return { type, x: _a.x, y: _a.y };
                }).filter(a => types.includes(a.type)).forEach(obstacle => {
                    let x = Math.floor(obstacle.x / 100);
                    let y = Math.floor(obstacle.y / 100);
                    grid.setWalkableAt(x, y, false);
                    grid.setWalkableAt(x - 1, y, false);
                    grid.setWalkableAt(x + 1, y, false);
                    grid.setWalkableAt(x, y - 1, false);
                    grid.setWalkableAt(x, y + 1, false);
                });
                return grid;
            }

        }
        let sosend = (a) => {
            oQ.socket.send(JSON.stringify([2 , a]));
        }
        let testFinder = (x1 , y1 , x2 , y2) => {
            let grid;
            let pathFinder;
            let path;

                grid = Fluxu_.loadGrid(x1 , y1 , x2 , y2);

                pathFinder = new PF.AStarFinder({allowDiagonal: true});


                path = pathFinder.findPath(x1,y1,x2,y2 , grid);





           return path;
        }

         goTos = function(x1 , y1 , x2 , y2) {
            let playerX = Math.floor(x1 / 100);
            let playerY = Math.floor(y1 / 100);
            let targetX = Math.floor(x2 / 100);
            let targetY = Math.floor(y2 / 100);

            let path = testFinder(playerX , playerY , targetX , targetY);
             console.log(path);
            if(path[1]) {
                if(playerX == path[1][0] && playerY + 1 == path[1][1]) sosend(4);
                if(playerX == path[1][0] && playerY - 1 == path[1][1]) sosend(8);
                if(playerX - 1 == path[1][0] && playerY == path[1][1]) sosend(1);
                if(playerX + 1 == path[1][0] && playerY == path[1][1]) sosend(2);

                if(playerX - 1 == path[1][0] && playerY - 1 == path[1][1]) sosend(9);
                if(playerX - 1 == path[1][0] && playerY + 1 == path[1][1]) sosend(5);
                if(playerX + 1 == path[1][0] && playerY - 1 == path[1][1]) sosend(10);
                if(playerX + 1 == path[1][0] && playerY + 1 == path[1][1]) sosend(6);
            }
        }



        function checkspike(brb) {
            var SpikeType = BuildingType(brb.OV_, brb);
            if (SpikeType == 1) {
                switch (brb.type) {

                    case 52:  return allySpike;
                    case 14:  return AllyDia;
                    case 13:  return AllyGold;
                    case 20:  return AllyAme;
                    case 53:  return AllyRD;
                    case 47:  return AllyGD;
                    case 48:  return AllyDD;
                    case 49:  return AllyAD;
                    case 15:  return AllyST;//stonic door
                    case 16:  return AllyGT;//gold dor
                    case 17:  return AllyDT;//dia dor
                    case 21:  return AllyAT; //ame dor
                    case 51:  return AllyRT; //ame dor
                    case 10:  return AllyWT;
                }
            } else {
                switch (brb.type) {

                    case 52:  return redSpike;
                    case 14:  return EnDia;
                    case 13:  return EnGold;
                    case 20:  return EnAme;
                    case 53:  return EnRD;
                    case 47:  return EnGD;
                    case 48:  return EnDD;
                    case 49:  return EnAD;
                    case 15:  return EnST;//stonic door
                    case 16:  return EnGT;//gold dor
                    case 17:  return EnDT;//dia dor
                    case 21:  return EnAT; //ame dor
                    case 51:  return EnRT; //ame dor
                    case 10:  return EnWT;
                }
            }
        }


        function checkW2(w) {
            let x = false;
            for (let b of totemArray) {
                if (b === w.OV_) x = true;
            };
            return x ? 1 : (w.OV_ === oQ.player.id) ? 1 : 0;
        }

        function BuildingType(id, i) {
            let bType, numb;
            for (let b of totemArray) {
                if (b === id) bType = 1;
            };
            if (id === oQ.player.id) {
               numb = 1;
            } else if (bType == 1) {
                numb = 1;
            } else {
                numb = 0;
            }
            return numb;
        };

        function genImg(b) {
            if (b.a.type) {
                switch (b.type) {
                    case 52:    return allySpike;
                    case 20:    return AllyAme;
                    case 14:    return AllyDia;
                    case 13:    return AllyGold;
                    case 53:    return AllyRD;
                    case 47:    return AllyGD;
                    case 48:    return AllyDD;
                    case 49:    return AllyAD;
                    case 15:  return AllyST;//stonic door
                    case 16:  return AllyGT;//gold dor
                    case 17:  return AllyDT;//dia dor
                    case 21:  return AllyAT; //ame dor
                    case 51:  return AllyRT; //ame dor
                    case 10:  return AllyWT;
                }
            } else {
                switch (b.type) {
                    case 52:    return redSpike;
                    case 20:    return EnAme;
                    case 14:    return EnDia;
                    case 13:    return EnGold;
                    case 53:    return EnRD;
                    case 47:    return EnGD;
                    case 48:    return EnDD;
                    case 49:    return EnAD;
                    case 15:  return EnST;//stonic door
                    case 16:  return EnGT;//gold dor
                    case 17:  return EnDT;//dia dor
                    case 21:  return EnAT; //ame dor
                    case 51:  return EnRT; //ame dor
                    case 10:  return EnWT;

                }
            }
        }

        function autoCraftA() {
            if (lastItemCraft == null) return;

            oQ.socket.send(JSON.stringify([7, lastItemCraft]));
        };

        function autoRecycleA() {
            if (lastItemRecycle == null) return;
            oQ.socket.send(JSON.stringify([29, lastItemRecycle]));
        };

        function getObjectsInRadius(player, objects, x, x1, y, y1, typen) {
            var nearests = [];

                for (let object of objects) {
                    var plX = Math.floor(player.x) / 100;
                    var plY = Math.floor(player.y) / 100;
                    var objX = Math.floor(object.x) / 100;
                    var objY = Math.floor(object.y) / 100;

                    var DX = Math.abs(Number((plX - objX).toFixed(1)));
                    var DY = Math.abs(Number((plY - objY).toFixed(1)));

                    if (DX >= x && DX <= x1 && DY >= y && DY <= y1) {

                            object.DX = DX;
                            object.DY = DY;
                            nearests.push(object);


                    };
                };
                return nearests;


        };
        function getAimInRadius(player, objects, x, x1, y, y1) {
            var nearests = [];

            for (let object of objects) {
                var plX = Math.floor(player.x) / 100;
                var plY = Math.floor(player.y) / 100;
                var objX = Math.floor(object.x) / 100;
                var objY = Math.floor(object.y) / 100;

                var DX = Math.abs(Number((plX - objX).toFixed(1)));
                var DY = Math.abs(Number((plY - objY).toFixed(1)));

                if (DX >= x && DX <= x1 && DY >= y && DY <= y1) {
                    object.DX = DX;
                    object.DY = DY;
                    var isTotem = checkW2(object);

                    if (object.OV_ == oQ.player.id) {

                    } else {
                        if (isTotem !== 1) {
                            nearests.push(object);
                        }

                    }

                };
            };
            return nearests;
        };


        function chestScripts(type , stfux) {

            var objects = window.typesArr[11];
            var nearests = getObjectsInRadius(oQ.player, objects, 0, 3, 0, 3);

            for (let item of nearests) {
                if(type == "hood") {
                    oQ.socket.send(JSON.stringify([8, 152 , 255 , nearests[0].OV_ , nearests[0].id]))
                    oQ.socket.send(JSON.stringify([8, 36 , 255 , nearests[0].OV_ , nearests[0].id]))
                    oQ.socket.send(JSON.stringify([8, 103 , 255 , nearests[0].OV_ , nearests[0].id]))
                    oQ.socket.send(JSON.stringify([8, 83 , 255 , nearests[0].OV_ , nearests[0].id]))
                    oQ.socket.send(JSON.stringify([8, 102 , 255 , nearests[0].OV_, nearests[0].id]))
                    oQ.socket.send(JSON.stringify([8, 189 , 255 , nearests[0].OV_ , nearests[0].id]))
                    oQ.socket.send(JSON.stringify([8, 3 , 255 , nearests[0].OV_ , nearests[0].id]))
                    oQ.socket.send(JSON.stringify([8, 121 , 255 ,nearests[0].OV_ , nearests[0].id]))
                     // 83 hood , 152 - key ,  36 hammer , 103 - wood , 102 - stone ,  189 - band , 3 gold pick , 121 - bottle
                }
                if(type == "put") {
                    //[ type , item id  , number , my id , chest id] [8,213,10,23,6] [8,213,10,23,7]
                    oQ.socket.send(JSON.stringify([8 , stfux , 255 , nearests[0].OV_ , item.id]))
                }
                if(type == "smart"){
                    oQ.socket.send(JSON.stringify([16,item.id]));
                }
                if (type == "get") {
                    oQ.socket.send(JSON.stringify([9, item.OV_, item.id]));
                    oQ.socket.send(JSON.stringify([9, item.OV_, item.id]));
                    oQ.socket.send(JSON.stringify([9, item.OV_, item.id]));
                }
            };
        };

        function autoExtractors(type) {

            var objects = [];
            for (var i = 24; i < 29; i++) {
                for (let item of window.typesArr[i]) {
                    objects.push(item)
                }
            };
            var nearests = getObjectsInRadius(oQ.player, objects, 0, 2.5, 0, 2.5);
            if (type === 'take') {
                for (let item of nearests) {
                    oQ.socket.send(JSON.stringify([37, item.OV_, item.id, item.type]));
                };
            };
            if (type === 'put') {
                for (let item of nearests) {
                    oQ.socket.send(JSON.stringify([38, 255, item.OV_, item.id, item.type]));
                };
            };

        };

        function autoBread(type) {
            var objects = [];
            for (var i of window.typesArr[32]) objects.push(i);
            for (var i of window.typesArr[34]) objects.push(i);
            var nearests = getObjectsInRadius(oQ.player, objects, 0, 2.5, 0, 2.5);
            if (type === 'take') {
                for (let item of nearests) {
                    if (item.type == 32) {
                        oQ.socket.send(JSON.stringify([23, item.OV_, item.id]));
                    };
                    if (item.type == 34) {
                        oQ.socket.send(JSON.stringify([26, item.OV_, item.id]));
                    };
                };
            };
            if (type === 'put') {
                for (let item of nearests) {
                    if (item.type == 32) {
                        oQ.socket.send(JSON.stringify([22, 31, item.OV_, item.id]));
                    };

                    if (item.type == 34) {
                        oQ.socket.send(JSON.stringify([25, 31, item.OV_, item.id]));
                        oQ.socket.send(JSON.stringify([24, 31, item.OV_, item.id]));
                    };
                };
            };

        };

        function autoTotemJoin() {
            if (totemArray.length != 0) return;
            var objects = window.typesArr[29];
            var nearests = getObjectsInRadius(oQ.player, objects, 0, 2.5, 0, 2.5);
            var nearestObj = getNearestObj(nearests);

            if (nearestObj) {
                oQ.socket.send(JSON.stringify([18, nearestObj.OV_, nearestObj.id]));
            };
        };


        function getNearestObj(arr) {
            let nearest = {target: null, distance: null};
            for (let them of arr) {
                let distance = DistTo(oQ.player, them);
                if(!nearest.target || distance < nearest.distance){
                  nearest.target = them;
                  nearest.distance = distance;
                }
            };

            if(nearest.target) return nearest.target;
        };
        function getNearestAim(arr) {
            let nearest = {target: null, distance: null};
            for (let them of arr) {
                let distance = DistTo(oQ.player, them);
                if(!nearest.target || distance < nearest.distance){
                  nearest.target = them;
                  nearest.distance = distance;
                }
            };

            if(nearest.target) return nearest.target;
        };
        var weapons = {
            "WoodSword": 57,
            "StoneSword": 0,
            "GoldSword": 5,
            "DiamondSword": 6,
            "AmethystSword": 30,
            "ReiditeSword": 19,
            "DragonSword": 62,
            "LavaSword": 63,
            "WoodSpear": 12,
            "StoneSpear": 13,
            "GoldSpear": 14,
            "DiamondSpear": 15,
            "AmethystSpear": 33,
            "ReiditeSpear": 34,
            "DragonSpear": 16,
            "LavaSpear": 17
        };

        function autoPlace() {

            var _e = 2 * Math.PI;
            let angle = Math.floor((((oQ.player.angle + _e) % _e) * 255) / _e);
            var PACKETID = null;
            let w = window.inventory;

            if (w[213] >= 1) {
                PACKETID = 213;
            } else if (w[117] >= 1) {
                PACKETID = 117;
            } else if (w[164] >= 1) {
                PACKETID = 164;
            } else if (w[163] >= 1) {
                PACKETID = 163;
            } else if (w[162] >= 1) {
                PACKETID = 162;
            } else if (w[157] >= 1) {
                PACKETID = 157;
            } else if (w[156] >= 1) {
                PACKETID = 156;
            };
            oQ.socket.send(JSON.stringify([10, PACKETID, angle, window.block]));
            oQ.socket.send(JSON.stringify([10, PACKETID, angle - AimBotStfu.SpikesAimAngle, window.block]));
            oQ.socket.send(JSON.stringify([10, PACKETID, angle + AimBotStfu.SpikesAimAngle, window.block]));
        };

        function dropSwordScript() {

            window.typesArr[0].forEach(player => {
                if (player.OV_ === oQ.player.id) {
                    var p1 = player;
                    var weaponID = p1.lastWeapon;
                    var itsWeapon = false;

                    for (let i in weapons) {
                        if (weapons[i] == p1.right) {
                            itsWeapon = true;
                            break
                        };
                    };

                    if (itsWeapon) {
                        oQ.socket.send(JSON.stringify([6, p1.right]));
                    };
                }
            });
        };


        function AimItemStuff() {
            if (imPlay) {
                window.typesArr[0].forEach(player => {

                    if (player.OV_ === oQ.player.id) {
                        var p1 = player;

                        var itsWeapon = false;
                         if(p1.right != 57 && p1.right != 0 &&p1.right != 5&&p1.right != 6&&p1.right != 30 &&p1.right != 19 &&p1.right != 62 &&p1.right != 63 &&p1.right != 12 &&p1.right != 13 &&p1.right != 14 &&p1.right != 15 &&p1.right != 33 &&p1.right != 34 &&p1.right != 16 &&p1.right != 17){
                             AimBotStfu.AimItemType = 0;

                             message = "Dont have"
                         }else {
                             message = "have"
                         }
                        for (let i in weapons) {
                            if (weapons[i] == p1.right) {
                                AimBotStfu.myWep = weapons[i];
                                SCWeaponID = weapons[i];
                                switch (weapons[i]) {
                                    /* ierarchy to lower from bigger wood -> lava */

                                    case 57:
                                        AimBotStfu.AimItemType = 1;  itsWeapon = true;
                                        break;
                                    case 0:
                                        AimBotStfu.AimItemType = 1;  itsWeapon = true;
                                        break;
                                    case 5:
                                        AimBotStfu.AimItemType = 1 ; itsWeapon = true;
                                        break;
                                    case 6:
                                        AimBotStfu.AimItemType = 1;  itsWeapon = true;
                                        break;
                                    case 30:
                                        AimBotStfu.AimItemType = 1;  itsWeapon = true;
                                        break;
                                    case 19:
                                        AimBotStfu.AimItemType = 1;
                                        itsWeapon = true;
                                        break;
                                    case 62:

                                        AimBotStfu.AimItemType = 1;
                                        itsWeapon = true;
                                        break;
                                        case 63:

                                            AimBotStfu.AimItemType = 1;
                                            itsWeapon = true;
                                            break;
                                    case 12:
                                        AimBotStfu.AimItemType = 2;  itsWeapon = true;
                                        break;
                                    case 13:
                                        AimBotStfu.AimItemType = 2;  itsWeapon = true;
                                        break;
                                    case 14:
                                        AimBotStfu.AimItemType = 2;  itsWeapon = true;
                                        break;
                                    case 15:
                                        AimBotStfu.AimItemType = 2;  itsWeapon = true;
                                        break;
                                    case 33:
                                        AimBotStfu.AimItemType = 2;  itsWeapon = true;
                                        break;
                                    case 34:
                                        AimBotStfu.AimItemType = 2;  itsWeapon = true;
                                        break;

                                    case 16:

                                        AimBotStfu.AimItemType = 2;
                                        itsWeapon = true;
                                        break;
                                    case 17:

                                            AimBotStfu.AimItemType = 2;
                                             itsWeapon = true;
                                            break;
                                    default:
                                        AimBotStfu.AimItemType = 0;
                                        itsWeapon = false;
                                        break;
                                }
                            }

                        }


                    }


                })
            }

        }
        var oooOoo00 = new Image();
        oooOoo00.src = "https://cdn.discordapp.com/attachments/839071819855298580/853911770300153866/chest-removebg-preview_2.png";

        var {
            topPlayer,
            topChest,
            topBox,
            viewInChest,
            roof,
            alpha,
            xray,
            playerTrace,
            esp,
            antifog,
            enabledHacks,
            showhp,
            showtimer,
            worldinfo,
            hoodn,
            coloredSpike,
            playerLimit
        } = window.MainSetting.Hacks.Visual;
        var {
            autoice,
            stealChest,
            autoBreadPut,
            autoBreadTake,
            autoExtractorPut,
            autoExtractorTake,
            autototem,
            dropSword,
            autoSpike,
            autoCrown,
            autoCraft,
            autoRecycle,
            objectInfo,
        } = window.MainSetting.Hacks.Misc;


        var {
            Roof,
            Xray
        } = window.MainSetting.settings.Visual;
        var {
            AutoIce
        } = window.MainSetting.settings.Misc;
        var {
            autobook
        } = window.MainSetting.Hacks.Misc;

        var enabledHacksArray = "";
        var {
            berryAngle,
            berryArray
        } = window.MainSetting.Hacks.AutoFarm;

        function Load() {
            var b = document.getElementById('loading');
            b.innerHTML = 'Flux v10.1';
            var c = document.getElementById('trevda');
            c.style.display = "none";
        }
        var ColorTab = {
            'HpTimer': '#ff0000',
            'hptimerlimitshadow': '#000000',
            'BlizzardStorm': '#ff0000',
            'BlizzardStormShadow': '#000000',
            'EnabledHacks': '#ff0000',
            'EnabledHacksShadow': '#000000'
        };

        var keybinds = {
            "MENU": {
                enabled: 1
            },
            "AutoSpike": {
                key: "KeyC",
                enabled: !1,
                toggle: !0
            },
            "StealChest": {
                key: "KeyQ",
                enabled: !1,
                toggle: !0
            },
            "DropSword": {
                key: "ShiftLeft",
                enabled: !1,
                toggle: !0
            },
            "AutoCrown": {
                key: "KeyF",
                enabled: !1,
                toggle: !0
            },
            "XRay": {
                key: "KeyZ",
                enabled: !1,
                toogle: !0
            },
            "AimBot": {
                key: "KeyU",
                enabled: !1,
                toogle: !0
            },
            "SwordChest": {
                key: "KeyM",
                enabled: !1,
                toogle: !0
            },
            "Spectator": {
                key: "KeyP",
                enabled: !1,
                toogle: !0
            }
        }

        let oldColorIndex = {
            Gui: {
                index: 0,
                color: "Blue",
                hex: "#2626cf"
            },
            hptimerlimit: {
                index:0,
                color: "Red",
                hex: "#ff0000"
            },
            hptimerlimitshadow: {
                index: 0,
                color: "Black",
                hex: "#000000"
            },
            AllyTracers: {
                index: 3,
                color: "Green",
                hex: "#00c73f",

            },
            EnemyTracers: {
                index: 0,
                color: "Red",
                hex: "#FF0000"
            }
        }
        var VisualCustom = {


            target: "#1105f7",
            hit: "#ffd700"

        }


        window.Utils = {
            initUI: () => {
                document.body;
                let o = new guify({
                    title: `FluxHacks v10.2`,
                    theme: FluxThemeV1,
                    align: "right",
                    width: 650,
                    barMode: "none",
                    panelMode: "none",
                    opacity: .8,
                    root: window.container,
                    open: keybinds.MENU.enabled
                });


                o.Register({
                    type: "folder",
                    label: "Visuals",
                    open: !1
                });
                o.Register({
                    type: "folder",
                    label: "Misc",
                    open: !1
                });
                o.Register([{
                    type: "folder",
                    label: "Checkboxes",
                    open: !1
                }], {folder: "Misc"});
                o.Register([{
                    type: "folder",
                    label: "Keybinds",
                    open: !1
                }], {folder: "Misc"});

                o.Register({
                    type: "folder",
                    label: "AI",
                    open: !1
                });
                o.Register([{
                    type: "folder",
                    label: "AutoFarm",
                    open: !1
                }], {folder: "AI"});
                o.Register({
                   type: "folder",
                   label: "Settings",
                   open: !1
                })
                o.Register([{
                    type: "folder",
                    label: "HoodBringer",
                    open: !1
                }], {folder: "AI"});
                o.Register({
                    type: "folder",
                    label: "Colors",
                    open: !1
                });
                o.Register([{
          type: "checkbox",
          label: "Show ESP",
          property: "disabled",
          onChange: o => {
            esp = o;

          }
        },{
          type: "checkbox",
          label: "Show Player Tracers",
          property: "disabled",
          onChange: o => {
            playerTrace = o;
          }
        },{
          type: "checkbox",
          label: "Show Kraken Tracers",
          property: "disabled",
          onChange: o => {
            window.MainSetting.Hacks.Visual.krakenTrace = o;
          }
        },{
          type: "checkbox",
          label: "Show Sandworm Tracers",
          property: "disabled",
          onChange: o => {
            window.MainSetting.Hacks.Visual.wormTrace = o;
          }
        },{


          type: "checkbox",
          label: "Show Players Info",
          property: "disabled",
          onChange: o => {
            window.MainSetting.Hacks.Vi
          }
        },{
          type: "checkbox",
          label: "Show Box Info",
          property: "disabled",
          onChange: o => {
            window.MainSetting.Hacks.Visual.dropDeadInfo = o;
          }
        },{

                    type: "checkbox",
                    label: "Show Building Info",
                    property: "disabled",
                    onChange: o => {
                        objectInfo = o;
                   }
                },{
          type: "checkbox",
          label: "Show Players At Top",
          property: "disabled",
          onChange: o => {
            topPlayer = o;
          }
        },
        {
          type: "checkbox",
          label: "Show Chests At Top",
          property: "disabled",
          onChange: o => {
            topChest = o;
          }
        },
        {
          type: "checkbox",
          label: "Show Box At Top",
          property: "disabled",
          onChange: o => {
            topBox = o;
          }
        },
        {
                    type: "checkbox",
                    label: "Show Hp",
                    property: "disabled",
                    onChange: o => {
                       showhp = o;
                   }
                },{

                type: "checkbox",
                label: "Show Timers",
                property: "disabled",
                onChange: o => {
                   showtimer = o;
               }
            },
               {
                   type: "checkbox",
                   label: "Show Limit",
                   property: "disabled",
                   onChange: o => {
                    playerLimit = o;
                  }

            },{

                type: "checkbox",
                label: "Show Hood Names",
                property: "disabled",
                onChange: o => {
                   hoodn = o;
               }
            },{

                type: "checkbox",
                label: "Show Items in Chest",
                property: "disabled",
                onChange: o => {
                    viewInChest = o;
               }
            },{

                type: "checkbox",
                label: "Blizzard/Storm Status",
                property: "disabled",
                onChange: o => {
                   worldinfo = o;
               }
            },
            {

                type: "checkbox",
                label: "Show Colored Spikes",
                property: "disabled",
                onChange: o => {
                   coloredSpike = o;
               }
            },
            {

                type: "checkbox",
                label: "Show Enabled Hacks",
                property: "disabled",
                onChange: o => {
                   enabledHacks = o;
               }
            },
            {

                type: "checkbox",
                label: "Show if you in Bed",
                property: "disabled",
                onChange: o => {
                    window.MainSetting.Hacks.Visual.seeBed = o;
               }
            },
            {

                type: "checkbox",
                label: "Show who Joined",
                property: "disabled",
                onChange: o => {
                    window.MainSetting.Hacks.Visual.showconnected = o;
               }
            },
            {

                type: "checkbox",
                label: "Anti Fog",
                property: "disabled",
                onChange: o => {
                   antifog = o;

               }
            },
            {

                type: "checkbox",
                label: "Debugger",
                property: "disabled",
                onChange: o => {
                    window.MainSetting.Hacks.Others.debugger = o;

               }
            },
            {
                type: "range",
                label: "XRay Alpha",
                min: 0,
                max: 1,
                step: .1,
                onChange: o => {
                    Xray.alpha = o;
                }
            }
            ], {
        folder: "Visuals"
      });
                o.Register([
                    {
                        type: "checkbox",
                        label: "Auto Book",
                        property: "disabled",
                        onChange: o => {
                            autobook = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Auto Ice",
                        property: "disabled",
                        onChange: o => {
                            autoice = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Auto Totem",
                        property: "disabled",
                        onChange: o => {
                            autototem = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Auto Extractor Put",
                        property: "disabled",
                        onChange: o => {
                            autoExtractorPut = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Auto Extractor Take",
                        property: "disabled",
                        onChange: o => {
                            autoExtractorTake = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Auto Bread Put",
                        property: "disabled",
                        onChange: o => {
                            autoBreadPut = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Auto Bread Take",
                        property: "disabled",
                        onChange: o => {
                            autoBreadTake = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Auto Diving",
                        property: "disabled",
                        onChange: o => {
                            autoScuba = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Auto Craft",
                        property: "disabled",
                        onChange: o => {
                            autoCraft = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Auto Recycle",
                        property: "disabled",
                        onChange: o => {
                            autoRecycle = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Aim Bot",
                        property: "disabled",
                        onChange: o => {
                            window.MainSetting.Hacks.Aimbot.enabledAim = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Trigger Bot",
                        property: "disabled",
                        onChange: o => {
                            window.MainSetting.Hacks.Aimbot.triggerBot = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Smart Spikes",
                        property: "disabled",
                        onChange: o => {
                            window.MainSetting.Hacks.Misc.smartSpikes = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Auto Feed",
                        property: "disabled",
                        onChange: o => {
                            window.MainSetting.Hacks.Visual.autofeed = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Auto Feed Mode BED",
                        property: "disabled",
                        onChange: o => {
                            window.MainSetting.Hacks.Others.feedType = o;
                        }
                    },
                    {
                        type: "checkbox",
                        label: "Auto Reconnect",
                        property: "disabled",
                        onChange: o => {
                            window.MainSetting.Hacks.Misc.AutoRejoin = o;
                        }
                    },{
                        type: "checkbox",
                        label: "Smart Spike Enabled",
                        property: "disabled",
                        onChange: o => {
                            window.MainSetting.Hacks.Misc.smartSpikes = o;
                        }
                    }
            ],{folder: "Checkboxes"});
            o.Register([{
        type: "text",
        label: "Steal Chest Key",
        object: keybinds.StealChest,
        property: "key",
        onChange: o => {
          keybinds.StealChest.key = o
        }
      },
        {
                    type: "button",
                    label: "Set Steal Chest Key",
                    action: o => {
                        Utils.setKeyBind("StealChest")

                    }
                },{
                    type: "text",
                    label: "Xray Key",
                    object: keybinds.XRay,
                    property: "key",
                    onChange: o => {
                        keybinds.XRay.key = o
                    }
                },
        {
                    type: "button",
                    label: "Set Xray Key",
                    action: o => {
                        Utils.setKeyBind("XRay")

                    }
                },{
                    type: "text",
                    label: "Drop Sword Key",
                    object: keybinds.DropSword,
                    property: "key",
                    onChange: o => {
                        keybinds.DropSword.key = o
                    }
                },
        {
                    type: "button",
                    label: "Set Drop Sword Key",
                    action: o => {
                        Utils.setKeyBind("DropSword")
                        Utils.saveSettings();
                    }
                },{
                    type: "text",
                    label: "AutoSpike Key",
                    object: keybinds.AutoSpike,
                    property: "key",
                    onChange: o => {
                        keybinds.AutoSpike.key = o
                    }
                },
        {
                    type: "button",
                    label: "Set Auto Spike Key",
                    action: o => {
                        Utils.setKeyBind("AutoSpike")
                        Utils.saveSettings();
                    }
                },{
                    type: "text",
                    label: "AutoCrown Key",
                    object: keybinds.AutoCrown,
                    property: "key",
                    onChange: o => {
                        keybinds.AutoCrown.key = o
                    }
                },
        {
                    type: "button",
                    label: "Set Auto Crown Key",
                    action: o => {
                        Utils.setKeyBind("AutoCrown")
                        Utils.saveSettings();
                    }
                },
                {
                    type: "text",
                    label: "AimBot Key",
                    object: keybinds.AimBot,
                    property: "key",
                    onChange: o => {
                        keybinds.AimBot.key = o
                    }
                },
        {
                    type: "button",
                    label: "Set AimBot Key",
                    action: o => {
                        Utils.setKeyBind("AimBot")
                        Utils.saveSettings();
                    }
                },
                {
                    type: "text",
                    label: "SwordInChest Key",
                    object: keybinds.SwordChest,
                    property: "key",
                    onChange: o => {
                        keybinds.SwordChest.key = o
                    }
                },
        {
                    type: "button",
                    label: "Set SwordInChest Key",
                    action: o => {
                        Utils.setKeyBind("SwordChest")
                        Utils.saveSettings();
                    }
                },
                {
                    type: "text",
                    label: "Spectator Key",
                    object: keybinds.Spectator,
                    property: "key",
                    onChange: o => {
                        keybinds.Spectator.key = o
                    }
                },
        {
                    type: "button",
                    label: "Set Spectator Key",
                    action: o => {
                        Utils.setKeyBind("Spectator")
                        Utils.saveSettings();
                    }
                }


      ], {
        folder: "Keybinds"
      });
            o.Register([
                {
                    type: "checkbox",
                    label: "Auto Farm Enabled",
                    property: "disabled",
                    onChange: o => {
                        window.MainSetting.Hacks.AutoFarm.enabledfarm = o;
                    }
                },
                {
                    type: "checkbox",
                    label: "Auto Farm Stopping",
                    property: "disabled",
                    onChange: o => {
                        window.MainSetting.Hacks.AutoFarm.AutoStopFarming = o;
                    }
                },
                {
                    type: "checkbox",
                    label: "Auto Farm Water",
                    property: "disabled",
                    onChange: o => {
                        window.MainSetting.Hacks.AutoFarm.Wateric = o;
                    }
                },
                {
                    type: "checkbox",
                    label: "Farm Mode: Berry",
                    property: "disabled",
                    onChange: o => {
                        if(o) {
                            window.MainSetting.Hacks.AutoFarm.farmMode = 3;
                        }else{
                            window.MainSetting.Hacks.AutoFarm.farmMode = 3;
                        }

                    }
                },
                {
                    type: "checkbox",
                    label: "Farm Mode: Wheat",
                    property: "disabled",
                    onChange: o => {
                        if(o) {
                            window.MainSetting.Hacks.AutoFarm.farmMode = 31;
                        }else{
                            window.MainSetting.Hacks.AutoFarm.farmMode = 3;
                        }
                    }
                },
                {
                    type: "checkbox",
                    label: "Farm Mode: Pumpkin",
                    property: "disabled",
                    onChange: o => {
                        if(o) {
                            window.MainSetting.Hacks.AutoFarm.farmMode = 37;
                        }else{
                            window.MainSetting.Hacks.AutoFarm.farmMode = 3;
                        }
                    }
                }
            ],{folder: "AutoFarm"})
            o.Register([
                {
                    type: "checkbox",
                    label: "Hood Bring Enabled",
                    property: "disabled",
                    onChange: o => {
                        window.MainSetting.Hacks.HoodBring.enabled = o;
                    }
                },


                {
                    type: "button",
                    label: "Set X , Y",
                    action: () => {
                        if(imPlay){
                            window.MainSetting.Hacks.HoodBring.pointX = oQ.player.x;
                            window.MainSetting.Hacks.HoodBring.pointY = oQ.player.y;
                        }

                    }
                }

            ],{folder: "HoodBringer"})
            o.Register([
              {
                  type: "range",
                  label: "Trigger Spear Radius",
                  min: 92.5,
                  max: 300,
                  step: 5,
                  onChange: o => {

                      AimbotRadius.sword = o;
                  }
              },{
                    type: "range",
                    label: "Trigger Sword Radius",
                    min: 50,
                    max: 150,
                    step: 5,
                    onChange: o => {

                        AimbotRadius.sword = o;
                    }
                },

              {
                type: "range",
                label: "SmartSpike Radius",
                min: 32.5,
                max: 115,
                step: 5,
                onChange: o => {

                    AimbotRadius.spike = o;
                }
            },
            {
              type: "checkbox",
              label: "RainBow Colors",
              property: "disabled",
              onChange: o => {
                  window.MainSetting.Hacks.Others.RainbowColors = o;
              }
          },
            {
              type: "checkbox",
              label: "Sexi TexturePack",
              property: "disabled",
              onChange: o => {
                  texturePack = o;
              }
          }
            ], {folder: "Settings"})
            o.Register([{
                    type: 'color',
                    label: 'Hp&Timer&Limit Color:',
                    format: 'hex',
                    object: oldColorIndex.hptimerlimit,
                    property: 'hex',


            },{
                type: 'color',
                label: 'Hp&Timer&Limit Shadow Color:',
                format: 'hex',
                object: oldColorIndex.hptimerlimitshadow,
                property: 'hex',

        },{
            type: 'color',
            label: 'Ally Tracers:',
            format: 'hex',
            object: oldColorIndex.AllyTracers,
            property: 'hex'

    },{
        type: 'color',
        label: 'Enemy Tracers:',
        format: 'hex',
        object: oldColorIndex.EnemyTracers,
        property: 'hex'

         }], {folder: "Colors"})
            },

    setKeyBind(o) {
        keybinds[o].key = "Press any key";
        let Q = 0;
        document.addEventListener("keydown", function O(i) {
          ++Q >= 1 && (keybinds[o].key = i.code, document.removeEventListener("keydown", O), Utils.saveSettings())
        })
    },
        saveSettings: () => {
      localStorage.setItem("myBinds", JSON.stringify(keybinds));


    },
        saveFunc: () => {

        },
        loadFunc: () => {

        },
    loadSettings: () => {
      const o = localStorage.getItem("myBinds");
      if (o) {
        if (Object.keys(JSON.parse(o)).length != Object.keys(keybinds).length) return;
        return keybinds = JSON.parse(o), JSON.parse(o)
      }
    },
            LoadHack: () => {
                Utils.loadSettings();
                Utils.loadFunc();
                let o = document.createElement("script");
                o.onload = function() {
                    Utils.initUI()
                }, o.src = "https://unpkg.com/guify@0.12.0/lib/guify.min.js", document.body.appendChild(o)
            }
        }
        Utils.LoadHack();


        function Oc(a) {
            this.UO$ = 2147483648;
            this.a = 1103515245;
            this.c = 12345;
            this.state = a ? a : Math.floor(Math.random() * (this.UO$ - 1));
        };

        function yf(a, b, e, d) {
            a = (~(59259 & a) & a) | (~(a & 59259) & 59259);
            b = (~(b & 56097) & b) | (~(b & 56097) & 56097);
            e = ((1664525 * (43315 + e)) + 1013904223) % 4294967296;
            d = (((8 << ((d >> 24) & 255)) + (32 << ((d >> 32) & 255))) + (24 << ((d >> 8) & 255))) + (16 << ((d >> 16) & 255));
            var c = 10715 ^ a,
                f = (((24 << ((b >> 16) & 255)) + (16 << ((b >> 32) & 255))) + (32 << ((b >> 8) & 255))) + (8 << ((b >> 24) & 255)),
                h = (((8 << ((e >> 16) & 255)) + (32 << ((e >> 24) & 255))) + (16 << ((e >> 8) & 255))) + (24 << ((e >> 32) & 255)),
                g = d ^ 40782,
                k = a ^ 41301,
                l = ~(b & 12091) & (12091 | b),
                m = Od(c, f, h, g, k, l);
            Od(c, f, h, g, k, l);
            jd(c, f, h, g, k);
            c = (m | 3006) & ~(m & 3006);
            c = ~(24460 & c) & (c | 24460);
            f = kd(e, d, a, b, e);
            Od(d, a, b, e, d, a);
            a = (1013904223 + (1664525 * ((c ^ f) + 26191))) % 4294967296;
            return (a | 38630) & ~(38630 & a);
        };

        function Pd(a, b, e, d, c) {
            a = ((2147483629 * (a + 14772)) + 2147483587) % 2147483647;
            b ^= 63080;
            e = ((22695477 * (e + 60304)) + 1) % 4294967296;
            d = (~(5467 & d) & 5467) | (~(5467 & d) & d);
            c = (c | 40165) & ~(40165 & c);
            var f = (57611 | a) & ~(a & 57611),
                h = ((1664525 * (b + 56889)) + 1013904223) % 4294967296,
                g = e ^ 62842,
                k = (~(d & 1179) & d) | (~(d & 1179) & 1179),
                l = Ra(f, h, g, k),
                m = mc(f, h, g, k);
            yf(f, h, g, k);
            f = (((24 << (((l ^ m) >> 24) & 255)) + (8 << (((l ^ m) >> 16) & 255))) + (16 << (((l ^ m) >> 32) & 255))) + (32 << (((l ^ m) >> 8) & 255));
            f = ~(63304 & f) & (f | 63304);
            h = kd(c, a, b, e, d);
            a = nc(c, a, b, e, d, c);
            return ((1664525 * (28765 + (((((16 << (((f ^ h) >> 24) & 255)) + (8 << (((f ^ h) >> 16) & 255))) + (24 << (((f ^ h) >> 32) & 255))) + (32 << (((f ^ h) >> 8) & 255))) ^ a))) + 1013904223) % 4294967296;
        };

        function r(a) {
            var e = new Image;
            e.src = a.toDataURL("image/png");
            e.width = a.width;
            e.height = a.height;
            e.__o = 1;
            return e;
        };

        function ld() {
            (ua.width != M.innerWidth) && (ua.width = M.innerWidth, ka = ua.width, X = ua.width / 2);
            (ua.height != M.innerHeight) && (ua.height = M.innerHeight, ta = ua.height, ea = ua.height / 2);
            zf = {
                x: X,
                y: ea
            };
            var a = ua.width,
                e = ua.height;
            Pc = (-1 === Va) ? (md / nd) : Va;
            ua.width = a * Pc;
            ua.height = e * Pc;
            ua.style.width = a + "px";
            ua.style.height = e + "px";
            l.scale(Pc, Pc);
            m && (m.VQ.wW$O_ = a, m.VQ.VwvUo = e);
            if (oc.OwV) oc.update();
            else if (G.OwV) G.update();
            else if (C.OwV) C.update();
            else if (Tb.OwV) Tb.update();
        };

        function Ra(a, b, e, d) {
            a ^= 11762;
            b = (~(b & 19425) & 19425) | (~(19425 & b) & b);
            return ((1664525 * (55182 + ((((1664525 * (17757 + (((((32 << (((a ^ b) >> 32) & 255)) + (8 << (((a ^ b) >> 8) & 255))) + (24 << (((a ^ b) >> 24) & 255))) + (16 << (((a ^ b) >> 16) & 255))) ^ ((((32 << ((e >> 16) & 255)) + (8 << ((e >> 32) & 255))) + (24 << ((e >> 24) & 255))) + (16 << ((e >> 8) & 255)))))) + 1013904223) % 4294967296) ^ ((~(259 & d) & 259) | (~(259 & d) & d))))) + 1013904223) % 4294967296;
        };

        function od(a, b, e, d, c) {
            a = (((32 << ((a >> 24) & 255)) + (16 << ((a >> 8) & 255))) + (24 << ((a >> 16) & 255))) + (8 << ((a >> 32) & 255));
            b = (b + 39144) % 65406;
            e ^= 34575;
            d = (~(37841 & d) & d) | (~(d & 37841) & 37841);
            c = (25975 | c) & ~(25975 & c);
            var f = Ra(a, b, e, d);
            pc(c, a, b, e, d);
            Kb(c, a, b, e, d, c);
            return 36297 ^ ((19326 | f) & ~(19326 & f));
        };

        function Qc(a, b, e, d, c) {
            a = (((24 << ((a >> 24) & 255)) + (32 << ((a >> 16) & 255))) + (16 << ((a >> 8) & 255))) + (8 << ((a >> 32) & 255));
            b = (12345 + (1103515245 * (b + 3024))) % 2147483648;
            e = (((8 << ((e >> 8) & 255)) + (32 << ((e >> 32) & 255))) + (24 << ((e >> 16) & 255))) + (16 << ((e >> 24) & 255));
            d = (1 + (22695477 * (d + 41324))) % 4294967296;
            c = (19607 | c) & ~(c & 19607);
            var f = pd(a, b);
            pc(e, d, c, a, b);
            qd(e, d, c, a, b, e);
            a = (~(49323 & f) & 49323) | (~(49323 & f) & f);
            return ~(a & 46567) & (46567 | a);
        };


        function ih(a, b, e, d, c, f) {
            a = (1013904223 + (1664525 * (a + 28824))) % 4294967296;
            b = (1013904223 + (1664525 * (13210 + b))) % 4294967296;
            e = (~(32165 & e) & 32165) | (~(32165 & e) & e);
            d = (((24 << ((d >> 24) & 255)) + (16 << ((d >> 8) & 255))) + (8 << ((d >> 16) & 255))) + (32 << ((d >> 32) & 255));
            c = (1 + (22695477 * (39199 + c))) % 4294967296;
            f ^= 33037;
            var h = (12345 + (1103515245 * (39051 + a))) % 2147483648,
                g = (44117 | b) & ~(b & 44117),
                k = (((24 << ((e >> 24) & 255)) + (8 << ((e >> 16) & 255))) + (16 << ((e >> 32) & 255))) + (32 << ((e >> 8) & 255)),
                l = Af(h, g, k, h, g),
                g = nc(k, h, g, k, h, g),
                k = (((16 << ((k >> 8) & 255)) + (32 << ((k >> 16) & 255))) + (8 << ((k >> 32) & 255))) + (24 << ((k >> 24) & 255)),
                h = (((32 << ((h >> 32) & 255)) + (24 << ((h >> 24) & 255))) + (8 << ((h >> 8) & 255))) + (16 << ((h >> 16) & 255)),
                m = qd(k, h, k, h, k, h),
                p = 64570 ^ k,
                n = (2531011 + (214013 * (h + 41768))) % 4294967296,
                q = (1013904223 + (1664525 * (k + 43923))) % 4294967296,
                r = (((16 << ((h >> 32) & 255)) + (8 << ((h >> 24) & 255))) + (32 << ((h >> 16) & 255))) + (24 << ((h >> 8) & 255)),
                t = (k | 21896) & ~(k & 21896),
                z = ((1103515245 * (p + 49468)) + 12345) % 2147483648,
                y = ((214013 * (n + 30513)) + 2531011) % 4294967296,
                A = ((1664525 * (5294 + z)) + 1013904223) % 4294967296,
                B = (y | 55665) & ~(55665 & y),
                C = (z + 54633) % 65404;
            Pd(A, B, C, A, B);
            var F = (2531011 + (214013 * (C + 16955))) % 4294967296,
                E = ((1103515245 * (9436 + A)) + 12345) % 2147483648,
                D = (14774 | B) & ~(14774 & B),
                G = (48802 | C) & ~(C & 48802),
                L = ~(A & 24998) & (A | 24998),
                K = (((8 << ((B >> 8) & 255)) + (16 << ((B >> 16) & 255))) + (32 << ((B >> 32) & 255))) + (24 << ((B >> 24) & 255));
            Qd(F, E, D, G);
            pc(L, K, F, E, D);
            Qd(G, L, K, F);
            mc(C, A, B, C);
            jd(y, z, y, z, y);
            Ra(z, y, z, y);
            Bf(q, r, t, p);
            Qc(n, q, r, t, p);
            pd(h, k);
            k = 8337 ^ ((m | 58283) & ~(58283 & m));
            l = (((16 << (((l ^ g) >> 32) & 255)) + (24 << (((l ^ g) >> 24) & 255))) + (32 << (((l ^ g) >> 8) & 255))) + (8 << (((l ^ g) >> 16) & 255));
            l = (((8 << (((l ^ k) >> 32) & 255)) + (16 << (((l ^ k) >> 8) & 255))) + (32 << (((l ^ k) >> 16) & 255))) + (24 << (((l ^ k) >> 24) & 255));
            mc(d, c, f, a);
            a = Qd(b, e, d, c);
            return ((1103515245 * (34159 + ((l ^ 2959) ^ a))) + 12345) % 2147483648;
        };

        function Qd(a, b, e, d) {
            a = ~(33107 & a) & (33107 | a);
            b = (((24 << ((b >> 32) & 255)) + (32 << ((b >> 8) & 255))) + (8 << ((b >> 16) & 255))) + (16 << ((b >> 24) & 255));
            e = ~(e & 32053) & (32053 | e);
            d ^= 12240;
            var c = (((32 << ((a >> 32) & 255)) + (16 << ((a >> 16) & 255))) + (24 << ((a >> 24) & 255))) + (8 << ((a >> 8) & 255)),
                f = (1 + (22695477 * (50595 + b))) % 4294967296,
                h = (~(40066 & e) & e) | (~(e & 40066) & 40066),
                g = 18768 ^ d,
                k = rd(c, f, h, g, c),
                l = (12345 + (1103515245 * (23101 + f))) % 2147483648,
                m = 58614 ^ h,
                p = ((214013 * (g + 45267)) + 2531011) % 4294967296,
                c = c ^ 40810,
                n = (((24 << ((f >> 24) & 255)) + (8 << ((f >> 32) & 255))) + (32 << ((f >> 8) & 255))) + (16 << ((f >> 16) & 255)),
                f = Rd(l, m),
                l = yf(p, c, n, l),
                m = (m + 34282) % 65336,
                p = (~(p & 45181) & 45181) | (~(45181 & p) & p),
                c = (((16 << ((c >> 8) & 255)) + (32 << ((c >> 24) & 255))) + (8 << ((c >> 32) & 255))) + (24 << ((c >> 16) & 255)),
                n = (~(n & 25475) & 25475) | (~(25475 & n) & n),
                q = (~(41406 & m) & m) | (~(m & 41406) & 41406),
                r = ((1103515245 * (p + 17922)) + 12345) % 2147483648;
            Cf(q, r, q);
            Bf(r, q, r, q);
            od(r, q, r, q, r);
            pc(c, n, m, p, c);
            Rd(n, m);
            f = (((24 << (((f ^ l) >> 24) & 255)) + (32 << (((f ^ l) >> 16) & 255))) + (8 << (((f ^ l) >> 32) & 255))) + (16 << (((f ^ l) >> 8) & 255));
            f = (~(13644 & f) & f) | (~(f & 13644) & 13644);
            h = sd(h, g);
            k = ((1664525 * ((((2531011 + (214013 * ((k ^ f) + 35287))) % 4294967296) ^ h) + 16767)) + 1013904223) % 4294967296;
            mc(a, b, e, d);
            a = rd(a, b, e, d, a);
            return (2531011 + (214013 * (44352 + (((~(64131 & k) & 64131) | (~(64131 & k) & k)) ^ a)))) % 4294967296;
        };

        function Od(a, b, e, d, c, f) {
            a = ~(a & 36133) & (a | 36133);
            b = (13670 | b) & ~(b & 13670);
            e = (31390 | e) & ~(e & 31390);
            d ^= 64081;
            c ^= 7550;
            var h = (2147483587 + (2147483629 * (f + 63950))) % 2147483647;
            f = Sd(a, b, e, d, c);
            e = mc(h, a, b, e);
            a = jd(d, c, h, a, b);
            return (12345 + (1103515245 * (36760 + ((((2147483629 * (62552 + (f ^ e))) + 2147483587) % 2147483647) ^ a)))) % 2147483648;
        };

        function Bf(a, b, e, d) {
            a = (a | 15432) & ~(a & 15432);
            b ^= 12315;
            e ^= 38714;
            d ^= 58084;
            var c = ((214013 * (39488 + a)) + 2531011) % 4294967296,
                f = (~(49976 & b) & b) | (~(b & 49976) & 49976),
                h = (~(e & 35856) & e) | (~(e & 35856) & 35856),
                g = 52219 ^ d,
                k = (a + 3575) % 65503,
                l = (~(6932 & b) & b) | (~(b & 6932) & 6932),
                m = rd(c, f, h, g, k),
                p = 30142 ^ l,
                n = (c + 63025) % 65493,
                q = f ^ 30777,
                r = ((22695477 * (45939 + h)) + 1) % 4294967296,
                t = (((8 << ((g >> 16) & 255)) + (32 << ((g >> 24) & 255))) + (24 << ((g >> 32) & 255))) + (16 << ((g >> 8) & 255)),
                z = (k | 45652) & ~(k & 45652),
                y = rd(p, n, q, r, t);
            Pd(z, p, n, q, r);
            qd(t, z, p, n, q, r);
            p = y ^ 60048;
            Kb(l, c, f, h, g, k);
            c = (1013904223 + (1664525 * ((m ^ p) + 60709))) % 4294967296;
            c = (~(c & 42138) & c) | (~(c & 42138) & 42138);
            mc(e, d, a, b);
            a = Kb(e, d, a, b, e, d);
            return ((214013 * (34681 + (((~(41134 & c) & c) | (~(c & 41134) & 41134)) ^ a))) + 2531011) % 4294967296;
        };

        function Kb(a, b, e, d, c, f) {
            a ^= 23409;
            b ^= 26380;
            c = ((1103515245 * (c + 33017)) + 12345) % 2147483648;
            f ^= 42490;
            e = Ra(a, b, e ^ 53590, 36633 ^ d);
            d = Ra(c, f, a, b);
            return ((22695477 * (19056 + (e ^ d))) + 1) % 4294967296;
        };

        function Af(a, b, e, d, c) {
            a = ((1664525 * (9716 + a)) + 1013904223) % 4294967296;
            b = (~(b & 7703) & b) | (~(b & 7703) & 7703);
            e = (e | 31275) & ~(31275 & e);
            d = (~(25693 & d) & 25693) | (~(25693 & d) & d);
            var f = (((8 << ((c >> 8) & 255)) + (32 << ((c >> 24) & 255))) + (24 << ((c >> 16) & 255))) + (16 << ((c >> 32) & 255));
            c = Kb(a, b, e, d, f, a);
            d = Ra(b, e, d, f);
            Cf(a, b, e);
            return ((((24 << (((c ^ d) >> 16) & 255)) + (8 << (((c ^ d) >> 8) & 255))) + (32 << (((c ^ d) >> 24) & 255))) + (16 << (((c ^ d) >> 32) & 255))) ^ 31710;
        };

        function sd(a, b) {
            var e = (2531011 + (214013 * (a + 62874))) % 4294967296,
                d = (((24 << ((b >> 24) & 255)) + (16 << ((b >> 32) & 255))) + (8 << ((b >> 8) & 255))) + (32 << ((b >> 16) & 255)),
                c = Kb(e, d, e, d, e, d),
                f = Kb(e, d, e, d, e, d);
            Ra(e, d, e, d);
            e = (((16 << (((c ^ f) >> 32) & 255)) + (8 << (((c ^ f) >> 24) & 255))) + (24 << (((c ^ f) >> 16) & 255))) + (32 << (((c ^ f) >> 8) & 255));
            return (~(e & 55949) & 55949) | (~(55949 & e) & e);
        };

        function eb(a, f) {
            for (var w = 0; w < td.length; w += f) {
                var d = td[w];
                if (d[0] === a) {
                    var c = d[1],
                        h = d[2],
                        g = d[3],
                        d = $VO[d[0]];
                    if (void 0 !== d)
                        for (var k = 0; 2 > k; k++) {
                            var l = d[c][k],
                                m = (193 * g) / p.$$$,
                                n = (193 * h) / p.WV_,
                                q = l.width / 3.5,
                                Y = l.height / 3.5;
                            u[e.uQQ][k].drawImage(l, m - (q / 2), n - (Y / 2), q, Y);
                            m = (600 * g) / p.$$$;
                            n = (600 * h) / p.WV_;
                            q = l.width / 1.5;
                            Y = l.height / 1.5;
                            u[e._$W][k].drawImage(l, m - (q / 2), n - (Y / 2), q, Y);
                        }
                }
            }
        };

        function h(a, e, w, d) {
            e && (a.fillStyle = e, a.fill());
            w && (a.lineWidth = d, a.strokeStyle = w, a.stroke());
        };

        function B(a, e, w, d, c, f) {
            (d < (2 * f)) && (f = d / 2);
            (c < (2 * f)) && (f = c / 2);
            (0 > f) && (f = 0);
            a.beginPath();
            a.moveTo(e + f, w);
            a.arcTo(e + d, w, e + d, w + c, f);
            a.arcTo(e + d, w + c, e, w + c, f);
            a.arcTo(e, w + c, e, w, f);
            a.arcTo(e, w, e + d, w, f);
            a.closePath();
        };

        function A(a, e, w, d) {
            a.beginPath();
            a.arc(e, w, d, 0, 2 * Math.PI);
        };

        function ud(a, e, w, d, c) {
            a.beginPath();
            a.lineCap = "round";
            a.arc(e, w, d, 0, (2 * Math.PI) * c);
        };

        function P(a, e, w, d) {
            var c = (2 * Math.PI) / e;
            a.beginPath();
            for (var f = [{
                    x: w,
                    y: 0
                }], h = [], g = 1; g < e; g++) {
                f.push({
                    x: Math.cos(g * c) * w,
                    y: Math.sin(g * c) * w
                });
                var k = f.length;
                h.push(OQ.u0uwW(f[k - 2], f[k - 1]));
            }
            h.push(OQ.u0uwW(f[f.length - 1], f[0]));
            w = h[h.length - 1];
            a.moveTo(w.x, w.y);
            for (g = 0; g < e; g++) a.arcTo(f[g].x, f[g].y, h[g].x, h[g].y, d);
            a.closePath();
        };

        function V(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = Math.sqrt((e.width * e.width) + (e.height * e.height));
            d2 = c / 2;
            w.width = c;
            w.height = c;
            d.translate(d2, d2);
            d.rotate(a);
            d.drawImage(e, -e.width / 2, -e.height / 2);
            return w;
        };

        function vd(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = 120 * a,
                f = 110 * a,
                g = 20 * a,
                k = 112 * a,
                l = 82 * a,
                m = k / 2,
                p = l / 2,
                n = 4 * a;
            w.width = c;
            w.height = f;
            d.globalAlpha = 1;
            d.translate(c / 2, f / 2);
            B(d, -m, -p, k, l, g);
            h(d, e, e, n);
            return w;
        };

        function Rc(a, e, w) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 264 * a;
            d.height = 246 * a;
            c.translate(0, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(75 * a, 54 * a);
            c.bezierCurveTo(79 * a, 21 * a, 131 * a, 13 * a, 153 * a, 36 * a);
            c.bezierCurveTo(204 * a, 27 * a, 221 * a, 52 * a, 216 * a, 83 * a);
            c.bezierCurveTo(241 * a, 103 * a, 232 * a, 138 * a, 214 * a, 147 * a);
            c.bezierCurveTo(223 * a, 184 * a, 201 * a, 200 * a, 175 * a, 199 * a);
            c.bezierCurveTo(156 * a, 218 * a, 135 * a, 222 * a, 114 * a, 203 * a);
            c.bezierCurveTo(62 * a, 213 * a, 66 * a, 189 * a, 59 * a, 170 * a);
            c.bezierCurveTo(27 * a, 164 * a, 31 * a, 134 * a, 38 * a, 123 * a);
            c.bezierCurveTo(11 * a, 80 * a, 51 * a, 52 * a, 75 * a, 54 * a);
            c.closePath();
            h(c, w[0]);
            c.translate(0, -10 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(75 * a, 54 * a);
            c.bezierCurveTo(79 * a, 21 * a, 131 * a, 13 * a, 153 * a, 36 * a);
            c.bezierCurveTo(204 * a, 27 * a, 221 * a, 52 * a, 216 * a, 83 * a);
            c.bezierCurveTo(241 * a, 103 * a, 232 * a, 138 * a, 214 * a, 147 * a);
            c.bezierCurveTo(223 * a, 184 * a, 201 * a, 200 * a, 175 * a, 199 * a);
            c.bezierCurveTo(156 * a, 218 * a, 135 * a, 222 * a, 114 * a, 203 * a);
            c.bezierCurveTo(62 * a, 213 * a, 66 * a, 189 * a, 59 * a, 170 * a);
            c.bezierCurveTo(27 * a, 164 * a, 31 * a, 134 * a, 38 * a, 123 * a);
            c.bezierCurveTo(11 * a, 80 * a, 51 * a, 52 * a, 75 * a, 54 * a);
            c.closePath();
            h(c, w[1], w[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(121 * a, 102 * a);
            c.bezierCurveTo(111 * a, 80 * a, 110 * a, 66 * a, 108 * a, 51 * a);
            c.bezierCurveTo(119 * a, 65 * a, 129 * a, 85 * a, 135 * a, 99 * a);
            c.bezierCurveTo(142 * a, 67 * a, 146 * a, 60 * a, 152 * a, 50 * a);
            c.bezierCurveTo(154 * a, 71 * a, 152 * a, 85 * a, 149 * a, 104 * a);
            c.bezierCurveTo(166 * a, 88 * a, 175 * a, 83 * a, 188 * a, 78 * a);
            c.bezierCurveTo(179 * a, 91 * a, 170 * a, 103 * a, 160 * a, 112 * a);
            c.bezierCurveTo(186 * a, 107 * a, 191 * a, 107 * a, 204 * a, 108 * a);
            c.bezierCurveTo(195 * a, 114 * a, 179 * a, 120 * a, 163 * a, 123 * a);
            c.bezierCurveTo(183 * a, 130 * a, 186 * a, 135 * a, 192 * a, 140 * a);
            c.bezierCurveTo(179 * a, 141 * a, 164 * a, 139 * a, 153 * a, 135 * a);
            c.bezierCurveTo(158 * a, 145 * a, 163 * a, 159 * a, 165 * a, 177 * a);
            c.bezierCurveTo(154 * a, 166 * a, 145 * a, 153 * a, 138 * a, 139 * a);
            c.bezierCurveTo(133 * a, 155 * a, 125 * a, 170 * a, 117 * a, 182 * a);
            c.bezierCurveTo(116 * a, 160 * a, 119 * a, 151 * a, 124 * a, 138 * a);
            c.bezierCurveTo(107 * a, 150 * a, 95 * a, 156 * a, 82 * a, 159 * a);
            c.bezierCurveTo(94 * a, 140 * a, 101 * a, 136 * a, 113 * a, 128 * a);
            c.bezierCurveTo(78 * a, 123 * a, 75 * a, 121 * a, 67 * a, 118 * a);
            c.bezierCurveTo(85 * a, 112 * a, 94 * a, 112 * a, 111 * a, 113 * a);
            c.bezierCurveTo(89 * a, 97 * a, 85 * a, 93 * a, 78 * a, 82 * a);
            c.bezierCurveTo(92 * a, 85 * a, 101 * a, 90 * a, 121 * a, 102 * a);
            c.closePath();
            h(c, w[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(128 * a, 103 * a);
            c.bezierCurveTo(111 * a, 112 * a, 117 * a, 136 * a, 140 * a, 130 * a);
            c.bezierCurveTo(151 * a, 126 * a, 156 * a, 115 * a, 155 * a, 107 * a);
            c.bezierCurveTo(155 * a, 96 * a, 154 * a, 94 * a, 148 * a, 94 * a);
            c.bezierCurveTo(141 * a, 94 * a, 146 * a, 104 * a, 136 * a, 104 * a);
            c.closePath();
            h(c, w[3], w[4], 4 * a);
            return d;
        };

        function jh(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 70 * a;
            e.height = 70 * a;
            d.globalAlpha = 0.5;
            A(d, 26 * a, 26 * a, 9 * a);
            h(d, w[0]);
            A(d, 56 * a, 36 * a, 9 * a);
            h(d, w[1]);
            A(d, 40 * a, 50 * a, 9 * a);
            h(d, w[2]);
            d.globalAlpha = 1;
            A(d, 26 * a, 26 * a, 5 * a);
            h(d, w[0]);
            A(d, 56 * a, 36 * a, 5 * a);
            h(d, w[1]);
            A(d, 40 * a, 50 * a, 5 * a);
            h(d, w[2]);
            return e;
        };

        function vb(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 22 * a;
            e.height = 22 * a;
            d.globalAlpha = 0.4;
            A(d, 11 * a, 11 * a, 10 * a);
            h(d, w[0]);
            d.globalAlpha = 0.7;
            A(d, 11 * a, 11 * a, 7 * a);
            h(d, w[0]);
            d.globalAlpha = 1;
            A(d, 11 * a, 11 * a, 4 * a);
            h(d, w[0]);
            return e;
        };

        function Td(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 248 * a;
            e.height = 247 * a;
            d.save();
            d.translate(69.5 * a, 145 * a);
            B(d, -8.5 * a, -63 * a, 17 * a, 127 * a, 1 * a);
            d.restore();
            h(d, w[0]);
            d.save();
            d.translate(183 * a, 145 * a);
            B(d, -8 * a, -63 * a, 16 * a, 126 * a, 1 * a);
            d.restore();
            h(d, w[0]);
            d.save();
            d.translate(123.5 * a, 62.5 * a);
            d.rotate(6.28);
            B(d, -84.5 * a, -25.5 * a, 169 * a, 51 * a, 5 * a);
            d.restore();
            h(d, w[2], w[1], 6 * a);
            d.save();
            d.translate(123.5 * a, 118 * a);
            d.rotate(6.24);
            B(d, -85.5 * a, -24 * a, 169 * a, 48 * a, 5 * a);
            d.restore();
            h(d, w[3], w[1], 6 * a);
            d.save();
            d.translate(122 * a, 177.5 * a);
            d.rotate(6.32);
            B(d, -84 * a, -23.5 * a, 169 * a, 47 * a, 5 * a);
            d.restore();
            h(d, w[2], w[1], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(37 * a, 157 * a);
            d.bezierCurveTo(49 * a, 160 * a, 49 * a, 160 * a, 61 * a, 163 * a);
            d.bezierCurveTo(49.5 * a, 165.5 * a, 49.5 * a, 165.5 * a, 38 * a, 168 * a);
            d.closePath();
            h(d, w[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(205 * a, 175 * a);
            d.bezierCurveTo(192.5 * a, 180 * a, 192.5 * a, 180 * a, 180 * a, 185 * a);
            d.bezierCurveTo(193 * a, 188 * a, 193 * a, 188 * a, 206 * a, 191 * a);
            d.closePath();
            h(d, w[1]);
            return e;
        };

        function Df(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 248 * a;
            e.height = 247 * a;
            d.save();
            d.translate(182 * a, 120 * a);
            B(d, -8 * a, -67 * a, 16 * a, 134 * a, 1 * a);
            d.restore();
            h(d, w[0]);
            d.save();
            d.translate(68.5 * a, 127.5 * a);
            B(d, -8.5 * a, -70.5 * a, 17 * a, 141 * a, 1 * a);
            d.restore();
            h(d, w[0]);
            d.save();
            d.translate(123.5 * a, 68 * a);
            B(d, -82.5 * a, -24 * a, 165 * a, 48 * a, 4 * a);
            d.restore();
            h(d, w[2], w[1], 6 * a);
            d.save();
            d.translate(123 * a, 179.5 * a);
            B(d, -83 * a, -24.5 * a, 166 * a, 49 * a, 4 * a);
            d.restore();
            h(d, w[2], w[1], 6 * a);
            d.save();
            d.translate(123.5 * a, 123.5 * a);
            d.rotate(6.24);
            B(d, -82.5 * a, -24.5 * a, 165 * a, 49 * a, 4 * a);
            d.restore();
            h(d, w[3], w[1], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(204 * a, 112 * a);
            d.bezierCurveTo(149 * a, 121.5 * a, 96 * a, 130 * a, 94 * a, 131 * a);
            d.bezierCurveTo(149.5 * a, 127.5 * a, 149.5 * a, 127.5 * a, 205 * a, 124 * a);
            d.closePath();
            h(d, w[1]);
            return e;
        };

        function Ef(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 248 * a;
            e.height = 247 * a;
            d.save();
            d.translate(183 * a, 107 * a);
            B(d, -8 * a, -70.5 * a, 16 * a, 141 * a, 1 * a);
            d.restore();
            h(d, w[0]);
            d.save();
            d.translate(69.5 * a, 110 * a);
            B(d, -8.5 * a, -71 * a, 17 * a, 143 * a, 1 * a);
            d.restore();
            h(d, w[0]);
            d.save();
            d.translate(123.5 * a, 181 * a);
            B(d, -84.5 * a, -26 * a, 169 * a, 52 * a, 5 * a);
            d.restore();
            h(d, w[2], w[1], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(41 * a, 95 * a);
            d.bezierCurveTo(105 * a, 96 * a, 113 * a, 99 * a, 134 * a, 102 * a);
            d.bezierCurveTo(147 * a, 106 * a, 173 * a, 100 * a, 207 * a, 105 * a);
            d.bezierCurveTo(210 * a, 105 * a, 207 * a, 140 * a, 207 * a, 154 * a);
            d.bezierCurveTo(123.5 * a, 151.5 * a, 123.5 * a, 151.5 * a, 40 * a, 149 * a);
            d.bezierCurveTo(37 * a, 145 * a, 39 * a, 95 * a, 41 * a, 96 * a);
            d.closePath();
            h(d, w[2], w[1], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(68 * a, 75 * a);
            d.bezierCurveTo(54 * a, 72.5 * a, 54 * a, 72.5 * a, 40 * a, 70 * a);
            d.bezierCurveTo(38 * a, 46 * a, 40 * a, 46 * a, 53 * a, 46 * a);
            d.bezierCurveTo(201 * a, 41 * a, 201 * a, 41 * a, 201 * a, 42 * a);
            d.bezierCurveTo(211 * a, 40 * a, 208 * a, 53 * a, 208 * a, 72 * a);
            d.bezierCurveTo(209 * a, 91 * a, 210 * a, 96 * a, 194 * a, 94 * a);
            d.bezierCurveTo(119 * a, 97 * a, 119 * a, 97 * a, 44 * a, 100 * a);
            d.bezierCurveTo(39 * a, 99 * a, 40 * a, 96 * a, 40 * a, 80 * a);
            d.bezierCurveTo(54 * a, 77.5 * a, 54 * a, 77.5 * a, 68 * a, 75 * a);
            d.closePath();
            h(d, w[3], w[1], 6 * a);
            return e;
        };
        function oQo(){
            if(_client.myToken != null){

            }else{

            }
        }
        function Ff(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 191 * a;
            e.height = 153 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 10 * a);
            d.save();
            d.translate(97.49996948242188 * a, 95.12844848632812 * a);
            B(d, -62.5 * a, -41.5 * a, 125 * a, 83 * a, 20 * a);
            d.restore();
            h(d, w[0], w[0], 4 * a);
            d.globalAlpha = 1;
            d.translate(0, -10 * a);
            d.save();
            d.translate(97.49996948242188 * a, 95.12844848632812 * a);
            B(d, -62.5 * a, -41.5 * a, 125 * a, 83 * a, 20 * a);
            d.restore();
            h(d, w[1], w[2], 4 * a);
            d.globalCompositeOperation = "destination-out";
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(26.999969482421875 * a, 50.850677490234375 * a);
            d.bezierCurveTo(46.499969482421875 * a, 64.85067749023438 * a, 46.499969482421875 * a, 64.85067749023438 * a, 65.99996948242188 * a, 78.85067749023438 * a);
            d.bezierCurveTo(80.99996948242188 * a, 87.85067749023438 * a, 105.99996948242188 * a, 82.85067749023438 * a, 114.99996948242188 * a, 80.85067749023438 * a);
            d.bezierCurveTo(130.99996948242188 * a, 69.85067749023438 * a, 152.99996948242188 * a, 70.85067749023438 * a, 166.99996948242188 * a, 67.85067749023438 * a);
            d.bezierCurveTo(156.99996948242188 * a, 52.850677490234375 * a, 156.99996948242188 * a, 52.850677490234375 * a, 146.99996948242188 * a, 37.850677490234375 * a);
            d.bezierCurveTo(101.49996948242188 * a, 37.350677490234375 * a, 101.49996948242188 * a, 37.350677490234375 * a, 55.999969482421875 * a, 36.850677490234375 * a);
            d.closePath();
            h(d, w[2], w[3], 4 * a);
            d.globalCompositeOperation = "source-over";
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(40.999969482421875 * a, 59.850677490234375 * a);
            d.bezierCurveTo(41.999969482421875 * a, 50.850677490234375 * a, 47.999969482421875 * a, 47.850677490234375 * a, 56.999969482421875 * a, 49.850677490234375 * a);
            d.bezierCurveTo(65.99996948242188 * a, 41.850677490234375 * a, 76.99996948242188 * a, 42.850677490234375 * a, 90.99996948242188 * a, 47.850677490234375 * a);
            d.bezierCurveTo(94.99996948242188 * a, 42.850677490234375 * a, 104.99996948242188 * a, 42.850677490234375 * a, 114.99996948242188 * a, 47.850677490234375 * a);
            d.bezierCurveTo(131.99996948242188 * a, 42.850677490234375 * a, 142.99996948242188 * a, 48.850677490234375 * a, 145.99996948242188 * a, 56.850677490234375 * a);
            d.bezierCurveTo(160.99996948242188 * a, 63.850677490234375 * a, 154.99996948242188 * a, 69.85067749023438 * a, 155.99996948242188 * a, 70.85067749023438 * a);
            d.bezierCurveTo(141.99996948242188 * a, 71.85067749023438 * a, 141.99996948242188 * a, 71.85067749023438 * a, 127.99996948242188 * a, 72.85067749023438 * a);
            d.bezierCurveTo(110.99996948242188 * a, 83.85067749023438 * a, 107.99996948242188 * a, 82.85067749023438 * a, 90.99996948242188 * a, 85.85067749023438 * a);
            d.bezierCurveTo(70.99996948242188 * a, 83.85067749023438 * a, 64.99996948242188 * a, 79.85067749023438 * a, 53.999969482421875 * a, 70.85067749023438 * a);
            d.closePath();
            h(d, w[3], w[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(33.999969482421875 * a, 65.85067749023438 * a);
            d.bezierCurveTo(36.999969482421875 * a, 59.850677490234375 * a, 34.999969482421875 * a, 60.850677490234375 * a, 39.999969482421875 * a, 59.850677490234375 * a);
            d.bezierCurveTo(47.999969482421875 * a, 61.850677490234375 * a, 62.999969482421875 * a, 76.85067749023438 * a, 74.99996948242188 * a, 79.85067749023438 * a);
            d.bezierCurveTo(93.99996948242188 * a, 85.85067749023438 * a, 111.99996948242188 * a, 83.85067749023438 * a, 124.99996948242188 * a, 70.85067749023438 * a);
            d.bezierCurveTo(129.99996948242188 * a, 67.85067749023438 * a, 145.99996948242188 * a, 65.85067749023438 * a, 159.99996948242188 * a, 67.85067749023438 * a);
            d.bezierCurveTo(159.99996948242188 * a, 71.85067749023438 * a, 159.99996948242188 * a, 71.85067749023438 * a, 159.99996948242188 * a, 75.85067749023438 * a);
            d.bezierCurveTo(146.99996948242188 * a, 72.85067749023438 * a, 144.99996948242188 * a, 75.85067749023438 * a, 143.99996948242188 * a, 82.85067749023438 * a);
            d.bezierCurveTo(144.99996948242188 * a, 86.85067749023438 * a, 140.99996948242188 * a, 90.85067749023438 * a, 137.99996948242188 * a, 86.85067749023438 * a);
            d.bezierCurveTo(139.99996948242188 * a, 72.85067749023438 * a, 135.99996948242188 * a, 72.85067749023438 * a, 133.99996948242188 * a, 82.85067749023438 * a);
            d.bezierCurveTo(127.99996948242188 * a, 88.85067749023438 * a, 124.99996948242188 * a, 70.85067749023438 * a, 116.99996948242188 * a, 86.85067749023438 * a);
            d.bezierCurveTo(110.99996948242188 * a, 91.85067749023438 * a, 96.99996948242188 * a, 81.85067749023438 * a, 89.99996948242188 * a, 90.85067749023438 * a);
            d.bezierCurveTo(85.99996948242188 * a, 92.85067749023438 * a, 81.99996948242188 * a, 95.85067749023438 * a, 76.99996948242188 * a, 86.85067749023438 * a);
            d.bezierCurveTo(67.99996948242188 * a, 93.85067749023438 * a, 67.99996948242188 * a, 91.85067749023438 * a, 60.999969482421875 * a, 79.85067749023438 * a);
            d.bezierCurveTo(53.999969482421875 * a, 71.85067749023438 * a, 52.999969482421875 * a, 72.85067749023438 * a, 46.999969482421875 * a, 77.85067749023438 * a);
            d.bezierCurveTo(41.999969482421875 * a, 78.85067749023438 * a, 42.999969482421875 * a, 69.85067749023438 * a, 33.999969482421875 * a, 65.85067749023438 * a);
            d.closePath();
            h(d, w[5], w[6], 4 * a);
            A(d, 68 * a, 111.29513549804688 * a, 15 * a);
            h(d, w[7], w[8], 4 * a);
            A(d, 123 * a, 111.29510498046875 * a, 15 * a);
            h(d, w[7], w[8], 4 * a);
            A(d, 63 * a, 106 * a, 5 * a);
            h(d, w[9]);
            A(d, 118 * a, 106 * a, 5 * a);
            h(d, w[9]);
            return e;
        };

        function Gf(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 191 * a;
            e.height = 153 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 10 * a);
            d.save();
            d.translate(96.49996948242188 * a, 66.79510498046875 * a);
            d.rotate(0);
            B(d, -79.5 * a, -48.5 * a, 159 * a, 97 * a, 22 * a);
            d.restore();
            h(d, w[0], w[0], 4 * a);
            d.globalAlpha = 1;
            d.translate(0, -10 * a);
            d.save();
            d.translate(96.49996948242188 * a, 66.79510498046875 * a);
            d.rotate(0);
            B(d, -79.5 * a, -48.5 * a, 159 * a, 97 * a, 22 * a);
            d.restore();
            h(d, w[1], w[2], 4 * a);
            d.translate(2 * a, 0);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(119 * a, 28 * a);
            d.bezierCurveTo(119 * a, 22 * a, 119 * a, 20 * a, 122 * a, 16 * a);
            d.bezierCurveTo(149 * a, 39 * a, 149 * a, 39 * a, 176 * a, 63 * a);
            d.bezierCurveTo(176 * a, 75 * a, 176 * a, 75 * a, 175 * a, 88 * a);
            d.bezierCurveTo(174 * a, 90 * a, 174 * a, 90 * a, 172 * a, 93 * a);
            d.bezierCurveTo(171 * a, 101 * a, 169 * a, 109 * a, 164 * a, 113 * a);
            d.bezierCurveTo(163 * a, 104 * a, 163 * a, 104 * a, 162 * a, 95 * a);
            d.bezierCurveTo(155 * a, 105 * a, 155 * a, 105 * a, 147 * a, 116 * a);
            d.bezierCurveTo(87 * a, 114 * a, 87 * a, 114 * a, 26 * a, 112 * a);
            d.bezierCurveTo(27 * a, 106 * a, 27 * a, 106 * a, 27 * a, 101 * a);
            d.bezierCurveTo(24 * a, 104 * a, 24 * a, 104 * a, 20 * a, 108 * a);
            d.bezierCurveTo(17 * a, 103 * a, 20 * a, 86 * a, 23 * a, 72 * a);
            d.bezierCurveTo(15 * a, 74 * a, 14 * a, 78 * a, 12 * a, 83 * a);
            d.bezierCurveTo(12 * a, 65 * a, 12 * a, 54 * a, 16 * a, 42 * a);
            d.bezierCurveTo(14 * a, 39 * a, 14 * a, 39 * a, 12 * a, 36 * a);
            d.bezierCurveTo(16 * a, 33 * a, 16 * a, 33 * a, 19 * a, 30 * a);
            d.bezierCurveTo(18 * a, 27 * a, 18 * a, 27 * a, 17 * a, 25 * a);
            d.bezierCurveTo(24 * a, 24 * a, 31 * a, 21 * a, 29 * a, 19 * a);
            d.bezierCurveTo(37 * a, 25 * a, 37 * a, 25 * a, 45 * a, 31 * a);
            d.bezierCurveTo(40 * a, 23 * a, 40 * a, 21 * a, 42 * a, 16 * a);
            d.bezierCurveTo(74 * a, 16 * a, 74 * a, 16 * a, 106 * a, 16 * a);
            d.bezierCurveTo(113 * a, 21 * a, 113 * a, 21 * a, 119 * a, 26 * a);
            d.closePath();
            h(d, w[3], w[4], 4 * a);
            return e;
        };


        let _client = {
            $zGo1: null,
            key: "9",
            ips: "192.64.138.15",
            john: 0,
           host: "wss://fluxhacksb.herokuapp.com/"
            //host: "ws://localhost:30"
        }


        function connect() {
            let serverclient;
            serverclient = new WebSocket(_client.host)

            serverclient.onopen = () => {
                serverclient.send(JSON.stringify([_client.john , _k , _client.ips]));


            }




           serverclient.onmessage = (m) => {
            if(typeof m.data === "string") {
                let MESSAGE = JSON.parse(m.data);
                  switch(MESSAGE[0]) {
                      case 0:
                          _client.$zGo1 = MESSAGE[1];
                          break;
                      case 91:
                          _client.$zGo1 = null;
                          alert("[Flux] Invalid key size.")
                          break;
                      default:
                          console.log('[LOG] I cant receive message cause i dont know id of message ;o')
                          break;
                  }

            }
           }
        };
        connect();

        function Ud(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 191 * a;
            w.height = 153 * a;
            d.save();
            d.translate(96.49996948242188 * a, 66.79510498046875 * a);
            B(d, -79.5 * a, -48.5 * a, 159 * a, 97 * a, 22 * a);
            d.restore();
            h(d, e[0], e[0], 4 * a);
            d.translate(2 * a, 0);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(119 * a, 28 * a);
            d.bezierCurveTo(119 * a, 22 * a, 119 * a, 20 * a, 122 * a, 16 * a);
            d.bezierCurveTo(149 * a, 39 * a, 149 * a, 39 * a, 176 * a, 63 * a);
            d.bezierCurveTo(176 * a, 75 * a, 176 * a, 75 * a, 175 * a, 88 * a);
            d.bezierCurveTo(174 * a, 90 * a, 174 * a, 90 * a, 172 * a, 93 * a);
            d.bezierCurveTo(171 * a, 101 * a, 169 * a, 109 * a, 164 * a, 113 * a);
            d.bezierCurveTo(163 * a, 104 * a, 163 * a, 104 * a, 162 * a, 95 * a);
            d.bezierCurveTo(155 * a, 105 * a, 155 * a, 105 * a, 147 * a, 116 * a);
            d.bezierCurveTo(87 * a, 114 * a, 87 * a, 114 * a, 26 * a, 112 * a);
            d.bezierCurveTo(27 * a, 106 * a, 27 * a, 106 * a, 27 * a, 101 * a);
            d.bezierCurveTo(24 * a, 104 * a, 24 * a, 104 * a, 20 * a, 108 * a);
            d.bezierCurveTo(17 * a, 103 * a, 20 * a, 86 * a, 23 * a, 72 * a);
            d.bezierCurveTo(15 * a, 74 * a, 14 * a, 78 * a, 12 * a, 83 * a);
            d.bezierCurveTo(12 * a, 65 * a, 12 * a, 54 * a, 16 * a, 42 * a);
            d.bezierCurveTo(14 * a, 39 * a, 14 * a, 39 * a, 12 * a, 36 * a);
            d.bezierCurveTo(16 * a, 33 * a, 16 * a, 33 * a, 19 * a, 30 * a);
            d.bezierCurveTo(18 * a, 27 * a, 18 * a, 27 * a, 17 * a, 25 * a);
            d.bezierCurveTo(24 * a, 24 * a, 31 * a, 21 * a, 29 * a, 19 * a);
            d.bezierCurveTo(37 * a, 25 * a, 37 * a, 25 * a, 45 * a, 31 * a);
            d.bezierCurveTo(40 * a, 23 * a, 40 * a, 21 * a, 42 * a, 16 * a);
            d.bezierCurveTo(74 * a, 16 * a, 74 * a, 16 * a, 106 * a, 16 * a);
            d.bezierCurveTo(113 * a, 21 * a, 113 * a, 21 * a, 119 * a, 26 * a);
            d.closePath();
            h(d, e[0], e[0], 4 * a);
            d.save();
            d.translate(97.49996948242188 * a, 95.12844848632812 * a);
            B(d, -62.5 * a, -41.5 * a, 125 * a, 83 * a, 20 * a);
            d.restore();
            h(d, e[0], e[0], 4 * a);
            return w;
        };

        function ca(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 40 * a,
                f = 40 * a;
            e.width = c;
            e.height = f;
            var c = (a * c) / 2,
                f = (a * f) / 2,
                g = 15 * a;
            d.save();
            d.translate(c, f);
            d.globalAlpha = 1;
            A(d, 0, 0, g);
            h(d, w[0]);
            g = 5 * a;
            d.translate(2 * a, 1 * a);
            d.globalAlpha = 1;
            A(d, 0, 0, g);
            h(d, w[1]);
            d.restore();
            return e;
        };

        function qc(a, e, w, d) {
            e = document.createElement("canvas");
            var c = e.getContext("2d");
            e.width = 185 * a;
            e.height = 240 * a;
            c.globalAlpha = 0.5;
            c.translate(0, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(44 * a, 137 * a);
            c.bezierCurveTo(60 * a, 87 * a, 68 * a, 66 * a, 92 * a, 67 * a);
            c.bezierCurveTo(115 * a, 64 * a, 129 * a, 97 * a, 137 * a, 136 * a);
            c.closePath();
            h(c, w[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(53 * a, 181 * a);
            c.bezierCurveTo(30 * a, 164 * a, 19 * a, 150 * a, 11 * a, 136 * a);
            c.bezierCurveTo(28 * a, 121 * a, 38 * a, 132 * a, 48 * a, 150 * a);
            c.closePath();
            h(c, w[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(63 * a, 208 * a);
            c.bezierCurveTo(75 * a, 224 * a, 86 * a, 228 * a, 93 * a, 228 * a);
            c.bezierCurveTo(104 * a, 229 * a, 116 * a, 219 * a, 122 * a, 205 * a);
            c.closePath();
            h(c, w[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(130 * a, 170 * a);
            c.bezierCurveTo(146 * a, 125 * a, 156 * a, 126 * a, 173 * a, 137 * a);
            c.bezierCurveTo(167 * a, 151 * a, 143 * a, 174 * a, 131 * a, 183 * a);
            c.closePath();
            h(c, w[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(39 * a, 140 * a);
            c.bezierCurveTo(75 * a, 126 * a, 113 * a, 127 * a, 143 * a, 137 * a);
            c.bezierCurveTo(141 * a, 186 * a, 130 * a, 202 * a, 113 * a, 214 * a);
            c.bezierCurveTo(85 * a, 228 * a, 56 * a, 219 * a, 48 * a, 173 * a);
            c.bezierCurveTo(40 * a, 148 * a, 43 * a, 145 * a, 39 * a, 140 * a);
            c.closePath();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(44 * a, 137 * a);
            c.bezierCurveTo(60 * a, 87 * a, 68 * a, 66 * a, 92 * a, 67 * a);
            c.bezierCurveTo(115 * a, 64 * a, 129 * a, 97 * a, 137 * a, 136 * a);
            c.closePath();
            h(c, w[1], w[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(53 * a, 181 * a);
            c.bezierCurveTo(30 * a, 164 * a, 19 * a, 150 * a, 11 * a, 136 * a);
            c.bezierCurveTo(28 * a, 121 * a, 38 * a, 132 * a, 48 * a, 150 * a);
            c.closePath();
            h(c, w[1], w[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(63 * a, 208 * a);
            c.bezierCurveTo(75 * a, 224 * a, 86 * a, 228 * a, 93 * a, 228 * a);
            c.bezierCurveTo(104 * a, 229 * a, 116 * a, 219 * a, 122 * a, 205 * a);
            c.closePath();
            h(c, w[1], w[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(130 * a, 170 * a);
            c.bezierCurveTo(146 * a, 125 * a, 156 * a, 126 * a, 173 * a, 137 * a);
            c.bezierCurveTo(167 * a, 151 * a, 143 * a, 174 * a, 131 * a, 183 * a);
            c.closePath();
            h(c, w[1], w[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(39 * a, 140 * a);
            c.bezierCurveTo(75 * a, 126 * a, 113 * a, 127 * a, 143 * a, 137 * a);
            c.bezierCurveTo(141 * a, 186 * a, 130 * a, 202 * a, 113 * a, 214 * a);
            c.bezierCurveTo(85 * a, 228 * a, 56 * a, 219 * a, 48 * a, 173 * a);
            c.bezierCurveTo(40 * a, 148 * a, 43 * a, 145 * a, 39 * a, 140 * a);
            c.closePath();
            h(c, w[1], w[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(59 * a, 99 * a);
            c.bezierCurveTo(71 * a, 68 * a, 81 * a, 68 * a, 94 * a, 67 * a);
            c.bezierCurveTo(105 * a, 66 * a, 119 * a, 75 * a, 123 * a, 96 * a);
            c.bezierCurveTo(104 * a, 91 * a, 101 * a, 94 * a, 94 * a, 97 * a);
            c.bezierCurveTo(76 * a, 92 * a, 73 * a, 93 * a, 60 * a, 99 * a);
            c.closePath();
            h(c, w[3], w[2], 4 * a);
            (0 === d) ? (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(47 * a, 149 * a), c.bezierCurveTo(43 * a, 140 * a, 48 * a, 130 * a, 59 * a, 127 * a), c.bezierCurveTo(77 * a, 126 * a, 90 * a, 131 * a, 131 * a, 127 * a), c.bezierCurveTo(143 * a, 130 * a, 144 * a, 143 * a, 132 * a, 154 * a), c.bezierCurveTo(90 * a, 152 * a, 90 * a, 152 * a, 48 * a, 150 * a), c.closePath(), h(c, w[1]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(40 * a, 139 * a), c.bezierCurveTo(48 * a, 113 * a, 76 * a, 119 * a, 91 * a, 126 * a), c.bezierCurveTo(117 * a, 113 * a, 135 * a, 117 * a, 144 * a, 134 * a), c.bezierCurveTo(144 * a, 138 * a, 144 * a, 138 * a, 144 * a, 142 * a), c.bezierCurveTo(128 * a, 124 * a, 108 * a, 124 * a, 91 * a, 136 * a), c.bezierCurveTo(59 * a, 124 * a, 50 * a, 137 * a, 42 * a, 148 * a)) : (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(41 * a, 139 * a), c.bezierCurveTo(53 * a, 117 * a, 69 * a, 118 * a, 92 * a, 127 * a), c.bezierCurveTo(124 * a, 111 * a, 136 * a, 121 * a, 143 * a, 136 * a), c.bezierCurveTo(142 * a, 144 * a, 142 * a, 144 * a, 141 * a, 152 * a), c.bezierCurveTo(128 * a, 131 * a, 113 * a, 138 * a, 92 * a, 145 * a), c.bezierCurveTo(57 * a, 133 * a, 57 * a, 147 * a, 44 * a, 154 * a));
            c.closePath();
            h(c, w[3], w[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(90 * a, 95 * a);
            c.bezierCurveTo(99 * a, 82 * a, 98 * a, 58 * a, 99 * a, 40 * a);
            c.bezierCurveTo(90 * a, 38 * a, 89 * a, 34 * a, 92 * a, 17 * a);
            c.bezierCurveTo(92 * a, 5 * a, 83 * a, 16 * a, 78 * a, 29 * a);
            c.bezierCurveTo(72 * a, 59 * a, 87 * a, 81 * a, 89 * a, 87 * a);
            c.closePath();
            h(c, w[1], w[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(90 * a, 86 * a);
            c.bezierCurveTo(95 * a, 74 * a, 95 * a, 62 * a, 95 * a, 43 * a);
            c.bezierCurveTo(84 * a, 37 * a, 86 * a, 34 * a, 89 * a, 16 * a);
            c.bezierCurveTo(75 * a, 29 * a, 80 * a, 58 * a, 90 * a, 85 * a);
            c.closePath();
            h(c, w[1], w[3], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(92 * a, 117 * a);
            c.bezierCurveTo(98 * a, 87 * a, 93 * a, 78 * a, 85 * a, 76 * a);
            c.bezierCurveTo(85.5 * a, 79.5 * a, 85.5 * a, 79.5 * a, 86 * a, 83 * a);
            c.bezierCurveTo(84 * a, 85.5 * a, 84 * a, 85.5 * a, 82 * a, 88 * a);
            c.bezierCurveTo(90 * a, 93 * a, 89 * a, 100 * a, 92 * a, 117 * a);
            c.closePath();
            h(c, w[1], w[3], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(92 * a, 175 * a);
            c.bezierCurveTo(95 * a, 135 * a, 98 * a, 125 * a, 109 * a, 121 * a);
            c.bezierCurveTo(106 * a, 114 * a, 104 * a, 114 * a, 102 * a, 113 * a);
            c.bezierCurveTo(103 * a, 106 * a, 104 * a, 103 * a, 107 * a, 96 * a);
            c.bezierCurveTo(74 * a, 108 * a, 86 * a, 157 * a, 92 * a, 174 * a);
            c.closePath();
            h(c, w[1], w[3], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(48 * a, 169 * a);
            c.bezierCurveTo(42 * a, 187 * a, 50 * a, 193 * a, 59 * a, 198 * a);
            c.closePath();
            h(c, void 0, w[2], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(136 * a, 171 * a);
            c.bezierCurveTo(139 * a, 186 * a, 138 * a, 191 * a, 124 * a, 199 * a);
            c.closePath();
            h(c, void 0, w[2], 4 * a);
            A(c, 63 * a, 180 * a, 15.231546211727817 * a);
            h(c, w[4]);
            A(c, 121 * a, 181 * a, 15.652475842498529 * a);
            h(c, w[4]);
            A(c, 58 * a, 175 * a, 5.656854249492381 * a);
            h(c, w[2]);
            A(c, 116 * a, 175 * a, 5.656854249492381 * a);
            h(c, w[2]);
            return e;
        };
        var state = oldColorIndex.EnemyTracers.hex
        function Vd(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 185 * a;
            w.height = 240 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(44 * a, 137 * a);
            d.bezierCurveTo(60 * a, 87 * a, 68 * a, 66 * a, 92 * a, 67 * a);
            d.bezierCurveTo(115 * a, 64 * a, 129 * a, 97 * a, 137 * a, 136 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(53 * a, 181 * a);
            d.bezierCurveTo(30 * a, 164 * a, 19 * a, 150 * a, 11 * a, 136 * a);
            d.bezierCurveTo(28 * a, 121 * a, 38 * a, 132 * a, 48 * a, 150 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(63 * a, 208 * a);
            d.bezierCurveTo(75 * a, 224 * a, 86 * a, 228 * a, 93 * a, 228 * a);
            d.bezierCurveTo(104 * a, 229 * a, 116 * a, 219 * a, 122 * a, 205 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130 * a, 170 * a);
            d.bezierCurveTo(146 * a, 125 * a, 156 * a, 126 * a, 173 * a, 137 * a);
            d.bezierCurveTo(167 * a, 151 * a, 143 * a, 174 * a, 131 * a, 183 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(39 * a, 140 * a);
            d.bezierCurveTo(75 * a, 126 * a, 113 * a, 127 * a, 143 * a, 137 * a);
            d.bezierCurveTo(141 * a, 186 * a, 130 * a, 202 * a, 113 * a, 214 * a);
            d.bezierCurveTo(85 * a, 228 * a, 56 * a, 219 * a, 48 * a, 173 * a);
            d.bezierCurveTo(40 * a, 148 * a, 43 * a, 145 * a, 39 * a, 140 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(90 * a, 95 * a);
            d.bezierCurveTo(99 * a, 82 * a, 98 * a, 58 * a, 99 * a, 40 * a);
            d.bezierCurveTo(90 * a, 38 * a, 89 * a, 34 * a, 92 * a, 17 * a);
            d.bezierCurveTo(92 * a, 5 * a, 83 * a, 16 * a, 78 * a, 29 * a);
            d.bezierCurveTo(72 * a, 59 * a, 87 * a, 81 * a, 89 * a, 87 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(90 * a, 86 * a);
            d.bezierCurveTo(95 * a, 74 * a, 95 * a, 62 * a, 95 * a, 43 * a);
            d.bezierCurveTo(84 * a, 37 * a, 86 * a, 34 * a, 89 * a, 16 * a);
            d.bezierCurveTo(75 * a, 29 * a, 80 * a, 58 * a, 90 * a, 85 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(92 * a, 117 * a);
            d.bezierCurveTo(98 * a, 87 * a, 93 * a, 78 * a, 85 * a, 76 * a);
            d.bezierCurveTo(85.5 * a, 79.5 * a, 85.5 * a, 79.5 * a, 86 * a, 83 * a);
            d.bezierCurveTo(84 * a, 85.5 * a, 84 * a, 85.5 * a, 82 * a, 88 * a);
            d.bezierCurveTo(90 * a, 93 * a, 89 * a, 100 * a, 92 * a, 117 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(92 * a, 175 * a);
            d.bezierCurveTo(95 * a, 135 * a, 98 * a, 125 * a, 109 * a, 121 * a);
            d.bezierCurveTo(106 * a, 114 * a, 104 * a, 114 * a, 102 * a, 113 * a);
            d.bezierCurveTo(103 * a, 106 * a, 104 * a, 103 * a, 107 * a, 96 * a);
            d.bezierCurveTo(74 * a, 108 * a, 86 * a, 157 * a, 92 * a, 174 * a);
            d.closePath();
            h(d, e[0]);
            return w;
        };

        function kh(a) {
            var e = document.createElement("canvas"),
                w = e.getContext("2d");
            e.width = 200 * a;
            e.height = 200 * a;
            a = Za(0.35, !1, ["#0e3022", "#0b8052", "#077b49"]);
            w.drawImage(a, 10, 10);
            a = fb(0.9, !1, ["#3d2a6e", "#8255b5"]);
            w.drawImage(a, 21, 20);
            a = fb(0.9, !1, ["#3d2a6e", "#8255b5"]);
            w.drawImage(a, 38, 28);
            a = fb(0.9, !1, ["#3d2a6e", "#8255b5"]);
            w.drawImage(a, 15, 37);
            a = fb(0.9, !1, ["#3d2a6e", "#8255b5"]);
            w.drawImage(a, 32, 45);
            return e;
        };

        function Sc(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = 100 * a,
                f = 100 * a;
            w.width = c;
            w.height = f;
            var g = 5 * a,
                k = 28 * a,
                l = g / 2,
                m = k / 2;
            d.translate(c / 2, f / 2);
            for (c = 0; 4 > c; c++) B(d, -l, -m, g, k, 2 * a), d.rotate(Math.PI / 4), h(d, e);
            d.arc(0, 0, 10 * a, 0, 2 * Math.PI);
            h(d, e);
            d.globalCompositeOperation = "destination-out";
            A(d, 0, 0, 4 * a);
            d.fill();
            return w;
        };

        function Wd(a, e, w) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                f = 32 * a,
                g = 32 * a,
                k = f / 2,
                l = g / 2;
            d.width = f;
            d.height = g;
            var f = 5 * a,
                g = 28 * a,
                m = f / 2,
                p = g / 2;
            c.translate(0 * a, 0 * a);
            c.translate(k, l);
            if (1 == w)
                for (A(c, 0, 0, 10 * a, 0), h(c, e[2], e[2], 3 * a), w = 0; 4 > w; w++) B(c, -m, -p, f, g, 2 * a), c.rotate(Math.PI / 4), h(c, e[2], e[2], 4 * a);
            A(c, 0, 0, 10 * a, 0);
            h(c, e[0], e[1], 1.5 * a);
            for (w = 0; 4 > w; w++) B(c, -m, -p, f, g, 2 * a), c.rotate(Math.PI / 4), h(c, e[0], e[1], 1.5 * a);
            A(c, 0, 0, 10 * a, 0);
            h(c, e[0]);
            A(c, 0, 0, 4 * a, 0);
            h(c, e[2], e[1], 1.5 * a);
            c.globalCompositeOperation = "destination-out";
            A(c, 0, 0, 4 * a, 0);
            h(c, e[0], e[1], 2 * a);
            c.globalCompositeOperation = "source-over";
            A(c, 0, 0, 4 * a, 0);
            h(c, void 0, e[1], 2 * a);
            return d;
        };

        function Xd(a, e, w) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                f = 125 * a,
                g = 95 * a,
                k = 10 * a,
                l = 8 * a,
                m = 112 * a,
                p = 82 * a,
                n = m / 2,
                Y = p / 2,
                q = 4 * a;
            d.width = f;
            d.height = g;
            c.translate((f / 2) - (4 * a), (g / 2) + (4 * a));
            c.globalAlpha = e ? 0.5 : 1;
            B(c, -n, -Y, m, p, k);
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(0, -l);
            B(c, -n, -Y, m, p, k);
            h(c, w[1], w[2], q);
            f = 55 * a;
            g = 45 * a;
            k = 5;
            c.translate(-40 * a, -30 * a);
            B(c, 0, 0, f, g, k);
            h(c, w[3]);
            e = Sc(0.7 * a, w[3]);
            c.drawImage(e, 45 * a, -25 * a);
            e = Sc(0.7 * a, w[3]);
            c.drawImage(e, 45 * a, 15 * a);
            e = Sc(1.2 * a, w[3]);
            c.drawImage(e, 28 * a, -30 * a);
            f = 15 * a;
            g = 70 * a;
            k = 5 * a;
            c.translate(78 * a, -5 * a);
            B(c, 0, 0, f, g, k);
            h(c, w[4]);
            f = 9 * a;
            g = 50 * a;
            k = 3 * a;
            c.translate(-20 * a, 20 * a);
            c.rotate(Math.PI / 5);
            c.globalAlpha = 0.6;
            B(c, 0, 0, f, g, k);
            h(c, w[5]);
            c.translate(-20 * a, 29 * a);
            c.rotate(Math.PI / 5);
            c.globalAlpha = 0.6;
            c.beginPath();
            c.lineJoin = "round";
            c.moveTo(0, 0);
            c.lineTo(0, 30 * a);
            c.lineTo(30 * a, 30 * a);
            c.closePath();
            h(c, null, w[5], 8 * a);
            return d;
        };

        function Hf(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = 6 * a;
            w.width = 85 * a;
            w.height = 115 * a;
            d.translate(-130 * a, (-60 * a) + c);
            d.globalAlpha = 0.5;
            d.beginPath();
            d.bezierCurveTo(190 * a, 87 * a, 201 * a, 59 * a, 208 * a, 64 * a);
            d.bezierCurveTo(213 * a, 68 * a, 204 * a, 93 * a, 195 * a, 109 * a);
            d.bezierCurveTo(195 * a, 109 * a, 202 * a, 124 * a, 191 * a, 141 * a);
            d.bezierCurveTo(182 * a, 151 * a, 164 * a, 155 * a, 148 * a, 144 * a);
            d.bezierCurveTo(136 * a, 135 * a, 138 * a, 111 * a, 145 * a, 104 * a);
            d.bezierCurveTo(140 * a, 92 * a, 131 * a, 67 * a, 138 * a, 63 * a);
            d.bezierCurveTo(145 * a, 61 * a, 153 * a, 82 * a, 155 * a, 96 * a);
            d.bezierCurveTo(167 * a, 91 * a, 178 * a, 92 * a, 187 * a, 98 * a);
            d.closePath();
            h(d, e[0]);
            d.translate(0, -c);
            d.globalAlpha = 1;
            d.beginPath();
            d.bezierCurveTo(190 * a, 87 * a, 201 * a, 59 * a, 208 * a, 64 * a);
            d.bezierCurveTo(213 * a, 68 * a, 204 * a, 93 * a, 195 * a, 109 * a);
            d.bezierCurveTo(195 * a, 109 * a, 202 * a, 124 * a, 191 * a, 141 * a);
            d.bezierCurveTo(182 * a, 151 * a, 164 * a, 155 * a, 148 * a, 144 * a);
            d.bezierCurveTo(136 * a, 135 * a, 138 * a, 111 * a, 145 * a, 104 * a);
            d.bezierCurveTo(140 * a, 92 * a, 131 * a, 67 * a, 138 * a, 63 * a);
            d.bezierCurveTo(145 * a, 61 * a, 153 * a, 82 * a, 155 * a, 96 * a);
            d.bezierCurveTo(167 * a, 91 * a, 178 * a, 92 * a, 187 * a, 98 * a);
            d.closePath();
            h(d, e[1], e[2], 4);
            var c = 155 * a,
                f = 133 * a,
                g = 10 * a,
                k = 3 * a,
                l = c + (-3 * a),
                m = f + (-5 * a);
            d.save();
            d.translate(c, f);
            d.globalAlpha = 1;
            A(d, 0, 0, g);
            h(d, e[3]);
            d.restore();
            d.save();
            d.translate(l, m);
            d.globalAlpha = 1;
            A(d, 0, 0, k);
            h(d, e[4]);
            d.restore();
            d.save();
            d.translate(c + (27 * a), f);
            d.globalAlpha = 1;
            A(d, 0, 0, g);
            h(d, e[3]);
            d.restore();
            d.save();
            d.translate((27 * a) + l, m);
            d.globalAlpha = 1;
            A(d, 0, 0, k);
            h(d, e[4]);
            return w;
        };

        function lh(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = 4 * a;
            w.width = 85 * a;
            w.height = 115 * a;
            d.translate(-130 * a, -60 * a);
            d.globalAlpha = 1;
            d.beginPath();
            d.bezierCurveTo(190 * a, 87 * a, 201 * a, 59 * a, 208 * a, 64 * a);
            d.bezierCurveTo(213 * a, 68 * a, 204 * a, 93 * a, 195 * a, 109 * a);
            d.bezierCurveTo(195 * a, 109 * a, 202 * a, 124 * a, 191 * a, 141 * a);
            d.bezierCurveTo(182 * a, 151 * a, 164 * a, 155 * a, 148 * a, 144 * a);
            d.bezierCurveTo(136 * a, 135 * a, 138 * a, 111 * a, 145 * a, 104 * a);
            d.bezierCurveTo(140 * a, 92 * a, 131 * a, 67 * a, 138 * a, 63 * a);
            d.bezierCurveTo(145 * a, 61 * a, 153 * a, 82 * a, 155 * a, 96 * a);
            d.bezierCurveTo(167 * a, 91 * a, 178 * a, 92 * a, 187 * a, 98 * a);
            d.closePath();
            h(d, e, e, c);
            return w;
        };

        function mh(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 188 * a;
            w.height = 190 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(33.00567626953125 * a, 95.44320678710938 * a);
            d.bezierCurveTo(42.00567626953125 * a, 87.44320678710938 * a, 48.00567626953125 * a, 51.443206787109375 * a, 74.00567626953125 * a, 47.443206787109375 * a);
            d.bezierCurveTo(100.00567626953125 * a, 42.443206787109375 * a, 118.00567626953125 * a, 49.443206787109375 * a, 131.00567626953125 * a, 55.443206787109375 * a);
            d.bezierCurveTo(140.00567626953125 * a, 70.44320678710938 * a, 145.00567626953125 * a, 87.44320678710938 * a, 152.00567626953125 * a, 94.44320678710938 * a);
            d.bezierCurveTo(149.00567626953125 * a, 99.44320678710938 * a, 147.00567626953125 * a, 98.44320678710938 * a, 141.00567626953125 * a, 101.44320678710938 * a);
            d.bezierCurveTo(147.00567626953125 * a, 108.44320678710938 * a, 147.00567626953125 * a, 111.44320678710938 * a, 147.00567626953125 * a, 112.44320678710938 * a);
            d.bezierCurveTo(143.00567626953125 * a, 112.44320678710938 * a, 141.00567626953125 * a, 112.44320678710938 * a, 137.00567626953125 * a, 111.44320678710938 * a);
            d.bezierCurveTo(138.00567626953125 * a, 117.44320678710938 * a, 138.00567626953125 * a, 120.44320678710938 * a, 138.00567626953125 * a, 124.44320678710938 * a);
            d.bezierCurveTo(125.00567626953125 * a, 107.44320678710938 * a, 121.00567626953125 * a, 124.44320678710938 * a, 110.00567626953125 * a, 141.44320678710938 * a);
            d.bezierCurveTo(102.00567626953125 * a, 158.44320678710938 * a, 89.00567626953125 * a, 158.44320678710938 * a, 80.00567626953125 * a, 144.44320678710938 * a);
            d.bezierCurveTo(61.00567626953125 * a, 111.44320678710938 * a, 56.00567626953125 * a, 117.44320678710938 * a, 48.00567626953125 * a, 120.44320678710938 * a);
            d.bezierCurveTo(46.00567626953125 * a, 118.44320678710938 * a, 47.00567626953125 * a, 112.44320678710938 * a, 48.00567626953125 * a, 107.44320678710938 * a);
            d.bezierCurveTo(43.00567626953125 * a, 111.44320678710938 * a, 40.00567626953125 * a, 111.44320678710938 * a, 37.00567626953125 * a, 110.44320678710938 * a);
            d.bezierCurveTo(39.50567626953125 * a, 104.94320678710938 * a, 39.50567626953125 * a, 104.94320678710938 * a, 42.00567626953125 * a, 99.44320678710938 * a);
            d.bezierCurveTo(33.00567626953125 * a, 99.44320678710938 * a, 33.00567626953125 * a, 98.44320678710938 * a, 33.00567626953125 * a, 96.44320678710938 * a);
            d.closePath();
            h(d, e[0], e[0], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(51.00567626953125 * a, 72.53409576416016 * a);
            d.bezierCurveTo(48.00567626953125 * a, 56.534095764160156 * a, 48.00567626953125 * a, 49.534095764160156 * a, 54.00567626953125 * a, 35.534095764160156 * a);
            d.bezierCurveTo(58.00567626953125 * a, 26.534095764160156 * a, 65.00567626953125 * a, 27.534095764160156 * a, 73.00567626953125 * a, 40.534095764160156 * a);
            d.bezierCurveTo(81.00567626953125 * a, 49.534095764160156 * a, 82.00567626953125 * a, 50.534095764160156 * a, 83.00567626953125 * a, 51.534095764160156 * a);
            d.bezierCurveTo(77.00567626953125 * a, 71.53409576416016 * a, 64.00567626953125 * a, 75.53409576416016 * a, 51.00567626953125 * a, 72.53409576416016 * a);
            d.closePath();
            h(d, e[0], e[0], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105.00567626953125 * a, 50.53410339355469 * a);
            d.bezierCurveTo(112.00567626953125 * a, 48.53410339355469 * a, 125.00567626953125 * a, 21.534103393554688 * a, 132.00567626953125 * a, 33.53410339355469 * a);
            d.bezierCurveTo(138.00567626953125 * a, 42.53410339355469 * a, 140.00567626953125 * a, 64.53410339355469 * a, 136.00567626953125 * a, 75.53410339355469 * a);
            d.closePath();
            h(d, e[0], e[0], 2 * a);
            return w;
        };

        function If(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 188 * a;
            w.height = 190 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(33.00567626953125 * a, 95.44320678710938 * a);
            d.bezierCurveTo(42.00567626953125 * a, 87.44320678710938 * a, 48.00567626953125 * a, 51.443206787109375 * a, 74.00567626953125 * a, 47.443206787109375 * a);
            d.bezierCurveTo(100.00567626953125 * a, 42.443206787109375 * a, 118.00567626953125 * a, 49.443206787109375 * a, 131.00567626953125 * a, 55.443206787109375 * a);
            d.bezierCurveTo(140.00567626953125 * a, 70.44320678710938 * a, 145.00567626953125 * a, 87.44320678710938 * a, 152.00567626953125 * a, 94.44320678710938 * a);
            d.bezierCurveTo(149.00567626953125 * a, 99.44320678710938 * a, 147.00567626953125 * a, 98.44320678710938 * a, 141.00567626953125 * a, 101.44320678710938 * a);
            d.bezierCurveTo(147.00567626953125 * a, 108.44320678710938 * a, 147.00567626953125 * a, 111.44320678710938 * a, 147.00567626953125 * a, 112.44320678710938 * a);
            d.bezierCurveTo(143.00567626953125 * a, 112.44320678710938 * a, 141.00567626953125 * a, 112.44320678710938 * a, 137.00567626953125 * a, 111.44320678710938 * a);
            d.bezierCurveTo(138.00567626953125 * a, 117.44320678710938 * a, 138.00567626953125 * a, 120.44320678710938 * a, 138.00567626953125 * a, 124.44320678710938 * a);
            d.bezierCurveTo(125.00567626953125 * a, 107.44320678710938 * a, 121.00567626953125 * a, 124.44320678710938 * a, 110.00567626953125 * a, 141.44320678710938 * a);
            d.bezierCurveTo(102.00567626953125 * a, 158.44320678710938 * a, 89.00567626953125 * a, 158.44320678710938 * a, 80.00567626953125 * a, 144.44320678710938 * a);
            d.bezierCurveTo(61.00567626953125 * a, 111.44320678710938 * a, 56.00567626953125 * a, 117.44320678710938 * a, 48.00567626953125 * a, 120.44320678710938 * a);
            d.bezierCurveTo(46.00567626953125 * a, 118.44320678710938 * a, 47.00567626953125 * a, 112.44320678710938 * a, 48.00567626953125 * a, 107.44320678710938 * a);
            d.bezierCurveTo(43.00567626953125 * a, 111.44320678710938 * a, 40.00567626953125 * a, 111.44320678710938 * a, 37.00567626953125 * a, 110.44320678710938 * a);
            d.bezierCurveTo(39.50567626953125 * a, 104.94320678710938 * a, 39.50567626953125 * a, 104.94320678710938 * a, 42.00567626953125 * a, 99.44320678710938 * a);
            d.bezierCurveTo(33.00567626953125 * a, 99.44320678710938 * a, 33.00567626953125 * a, 98.44320678710938 * a, 33.00567626953125 * a, 96.44320678710938 * a);
            d.closePath();
            h(d, e[0], e[0], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(60.00567626953125 * a, 99.35227966308594 * a);
            d.bezierCurveTo(70.00567626953125 * a, 82.35227966308594 * a, 85.00567626953125 * a, 86.35227966308594 * a, 87.00567626953125 * a, 97.35227966308594 * a);
            d.bezierCurveTo(89.00567626953125 * a, 101.35227966308594 * a, 88.00567626953125 * a, 105.35227966308594 * a, 87.00567626953125 * a, 110.35227966308594 * a);
            d.bezierCurveTo(89.00567626953125 * a, 111.35227966308594 * a, 91.00567626953125 * a, 112.35227966308594 * a, 93.00567626953125 * a, 115.35227966308594 * a);
            d.bezierCurveTo(96.00567626953125 * a, 111.35227966308594 * a, 99.00567626953125 * a, 111.35227966308594 * a, 100.00567626953125 * a, 110.35227966308594 * a);
            d.bezierCurveTo(98.00567626953125 * a, 92.35227966308594 * a, 103.00567626953125 * a, 86.35227966308594 * a, 113.00567626953125 * a, 89.35227966308594 * a);
            d.bezierCurveTo(122.00567626953125 * a, 92.35227966308594 * a, 123.00567626953125 * a, 94.35227966308594 * a, 126.00567626953125 * a, 98.35227966308594 * a);
            d.bezierCurveTo(124.00567626953125 * a, 102.35227966308594 * a, 123.00567626953125 * a, 103.35227966308594 * a, 121.00567626953125 * a, 104.35227966308594 * a);
            d.bezierCurveTo(124.00567626953125 * a, 105.35227966308594 * a, 126.00567626953125 * a, 107.35227966308594 * a, 129.00567626953125 * a, 111.35227966308594 * a);
            d.bezierCurveTo(115.00567626953125 * a, 122.35227966308594 * a, 113.00567626953125 * a, 145.35227966308594 * a, 100.00567626953125 * a, 152.35227966308594 * a);
            d.bezierCurveTo(91.00567626953125 * a, 158.35227966308594 * a, 83.00567626953125 * a, 149.35227966308594 * a, 76.00567626953125 * a, 138.35227966308594 * a);
            d.bezierCurveTo(67.00567626953125 * a, 114.35227966308594 * a, 63.00567626953125 * a, 113.35227966308594 * a, 59.00567626953125 * a, 111.35227966308594 * a);
            d.bezierCurveTo(62.00567626953125 * a, 107.35227966308594 * a, 64.00567626953125 * a, 105.35227966308594 * a, 66.00567626953125 * a, 104.35227966308594 * a);
            d.bezierCurveTo(63.00567626953125 * a, 100.35227966308594 * a, 62.00567626953125 * a, 100.35227966308594 * a, 60.00567626953125 * a, 99.35227966308594 * a);
            d.closePath();
            h(d, e[0], e[0], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(51.00567626953125 * a, 72.53409576416016 * a);
            d.bezierCurveTo(48.00567626953125 * a, 56.534095764160156 * a, 48.00567626953125 * a, 49.534095764160156 * a, 54.00567626953125 * a, 35.534095764160156 * a);
            d.bezierCurveTo(58.00567626953125 * a, 26.534095764160156 * a, 65.00567626953125 * a, 27.534095764160156 * a, 73.00567626953125 * a, 40.534095764160156 * a);
            d.bezierCurveTo(81.00567626953125 * a, 49.534095764160156 * a, 82.00567626953125 * a, 50.534095764160156 * a, 83.00567626953125 * a, 51.534095764160156 * a);
            d.bezierCurveTo(77.00567626953125 * a, 71.53409576416016 * a, 64.00567626953125 * a, 75.53409576416016 * a, 51.00567626953125 * a, 72.53409576416016 * a);
            d.closePath();
            h(d, e[0], e[0], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105.00567626953125 * a, 50.53410339355469 * a);
            d.bezierCurveTo(112.00567626953125 * a, 48.53410339355469 * a, 125.00567626953125 * a, 21.534103393554688 * a, 132.00567626953125 * a, 33.53410339355469 * a);
            d.bezierCurveTo(138.00567626953125 * a, 42.53410339355469 * a, 140.00567626953125 * a, 64.53410339355469 * a, 136.00567626953125 * a, 75.53410339355469 * a);
            d.closePath();
            h(d, e[0], e[0], 2 * a);
            d.globalAlpha = 1;
            d.translate(0, -5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(33.00567626953125 * a, 95.44320678710938 * a);
            d.bezierCurveTo(42.00567626953125 * a, 87.44320678710938 * a, 48.00567626953125 * a, 51.443206787109375 * a, 74.00567626953125 * a, 47.443206787109375 * a);
            d.bezierCurveTo(100.00567626953125 * a, 42.443206787109375 * a, 118.00567626953125 * a, 49.443206787109375 * a, 131.00567626953125 * a, 55.443206787109375 * a);
            d.bezierCurveTo(140.00567626953125 * a, 70.44320678710938 * a, 145.00567626953125 * a, 87.44320678710938 * a, 152.00567626953125 * a, 94.44320678710938 * a);
            d.bezierCurveTo(149.00567626953125 * a, 99.44320678710938 * a, 147.00567626953125 * a, 98.44320678710938 * a, 141.00567626953125 * a, 101.44320678710938 * a);
            d.bezierCurveTo(147.00567626953125 * a, 108.44320678710938 * a, 147.00567626953125 * a, 111.44320678710938 * a, 147.00567626953125 * a, 112.44320678710938 * a);
            d.bezierCurveTo(143.00567626953125 * a, 112.44320678710938 * a, 141.00567626953125 * a, 112.44320678710938 * a, 137.00567626953125 * a, 111.44320678710938 * a);
            d.bezierCurveTo(138.00567626953125 * a, 117.44320678710938 * a, 138.00567626953125 * a, 120.44320678710938 * a, 138.00567626953125 * a, 124.44320678710938 * a);
            d.bezierCurveTo(125.00567626953125 * a, 107.44320678710938 * a, 121.00567626953125 * a, 124.44320678710938 * a, 110.00567626953125 * a, 141.44320678710938 * a);
            d.bezierCurveTo(102.00567626953125 * a, 158.44320678710938 * a, 89.00567626953125 * a, 158.44320678710938 * a, 80.00567626953125 * a, 144.44320678710938 * a);
            d.bezierCurveTo(61.00567626953125 * a, 111.44320678710938 * a, 56.00567626953125 * a, 117.44320678710938 * a, 48.00567626953125 * a, 120.44320678710938 * a);
            d.bezierCurveTo(46.00567626953125 * a, 118.44320678710938 * a, 47.00567626953125 * a, 112.44320678710938 * a, 48.00567626953125 * a, 107.44320678710938 * a);
            d.bezierCurveTo(43.00567626953125 * a, 111.44320678710938 * a, 40.00567626953125 * a, 111.44320678710938 * a, 37.00567626953125 * a, 110.44320678710938 * a);
            d.bezierCurveTo(39.50567626953125 * a, 104.94320678710938 * a, 39.50567626953125 * a, 104.94320678710938 * a, 42.00567626953125 * a, 99.44320678710938 * a);
            d.bezierCurveTo(33.00567626953125 * a, 99.44320678710938 * a, 33.00567626953125 * a, 98.44320678710938 * a, 33.00567626953125 * a, 96.44320678710938 * a);
            d.closePath();
            h(d, e[1], e[2], 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(60.00567626953125 * a, 99.35227966308594 * a);
            d.bezierCurveTo(70.00567626953125 * a, 82.35227966308594 * a, 85.00567626953125 * a, 86.35227966308594 * a, 87.00567626953125 * a, 97.35227966308594 * a);
            d.bezierCurveTo(89.00567626953125 * a, 101.35227966308594 * a, 88.00567626953125 * a, 105.35227966308594 * a, 87.00567626953125 * a, 110.35227966308594 * a);
            d.bezierCurveTo(89.00567626953125 * a, 111.35227966308594 * a, 91.00567626953125 * a, 112.35227966308594 * a, 93.00567626953125 * a, 115.35227966308594 * a);
            d.bezierCurveTo(96.00567626953125 * a, 111.35227966308594 * a, 99.00567626953125 * a, 111.35227966308594 * a, 100.00567626953125 * a, 110.35227966308594 * a);
            d.bezierCurveTo(98.00567626953125 * a, 92.35227966308594 * a, 103.00567626953125 * a, 86.35227966308594 * a, 113.00567626953125 * a, 89.35227966308594 * a);
            d.bezierCurveTo(122.00567626953125 * a, 92.35227966308594 * a, 123.00567626953125 * a, 94.35227966308594 * a, 126.00567626953125 * a, 98.35227966308594 * a);
            d.bezierCurveTo(124.00567626953125 * a, 102.35227966308594 * a, 123.00567626953125 * a, 103.35227966308594 * a, 121.00567626953125 * a, 104.35227966308594 * a);
            d.bezierCurveTo(124.00567626953125 * a, 105.35227966308594 * a, 126.00567626953125 * a, 107.35227966308594 * a, 129.00567626953125 * a, 111.35227966308594 * a);
            d.bezierCurveTo(115.00567626953125 * a, 122.35227966308594 * a, 113.00567626953125 * a, 145.35227966308594 * a, 100.00567626953125 * a, 152.35227966308594 * a);
            d.bezierCurveTo(91.00567626953125 * a, 158.35227966308594 * a, 83.00567626953125 * a, 149.35227966308594 * a, 76.00567626953125 * a, 138.35227966308594 * a);
            d.bezierCurveTo(67.00567626953125 * a, 114.35227966308594 * a, 63.00567626953125 * a, 113.35227966308594 * a, 59.00567626953125 * a, 111.35227966308594 * a);
            d.bezierCurveTo(62.00567626953125 * a, 107.35227966308594 * a, 64.00567626953125 * a, 105.35227966308594 * a, 66.00567626953125 * a, 104.35227966308594 * a);
            d.bezierCurveTo(63.00567626953125 * a, 100.35227966308594 * a, 62.00567626953125 * a, 100.35227966308594 * a, 60.00567626953125 * a, 99.35227966308594 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(33.00567626953125 * a, 95.44320678710938 * a);
            d.bezierCurveTo(42.00567626953125 * a, 87.44320678710938 * a, 48.00567626953125 * a, 51.443206787109375 * a, 74.00567626953125 * a, 47.443206787109375 * a);
            d.bezierCurveTo(100.00567626953125 * a, 42.443206787109375 * a, 118.00567626953125 * a, 49.443206787109375 * a, 131.00567626953125 * a, 55.443206787109375 * a);
            d.bezierCurveTo(140.00567626953125 * a, 70.44320678710938 * a, 145.00567626953125 * a, 87.44320678710938 * a, 152.00567626953125 * a, 94.44320678710938 * a);
            d.bezierCurveTo(149.00567626953125 * a, 99.44320678710938 * a, 147.00567626953125 * a, 98.44320678710938 * a, 141.00567626953125 * a, 101.44320678710938 * a);
            d.bezierCurveTo(147.00567626953125 * a, 108.44320678710938 * a, 147.00567626953125 * a, 111.44320678710938 * a, 147.00567626953125 * a, 112.44320678710938 * a);
            d.bezierCurveTo(143.00567626953125 * a, 112.44320678710938 * a, 141.00567626953125 * a, 112.44320678710938 * a, 137.00567626953125 * a, 111.44320678710938 * a);
            d.bezierCurveTo(138.00567626953125 * a, 117.44320678710938 * a, 138.00567626953125 * a, 120.44320678710938 * a, 138.00567626953125 * a, 124.44320678710938 * a);
            d.bezierCurveTo(125.00567626953125 * a, 107.44320678710938 * a, 121.00567626953125 * a, 124.44320678710938 * a, 110.00567626953125 * a, 141.44320678710938 * a);
            d.bezierCurveTo(102.00567626953125 * a, 158.44320678710938 * a, 89.00567626953125 * a, 158.44320678710938 * a, 80.00567626953125 * a, 144.44320678710938 * a);
            d.bezierCurveTo(61.00567626953125 * a, 111.44320678710938 * a, 56.00567626953125 * a, 117.44320678710938 * a, 48.00567626953125 * a, 120.44320678710938 * a);
            d.bezierCurveTo(46.00567626953125 * a, 118.44320678710938 * a, 47.00567626953125 * a, 112.44320678710938 * a, 48.00567626953125 * a, 107.44320678710938 * a);
            d.bezierCurveTo(43.00567626953125 * a, 111.44320678710938 * a, 40.00567626953125 * a, 111.44320678710938 * a, 37.00567626953125 * a, 110.44320678710938 * a);
            d.bezierCurveTo(39.50567626953125 * a, 104.94320678710938 * a, 39.50567626953125 * a, 104.94320678710938 * a, 42.00567626953125 * a, 99.44320678710938 * a);
            d.bezierCurveTo(33.00567626953125 * a, 99.44320678710938 * a, 33.00567626953125 * a, 98.44320678710938 * a, 33.00567626953125 * a, 96.44320678710938 * a);
            d.closePath();
            h(d, void 0, e[2], 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(51.00567626953125 * a, 72.53409576416016 * a);
            d.bezierCurveTo(48.00567626953125 * a, 56.534095764160156 * a, 48.00567626953125 * a, 49.534095764160156 * a, 54.00567626953125 * a, 35.534095764160156 * a);
            d.bezierCurveTo(58.00567626953125 * a, 26.534095764160156 * a, 65.00567626953125 * a, 27.534095764160156 * a, 73.00567626953125 * a, 40.534095764160156 * a);
            d.bezierCurveTo(81.00567626953125 * a, 49.534095764160156 * a, 82.00567626953125 * a, 50.534095764160156 * a, 83.00567626953125 * a, 51.534095764160156 * a);
            h(d, e[1], e[2], 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105.00567626953125 * a, 50.53410339355469 * a);
            d.bezierCurveTo(112.00567626953125 * a, 48.53410339355469 * a, 125.00567626953125 * a, 21.534103393554688 * a, 132.00567626953125 * a, 33.53410339355469 * a);
            d.bezierCurveTo(138.00567626953125 * a, 42.53410339355469 * a, 140.00567626953125 * a, 64.53410339355469 * a, 136.00567626953125 * a, 75.53410339355469 * a);
            h(d, e[1], e[2], 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(57.00567626953125 * a, 68.53410339355469 * a);
            d.bezierCurveTo(63.00567626953125 * a, 69.53410339355469 * a, 69.00567626953125 * a, 66.53410339355469 * a, 73.00567626953125 * a, 60.53410339355469 * a);
            d.bezierCurveTo(66.00567626953125 * a, 47.53410339355469 * a, 61.00567626953125 * a, 42.53410339355469 * a, 58.00567626953125 * a, 49.53410339355469 * a);
            d.bezierCurveTo(56.00567626953125 * a, 59.53410339355469 * a, 56.00567626953125 * a, 64.53410339355469 * a, 57.00567626953125 * a, 67.53410339355469 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115.00567626953125 * a, 59.715911865234375 * a);
            d.bezierCurveTo(119.00567626953125 * a, 48.715911865234375 * a, 126.00567626953125 * a, 41.715911865234375 * a, 129.00567626953125 * a, 48.715911865234375 * a);
            d.bezierCurveTo(131.00567626953125 * a, 56.715911865234375 * a, 133.00567626953125 * a, 71.71591186523438 * a, 127.00567626953125 * a, 68.71591186523438 * a);
            d.bezierCurveTo(120.00567626953125 * a, 67.71591186523438 * a, 114.00567626953125 * a, 59.715911865234375 * a, 116.00567626953125 * a, 58.715911865234375 * a);
            d.closePath();
            h(d, e[3]);
            A(d, 77 * a, 107 * a, 6 * a);
            h(d, e[2]);
            A(d, 110 * a, 107 * a, 6 * a);
            h(d, e[2]);
            A(d, 75 * a, 105 * a, 3 * a);
            h(d, e[4]);
            A(d, 108 * a, 105 * a, 3 * a);
            h(d, e[4]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(88.00567626953125 * a, 141.4431915283203 * a);
            d.bezierCurveTo(93.00567626953125 * a, 137.4431915283203 * a, 96.00567626953125 * a, 138.4431915283203 * a, 100.00567626953125 * a, 141.4431915283203 * a);
            d.bezierCurveTo(103.00567626953125 * a, 143.4431915283203 * a, 101.00567626953125 * a, 149.4431915283203 * a, 95.00567626953125 * a, 148.4431915283203 * a);
            d.bezierCurveTo(85.00567626953125 * a, 148.4431915283203 * a, 86.00567626953125 * a, 145.4431915283203 * a, 88.00567626953125 * a, 142.4431915283203 * a);
            d.closePath();
            h(d, e[1]);
            return w;
        };

        function Jf(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 55 * a;
            e.height = 55 * a;
            d.translate(-65 * a, (-55 * a) + (8 * a));
            d.globalAlpha = 1;
            d.beginPath();
            d.moveTo(95 * a, 60 * a);
            d.bezierCurveTo(107 * a, 62 * a, 110 * a, 73 * a, 107 * a, 79 * a);
            d.bezierCurveTo(104 * a, 85 * a, 85 * a, 93 * a, 81 * a, 88 * a);
            d.bezierCurveTo(74 * a, 80 * a, 85 * a, 60 * a, 95 * a, 60 * a);
            d.closePath();
            h(d, w[0], w[1], 3);
            d.globalAlpha = 1;
            d.beginPath();
            d.moveTo(91 * a, 70 * a);
            d.bezierCurveTo(91 * a, 75 * a, 100 * a, 76 * a, 100 * a, 73 * a);
            d.bezierCurveTo(100 * a, 69 * a, 89 * a, 65 * a, 91 * a, 70 * a);
            d.closePath();
            h(d, w[2], w[3], 3);
            return e;
        };

        function nh(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 238 * a;
            w.height = 230 * a;
            d.translate(-93 * a, -110 * a);
            A(d, 213.5 * a, 256.75 * a, 75 * a);
            h(d, e);
            A(d, 213.5 * a, 175.75 * a, 25 * a);
            h(d, e);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(156.5 * a, 137.75 * a);
            d.bezierCurveTo(170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(217.5 * a, 178.75 * a);
            d.bezierCurveTo(251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130.5 * a, 124.75 * a);
            d.bezierCurveTo(153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 183.75 * a);
            d.bezierCurveTo(265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107.5 * a, 213.75 * a);
            d.bezierCurveTo(151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212.5 * a, 187.75 * a);
            d.bezierCurveTo(258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(102.5 * a, 258.75 * a);
            d.bezierCurveTo(142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 192.75 * a);
            d.bezierCurveTo(276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(219.5 * a, 158.75 * a);
            d.bezierCurveTo(226.5 * a, 159.75 * a, 227.5 * a, 147.75 * a, 219.5 * a, 145.75 * a);
            d.closePath();
            d.lineWidth = 10 * a;
            d.strokeStyle = e;
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(210.5 * a, 160.75 * a);
            d.bezierCurveTo(203.5 * a, 159.75 * a, 199.5 * a, 146.75 * a, 210.5 * a, 145.75 * a);
            d.closePath();
            d.lineWidth = 10 * a;
            d.strokeStyle = e;
            d.stroke();
            return w;
        };

        function Kf(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 238 * a;
            w.height = 230 * a;
            d.translate(-93 * a, (-110 * a) + (5 * a));
            d.globalAlpha = 0.3;
            A(d, 213.5 * a, 256.75 * a, 75 * a);
            h(d, e[5]);
            A(d, 213.5 * a, 175.75 * a, 25 * a);
            h(d, e[5]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(156.5 * a, 137.75 * a);
            d.bezierCurveTo(170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(217.5 * a, 178.75 * a);
            d.bezierCurveTo(251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130.5 * a, 124.75 * a);
            d.bezierCurveTo(153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 183.75 * a);
            d.bezierCurveTo(265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107.5 * a, 213.75 * a);
            d.bezierCurveTo(151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212.5 * a, 187.75 * a);
            d.bezierCurveTo(258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(102.5 * a, 258.75 * a);
            d.bezierCurveTo(142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 192.75 * a);
            d.bezierCurveTo(276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[5];
            d.stroke();
            d.translate(0, -5);
            d.globalAlpha = 1;
            A(d, 213.5 * a, 256.75 * a, 75 * a);
            h(d, e[3]);
            A(d, 213.5 * a, 175.75 * a, 25 * a);
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(219.5 * a, 158.75 * a);
            d.bezierCurveTo(226.5 * a, 159.75 * a, 227.5 * a, 147.75 * a, 219.5 * a, 145.75 * a);
            d.closePath();
            d.lineWidth = 10 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(210.5 * a, 160.75 * a);
            d.bezierCurveTo(203.5 * a, 159.75 * a, 199.5 * a, 146.75 * a, 210.5 * a, 145.75 * a);
            d.closePath();
            d.lineWidth = 10 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(219.5 * a, 158.75 * a);
            d.bezierCurveTo(226.5 * a, 159.75 * a, 227.5 * a, 147.75 * a, 219.5 * a, 145.75 * a);
            d.closePath();
            d.fillStyle = e[0];
            d.fill();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(210.5 * a, 160.75 * a);
            d.bezierCurveTo(203.5 * a, 159.75 * a, 199.5 * a, 146.75 * a, 210.5 * a, 145.75 * a);
            d.closePath();
            d.fillStyle = e[0];
            d.fill();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(156.5 * a, 137.75 * a);
            d.bezierCurveTo(170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(217.5 * a, 178.75 * a);
            d.bezierCurveTo(251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130.5 * a, 124.75 * a);
            d.bezierCurveTo(153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 183.75 * a);
            d.bezierCurveTo(265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107.5 * a, 213.75 * a);
            d.bezierCurveTo(151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212.5 * a, 187.75 * a);
            d.bezierCurveTo(258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(102.5 * a, 258.75 * a);
            d.bezierCurveTo(142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 192.75 * a);
            d.bezierCurveTo(276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a);
            d.lineWidth = 17 * a;
            d.strokeStyle = e[3];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(156.5 * a, 137.75 * a);
            d.bezierCurveTo(170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(217.5 * a, 178.75 * a);
            d.bezierCurveTo(251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130.5 * a, 124.75 * a);
            d.bezierCurveTo(153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 183.75 * a);
            d.bezierCurveTo(265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107.5 * a, 213.75 * a);
            d.bezierCurveTo(151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212.5 * a, 187.75 * a);
            d.bezierCurveTo(258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(102.5 * a, 258.75 * a);
            d.bezierCurveTo(142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 192.75 * a);
            d.bezierCurveTo(276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a);
            d.lineWidth = 8 * a;
            d.strokeStyle = e[0];
            d.stroke();
            A(d, 213.5 * a, 256.75 * a, 70 * a);
            h(d, e[0]);
            A(d, 213.5 * a, 175.75 * a, 20 * a);
            h(d, e[0]);
            A(d, 222 * a, 166 * a, 5 * a);
            d.fillStyle = e[2];
            d.fill();
            A(d, 205 * a, 166 * a, 5 * a);
            d.fillStyle = e[2];
            d.fill();
            A(d, 206.2 * a, 167 * a, 2.5 * a);
            d.fillStyle = e[4];
            d.fill();
            A(d, 223.2 * a, 167 * a, 2.5 * a);
            d.fillStyle = e[4];
            d.fill();
            d.save();
            d.translate(213.5 * a, 293.75 * a);
            d.rotate(0.76);
            B(d, -22 * a, -21 * a, 44 * a, 42 * a, 6 * a);
            d.restore();
            d.fillStyle = e[1];
            d.fill();
            d.save();
            d.translate(212.5 * a, 258.25 * a);
            d.rotate(0.8);
            B(d, -15 * a, -14.5 * a, 30 * a, 29 * a, 6 * a);
            d.restore();
            d.fillStyle = e[1];
            d.fill();
            return w;
        };

        function oh(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 450 * a;
            w.height = 470 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(226.5 * a, 91.546875 * a);
            d.bezierCurveTo(254.5 * a, 115.546875 * a, 261.5 * a, 115.546875 * a, 294.5 * a, 109.546875 * a);
            d.bezierCurveTo(299.5 * a, 141.546875 * a, 315.5 * a, 151.546875 * a, 344.5 * a, 158.546875 * a);
            d.bezierCurveTo(330.5 * a, 195.546875 * a, 341.5 * a, 207.546875 * a, 361.5 * a, 226.546875 * a);
            d.bezierCurveTo(331.5 * a, 251.546875 * a, 335.5 * a, 270.546875 * a, 342.5 * a, 295.546875 * a);
            d.bezierCurveTo(300.5 * a, 296.546875 * a, 293.5 * a, 325.546875 * a, 292.5 * a, 344.546875 * a);
            d.bezierCurveTo(257.5 * a, 326.546875 * a, 242.5 * a, 338.546875 * a, 224.5 * a, 361.546875 * a);
            d.bezierCurveTo(200.5 * a, 329.546875 * a, 180.5 * a, 334.546875 * a, 155.5 * a, 341.546875 * a);
            d.bezierCurveTo(146.5 * a, 307.546875 * a, 140.5 * a, 302.546875 * a, 107.5 * a, 292.546875 * a);
            d.bezierCurveTo(117.5 * a, 253.546875 * a, 109.5 * a, 244.546875 * a, 89.5 * a, 224.546875 * a);
            d.bezierCurveTo(118.5 * a, 191.546875 * a, 114.5 * a, 182.546875 * a, 108.5 * a, 156.546875 * a);
            d.bezierCurveTo(143.5 * a, 149.546875 * a, 150.5 * a, 136.546875 * a, 157.5 * a, 106.546875 * a);
            d.bezierCurveTo(202.5 * a, 120.546875 * a, 211.5 * a, 103.546875 * a, 228.5 * a, 91.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(224.5 * a, 129.546875 * a);
            d.bezierCurveTo(247.5 * a, 147.546875 * a, 252.5 * a, 143.546875 * a, 274.5 * a, 141.546875 * a);
            d.bezierCurveTo(279.5 * a, 163.546875 * a, 289.5 * a, 168.546875 * a, 311.5 * a, 178.546875 * a);
            d.bezierCurveTo(301.5 * a, 199.546875 * a, 307.5 * a, 213.546875 * a, 323.5 * a, 226.546875 * a);
            d.bezierCurveTo(303.5 * a, 240.546875 * a, 303.5 * a, 255.546875 * a, 312.5 * a, 275.546875 * a);
            d.bezierCurveTo(281.5 * a, 278.546875 * a, 276.5 * a, 291.546875 * a, 272.5 * a, 313.546875 * a);
            d.bezierCurveTo(248.5 * a, 301.546875 * a, 239.5 * a, 310.546875 * a, 224.5 * a, 324.546875 * a);
            d.bezierCurveTo(211.5 * a, 304.546875 * a, 199.5 * a, 301.546875 * a, 176.5 * a, 309.546875 * a);
            d.bezierCurveTo(165.5 * a, 276.546875 * a, 159.5 * a, 275.546875 * a, 138.5 * a, 274.546875 * a);
            d.bezierCurveTo(148.5 * a, 248.546875 * a, 140.5 * a, 237.546875 * a, 125.5 * a, 225.546875 * a);
            d.bezierCurveTo(145.5 * a, 205.546875 * a, 146.5 * a, 195.546875 * a, 142.5 * a, 176.546875 * a);
            d.bezierCurveTo(173.5 * a, 164.546875 * a, 173.5 * a, 155.546875 * a, 178.5 * a, 140.546875 * a);
            d.bezierCurveTo(214.5 * a, 143.546875 * a, 214.5 * a, 135.546875 * a, 226.5 * a, 129.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(224.5 * a, 160.546875 * a);
            d.bezierCurveTo(236.5 * a, 168.546875 * a, 239.5 * a, 168.546875 * a, 258.5 * a, 168.546875 * a);
            d.bezierCurveTo(261.5 * a, 185.546875 * a, 268.5 * a, 187.546875 * a, 282.5 * a, 192.546875 * a);
            d.bezierCurveTo(277.5 * a, 208.546875 * a, 283.5 * a, 216.546875 * a, 289.5 * a, 228.546875 * a);
            d.bezierCurveTo(277.5 * a, 243.546875 * a, 280.5 * a, 253.546875 * a, 281.5 * a, 260.546875 * a);
            d.bezierCurveTo(264.5 * a, 260.546875 * a, 259.5 * a, 269.546875 * a, 256.5 * a, 283.546875 * a);
            d.bezierCurveTo(244.5 * a, 276.546875 * a, 232.5 * a, 283.546875 * a, 223.5 * a, 291.546875 * a);
            d.bezierCurveTo(213.5 * a, 276.546875 * a, 205.5 * a, 278.546875 * a, 190.5 * a, 281.546875 * a);
            d.bezierCurveTo(181.5 * a, 262.546875 * a, 173.5 * a, 259.546875 * a, 165.5 * a, 258.546875 * a);
            d.bezierCurveTo(169.5 * a, 239.546875 * a, 167.5 * a, 233.546875 * a, 157.5 * a, 225.546875 * a);
            d.bezierCurveTo(169.5 * a, 208.546875 * a, 170.5 * a, 203.546875 * a, 168.5 * a, 192.546875 * a);
            d.bezierCurveTo(181.5 * a, 187.546875 * a, 188.5 * a, 179.546875 * a, 192.5 * a, 168.546875 * a);
            d.bezierCurveTo(216.5 * a, 170.546875 * a, 218.5 * a, 163.546875 * a, 225.5 * a, 160.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(205.5 * a, 194.546875 * a);
            d.bezierCurveTo(216.5 * a, 192.546875 * a, 219.5 * a, 191.546875 * a, 225.5 * a, 185.546875 * a);
            d.bezierCurveTo(232.5 * a, 193.546875 * a, 237.5 * a, 191.546875 * a, 246.5 * a, 192.546875 * a);
            d.bezierCurveTo(249.5 * a, 202.546875 * a, 253.5 * a, 205.546875 * a, 258.5 * a, 207.546875 * a);
            d.bezierCurveTo(259.5 * a, 222.546875 * a, 256.5 * a, 223.546875 * a, 265.5 * a, 226.546875 * a);
            d.bezierCurveTo(256.5 * a, 231.546875 * a, 255.5 * a, 241.546875 * a, 259.5 * a, 248.546875 * a);
            d.bezierCurveTo(250.5 * a, 245.546875 * a, 245.5 * a, 252.546875 * a, 243.5 * a, 260.546875 * a);
            d.bezierCurveTo(234.5 * a, 256.546875 * a, 229.5 * a, 258.546875 * a, 223.5 * a, 265.546875 * a);
            d.bezierCurveTo(218.5 * a, 255.546875 * a, 213.5 * a, 257.546875 * a, 204.5 * a, 261.546875 * a);
            d.bezierCurveTo(203.5 * a, 251.546875 * a, 198.5 * a, 248.546875 * a, 189.5 * a, 244.546875 * a);
            d.bezierCurveTo(194.5 * a, 237.546875 * a, 192.5 * a, 231.546875 * a, 184.5 * a, 225.546875 * a);
            d.bezierCurveTo(191.5 * a, 211.546875 * a, 192.5 * a, 209.546875 * a, 190.5 * a, 204.546875 * a);
            d.bezierCurveTo(200.5 * a, 204.546875 * a, 204.5 * a, 198.546875 * a, 207.5 * a, 194.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(149.5 * a, 93.546875 * a);
            d.bezierCurveTo(287.5 * a, 332.546875 * a, 226 * a, 225.546875 * a, 302.5 * a, 357.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(224.5 * a, 66.546875 * a);
            d.bezierCurveTo(224.5 * a, 223.546875 * a, 224.5 * a, 223.546875 * a, 224.5 * a, 380.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(302.5 * a, 88.546875 * a);
            d.bezierCurveTo(222.5 * a, 227.546875 * a, 222.5 * a, 227.546875 * a, 142.5 * a, 366.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(361.5 * a, 147.546875 * a);
            d.bezierCurveTo(223 * a, 226.546875 * a, 223 * a, 226.546875 * a, 84.5 * a, 305.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(379.5 * a, 225.546875 * a);
            d.bezierCurveTo(221 * a, 225.546875 * a, 221 * a, 225.546875 * a, 62.5 * a, 225.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(90.5 * a, 147.546875 * a);
            d.bezierCurveTo(226.5 * a, 226.546875 * a, 226.5 * a, 226.546875 * a, 362.5 * a, 305.546875 * a);
            d.closePath();
            h(d, void 0, e[0], 4);
            return w;
        };

        function Lf(a, e, w) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 400 * a;
            d.height = 400 * a;
            c.save();
            c.translate(202.5 * a, 147.5 * a);
            B(c, -96.5 * a, -21.5 * a, 193 * a, 193 * a, 0 * a);
            c.restore();
            h(c, e[0], e[1], 12 * a);
            c.save();
            c.translate(202.5 * a, 190.5 * a);
            B(c, 96.5 * a, -21.5 * a, -193 * a, 43 * a, 0 * a);
            c.restore();
            h(c, e[2], e[1], 12 * a);
            c.save();
            c.save();
            c.translate(202.5 * a, 233.5 * a);
            B(c, -96.5 * a, -20.5 * a, 193 * a, 41 * a, 0 * a);
            c.restore();
            h(c, e[3], e[1], 12 * a);
            c.save();
            c.translate(202.5 * a, 275 * a);
            B(c, 96.5 * a, -21 * a, -193 * a, 42 * a, 0 * a);
            c.restore();
            h(c, e[0], e[1], 12 * a);
            c.save();
            c.translate(201 * a, 212 * a);
            c.rotate(8.64);
            B(c, -116 * a, -22 * a, 232 * a, 44 * a, 10 * a);
            c.restore();
            h(c, e[3], e[1], 12 * a);
            c.save();
            c.translate(203.5 * a, 121.5 * a);
            B(c, -115.5 * a, -20.5 * a, 231 * a, 41 * a, 10 * a);
            c.restore();
            h(c, e[3], e[1], 12 * a);
            c.save();
            c.translate(203.5 * a, 299 * a);
            B(c, -115.5 * a, -20 * a, 231 * a, 40 * a, 10 * a);
            c.restore();
            h(c, e[3], e[1], 12 * a);
            c.save();
            c.translate(298.5 * a, 210 * a);
            B(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
            c.restore();
            h(c, e[3], e[1], 12 * a);
            c.save();
            c.translate(108.5 * a, 210 * a);
            B(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
            c.restore();
            h(c, e[3], e[1], 12 * a);
            c.save();
            c.translate(204 * a, 121.5 * a);
            B(c, -92 * a, -9.5 * a, 184 * a, 19 * a, 10 * a);
            c.restore();
            h(c, e[3], e[3], 10 * a);
            c.save();
            c.translate(197 * a, 299 * a);
            B(c, 85 * a, -9 * a, -170 * a, 18 * a, 10 * a);
            c.restore();
            h(c, e[3], e[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(94 * a, 317 * a);
            c.bezierCurveTo(110.5 * a, 299.5 * a, 110.5 * a, 299.5 * a, 127 * a, 282 * a);
            c.closePath();
            h(c, void 0, e[1], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(279 * a, 142 * a);
            c.bezierCurveTo(296.5 * a, 125.5 * a, 296.5 * a, 125.5 * a, 314 * a, 109 * a);
            c.closePath();
            h(c, void 0, e[1], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(93 * a, 106 * a);
            c.bezierCurveTo(110.5 * a, 124 * a, 110.5 * a, 124 * a, 128 * a, 142 * a);
            c.closePath();
            h(c, void 0, e[1], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(281 * a, 282 * a);
            c.bezierCurveTo(296 * a, 297.5 * a, 296 * a, 297.5 * a, 311 * a, 313 * a);
            c.closePath();
            h(c, void 0, e[1], 12 * a);
            (0 == w) ? (c.scale(2, 2), c.translate(-7 * a, 55 * a), c.rotate(-0.5), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(60 * a, 47 * a), c.bezierCurveTo(81 * a, 46 * a, 85 * a, 47 * a, 83 * a, 63 * a), c.bezierCurveTo(83 * a, 72 * a, 83 * a, 75 * a, 72 * a, 73 * a), c.bezierCurveTo(68 * a, 80 * a, 69 * a, 82 * a, 66 * a, 73 * a), c.bezierCurveTo(62 * a, 81 * a, 61 * a, 82 * a, 59 * a, 73 * a), c.bezierCurveTo(54 * a, 81 * a, 55 * a, 81 * a, 52 * a, 74 * a), c.bezierCurveTo(38 * a, 76 * a, 41 * a, 74 * a, 40 * a, 66 * a), c.bezierCurveTo(38 * a, 45 * a, 39 * a, 49 * a, 59 * a, 47 * a), c.closePath(), h(c, e[4], e[4], 5 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(68 * a, 54 * a), c.bezierCurveTo(75 * a, 54 * a, 77 * a, 62 * a, 71 * a, 64 * a), c.bezierCurveTo(62 * a, 65 * a, 63 * a, 54 * a, 68 * a, 54 * a), c.closePath(), h(c, e[3]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(50 * a, 55 * a), c.bezierCurveTo(57 * a, 55 * a, 58 * a, 65 * a, 52 * a, 65 * a), c.bezierCurveTo(44 * a, 66 * a, 44 * a, 54 * a, 50 * a, 55 * a), c.closePath(), h(c, e[3])) : ((1 == w) && (c.scale(0.6, 0.6), c.translate(185 * a, 165 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(108 * a, 56 * a), c.bezierCurveTo(136 * a, 58 * a, 203 * a, 69 * a, 234 * a, 75 * a), c.bezierCurveTo(246 * a, 77 * a, 247 * a, 78 * a, 245 * a, 90 * a), c.bezierCurveTo(238 * a, 143 * a, 228 * a, 197 * a, 214 * a, 259 * a), c.bezierCurveTo(212 * a, 267 * a, 209 * a, 270 * a, 189 * a, 268 * a), c.bezierCurveTo(142 * a, 264 * a, 106 * a, 260 * a, 75 * a, 253 * a), c.bezierCurveTo(60 * a, 250 * a, 64 * a, 250 * a, 66 * a, 221 * a), c.bezierCurveTo(71 * a, 168 * a, 87 * a, 95 * a, 98 * a, 67 * a), c.bezierCurveTo(101 * a, 57 * a, 103 * a, 56 * a, 106 * a, 56 * a), c.closePath(), h(c, e[4], e[4], 20 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(112 * a, 72 * a), c.bezierCurveTo(132 * a, 73 * a, 227 * a, 85 * a, 226 * a, 91 * a), c.bezierCurveTo(231 * a, 89 * a, 217 * a, 196 * a, 200 * a, 250 * a), c.bezierCurveTo(196 * a, 254 * a, 175 * a, 249 * a, 166 * a, 249 * a), c.bezierCurveTo(91 * a, 241 * a, 82 * a, 236 * a, 83 * a, 232 * a), c.bezierCurveTo(90 * a, 144 * a, 108 * a, 71 * a, 111 * a, 72 * a), c.closePath(), h(c, void 0, e[0], 13 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(132 * a, 117 * a), c.bezierCurveTo(171 * a, 86 * a, 191 * a, 101 * a, 188 * a, 134 * a), c.bezierCurveTo(185 * a, 154 * a, 170 * a, 158 * a, 153 * a, 158 * a), c.bezierCurveTo(143 * a, 172 * a, 146 * a, 180 * a, 147 * a, 193 * a), h(c, void 0, e[0], 20 * a), A(c, 142 * a, 221 * a, 16.1245154965971 * a), h(c, e[0])));
            return d;
        };

        function ph(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 400 * a;
            w.height = 400 * a;
            d.save();
            d.translate(202.5 * a, 147.5 * a);
            B(d, -96.5 * a, -21.5 * a, 193 * a, 43 * a, 0 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            d.save();
            d.translate(202.5 * a, 190.5 * a);
            B(d, 96.5 * a, -21.5 * a, -193 * a, 43 * a, 0 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            d.save();
            d.translate(202.5 * a, 233.5 * a);
            B(d, -96.5 * a, -20.5 * a, 193 * a, 41 * a, 0 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            d.save();
            d.translate(202.5 * a, 275 * a);
            B(d, 96.5 * a, -21 * a, -193 * a, 42 * a, 0 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            d.save();
            d.translate(203.5 * a, 121.5 * a);
            B(d, -115.5 * a, -20.5 * a, 231 * a, 41 * a, 10 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            d.save();
            d.translate(203.5 * a, 299 * a);
            B(d, -115.5 * a, -20 * a, 231 * a, 40 * a, 10 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            d.save();
            d.translate(298.5 * a, 210 * a);
            B(d, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            d.save();
            d.translate(108.5 * a, 210 * a);
            B(d, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
            d.restore();
            h(d, e[0], e[0], 12 * a);
            return w;
        };

        function qh(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 650 * a;
            w.height = 650 * a;
            d.scale(1.9, 1.9);
            d.save();
            d.translate(202.5 * a, 147.5 * a);
            B(d, -96.5 * a, -21.5 * a, 193 * a, 193 * a, 0 * a);
            d.restore();
            h(d, e[4], e[1], 12 * a);
            d.save();
            d.translate(203.5 * a, 121.5 * a);
            B(d, -115.5 * a, -20.5 * a, 231 * a, 41 * a, 10 * a);
            d.restore();
            h(d, e[3], e[1], 12 * a);
            d.save();
            d.translate(203.5 * a, 299 * a);
            B(d, -115.5 * a, -20 * a, 231 * a, 40 * a, 10 * a);
            d.restore();
            h(d, e[3], e[1], 12 * a);
            d.save();
            d.translate(298.5 * a, 210 * a);
            B(d, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
            d.restore();
            h(d, e[3], e[1], 12 * a);
            d.save();
            d.translate(108.5 * a, 210 * a);
            B(d, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
            d.restore();
            h(d, e[3], e[1], 12 * a);
            d.save();
            d.translate(204 * a, 121.5 * a);
            B(d, -92 * a, -9.5 * a, 184 * a, 19 * a, 10 * a);
            d.restore();
            h(d, e[3], e[3], 10 * a);
            d.save();
            d.translate(197 * a, 299 * a);
            B(d, 85 * a, -9 * a, -170 * a, 18 * a, 10 * a);
            d.restore();
            h(d, e[3], e[3], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(94 * a, 317 * a);
            d.bezierCurveTo(110.5 * a, 299.5 * a, 110.5 * a, 299.5 * a, 127 * a, 282 * a);
            d.closePath();
            h(d, void 0, e[1], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(279 * a, 142 * a);
            d.bezierCurveTo(296.5 * a, 125.5 * a, 296.5 * a, 125.5 * a, 314 * a, 109 * a);
            d.closePath();
            h(d, void 0, e[1], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(93 * a, 106 * a);
            d.bezierCurveTo(110.5 * a, 124 * a, 110.5 * a, 124 * a, 128 * a, 142 * a);
            d.closePath();
            h(d, void 0, e[1], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(281 * a, 282 * a);
            d.bezierCurveTo(296 * a, 297.5 * a, 296 * a, 297.5 * a, 311 * a, 313 * a);
            d.closePath();
            h(d, void 0, e[1], 12 * a);
            return w;
        };

        function rh(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 400 * a;
            e.height = 400 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(101 * a, 255 * a);
            d.bezierCurveTo(113 * a, 243 * a, 179 * a, 210 * a, 219 * a, 196 * a);
            d.bezierCurveTo(252 * a, 203 * a, 288 * a, 215 * a, 318 * a, 233 * a);
            d.bezierCurveTo(304 * a, 254 * a, 258 * a, 273 * a, 215 * a, 296 * a);
            d.bezierCurveTo(161 * a, 287 * a, 119 * a, 270 * a, 102 * a, 257 * a);
            d.closePath();
            h(d, w[0], w[1], 14 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(99 * a, 258 * a);
            d.bezierCurveTo(99 * a, 272.5 * a, 99 * a, 272.5 * a, 99 * a, 287 * a);
            d.bezierCurveTo(166 * a, 319 * a, 193 * a, 320 * a, 212 * a, 324 * a);
            d.bezierCurveTo(292 * a, 286 * a, 312 * a, 271 * a, 319 * a, 263 * a);
            d.bezierCurveTo(320 * a, 249 * a, 320 * a, 241 * a, 318 * a, 234 * a);
            d.bezierCurveTo(300 * a, 254 * a, 254 * a, 277 * a, 216 * a, 294 * a);
            d.bezierCurveTo(190 * a, 296 * a, 135 * a, 276 * a, 102 * a, 258 * a);
            d.closePath();
            h(d, w[2], w[1], 14 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212 * a, 323 * a);
            d.bezierCurveTo(211.5 * a, 310.5 * a, 211.5 * a, 310.5 * a, 211 * a, 298 * a);
            d.closePath();
            h(d, void 0, w[1], 14 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212 * a, 210 * a);
            d.bezierCurveTo(286 * a, 210 * a, 331 * a, 254 * a, 212 * a, 276 * a);
            d.bezierCurveTo(108 * a, 276 * a, 112 * a, 222 * a, 213 * a, 208 * a);
            d.closePath();
            h(d, w[3], w[4], 14 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(98 * a, 200 * a);
            d.bezierCurveTo(126 * a, 216 * a, 177 * a, 232 * a, 213 * a, 237 * a);
            d.bezierCurveTo(266 * a, 218 * a, 288 * a, 209 * a, 318 * a, 190 * a);
            d.bezierCurveTo(269 * a, 164 * a, 239 * a, 158 * a, 214 * a, 153 * a);
            d.bezierCurveTo(148 * a, 172 * a, 131 * a, 182 * a, 98 * a, 200 * a);
            d.closePath();
            h(d, w[0], w[1], 14 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(97 * a, 204 * a);
            d.bezierCurveTo(97 * a, 215.5 * a, 97 * a, 215.5 * a, 97 * a, 227 * a);
            d.bezierCurveTo(148 * a, 250 * a, 179 * a, 256 * a, 212 * a, 262 * a);
            d.bezierCurveTo(268 * a, 244 * a, 281 * a, 233 * a, 318 * a, 214 * a);
            d.bezierCurveTo(318 * a, 203 * a, 318 * a, 203 * a, 318 * a, 192 * a);
            d.bezierCurveTo(250 * a, 225 * a, 236 * a, 231 * a, 214 * a, 239 * a);
            d.bezierCurveTo(158 * a, 228 * a, 126 * a, 215 * a, 99 * a, 201 * a);
            d.closePath();
            h(d, w[2], w[1], 14 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212 * a, 260 * a);
            d.bezierCurveTo(212 * a, 251.5 * a, 212 * a, 251.5 * a, 212 * a, 243 * a);
            d.closePath();
            h(d, void 0, w[1], 14 * a);
            A(d, 161 * a, 201 * a, 13 * a);
            h(d, w[5]);
            A(d, 216 * a, 205 * a, 8.06225774829855 * a);
            h(d, w[5]);
            A(d, 216 * a, 175 * a, 6.708203932499369 * a);
            h(d, w[5]);
            A(d, 271 * a, 191 * a, 5.0990195135927845 * a);
            h(d, w[5]);
            A(d, 206 * a, 180 * a, 11.180339887498949 * a);
            h(d, w[5]);
            return e;
        };

        function sh(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 400 * a;
            e.height = 400 * a;
            d.save();
            d.translate(85 * a, 237 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 54.585977194239184 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(178 * a, 238 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 52.53573932334064 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(270 * a, 239 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 53.58058329516393 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(222 * a, 312 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 52.53573932334064 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(317 * a, 159 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 57.63465889766331 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(223.5 * a, 139.0625 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 51.66236541235796 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(132.5 * a, 137.0625 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 52.009614495783374 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(178.5 * a, 58.0625 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 53.16013544000805 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(177.5 * a, 216.0625 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 50 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(84.5 * a, 215.0625 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 54 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(319.5 * a, 138.0625 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 55.08175741568164 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(269.5 * a, 216.0625 * a);
            d.rotate(1.5707963267948966);
            P(d, 6, 54.589376255824725 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.save();
            d.translate(221.5 * a, 293.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 49.49747468305833 * a, 1 * a);
            d.restore();
            h(d, w[1], w[2], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(221.5 * a, 342.0625 * a);
            d.bezierCurveTo(221.5 * a, 350.5625 * a, 221.5 * a, 350.5625 * a, 221.5 * a, 359.0625 * a);
            d.closePath();
            h(d, void 0, w[2], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(84.5 * a, 270.0625 * a);
            d.bezierCurveTo(84.5 * a, 277.0625 * a, 84.5 * a, 277.0625 * a, 84.5 * a, 284.0625 * a);
            d.closePath();
            h(d, void 0, w[2], 12 * a);
            d.save();
            d.translate(84.5 * a, 215.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            d.save();
            d.translate(177.5 * a, 215.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            d.save();
            d.translate(222.5 * a, 294.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            d.save();
            d.translate(270.5 * a, 216.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            d.save();
            d.translate(320.5 * a, 134.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            d.save();
            d.translate(224.5 * a, 138.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            d.save();
            d.translate(133.5 * a, 137.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            d.save();
            d.translate(178.5 * a, 56.0625 * a);
            d.rotate(0.5235987755982988);
            P(d, 6, 30 * a, 15 * a);
            d.restore();
            h(d, w[3]);
            return e;
        };

        function rc(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 52 * a;
            e.height = 65 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(9.833328247070312 * a, 12.078125 * a);
            d.bezierCurveTo(15.333328247070312 * a, 28.078125 * a, 15.333328247070312 * a, 28.078125 * a, 20.833328247070312 * a, 44.078125 * a);
            d.closePath();
            h(d, void 0, w[1], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(7.8333282470703125 * a, 20.078125 * a);
            d.bezierCurveTo(16.833328247070312 * a, 32.578125 * a, 16.833328247070312 * a, 32.578125 * a, 25.833328247070312 * a, 45.078125 * a);
            d.closePath();
            h(d, void 0, w[1], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(23.833328247070312 * a, 26.078125 * a);
            d.bezierCurveTo(25.833328247070312 * a, 11.078125 * a, 16.833328247070312 * a, 8.078125 * a, 14.833328247070312 * a, 7.078125 * a);
            d.bezierCurveTo(11.833328247070312 * a, 17.078125 * a, 13.833328247070312 * a, 22.078125 * a, 23.833328247070312 * a, 27.078125 * a);
            d.closePath();
            h(d, w[0], w[1], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(35.83332824707031 * a, 8.078125 * a);
            d.bezierCurveTo(34.83332824707031 * a, 27.078125 * a, 28.833328247070312 * a, 27.078125 * a, 23.833328247070312 * a, 28.078125 * a);
            d.bezierCurveTo(21.833328247070312 * a, 14.078125 * a, 26.833328247070312 * a, 11.078125 * a, 35.83332824707031 * a, 8.078125 * a);
            d.closePath();
            h(d, w[0], w[1], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(25.833328247070312 * a, 39.078125 * a);
            d.bezierCurveTo(20.833328247070312 * a, 29.078125 * a, 14.833328247070312 * a, 27.078125 * a, 5.8333282470703125 * a, 29.078125 * a);
            d.bezierCurveTo(9.833328247070312 * a, 39.078125 * a, 16.833328247070312 * a, 42.078125 * a, 25.833328247070312 * a, 40.078125 * a);
            d.closePath();
            h(d, w[0], w[1], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.83332824707031 * a, 23.078125 * a);
            d.bezierCurveTo(35.83332824707031 * a, 35.078125 * a, 31.833328247070312 * a, 37.078125 * a, 25.833328247070312 * a, 36.078125 * a);
            d.bezierCurveTo(25.833328247070312 * a, 24.078125 * a, 33.83332824707031 * a, 21.078125 * a, 42.83332824707031 * a, 23.078125 * a);
            d.closePath();
            h(d, w[0], w[1], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(23.833328247070312 * a, 24.078125 * a);
            d.bezierCurveTo(20.833328247070312 * a, 34.078125 * a, 23.833328247070312 * a, 40.078125 * a, 27.833328247070312 * a, 43.078125 * a);
            d.bezierCurveTo(37.33332824707031 * a, 28.078125 * a, 37.33332824707031 * a, 28.078125 * a, 46.83332824707031 * a, 13.078125 * a);
            h(d, void 0, w[1], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(38.83332824707031 * a, 14.078125 * a);
            d.bezierCurveTo(34.83332824707031 * a, 24.078125 * a, 34.83332824707031 * a, 24.078125 * a, 30.833328247070312 * a, 34.078125 * a);
            h(d, void 0, w[1], 2 * a);
            return e;
        };

        function Yd(a, e, w) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 173 * a;
            c.translate(5 * a, 5 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(86.25 * a, 84.953125 * a);
            c.rotate(0.32);
            P(c, 7, 42.15447781671598 * a, 10 * a);
            c.restore();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(86.25 * a, 84.953125 * a);
            c.rotate(0.32);
            P(c, 7, 42.15447781671598 * a, 10 * a);
            c.restore();
            h(c, w[1], w[2], 4 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(86.25 * a, 84.953125 * a);
            c.rotate(0.28);
            P(c, 7, 30.463092423455635 * a, 10 * a);
            c.restore();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(86.25 * a, 84.953125 * a);
            c.rotate(0.28);
            P(c, 7, 30.463092423455635 * a, 10 * a);
            c.restore();
            h(c, w[3], w[4], 4 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            A(c, 86.25 * a, 84.953125 * a, 18.867962264113206 * a);
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            A(c, 86.25 * a, 84.953125 * a, 18.867962264113206 * a);
            h(c, w[5], w[6], 4 * a);
            return d;
        };

        function Zd(a, e, w) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 173 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(85.25 * a, 82.953125 * a);
            c.bezierCurveTo(98.25 * a, 46.453125 * a, 98.25 * a, 46.453125 * a, 111.25 * a, 9.953125 * a);
            c.closePath();
            h(c, void 0, w[0], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(111.25 * a, 8.953125 * a);
            c.bezierCurveTo(117.75 * a, 12.453125 * a, 117.75 * a, 12.453125 * a, 124.25 * a, 15.953125 * a);
            c.bezierCurveTo(113.75 * a, 39.953125 * a, 113.75 * a, 39.953125 * a, 103.25 * a, 63.953125 * a);
            c.bezierCurveTo(97.75 * a, 64.953125 * a, 97.75 * a, 64.953125 * a, 92.25 * a, 65.953125 * a);
            c.closePath();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(111.25 * a, 8.953125 * a);
            c.bezierCurveTo(117.75 * a, 12.453125 * a, 117.75 * a, 12.453125 * a, 124.25 * a, 15.953125 * a);
            c.bezierCurveTo(113.75 * a, 39.953125 * a, 113.75 * a, 39.953125 * a, 103.25 * a, 63.953125 * a);
            c.bezierCurveTo(97.75 * a, 64.953125 * a, 97.75 * a, 64.953125 * a, 92.25 * a, 65.953125 * a);
            c.closePath();
            h(c, w[7]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(85.25 * a, 82.953125 * a);
            c.bezierCurveTo(98.25 * a, 46.453125 * a, 98.25 * a, 46.453125 * a, 111.25 * a, 9.953125 * a);
            c.closePath();
            h(c, void 0, w[6], 4 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(87.25 * a, 84.953125 * a);
            c.bezierCurveTo(123.75 * a, 100.453125 * a, 123.75 * a, 100.453125 * a, 160.25 * a, 115.953125 * a);
            c.closePath();
            h(c, void 0, w[0], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(160.25 * a, 114.953125 * a);
            c.bezierCurveTo(156.25 * a, 122.453125 * a, 156.25 * a, 122.453125 * a, 152.25 * a, 129.953125 * a);
            c.bezierCurveTo(130.25 * a, 117.953125 * a, 130.25 * a, 117.953125 * a, 108.25 * a, 105.953125 * a);
            c.bezierCurveTo(107.25 * a, 98.953125 * a, 107.25 * a, 98.953125 * a, 106.25 * a, 91.953125 * a);
            c.closePath();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(160.25 * a, 114.953125 * a);
            c.bezierCurveTo(156.25 * a, 122.453125 * a, 156.25 * a, 122.453125 * a, 152.25 * a, 129.953125 * a);
            c.bezierCurveTo(130.25 * a, 117.953125 * a, 130.25 * a, 117.953125 * a, 108.25 * a, 105.953125 * a);
            c.bezierCurveTo(107.25 * a, 98.953125 * a, 107.25 * a, 98.953125 * a, 106.25 * a, 91.953125 * a);
            c.closePath();
            h(c, w[7]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(87.25 * a, 84.953125 * a);
            c.bezierCurveTo(123.75 * a, 100.453125 * a, 123.75 * a, 100.453125 * a, 160.25 * a, 115.953125 * a);
            c.closePath();
            h(c, void 0, w[6], 4 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(83.25 * a, 83.953125 * a);
            c.bezierCurveTo(47.75 * a, 68.453125 * a, 47.75 * a, 68.453125 * a, 12.25 * a, 52.953125 * a);
            c.closePath();
            h(c, void 0, w[0], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(13.25 * a, 53.953125 * a);
            c.bezierCurveTo(17.25 * a, 46.953125 * a, 17.25 * a, 46.953125 * a, 21.25 * a, 39.953125 * a);
            c.bezierCurveTo(42.75 * a, 52.453125 * a, 42.75 * a, 52.453125 * a, 64.25 * a, 64.953125 * a);
            c.bezierCurveTo(64.25 * a, 70.953125 * a, 64.25 * a, 70.953125 * a, 64.25 * a, 76.953125 * a);
            c.closePath();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(13.25 * a, 53.953125 * a);
            c.bezierCurveTo(17.25 * a, 46.953125 * a, 17.25 * a, 46.953125 * a, 21.25 * a, 39.953125 * a);
            c.bezierCurveTo(42.75 * a, 52.453125 * a, 42.75 * a, 52.453125 * a, 64.25 * a, 64.953125 * a);
            c.bezierCurveTo(64.25 * a, 70.953125 * a, 64.25 * a, 70.953125 * a, 64.25 * a, 76.953125 * a);
            c.closePath();
            h(c, w[7]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(83.25 * a, 83.953125 * a);
            c.bezierCurveTo(47.75 * a, 68.453125 * a, 47.75 * a, 68.453125 * a, 12.25 * a, 52.953125 * a);
            c.closePath();
            h(c, void 0, w[6], 4 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(84.25 * a, 86.953125 * a);
            c.bezierCurveTo(70.25 * a, 123.953125 * a, 70.25 * a, 123.953125 * a, 56.25 * a, 160.953125 * a);
            c.closePath();
            h(c, void 0, w[0], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56.25 * a, 159.953125 * a);
            c.bezierCurveTo(49.25 * a, 155.453125 * a, 49.25 * a, 155.453125 * a, 42.25 * a, 150.953125 * a);
            c.bezierCurveTo(54.25 * a, 127.953125 * a, 54.25 * a, 127.953125 * a, 66.25 * a, 104.953125 * a);
            c.bezierCurveTo(71.25 * a, 104.953125 * a, 71.25 * a, 104.953125 * a, 76.25 * a, 104.953125 * a);
            c.closePath();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56.25 * a, 159.953125 * a);
            c.bezierCurveTo(49.25 * a, 155.453125 * a, 49.25 * a, 155.453125 * a, 42.25 * a, 150.953125 * a);
            c.bezierCurveTo(54.25 * a, 127.953125 * a, 54.25 * a, 127.953125 * a, 66.25 * a, 104.953125 * a);
            c.bezierCurveTo(71.25 * a, 104.953125 * a, 71.25 * a, 104.953125 * a, 76.25 * a, 104.953125 * a);
            c.closePath();
            h(c, w[7]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(84.25 * a, 86.953125 * a);
            c.bezierCurveTo(70.25 * a, 123.953125 * a, 70.25 * a, 123.953125 * a, 56.25 * a, 160.953125 * a);
            c.closePath();
            h(c, void 0, w[6], 4 * a);
            return d;
        };

        function $d(a, e, w) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 173 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(86.25 * a, 84.953125 * a);
            P(c, 7, 9.848857801796104 * a, 5 * a);
            c.restore();
            h(c, w[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(86.25 * a, 84.953125 * a);
            P(c, 7, 9.848857801796104 * a, 5 * a);
            c.restore();
            h(c, w[8], w[9], 4 * a);
            return d;
        };

        function Mf(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 75 * a;
            e.height = 55 * a;
            d.translate(-30 * a, -40 * a);
            d.globalAlpha = 1;
            d.beginPath();
            d.bezierCurveTo(67 * a, 56 * a, 72 * a, 71 * a, 72 * a, 71 * a);
            d.bezierCurveTo(72 * a, 71 * a, 84 * a, 70 * a, 75 * a, 82 * a);
            d.bezierCurveTo(70 * a, 88 * a, 61 * a, 89 * a, 58 * a, 89 * a);
            d.bezierCurveTo(55 * a, 89 * a, 40 * a, 89 * a, 46 * a, 77 * a);
            d.bezierCurveTo(46 * a, 77 * a, 43 * a, 63 * a, 43 * a, 63 * a);
            d.bezierCurveTo(35 * a, 61 * a, 35 * a, 53 * a, 42 * a, 47 * a);
            d.bezierCurveTo(48 * a, 42 * a, 62 * a, 41 * a, 66 * a, 43 * a);
            d.bezierCurveTo(70 * a, 45 * a, 72 * a, 48 * a, 67 * a, 56 * a);
            d.closePath();
            h(d, w[0]);
            d.beginPath();
            d.bezierCurveTo(68 * a, 61 * a, 72 * a, 76 * a, 72 * a, 76 * a);
            d.bezierCurveTo(65 * a, 85 * a, 61 * a, 85 * a, 49 * a, 83 * a);
            d.bezierCurveTo(49 * a, 83 * a, 44 * a, 63 * a, 44 * a, 63 * a);
            d.bezierCurveTo(54 * a, 63 * a, 60 * a, 63 * a, 67 * a, 55 * a);
            d.closePath();
            h(d, w[1]);
            d.beginPath();
            d.moveTo(69 * a, 65 * a);
            d.bezierCurveTo(70 * a, 61 * a, 81 * a, 66 * a, 86 * a, 66 * a);
            d.bezierCurveTo(90 * a, 66 * a, 97 * a, 63 * a, 97 * a, 56 * a);
            d.bezierCurveTo(97 * a, 50 * a, 93 * a, 47 * a, 88 * a, 44 * a);
            h(d, !1, w[1], 2);
            d.beginPath();
            d.moveTo(50 * a, 48 * a);
            d.bezierCurveTo(43 * a, 52 * a, 50 * a, 54 * a, 51 * a, 54 * a);
            d.bezierCurveTo(54 * a, 54 * a, 59 * a, 52 * a, 59 * a, 49 * a);
            d.bezierCurveTo(59 * a, 48 * a, 55 * a, 46 * a, 50 * a, 48 * a);
            h(d, w[2]);
            return e;
        };

        function th(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 195 * a,
                f = 190 * a;
            e.width = c;
            e.height = f;
            var g = 10 * a,
                k = 35 * a,
                l = 150 * a,
                m = k / 2,
                p = l / 2,
                n = 4 * a;
            d.translate((c / 2) - (5 * a), (f / 2) - (5 * a));
            d.rotate(-Math.PI / 1.25);
            d.globalAlpha = 1;
            B(d, -m, -p, k, l, g);
            h(d, w[0], w[1], n);
            d.translate(0, 0);
            d.rotate(Math.PI / 3);
            d.globalAlpha = 1;
            B(d, -m, -p, k, l, g);
            h(d, w[0], w[1], n);
            d.translate(0, 5);
            B(d, -m / 2, -p / 2, k / 2, l / 3, g - 2);
            h(d, w[1]);
            return e;
        };

        function N(a, e, w, d, c) {
            var f = document.createElement("canvas"),
                g = f.getContext("2d"),
                k = 70 * a,
                l = 70 * a,
                m = 10 * a,
                p = 5 * a;
            f.width = k;
            f.height = l + p;
            for (var n = 0; n < e.length; n++) {
                var Y = e[n];
                g.globalAlpha = Y.a;
                var q = Y.f(w, !1, Y.c);
                g.save();
                g.translate((k / 2) + (Y.x * a), (l / 2) + (Y.y * a));
                g.rotate(Y.r);
                g.drawImage(q, -q.width / 2, -q.height / 2);
                g.restore();
            }
            a = [];
            for (n = 0; n < d.length; n++) {
                e = document.createElement("canvas");
                w = e.getContext("2d");
                e.width = k;
                e.height = l + p;
                w.globalAlpha = c / 2;
                (2 == n) ? B(w, 0, p, k, l, m): B(w, 0, 0, k, l + p, m);
                h(w, "#081a19");
                w.globalAlpha = c;
                (2 == n) ? B(w, 0, p, k, l, m): B(w, 0, 0, k, l, m);
                h(w, d[n]);
                w.globalAlpha = 1;
                if (2 == n) w.drawImage(f, 0, p);
                else w.drawImage(f, 0, 0);
                a.push(r(e));
            }
            return a;
        };

        function uh(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d");
            w.width = 149 * a;
            w.height = 356 * a;
            d.save();
            d.translate(74.5 * a, 177.5 * a);
            B(d, -57.5 * a, -161.5 * a, 100 * a, 323 * a, 10 * a);
            d.restore();
            h(d, e[0], e[1], 4 * a);
            d.save();
            d.translate(74.5 * a, 177.5 * a);
            B(d, -57.5 * a, 50.5 * a, 100 * a, 105 * a, 10 * a);
            d.restore();
            h(d, e[6], e[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 125 * a);
            d.bezierCurveTo(74.5 * a, 125 * a, 118 * a, 125 * a, 118 * a, 125 * a);
            d.closePath();
            h(d, e[2], e[2], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 120 * a);
            d.bezierCurveTo(74.5 * a, 120 * a, 74.5 * a, 120 * a, 118 * a, 120 * a);
            d.closePath();
            h(d, e[3], e[3], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 228 * a);
            d.bezierCurveTo(75 * a, 228.5 * a, 118 * a, 228.5 * a, 118 * a, 229 * a);
            d.closePath();
            h(d, e[2], e[2], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 224 * a);
            d.bezierCurveTo(75 * a, 224 * a, 118 * a, 224 * a, 118 * a, 224 * a);
            d.closePath();
            h(d, e[3], e[3], 10 * a);
            d.save();
            d.translate(72 * a, 68.5 * a);
            B(d, -41.5 * a, -36.5 * a, 73 * a, 73 * a, 13 * a);
            d.restore();
            h(d, e[4]);
            d.save();
            d.translate(72 * a, 175.5 * a);
            B(d, -41.5 * a, -38.5 * a, 73 * a, 73 * a, 13 * a);
            d.restore();
            h(d, e[4]);
            d.save();
            d.translate(72 * a, 279.5 * a);
            B(d, -41.5 * a, -40.5 * a, 73 * a, 73 * a, 13 * a);
            d.restore();
            h(d, e[4]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 338 * a);
            d.bezierCurveTo(75 * a, 338 * a, 118 * a, 338 * a, 118 * a, 338 * a);
            d.closePath();
            h(d, e[2], e[2], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 333 * a);
            d.bezierCurveTo(75 * a, 333 * a, 118 * a, 333 * a, 118 * a, 333 * a);
            d.closePath();
            h(d, e[3], e[3], 10 * a);
            return w;
        };

        function ae(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 140 * a,
                f = 90 * a;
            e.width = 193 * a;
            e.height = 198 * a;
            var g = 10 * a,
                k = 25 * a,
                l = 180 * a,
                m = k / 2,
                p = l / 2,
                n = 4 * a;
            d.translate(-25 * a, 1 * a);
            d.translate(c, f);
            d.rotate(-Math.PI / 5);
            B(d, -m, -p, k, l, g);
            h(d, w[0], w[1], n);
            d.translate(-30 * a, -25 * a);
            d.rotate(Math.PI / 3);
            B(d, -m, -p, k, l, g);
            h(d, w[0], w[1], n);
            d.translate(35 * a, 30 * a);
            d.rotate(Math.PI / 3);
            B(d, -m, -p, k, l, g);
            h(d, w[0], w[1], n);
            return e;
        };

        function wd(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 145 * a,
                f = 145 * a;
            e.width = c;
            e.height = f;
            var g = 70 * a;
            d.translate(c / 2, f / 2);
            d.globalAlpha = 0.4;
            A(d, 0, 0, g);
            h(d, w[0]);
            g = 50 * a;
            d.translate(0, 0);
            d.globalAlpha = 0.8;
            A(d, 0, 0, g);
            h(d, w[0]);
            g = 35 * a;
            d.translate(0, 0);
            d.globalAlpha = 0.8;
            A(d, 0, 0, g);
            h(d, w[1]);
            g = 20 * a;
            d.translate(0, 0);
            d.globalAlpha = 0.8;
            A(d, 0, 0, g);
            h(d, w[2]);
            return e;
        };

        function sc(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 135 * a,
                f = 190 * a;
            e.width = c;
            e.height = f;
            var g = 10 * a,
                k = 25 * a,
                l = 180 * a,
                m = k / 2,
                p = l / 2;
            a *= 4;
            d.translate(c / 2, f / 2);
            d.rotate(-Math.PI / 5);
            d.globalAlpha = 1;
            B(d, -m, -p, k, l, g);
            h(d, w[0], w[1], a);
            d.translate(0, 0);
            d.rotate(Math.PI / 5);
            d.globalAlpha = 1;
            B(d, -m, -p, k, l, g);
            h(d, w[0], w[1], a);
            return e;
        };


        function xd(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 205 * a,
                f = 205 * a;
            e.width = c;
            e.height = f;
            a *= 100;
            d.translate(c / 2, f / 2);
            d.globalAlpha = 1;
            A(d, 0, 0, a);
            h(d, w[0]);
            return e;
        };

        function yd(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 370 * a,
                f = 370 * a;
            e.width = c;
            e.height = f;
            d.globalAlpha = 0.2;
            A(d, c / 2, f / 2, 180 * a);
            h(d, w[0]);
            return e;
        };

        function be(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 155 * a;
            e.height = 127 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 8 * a);
            d.translate(-7 * a, -20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(55 * a, 68 * a);
            d.bezierCurveTo(86 * a, 64 * a, 117 * a, 66 * a, 134 * a, 68 * a);
            d.bezierCurveTo(152 * a, 69 * a, 165 * a, 86 * a, 152 * a, 104 * a);
            d.bezierCurveTo(146 * a, 87 * a, 122 * a, 89 * a, 98 * a, 90 * a);
            d.bezierCurveTo(64 * a, 89 * a, 41 * a, 91 * a, 36 * a, 106 * a);
            d.bezierCurveTo(19 * a, 92 * a, 31 * a, 71 * a, 54 * a, 69 * a);
            d.closePath();
            h(d, w[0]);
            d.globalAlpha = 1;
            d.translate(0, -8 * a);
            d.translate(7 * a, 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(24 * a, 28 * a);
            d.bezierCurveTo(39 * a, 30 * a, 37 * a, 31 * a, 40 * a, 32 * a);
            d.bezierCurveTo(22 * a, 45 * a, 26 * a, 58 * a, 29 * a, 66 * a);
            d.bezierCurveTo(86.5 * a, 65 * a, 86.5 * a, 65 * a, 144 * a, 64 * a);
            d.bezierCurveTo(151 * a, 42 * a, 132 * a, 20 * a, 120 * a, 16 * a);
            d.bezierCurveTo(106 * a, 12 * a, 89 * a, 0 * a, 73 * a, 3 * a);
            d.bezierCurveTo(51 * a, 5 * a, 36 * a, 20 * a, 25 * a, 28 * a);
            d.closePath();
            h(d, w[1], w[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(30 * a, 41 * a);
            d.bezierCurveTo(49 * a, 31 * a, 53 * a, 29 * a, 62 * a, 27 * a);
            d.bezierCurveTo(59 * a, 24 * a, 56 * a, 25 * a, 53 * a, 24 * a);
            d.bezierCurveTo(67 * a, 15 * a, 84 * a, 12 * a, 120 * a, 16 * a);
            d.bezierCurveTo(107 * a, 11 * a, 96 * a, 6 * a, 85 * a, 2 * a);
            d.bezierCurveTo(59 * a, 3 * a, 54 * a, 7 * a, 40 * a, 17 * a);
            d.bezierCurveTo(32.5 * a, 22.5 * a, 32.5 * a, 22.5 * a, 25 * a, 28 * a);
            d.bezierCurveTo(32 * a, 30 * a, 32 * a, 30 * a, 39 * a, 32 * a);
            d.closePath();
            h(d, w[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(24 * a, 28 * a);
            d.bezierCurveTo(39 * a, 30 * a, 37 * a, 31 * a, 40 * a, 32 * a);
            d.bezierCurveTo(22 * a, 45 * a, 26 * a, 58 * a, 29 * a, 66 * a);
            d.bezierCurveTo(86.5 * a, 65 * a, 86.5 * a, 65 * a, 144 * a, 64 * a);
            d.bezierCurveTo(151 * a, 42 * a, 132 * a, 20 * a, 120 * a, 16 * a);
            d.bezierCurveTo(106 * a, 12 * a, 89 * a, 0 * a, 73 * a, 3 * a);
            d.bezierCurveTo(51 * a, 5 * a, 36 * a, 20 * a, 25 * a, 28 * a);
            d.closePath();
            h(d, void 0, w[2], 4 * a);
            A(d, 18 * a, 38 * a, 14.866068747318506 * a);
            h(d, w[4], w[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(39 * a, 30 * a);
            d.bezierCurveTo(27 * a, 38 * a, 25 * a, 50 * a, 26 * a, 60 * a);
            d.bezierCurveTo(36.5 * a, 58.5 * a, 36.5 * a, 58.5 * a, 47 * a, 57 * a);
            h(d, w[1], w[2], 4 * a);
            d.translate(-7 * a, -20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(27 * a, 74 * a);
            d.bezierCurveTo(38 * a, 77.5 * a, 38 * a, 77.5 * a, 49 * a, 81 * a);
            d.bezierCurveTo(54.5 * a, 75.5 * a, 54.5 * a, 75.5 * a, 60 * a, 70 * a);
            d.bezierCurveTo(64 * a, 72 * a, 64 * a, 72 * a, 68 * a, 74 * a);
            d.bezierCurveTo(80.5 * a, 67.5 * a, 80.5 * a, 67.5 * a, 93 * a, 61 * a);
            d.bezierCurveTo(104.5 * a, 68 * a, 104.5 * a, 68 * a, 116 * a, 75 * a);
            d.bezierCurveTo(120.5 * a, 72.5 * a, 120.5 * a, 72.5 * a, 125 * a, 70 * a);
            d.bezierCurveTo(129 * a, 75 * a, 129 * a, 75 * a, 133 * a, 80 * a);
            d.bezierCurveTo(145.5 * a, 76.5 * a, 145.5 * a, 76.5 * a, 158 * a, 73 * a);
            d.bezierCurveTo(158 * a, 87 * a, 158 * a, 93 * a, 155 * a, 95 * a);
            d.bezierCurveTo(152.5 * a, 96 * a, 152.5 * a, 96 * a, 150 * a, 97 * a);
            d.bezierCurveTo(121 * a, 85 * a, 108 * a, 86 * a, 93 * a, 85 * a);
            d.bezierCurveTo(64 * a, 85 * a, 52 * a, 95 * a, 38 * a, 99 * a);
            d.bezierCurveTo(36 * a, 98.5 * a, 36 * a, 98.5 * a, 34 * a, 98 * a);
            d.bezierCurveTo(25 * a, 98 * a, 27 * a, 91 * a, 27 * a, 76 * a);
            d.closePath();
            h(d, w[6], w[7], 6 * a);
            return e;
        };

        function ce(a, e, w) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 155 * a;
            e.height = 127 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 8 * a);
            d.translate(-7 * a, -20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(55 * a, 68 * a);
            d.bezierCurveTo(86 * a, 64 * a, 117 * a, 66 * a, 134 * a, 68 * a);
            d.bezierCurveTo(152 * a, 69 * a, 165 * a, 86 * a, 152 * a, 104 * a);
            d.bezierCurveTo(146 * a, 87 * a, 122 * a, 89 * a, 98 * a, 90 * a);
            d.bezierCurveTo(64 * a, 89 * a, 41 * a, 91 * a, 36 * a, 106 * a);
            d.bezierCurveTo(19 * a, 92 * a, 31 * a, 71 * a, 54 * a, 69 * a);
            d.closePath();
            h(d, w[0]);
            d.globalAlpha = 1;
            d.translate(0, -8 * a);
            d.translate(7 * a, 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(24 * a, 28 * a);
            d.bezierCurveTo(39 * a, 30 * a, 37 * a, 31 * a, 40 * a, 32 * a);
            d.bezierCurveTo(22 * a, 45 * a, 26 * a, 58 * a, 29 * a, 66 * a);
            d.bezierCurveTo(86.5 * a, 65 * a, 86.5 * a, 65 * a, 144 * a, 64 * a);
            d.bezierCurveTo(151 * a, 42 * a, 132 * a, 20 * a, 120 * a, 16 * a);
            d.bezierCurveTo(106 * a, 12 * a, 89 * a, 0 * a, 73 * a, 3 * a);
            d.bezierCurveTo(51 * a, 5 * a, 36 * a, 20 * a, 25 * a, 28 * a);
            d.closePath();
            h(d, w[1], w[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(30 * a, 41 * a);
            d.bezierCurveTo(49 * a, 31 * a, 53 * a, 29 * a, 62 * a, 27 * a);
            d.bezierCurveTo(59 * a, 24 * a, 56 * a, 25 * a, 53 * a, 24 * a);
            d.bezierCurveTo(67 * a, 15 * a, 84 * a, 12 * a, 120 * a, 16 * a);
            d.bezierCurveTo(107 * a, 11 * a, 96 * a, 6 * a, 85 * a, 2 * a);
            d.bezierCurveTo(59 * a, 3 * a, 54 * a, 7 * a, 40 * a, 17 * a);
            d.bezierCurveTo(32.5 * a, 22.5 * a, 32.5 * a, 22.5 * a, 25 * a, 28 * a);
            d.bezierCurveTo(32 * a, 30 * a, 32 * a, 30 * a, 39 * a, 32 * a);
            d.closePath();
            h(d, w[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(24 * a, 28 * a);
            d.bezierCurveTo(39 * a, 30 * a, 37 * a, 31 * a, 40 * a, 32 * a);
            d.bezierCurveTo(22 * a, 45 * a, 26 * a, 58 * a, 29 * a, 66 * a);
            d.bezierCurveTo(86.5 * a, 65 * a, 86.5 * a, 65 * a, 144 * a, 64 * a);
            d.bezierCurveTo(151 * a, 42 * a, 132 * a, 20 * a, 120 * a, 16 * a);
            d.bezierCurveTo(106 * a, 12 * a, 89 * a, 0 * a, 73 * a, 3 * a);
            d.bezierCurveTo(51 * a, 5 * a, 36 * a, 20 * a, 25 * a, 28 * a);
            d.closePath();
            h(d, void 0, w[2], 4 * a);
            A(d, 18 * a, 38 * a, 14.866068747318506 * a);
            h(d, w[4], w[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(39 * a, 30 * a);
            d.bezierCurveTo(27 * a, 38 * a, 25 * a, 50 * a, 26 * a, 60 * a);
            d.bezierCurveTo(36.5 * a, 58.5 * a, 36.5 * a, 58.5 * a, 47 * a, 57 * a);
            h(d, w[1], w[2], 4 * a);
            d.translate(-7 * a, -20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(55 * a, 68 * a);
            d.bezierCurveTo(86 * a, 64 * a, 117 * a, 66 * a, 134 * a, 68 * a);
            d.bezierCurveTo(152 * a, 69 * a, 165 * a, 86 * a, 152 * a, 104 * a);
            d.bezierCurveTo(146 * a, 87 * a, 122 * a, 89 * a, 98 * a, 90 * a);
            d.bezierCurveTo(64 * a, 89 * a, 41 * a, 91 * a, 36 * a, 106 * a);
            d.bezierCurveTo(19 * a, 92 * a, 31 * a, 71 * a, 54 * a, 69 * a);
            d.closePath();
            h(d, w[4], w[5], 4 * a);
            return e;
        };

        function Nf(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = 220 * a,
                f = 220 * a,
                g = 32 * a,
                k = 4 * a;
            w.width = c;
            w.height = f;
            d.translate(c / 2, (f / 2) + (10 * a));
            d.globalAlpha = 0.5;
            A(d, 0, 0, g);
            h(d, e[0], e[0]);
            d.translate(0, -8 * a);
            d.globalAlpha = 1;
            A(d, 0, 0, g);
            h(d, e[1], e[2], k);
            return w;
        };

        function Of(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = 40 * a,
                f = 40 * a,
                g = 16 * a,
                k = 4 * a;
            w.width = c;
            w.height = f;
            d.translate(c / 2, f / 2);
            d.globalAlpha = 1;
            A(d, 0, 0, g);
            h(d, e[0], e[1], k);
            return w;
        };

        function Pf(a, e) {
            var w = document.createElement("canvas"),
                d = w.getContext("2d"),
                c = 220 * a,
                f = 220 * a,
                g = 16 * a;
            w.width = c;
            w.height = f;
            d.translate(c / 2, f / 2);
            d.globalAlpha = 0.5;
            A(d, 0, 0, g);
            h(d, e[0]);
            d.globalAlpha = 1;
            return w;
        };

        function jb(a, e, w, d) {
            var c = document.createElement("canvas"),
                f = c.getContext("2d"),
                g = 30 * a,
                k = 20 * a,
                l = 200 * a,
                m = 180 * a,
                p = l / 2,
                n = m / 2;
            c.width = 210 * a;
            c.height = 205 * a;
            c.width = 419 * a;
            c.height = 412 * a;
            (1 == d) ? (f.save(), f.translate(10 * a, 0 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(117.99996948242188 * a, 216.40621948242188 * a), f.bezierCurveTo(86.99996948242188 * a, 221.40621948242188 * a, 74.99996948242188 * a, 217.40621948242188 * a, 60.999969482421875 * a, 205.40621948242188 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(114.99996948242188 * a, 227.40621948242188 * a), f.bezierCurveTo(90.99996948242188 * a, 233.40621948242188 * a, 66.99996948242188 * a, 228.40621948242188 * a, 43.999969482421875 * a, 225.40621948242188 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(110.99996948242188 * a, 236.40621948242188 * a), f.bezierCurveTo(94.99996948242188 * a, 244.40621948242188 * a, 79.99996948242188 * a, 249.40621948242188 * a, 60.999969482421875 * a, 249.40621948242188 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(111.99996948242188 * a, 206.29513549804688 * a), f.bezierCurveTo(91.99996948242188 * a, 206.29513549804688 * a, 87.99996948242188 * a, 201.29513549804688 * a, 79.99996948242188 * a, 192.29513549804688 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(109.99996948242188 * a, 249.18402099609375 * a), f.bezierCurveTo(97.99996948242188 * a, 263.18402099609375 * a, 85.99996948242188 * a, 271.18402099609375 * a, 65.99996948242188 * a, 277.18402099609375 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(105.99996948242188 * a, 192.18402099609375 * a), f.bezierCurveTo(99.49996948242188 * a, 197.68402099609375 * a, 99.49996948242188 * a, 197.68402099609375 * a, 92.99996948242188 * a, 203.18402099609375 * a), f.bezierCurveTo(95.99996948242188 * a, 213.18402099609375 * a, 95.99996948242188 * a, 215.18402099609375 * a, 89.99996948242188 * a, 219.18402099609375 * a), f.bezierCurveTo(91.99996948242188 * a, 223.18402099609375 * a, 91.99996948242188 * a, 226.18402099609375 * a, 87.99996948242188 * a, 230.18402099609375 * a), f.bezierCurveTo(89.99996948242188 * a, 234.18402099609375 * a, 91.99996948242188 * a, 237.18402099609375 * a, 90.99996948242188 * a, 244.18402099609375 * a), f.bezierCurveTo(96.99996948242188 * a, 252.18402099609375 * a, 96.99996948242188 * a, 256.18402099609375 * a, 95.99996948242188 * a, 262.18402099609375 * a), f.bezierCurveTo(106.49996948242188 * a, 264.18402099609375 * a, 106.49996948242188 * a, 264.18402099609375 * a, 116.99996948242188 * a, 266.18402099609375 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(104.99996948242188 * a, 183.29513549804688 * a), f.bezierCurveTo(99.99996948242188 * a, 193.29513549804688 * a, 93.99996948242188 * a, 195.29513549804688 * a, 89.99996948242188 * a, 201.29513549804688 * a), f.bezierCurveTo(86.99996948242188 * a, 212.29513549804688 * a, 85.99996948242188 * a, 214.29513549804688 * a, 81.99996948242188 * a, 215.29513549804688 * a), f.bezierCurveTo(83.99996948242188 * a, 223.29513549804688 * a, 83.99996948242188 * a, 227.29513549804688 * a, 79.99996948242188 * a, 230.29513549804688 * a), f.bezierCurveTo(83.99996948242188 * a, 235.29513549804688 * a, 84.99996948242188 * a, 240.29513549804688 * a, 79.99996948242188 * a, 246.29513549804688 * a), f.bezierCurveTo(86.99996948242188 * a, 251.29513549804688 * a, 91.99996948242188 * a, 256.2951354980469 * a, 89.99996948242188 * a, 266.2951354980469 * a), f.bezierCurveTo(102.99996948242188 * a, 269.2951354980469 * a, 102.99996948242188 * a, 269.2951354980469 * a, 115.99996948242188 * a, 272.2951354980469 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(107.99996948242188 * a, 177.85067749023438 * a), f.bezierCurveTo(95.99996948242188 * a, 187.35067749023438 * a, 95.99996948242188 * a, 187.35067749023438 * a, 83.99996948242188 * a, 196.85067749023438 * a), f.bezierCurveTo(82.99996948242188 * a, 203.85067749023438 * a, 80.99996948242188 * a, 209.85067749023438 * a, 72.99996948242188 * a, 210.85067749023438 * a), f.bezierCurveTo(73.99996948242188 * a, 220.85067749023438 * a, 73.99996948242188 * a, 221.85067749023438 * a, 66.99996948242188 * a, 227.85067749023438 * a), f.bezierCurveTo(71.99996948242188 * a, 235.85067749023438 * a, 73.99996948242188 * a, 239.85067749023438 * a, 71.99996948242188 * a, 247.85067749023438 * a), f.bezierCurveTo(80.99996948242188 * a, 257.8506774902344 * a, 81.99996948242188 * a, 263.8506774902344 * a, 77.99996948242188 * a, 271.8506774902344 * a), f.bezierCurveTo(95.49996948242188 * a, 272.8506774902344 * a, 95.49996948242188 * a, 272.8506774902344 * a, 112.99996948242188 * a, 273.8506774902344 * a), h(f, void 0, e[4], 3 * a), f.restore()) : ((2 == d) && (f.save(), f.translate(130 * a, 35 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(170.99996948242188 * a, 133.85067749023438 * a), f.bezierCurveTo(195.99996948242188 * a, 129.85067749023438 * a, 196.99996948242188 * a, 111.85067749023438 * a, 200.99996948242188 * a, 88.85067749023438 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(169.99996948242188 * a, 143.85067749023438 * a), f.bezierCurveTo(189.99996948242188 * a, 145.85067749023438 * a, 207.99996948242188 * a, 126.85067749023438 * a, 222.99996948242188 * a, 100.85067749023438 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(170.99996948242188 * a, 157.85067749023438 * a), f.bezierCurveTo(193.99996948242188 * a, 160.85067749023438 * a, 210.99996948242188 * a, 151.85067749023438 * a, 232.99996948242188 * a, 139.85067749023438 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(169.99996948242188 * a, 168.85067749023438 * a), f.bezierCurveTo(192.99996948242188 * a, 175.85067749023438 * a, 203.99996948242188 * a, 177.85067749023438 * a, 245.99996948242188 * a, 168.85067749023438 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(167.99996948242188 * a, 168.85067749023438 * a), f.bezierCurveTo(183.99996948242188 * a, 189.85067749023438 * a, 191.99996948242188 * a, 193.85067749023438 * a, 220.99996948242188 * a, 196.85067749023438 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(176.99996948242188 * a, 117.85067749023438 * a), f.bezierCurveTo(181.99996948242188 * a, 120.85067749023438 * a, 181.99996948242188 * a, 120.85067749023438 * a, 186.99996948242188 * a, 123.85067749023438 * a), f.bezierCurveTo(183.99996948242188 * a, 137.85067749023438 * a, 185.99996948242188 * a, 136.85067749023438 * a, 190.99996948242188 * a, 136.85067749023438 * a), f.bezierCurveTo(186.99996948242188 * a, 147.85067749023438 * a, 189.99996948242188 * a, 152.85067749023438 * a, 193.99996948242188 * a, 155.85067749023438 * a), f.bezierCurveTo(187.99996948242188 * a, 165.85067749023438 * a, 190.99996948242188 * a, 169.85067749023438 * a, 190.99996948242188 * a, 172.85067749023438 * a), f.bezierCurveTo(186.99996948242188 * a, 183.85067749023438 * a, 186.99996948242188 * a, 185.85067749023438 * a, 189.99996948242188 * a, 188.85067749023438 * a), f.bezierCurveTo(182.49996948242188 * a, 195.35067749023438 * a, 182.49996948242188 * a, 195.35067749023438 * a, 174.99996948242188 * a, 201.85067749023438 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(176.99996948242188 * a, 112.18402099609375 * a), f.bezierCurveTo(183.99996948242188 * a, 119.18402099609375 * a, 186.99996948242188 * a, 117.18402099609375 * a, 192.99996948242188 * a, 116.18402099609375 * a), f.bezierCurveTo(191.99996948242188 * a, 126.18402099609375 * a, 193.99996948242188 * a, 130.18402099609375 * a, 199.99996948242188 * a, 130.18402099609375 * a), f.bezierCurveTo(194.99996948242188 * a, 145.18402099609375 * a, 197.99996948242188 * a, 147.18402099609375 * a, 201.99996948242188 * a, 153.18402099609375 * a), f.bezierCurveTo(196.99996948242188 * a, 164.18402099609375 * a, 197.99996948242188 * a, 169.18402099609375 * a, 201.99996948242188 * a, 174.18402099609375 * a), f.bezierCurveTo(194.99996948242188 * a, 184.18402099609375 * a, 196.99996948242188 * a, 187.18402099609375 * a, 200.99996948242188 * a, 193.18402099609375 * a), f.bezierCurveTo(185.99996948242188 * a, 195.18402099609375 * a, 181.99996948242188 * a, 201.18402099609375 * a, 174.99996948242188 * a, 210.18402099609375 * a), h(f, void 0, e[4], 3 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(176.99996948242188 * a, 101.29513549804688 * a), f.bezierCurveTo(181.99996948242188 * a, 108.29513549804688 * a, 189.99996948242188 * a, 110.29513549804688 * a, 195.99996948242188 * a, 107.29513549804688 * a), f.bezierCurveTo(197.99996948242188 * a, 121.29513549804688 * a, 200.99996948242188 * a, 122.29513549804688 * a, 206.99996948242188 * a, 122.29513549804688 * a), f.bezierCurveTo(201.99996948242188 * a, 138.29513549804688 * a, 204.99996948242188 * a, 142.29513549804688 * a, 211.99996948242188 * a, 148.29513549804688 * a), f.bezierCurveTo(201.99996948242188 * a, 156.29513549804688 * a, 205.99996948242188 * a, 167.29513549804688 * a, 213.99996948242188 * a, 173.29513549804688 * a), f.bezierCurveTo(204.99996948242188 * a, 181.29513549804688 * a, 204.99996948242188 * a, 187.29513549804688 * a, 205.99996948242188 * a, 193.29513549804688 * a), f.bezierCurveTo(190.99996948242188 * a, 198.29513549804688 * a, 181.99996948242188 * a, 205.29513549804688 * a, 174.99996948242188 * a, 214.29513549804688 * a), h(f, void 0, e[4], 3 * a), f.restore()));
            f.translate(c.width / 2, c.height / 2);
            if (!d) {
                f.globalAlpha = 0.5;
                B(f, -p, -n, l, m + k, g);
                h(f, e[0]);
                if (w) f.rotate(Math.PI);
                f.globalAlpha = 1;
                B(f, -p, -n, l, m, g);
                h(f, e[1], e[2], 4);
                f.globalAlpha = 1;
                B(f, -p + (35 * a), -n + (20 * a), l - (50 * a), m - (50 * a), g - (10 * a));
                h(f, e[3]);
            }(3 == d) ? (f.translate(-c.width / 2, -c.height / 2), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(121 * a, 190 * a), f.bezierCurveTo(129 * a, 186 * a, 137 * a, 183 * a, 135 * a, 163 * a), f.bezierCurveTo(131 * a, 135 * a, 153 * a, 127 * a, 177 * a, 124 * a), f.bezierCurveTo(198 * a, 120 * a, 208 * a, 122 * a, 226 * a, 128 * a), f.bezierCurveTo(261 * a, 112 * a, 271 * a, 126 * a, 287 * a, 147 * a), f.bezierCurveTo(310 * a, 163 * a, 304 * a, 183 * a, 283 * a, 196 * a), f.bezierCurveTo(296 * a, 249 * a, 278 * a, 262 * a, 253 * a, 263 * a), f.bezierCurveTo(210 * a, 264 * a, 188 * a, 252 * a, 177 * a, 234 * a), f.bezierCurveTo(133 * a, 242 * a, 123 * a, 241 * a, 115 * a, 225 * a), f.bezierCurveTo(109 * a, 206 * a, 115 * a, 193 * a, 121 * a, 190 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(219 * a, 144 * a), f.bezierCurveTo(251 * a, 121 * a, 277 * a, 136 * a, 276 * a, 159 * a), f.bezierCurveTo(276 * a, 176 * a, 273 * a, 191 * a, 242 * a, 193 * a), f.bezierCurveTo(226 * a, 228 * a, 155 * a, 219 * a, 150 * a, 183 * a), f.bezierCurveTo(142 * a, 144 * a, 174 * a, 127 * a, 219 * a, 144 * a), f.closePath(), h(f, e[5]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(123 * a, 214 * a), f.bezierCurveTo(119 * a, 198 * a, 129 * a, 189 * a, 146 * a, 194 * a), f.bezierCurveTo(158 * a, 201 * a, 165 * a, 218 * a, 147 * a, 226 * a), f.bezierCurveTo(135 * a, 230 * a, 125 * a, 222 * a, 123 * a, 214 * a), f.closePath(), h(f, e[5]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(257 * a, 199 * a), f.bezierCurveTo(264 * a, 199 * a, 275 * a, 213 * a, 261 * a, 220 * a), f.bezierCurveTo(246 * a, 225 * a, 235 * a, 200 * a, 257 * a, 199 * a), f.closePath(), h(f, e[5]), f.translate(-5 * a, 55 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(186 * a, 123 * a), f.bezierCurveTo(198 * a, 115 * a, 219 * a, 110 * a, 219 * a, 123 * a), f.bezierCurveTo(216 * a, 135 * a, 171 * a, 143 * a, 186 * a, 123 * a), f.closePath(), h(f, e[5]), f.translate(5 * a, -55 * a), f.translate(-5 * a, 15 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(171 * a, 241 * a), f.bezierCurveTo(189 * a, 234 * a, 200 * a, 248 * a, 189 * a, 254 * a), f.bezierCurveTo(179 * a, 260 * a, 158 * a, 246 * a, 171 * a, 241 * a), f.closePath(), h(f, e[5])) : ((4 == d) && (f.translate(-c.width / 2, -c.height / 2), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(30 * a, 167 * a), f.bezierCurveTo(47 * a, 144 * a, 64 * a, 140 * a, 80 * a, 147 * a), f.bezierCurveTo(95 * a, 154 * a, 95 * a, 159 * a, 100 * a, 179 * a), f.bezierCurveTo(105 * a, 202 * a, 95 * a, 218 * a, 69 * a, 218 * a), f.bezierCurveTo(48 * a, 236 * a, 26 * a, 223 * a, 28 * a, 213 * a), f.bezierCurveTo(28 * a, 205 * a, 29 * a, 199 * a, 32 * a, 195 * a), f.bezierCurveTo(21 * a, 183 * a, 27 * a, 173 * a, 30 * a, 167 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(26 * a, 145 * a), f.bezierCurveTo(32 * a, 138 * a, 37 * a, 137 * a, 40 * a, 139 * a), f.bezierCurveTo(43 * a, 140 * a, 41 * a, 150 * a, 31 * a, 159 * a), f.bezierCurveTo(23 * a, 166 * a, 17 * a, 158 * a, 26 * a, 145 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(13 * a, 193 * a), f.bezierCurveTo(21 * a, 187 * a, 30 * a, 190 * a, 20 * a, 202 * a), f.bezierCurveTo(13 * a, 208 * a, 7 * a, 202 * a, 13 * a, 193 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(121 * a, 190 * a), f.bezierCurveTo(129 * a, 186 * a, 137 * a, 183 * a, 135 * a, 163 * a), f.bezierCurveTo(131 * a, 135 * a, 153 * a, 127 * a, 177 * a, 124 * a), f.bezierCurveTo(198 * a, 120 * a, 208 * a, 122 * a, 226 * a, 128 * a), f.bezierCurveTo(261 * a, 112 * a, 271 * a, 126 * a, 287 * a, 147 * a), f.bezierCurveTo(310 * a, 163 * a, 304 * a, 183 * a, 283 * a, 196 * a), f.bezierCurveTo(296 * a, 249 * a, 278 * a, 262 * a, 253 * a, 263 * a), f.bezierCurveTo(210 * a, 264 * a, 188 * a, 252 * a, 177 * a, 234 * a), f.bezierCurveTo(133 * a, 242 * a, 123 * a, 241 * a, 115 * a, 225 * a), f.bezierCurveTo(109 * a, 206 * a, 115 * a, 193 * a, 121 * a, 190 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(335 * a, 196 * a), f.bezierCurveTo(312 * a, 208 * a, 300 * a, 185 * a, 309 * a, 167 * a), f.bezierCurveTo(314 * a, 141 * a, 339 * a, 127 * a, 359 * a, 144 * a), f.bezierCurveTo(363 * a, 148 * a, 364 * a, 150 * a, 364 * a, 150 * a), f.bezierCurveTo(392 * a, 143 * a, 396 * a, 183 * a, 378 * a, 204 * a), f.bezierCurveTo(367 * a, 215 * a, 339 * a, 208 * a, 335 * a, 196 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(349 * a, 212 * a), f.bezierCurveTo(339 * a, 216 * a, 334 * a, 208 * a, 341 * a, 203 * a), f.bezierCurveTo(353 * a, 198 * a, 361 * a, 205 * a, 349 * a, 212 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(46 * a, 165 * a), f.bezierCurveTo(55 * a, 148 * a, 85 * a, 157 * a, 83 * a, 175 * a), f.bezierCurveTo(99 * a, 185 * a, 89 * a, 212 * a, 66 * a, 204 * a), f.bezierCurveTo(55 * a, 212 * a, 43 * a, 212 * a, 41 * a, 202 * a), f.bezierCurveTo(39 * a, 194 * a, 42 * a, 187 * a, 49 * a, 185 * a), f.bezierCurveTo(44 * a, 175 * a, 45 * a, 172 * a, 46 * a, 165 * a), f.closePath(), h(f, e[4]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(219 * a, 144 * a), f.bezierCurveTo(251 * a, 121 * a, 277 * a, 136 * a, 276 * a, 159 * a), f.bezierCurveTo(276 * a, 176 * a, 273 * a, 191 * a, 242 * a, 193 * a), f.bezierCurveTo(226 * a, 228 * a, 155 * a, 219 * a, 150 * a, 183 * a), f.bezierCurveTo(142 * a, 144 * a, 174 * a, 127 * a, 219 * a, 144 * a), f.closePath(), h(f, e[5]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(123 * a, 214 * a), f.bezierCurveTo(119 * a, 198 * a, 129 * a, 189 * a, 146 * a, 194 * a), f.bezierCurveTo(158 * a, 201 * a, 165 * a, 218 * a, 147 * a, 226 * a), f.bezierCurveTo(135 * a, 230 * a, 125 * a, 222 * a, 123 * a, 214 * a), f.closePath(), h(f, e[5]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(257 * a, 199 * a), f.bezierCurveTo(264 * a, 199 * a, 275 * a, 213 * a, 261 * a, 220 * a), f.bezierCurveTo(246 * a, 225 * a, 235 * a, 200 * a, 257 * a, 199 * a), f.closePath(), h(f, e[5]), f.translate(-5 * a, 55 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(186 * a, 123 * a), f.bezierCurveTo(198 * a, 115 * a, 219 * a, 110 * a, 219 * a, 123 * a), f.bezierCurveTo(216 * a, 135 * a, 171 * a, 143 * a, 186 * a, 123 * a), f.closePath(), h(f, e[5]), f.translate(5 * a, -55 * a), f.translate(-5 * a, 15 * a), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(171 * a, 241 * a), f.bezierCurveTo(189 * a, 234 * a, 200 * a, 248 * a, 189 * a, 254 * a), f.bezierCurveTo(179 * a, 260 * a, 158 * a, 246 * a, 171 * a, 241 * a), f.closePath(), h(f, e[5]), f.beginPath(), f.lineCap = "round", f.lineJoin = "round", f.moveTo(367 * a, 164 * a), f.bezierCurveTo(380 * a, 160 * a, 391 * a, 185 * a, 371 * a, 189 * a), f.bezierCurveTo(362 * a, 192 * a, 354 * a, 191 * a, 350 * a, 185 * a), f.bezierCurveTo(326 * a, 205 * a, 314 * a, 182 * a, 316 * a, 171 * a), f.bezierCurveTo(317 * a, 150 * a, 332 * a, 143 * a, 347 * a, 147 * a), f.bezierCurveTo(361 * a, 151 * a, 366 * a, 158 * a, 367 * a, 164 * a), f.closePath(), h(f, e[4])));
            return c;
        };

        function tc(a, e, f, d) {
            var c = document.createElement("canvas"),
                g = c.getContext("2d");
            c.width = 121 * a;
            c.height = 130 * a;
            g.translate(0, 20 * a);
            (1 == f) && (g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(6 * a, 23 * a), g.bezierCurveTo(6 * a, 46 * a, 6 * a, 46 * a, 6 * a, 69 * a), g.bezierCurveTo(21 * a, 69 * a, 21 * a, 69 * a, 36 * a, 69 * a), g.bezierCurveTo(45.5 * a, 78.5 * a, 45.5 * a, 78.5 * a, 55 * a, 88 * a), g.bezierCurveTo(55.5 * a, 45.5 * a, 55.5 * a, 45.5 * a, 56 * a, 3 * a), g.bezierCurveTo(47 * a, 14 * a, 47 * a, 14 * a, 38 * a, 25 * a), g.bezierCurveTo(23 * a, 25 * a, 23 * a, 25 * a, 6 * a, 23 * a), g.closePath(), h(g, void 0, e[3], 13 * a));
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(6 * a, 23 * a);
            g.bezierCurveTo(6 * a, 46 * a, 6 * a, 46 * a, 6 * a, 69 * a);
            g.bezierCurveTo(21 * a, 69 * a, 21 * a, 69 * a, 36 * a, 69 * a);
            g.bezierCurveTo(45.5 * a, 78.5 * a, 45.5 * a, 78.5 * a, 55 * a, 88 * a);
            g.bezierCurveTo(55.5 * a, 45.5 * a, 55.5 * a, 45.5 * a, 56 * a, 3 * a);
            g.bezierCurveTo(47 * a, 14 * a, 47 * a, 14 * a, 38 * a, 25 * a);
            g.bezierCurveTo(23 * a, 25 * a, 23 * a, 25 * a, 6 * a, 23 * a);
            g.closePath();
            h(g, e[1], e[2], 4 * a);
            if (1 == d) {
                g.translate(0, 5 * a);
                g.beginPath();
                g.lineCap = "round";
                g.lineJoin = "round";
                g.moveTo(67 * a, 30 * a);
                g.bezierCurveTo(73 * a, 47 * a, 69 * a, 45 * a, 67 * a, 58 * a);
                h(g, void 0, e[0], 10 * a);
                g.translate(3, 0 * a);
                g.beginPath();
                g.lineCap = "round";
                g.lineJoin = "round";
                g.moveTo(70 * a, 17 * a);
                g.bezierCurveTo(83 * a, 45 * a, 76 * a, 55 * a, 70 * a, 69 * a);
                h(g, void 0, e[0], 10 * a);
                g.translate(3, 0 * a);
                g.beginPath();
                g.lineCap = "round";
                g.lineJoin = "round";
                g.moveTo(76 * a, 8 * a);
                g.bezierCurveTo(88 * a, 31 * a, 89 * a, 55 * a, 76 * a, 79 * a);
                h(g, void 0, e[0], 10 * a);
                if (1 == f) g.translate(-6 * a, -5 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(67 * a, 30 * a), g.bezierCurveTo(73 * a, 47 * a, 69 * a, 45 * a, 67 * a, 58 * a), h(g, void 0, e[3], 18 * a), g.translate(3, 0 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(70 * a, 17 * a), g.bezierCurveTo(83 * a, 45 * a, 76 * a, 55 * a, 70 * a, 69 * a), h(g, void 0, e[3], 18 * a), g.translate(3, 0 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(76 * a, 8 * a), g.bezierCurveTo(88 * a, 31 * a, 89 * a, 55 * a, 76 * a, 79 * a), h(g, void 0, e[3], 18 * a), g.translate(-6, 0 * a);
                else g.translate(-6 * a, -5 * a);
                g.beginPath();
                g.lineCap = "round";
                g.lineJoin = "round";
                g.moveTo(67 * a, 30 * a);
                g.bezierCurveTo(73 * a, 47 * a, 69 * a, 45 * a, 67 * a, 58 * a);
                h(g, void 0, e[2], 10 * a);
                g.translate(3, 0 * a);
                g.beginPath();
                g.lineCap = "round";
                g.lineJoin = "round";
                g.moveTo(70 * a, 17 * a);
                g.bezierCurveTo(83 * a, 45 * a, 76 * a, 55 * a, 70 * a, 69 * a);
                h(g, void 0, e[2], 10 * a);
                g.translate(3, 0 * a);
                g.beginPath();
                g.lineCap = "round";
                g.lineJoin = "round";
                g.moveTo(76 * a, 8 * a);
                g.bezierCurveTo(88 * a, 31 * a, 89 * a, 55 * a, 76 * a, 79 * a);
                h(g, void 0, e[2], 10 * a);
            } else(1 == f) ? (g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(108 * a, 27 * a), g.bezierCurveTo(94 * a, 45.5 * a, 94 * a, 45.5 * a, 80 * a, 64 * a), g.closePath(), h(g, void 0, e[3], 18 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(79 * a, 30 * a), g.bezierCurveTo(93 * a, 47 * a, 93 * a, 47 * a, 107 * a, 64 * a), g.closePath(), h(g, void 0, e[3], 18 * a)) : (g.translate(0, -5 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(108 * a, 27 * a), g.bezierCurveTo(94 * a, 45.5 * a, 94 * a, 45.5 * a, 80 * a, 64 * a), g.closePath(), h(g, void 0, e[0], 7 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(79 * a, 30 * a), g.bezierCurveTo(93 * a, 47 * a, 93 * a, 47 * a, 107 * a, 64 * a), g.closePath(), h(g, void 0, e[0], 7 * a), g.translate(0, 5 * a)), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(108 * a, 27 * a), g.bezierCurveTo(94 * a, 45.5 * a, 94 * a, 45.5 * a, 80 * a, 64 * a), g.closePath(), h(g, void 0, e[2], 7 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(79 * a, 30 * a), g.bezierCurveTo(93 * a, 47 * a, 93 * a, 47 * a, 107 * a, 64 * a), g.closePath(), h(g, void 0, e[2], 7 * a);
            return c;
        };

        function Ab(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                g = 450 * a,
                k = 145 * a,
                l = g / 2,
                m = k / 2,
                p = 10 * a,
                n = 300 * a,
                q = 30 * a,
                Y = n / 2,
                r = q / 2;
            f ? (d.width = 145 * a, d.height = 450 * a, c.rotate(Math.PI / 2), c.save(), c.globalAlpha = 0.5, B(c, 100 * a, -110 * a, n, q, p), h(c, e[0]), c.translate(178 * a, -98 * a), B(c, -Y, -r - (6 * a), 100 * a, 100 * a, p), h(c, e[0]), c.translate(-50 * a, 5 * a), B(c, 220 * a, -15 * a, 90 * a, 90 * a, p), h(c, e[0]), c.restore(), c.save(), c.globalAlpha = 1, c.translate(250 * a, -63 * a), B(c, -Y - (20 * a), -r, n, q, p), h(c, e[1], e[2], 4), c.translate(-70 * a, -40 * a), B(c, -Y - (20 * a), -r, 100 * a, 100 * a, p), h(c, e[3], e[4], 4), c.translate(-70 * a, 15 * a), B(c, 220 * a, -22 * a, 90 * a, 90 * a, p), h(c, e[3], e[4], 4), B(c, 230 * a, -12 * a, 55 * a, 55 * a, p), h(c, e[5]), c.translate(-70 * a, 0), B(c, -15 * a, -2 * a, 60 * a, 60 * a, p)) : (d.width = g, d.height = k, c.save(), c.globalAlpha = 0.5, c.translate(l, m + (10 * a)), B(c, -Y, -r, n, q, p), h(c, e[0]), c.translate(-65 * a, -25 * a), B(c, -Y, -r - (6 * a), 100 * a, 100 * a, 15 * a), h(c, e[0]), c.translate(-35 * a, -5 * a), B(c, 220 * a, -15 * a, 90 * a, 90 * a, 15 * a), h(c, e[0]), c.restore(), c.save(), c.globalAlpha = 1, c.translate(240 * a, 70 * a), B(c, -Y, -r, n, q, p), h(c, e[1], e[2], 4), c.translate(-60 * a, -40 * a), B(c, -Y - (20 * a), -r, 100 * a, 100 * a, 15 * a), h(c, e[3], e[4], 4), c.translate(-55 * a, 10 * a), B(c, 220 * a, -22 * a, 90 * a, 90 * a, 15 * a), h(c, e[3], e[4], 4), B(c, 240 * a, -12 * a, 55 * a, 55 * a, 12 * a), h(c, e[5]), c.translate(45 * a, 0 * a), B(c, -145 * a, -2 * a, 60 * a, 60 * a, 12 * a));
            h(c, e[5]);
            c.restore();
            return d;
        };

        function xb(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d"),
                c = Math.max(e.width, a.width),
                h = Math.max(e.height, a.height);
            f.width = c;
            f.height = h;
            d.drawImage(a, (c - a.width) / 2, (h - a.height) / 2);
            d.drawImage(e, (c - e.width) / 2, (h - e.height) / 2);
            return f;
        };

        function Ba(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                g = 105 * a,
                k = 125 * a,
                l = 4 * a,
                m = 10 * a,
                p = 5 * a,
                n = 10 * a,
                q = 110 * a,
                Y = n / 2,
                r = q / 2;
            d.width = g;
            d.height = k;
            c.save();
            c.globalAlpha = e ? 0.5 : 1;
            c.translate((g / 2) + (8 * a), (k / 2) + p);
            B(c, -Y, -r, n, q, m);
            e ? h(c, f[0]) : h(c, f[1]);
            c.translate((-130 * a) + p, (-128 * a) + p);
            c.beginPath();
            c.bezierCurveTo(159 * a, 93 * a, 156 * a, 99 * a, 154 * a, 102 * a);
            c.bezierCurveTo(128 * a, 92 * a, 90 * a, 93 * a, 72 * a, 96 * a);
            c.bezierCurveTo(68 * a, 84 * a, 143 * a, 73 * a, 162 * a, 86 * a);
            c.closePath();
            h(c, f[2]);
            c.restore();
            c.translate((g / 2) + 8, k / 2);
            c.globalAlpha = 1;
            B(c, -Y, -r, n, q, m);
            h(c, f[3], f[4], l);
            c.translate(-130 * a, -125 * a);
            c.beginPath();
            c.bezierCurveTo(159 * a, 93 * a, 156 * a, 99 * a, 154 * a, 102 * a);
            c.bezierCurveTo(128 * a, 92 * a, 90 * a, 93 * a, 72 * a, 96 * a);
            c.bezierCurveTo(68 * a, 84 * a, 143 * a, 73 * a, 162 * a, 86 * a);
            c.closePath();
            h(c, f[5], f[6], l);
            return d;
        };

        function de(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 469 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(20 * a, 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(88 * a, 30 * a);
            c.bezierCurveTo(96 * a, 49.5 * a, 96 * a, 49.5 * a, 104 * a, 69 * a);
            c.bezierCurveTo(105.5 * a, 41.5 * a, 105.5 * a, 41.5 * a, 107 * a, 14 * a);
            c.bezierCurveTo(114 * a, 9.5 * a, 114 * a, 9.5 * a, 121 * a, 5 * a);
            c.bezierCurveTo(135.5 * a, 27.5 * a, 135.5 * a, 27.5 * a, 150 * a, 50 * a);
            c.bezierCurveTo(110.5 * a, 286 * a, 110.5 * a, 286 * a, 103 * a, 331 * a);
            c.bezierCurveTo(69.5 * a, 325 * a, 69.5 * a, 325 * a, 36 * a, 319 * a);
            c.bezierCurveTo(56.5 * a, 180 * a, 56.5 * a, 180 * a, 77 * a, 41 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(118 * a, 31 * a);
            c.bezierCurveTo(125 * a, 43 * a, 125 * a, 43 * a, 132 * a, 55 * a);
            c.bezierCurveTo(109.5 * a, 185.5 * a, 109.5 * a, 185.5 * a, 87 * a, 316 * a);
            c.bezierCurveTo(72 * a, 313.5 * a, 72 * a, 313.5 * a, 57 * a, 311 * a);
            c.bezierCurveTo(76.5 * a, 181 * a, 76.5 * a, 181 * a, 96 * a, 51 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56 * a, 328 * a);
            c.bezierCurveTo(47 * a, 385.5 * a, 47 * a, 385.5 * a, 38 * a, 443 * a);
            c.bezierCurveTo(52 * a, 446 * a, 52 * a, 446 * a, 66 * a, 449 * a);
            c.bezierCurveTo(76.5 * a, 388.5 * a, 76.5 * a, 388.5 * a, 87 * a, 328 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(74 * a, 302 * a);
            c.bezierCurveTo(104 * a, 316.5 * a, 104 * a, 316.5 * a, 134 * a, 331 * a);
            c.bezierCurveTo(133 * a, 341 * a, 133 * a, 341 * a, 132 * a, 351 * a);
            c.bezierCurveTo(69.5 * a, 342 * a, 69.5 * a, 342 * a, 7 * a, 333 * a);
            c.bezierCurveTo(8 * a, 323 * a, 8 * a, 323 * a, 9 * a, 313 * a);
            c.closePath();
            h(c, f[0]);
            c.save();
            c.translate(51.5 * a, 440.5 * a);
            c.rotate(0.2);
            B(c, -20.5 * a, -18.5 * a, 41 * a, 37 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(73 * a, 316 * a);
            c.bezierCurveTo(90 * a, 324.5 * a, 90 * a, 324.5 * a, 107 * a, 333 * a);
            c.bezierCurveTo(70 * a, 327.5 * a, 70 * a, 327.5 * a, 33 * a, 322 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-20 * a, -20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(88 * a, 30 * a);
            c.bezierCurveTo(96 * a, 49.5 * a, 96 * a, 49.5 * a, 104 * a, 69 * a);
            c.bezierCurveTo(105.5 * a, 41.5 * a, 105.5 * a, 41.5 * a, 107 * a, 14 * a);
            c.bezierCurveTo(114 * a, 9.5 * a, 114 * a, 9.5 * a, 121 * a, 5 * a);
            c.bezierCurveTo(135.5 * a, 27.5 * a, 135.5 * a, 27.5 * a, 150 * a, 50 * a);
            c.bezierCurveTo(110.5 * a, 286 * a, 110.5 * a, 286 * a, 103 * a, 331 * a);
            c.bezierCurveTo(69.5 * a, 325 * a, 69.5 * a, 325 * a, 36 * a, 319 * a);
            c.bezierCurveTo(56.5 * a, 180 * a, 56.5 * a, 180 * a, 77 * a, 41 * a);
            c.closePath();
            h(c, f[1], f[2], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(118 * a, 31 * a);
            c.bezierCurveTo(125 * a, 43 * a, 125 * a, 43 * a, 132 * a, 55 * a);
            c.bezierCurveTo(109.5 * a, 185.5 * a, 109.5 * a, 185.5 * a, 87 * a, 316 * a);
            c.bezierCurveTo(72 * a, 313.5 * a, 72 * a, 313.5 * a, 57 * a, 311 * a);
            c.bezierCurveTo(76.5 * a, 181 * a, 76.5 * a, 181 * a, 96 * a, 51 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(88 * a, 30 * a);
            c.bezierCurveTo(96 * a, 49.5 * a, 96 * a, 49.5 * a, 104 * a, 69 * a);
            c.bezierCurveTo(105.5 * a, 41.5 * a, 105.5 * a, 41.5 * a, 107 * a, 14 * a);
            c.bezierCurveTo(114 * a, 9.5 * a, 114 * a, 9.5 * a, 121 * a, 5 * a);
            c.bezierCurveTo(135.5 * a, 27.5 * a, 135.5 * a, 27.5 * a, 150 * a, 50 * a);
            c.bezierCurveTo(110.5 * a, 286 * a, 110.5 * a, 286 * a, 103 * a, 331 * a);
            c.bezierCurveTo(69.5 * a, 325 * a, 69.5 * a, 325 * a, 36 * a, 319 * a);
            c.bezierCurveTo(56.5 * a, 180 * a, 56.5 * a, 180 * a, 77 * a, 41 * a);
            c.closePath();
            h(c, void 0, f[2], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56 * a, 328 * a);
            c.bezierCurveTo(47 * a, 385.5 * a, 47 * a, 385.5 * a, 38 * a, 443 * a);
            c.bezierCurveTo(52 * a, 446 * a, 52 * a, 446 * a, 66 * a, 449 * a);
            c.bezierCurveTo(76.5 * a, 388.5 * a, 76.5 * a, 388.5 * a, 87 * a, 328 * a);
            c.closePath();
            h(c, f[4], f[5], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(74 * a, 302 * a);
            c.bezierCurveTo(104 * a, 316.5 * a, 104 * a, 316.5 * a, 134 * a, 331 * a);
            c.bezierCurveTo(133 * a, 341 * a, 133 * a, 341 * a, 132 * a, 351 * a);
            c.bezierCurveTo(69.5 * a, 342 * a, 69.5 * a, 342 * a, 7 * a, 333 * a);
            c.bezierCurveTo(8 * a, 323 * a, 8 * a, 323 * a, 9 * a, 313 * a);
            c.closePath();
            h(c, f[4], f[5], 7 * a);
            c.save();
            c.translate(51.5 * a, 440.5 * a);
            c.rotate(0.2);
            B(c, -20.5 * a, -18.5 * a, 41 * a, 37 * a, 10 * a);
            c.restore();
            h(c, f[4], f[5], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(73 * a, 316 * a);
            c.bezierCurveTo(90 * a, 324.5 * a, 90 * a, 324.5 * a, 107 * a, 333 * a);
            c.bezierCurveTo(70 * a, 327.5 * a, 70 * a, 327.5 * a, 33 * a, 322 * a);
            c.closePath();
            h(c, f[6]);
            return d;
        };

        function ee(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 424 * a;
            d.height = 788 * a;
            c.translate(25 * a, 25 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(193.5 * a, 602.5 * a);
            c.rotate(-0.12);
            B(c, -26.5 * a, -97.5 * a, 53 * a, 195 * a, 25 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(137 * a, 519 * a);
            c.bezierCurveTo(182 * a, 513 * a, 182 * a, 513 * a, 227 * a, 507 * a);
            c.bezierCurveTo(214 * a, 417 * a, 189 * a, 304 * a, 221 * a, 180 * a);
            c.bezierCurveTo(191 * a, 126 * a, 192 * a, 105 * a, 198 * a, 64 * a);
            c.bezierCurveTo(123 * a, 102 * a, 99 * a, 285 * a, 137 * a, 517 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(175 * a, 119 * a);
            c.bezierCurveTo(176 * a, 142 * a, 184 * a, 165 * a, 197 * a, 183 * a);
            c.bezierCurveTo(167 * a, 325 * a, 191 * a, 405 * a, 202 * a, 502 * a);
            c.bezierCurveTo(180 * a, 503 * a, 180 * a, 503 * a, 158 * a, 504 * a);
            c.bezierCurveTo(135 * a, 396 * a, 134 * a, 185 * a, 175 * a, 119 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(110 * a, 518 * a);
            c.bezierCurveTo(111.5 * a, 533 * a, 111.5 * a, 533 * a, 113 * a, 548 * a);
            c.bezierCurveTo(162.5 * a, 544 * a, 162.5 * a, 544 * a, 212 * a, 540 * a);
            c.bezierCurveTo(312 * a, 535 * a, 281 * a, 665 * a, 225 * a, 665 * a);
            c.bezierCurveTo(227 * a, 686.5 * a, 227 * a, 686.5 * a, 229 * a, 708 * a);
            c.bezierCurveTo(343 * a, 684 * a, 354 * a, 496 * a, 222 * a, 498 * a);
            c.bezierCurveTo(165.5 * a, 503 * a, 165.5 * a, 503 * a, 109 * a, 508 * a);
            c.closePath();
            h(c, f[0]);
            A(c, 204 * a, 693 * a, 36.013886210738214 * a);
            h(c, f[0]);
            A(c, 105 * a, 518 * a, 30 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(171 * a, 535 * a);
            c.bezierCurveTo(139.5 * a, 537.5 * a, 139.5 * a, 537.5 * a, 108 * a, 540 * a);
            c.bezierCurveTo(110 * a, 527.5 * a, 110 * a, 527.5 * a, 112 * a, 515 * a);
            c.bezierCurveTo(148 * a, 513 * a, 148 * a, 513 * a, 184 * a, 511 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(244 * a, 669 * a);
            c.bezierCurveTo(248.5 * a, 680 * a, 248.5 * a, 680 * a, 253 * a, 691 * a);
            c.bezierCurveTo(239.5 * a, 697 * a, 239.5 * a, 697 * a, 226 * a, 703 * a);
            c.bezierCurveTo(223 * a, 691.5 * a, 223 * a, 691.5 * a, 220 * a, 680 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-25 * a, -25 * a);
            c.globalAlpha = 1;
            c.save();
            c.translate(193.5 * a, 602.5 * a);
            c.rotate(-0.12);
            B(c, -26.5 * a, -97.5 * a, 53 * a, 195 * a, 25 * a);
            c.restore();
            h(c, f[1], f[2], 16 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(137 * a, 519 * a);
            c.bezierCurveTo(182 * a, 513 * a, 182 * a, 513 * a, 227 * a, 507 * a);
            c.bezierCurveTo(214 * a, 417 * a, 189 * a, 304 * a, 221 * a, 180 * a);
            c.bezierCurveTo(191 * a, 126 * a, 192 * a, 105 * a, 198 * a, 64 * a);
            c.bezierCurveTo(123 * a, 102 * a, 99 * a, 285 * a, 137 * a, 517 * a);
            c.closePath();
            h(c, f[3], f[4], 16 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(175 * a, 119 * a);
            c.bezierCurveTo(176 * a, 142 * a, 184 * a, 165 * a, 197 * a, 183 * a);
            c.bezierCurveTo(167 * a, 325 * a, 191 * a, 405 * a, 202 * a, 502 * a);
            c.bezierCurveTo(180 * a, 503 * a, 180 * a, 503 * a, 158 * a, 504 * a);
            c.bezierCurveTo(135 * a, 396 * a, 134 * a, 185 * a, 175 * a, 119 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(110 * a, 518 * a);
            c.bezierCurveTo(111.5 * a, 533 * a, 111.5 * a, 533 * a, 113 * a, 548 * a);
            c.bezierCurveTo(162.5 * a, 544 * a, 162.5 * a, 544 * a, 212 * a, 540 * a);
            c.bezierCurveTo(312 * a, 535 * a, 281 * a, 665 * a, 225 * a, 665 * a);
            c.bezierCurveTo(227 * a, 686.5 * a, 227 * a, 686.5 * a, 229 * a, 708 * a);
            c.bezierCurveTo(343 * a, 684 * a, 354 * a, 496 * a, 222 * a, 498 * a);
            c.bezierCurveTo(165.5 * a, 503 * a, 165.5 * a, 503 * a, 109 * a, 508 * a);
            c.closePath();
            h(c, f[6], f[4], 16 * a);
            A(c, 204 * a, 693 * a, 36.013886210738214 * a);
            h(c, f[6], f[4], 16 * a);
            A(c, 105 * a, 518 * a, 30 * a);
            h(c, f[6], f[4], 16 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(171 * a, 535 * a);
            c.bezierCurveTo(139.5 * a, 537.5 * a, 139.5 * a, 537.5 * a, 108 * a, 540 * a);
            c.bezierCurveTo(110 * a, 527.5 * a, 110 * a, 527.5 * a, 112 * a, 515 * a);
            c.bezierCurveTo(148 * a, 513 * a, 148 * a, 513 * a, 184 * a, 511 * a);
            c.closePath();
            h(c, f[6]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(244 * a, 669 * a);
            c.bezierCurveTo(248.5 * a, 680 * a, 248.5 * a, 680 * a, 253 * a, 691 * a);
            c.bezierCurveTo(239.5 * a, 697 * a, 239.5 * a, 697 * a, 226 * a, 703 * a);
            c.bezierCurveTo(223 * a, 691.5 * a, 223 * a, 691.5 * a, 220 * a, 680 * a);
            c.closePath();
            h(c, f[6]);
            A(c, 204 * a, 693 * a, 17.029386365926403 * a);
            h(c, f[7]);
            A(c, 106 * a, 518 * a, 12 * a);
            h(c, f[7]);
            return d;
        };

        function Qf(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 100 * a;
            d.height = 250 * a;
            c.translate(-135 * a, -75 * a);
            c.globalAlpha = e ? 0.8 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(178.5 * a, 238.03125 * a);
            c.bezierCurveTo(177 * a, 175.03125 * a, 177 * a, 175.03125 * a, 175.5 * a, 112.03125 * a);
            c.bezierCurveTo(184.5 * a, 100.53125 * a, 184.5 * a, 100.53125 * a, 193.5 * a, 89.03125 * a);
            c.bezierCurveTo(202 * a, 100.03125 * a, 202 * a, 100.03125 * a, 210.5 * a, 111.03125 * a);
            c.bezierCurveTo(209.5 * a, 174.03125 * a, 209.5 * a, 174.03125 * a, 208.5 * a, 237.03125 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(155.5 * a, 239.03125 * a);
            c.bezierCurveTo(194 * a, 238.53125 * a, 194 * a, 238.53125 * a, 232.5 * a, 238.03125 * a);
            c.bezierCurveTo(232.5 * a, 243.03125 * a, 232.5 * a, 243.03125 * a, 232.5 * a, 248.03125 * a);
            c.bezierCurveTo(194 * a, 248.53125 * a, 194 * a, 248.53125 * a, 155.5 * a, 249.03125 * a);
            c.closePath();
            h(c, f[0]);
            A(c, 160.5 * a, 243.03125 * a, 7 * a);
            h(c, f[0]);
            A(c, 227.5 * a, 242.03125 * a, 7 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(185.5 * a, 253.03125 * a);
            c.bezierCurveTo(193.5 * a, 253.03125 * a, 193.5 * a, 253.03125 * a, 201.5 * a, 253.03125 * a);
            c.bezierCurveTo(201.5 * a, 276.03125 * a, 201.5 * a, 276.03125 * a, 201.5 * a, 299.03125 * a);
            c.bezierCurveTo(194.5 * a, 299.03125 * a, 194.5 * a, 299.03125 * a, 187.5 * a, 299.03125 * a);
            c.closePath();
            h(c, f[0], f[0], 5 * a);
            A(c, 194 * a, 298 * a, 9 * a);
            h(c, f[0], f[0], 5 * a);
            c.globalAlpha = 1;
            c.translate(-10 * a, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(178.5 * a, 238.03125 * a);
            c.bezierCurveTo(177 * a, 175.03125 * a, 177 * a, 175.03125 * a, 175.5 * a, 112.03125 * a);
            c.bezierCurveTo(184.5 * a, 100.53125 * a, 184.5 * a, 100.53125 * a, 193.5 * a, 89.03125 * a);
            c.bezierCurveTo(202 * a, 100.03125 * a, 202 * a, 100.03125 * a, 210.5 * a, 111.03125 * a);
            c.bezierCurveTo(209.5 * a, 174.03125 * a, 209.5 * a, 174.03125 * a, 208.5 * a, 237.03125 * a);
            c.closePath();
            h(c, f[3], f[4], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(155.5 * a, 239.03125 * a);
            c.bezierCurveTo(194 * a, 238.53125 * a, 194 * a, 238.53125 * a, 232.5 * a, 238.03125 * a);
            c.bezierCurveTo(232.5 * a, 243.03125 * a, 232.5 * a, 243.03125 * a, 232.5 * a, 248.03125 * a);
            c.bezierCurveTo(194 * a, 248.53125 * a, 194 * a, 248.53125 * a, 155.5 * a, 249.03125 * a);
            c.closePath();
            h(c, f[1], f[2], 5 * a);
            A(c, 160.5 * a, 243.03125 * a, 7 * a);
            h(c, f[1], f[2], 5 * a);
            A(c, 227.5 * a, 242.03125 * a, 7 * a);
            h(c, f[1], f[2], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(185.5 * a, 253.03125 * a);
            c.bezierCurveTo(193.5 * a, 253.03125 * a, 193.5 * a, 253.03125 * a, 201.5 * a, 253.03125 * a);
            c.bezierCurveTo(201.5 * a, 276.03125 * a, 201.5 * a, 276.03125 * a, 201.5 * a, 299.03125 * a);
            c.bezierCurveTo(194.5 * a, 299.03125 * a, 194.5 * a, 299.03125 * a, 187.5 * a, 299.03125 * a);
            c.closePath();
            h(c, f[1], f[2], 7 * a);
            A(c, 194 * a, 298 * a, 9 * a);
            h(c, f[1], f[2], 7 * a);
            return d;
        };

        function fe(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 290 * a;
            d.height = 525 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(20 * a, 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(111 * a, 351 * a);
            c.bezierCurveTo(129 * a, 218 * a, 129 * a, 218 * a, 147 * a, 85 * a);
            c.bezierCurveTo(167 * a, 65.5 * a, 167 * a, 65.5 * a, 187 * a, 46 * a);
            c.bezierCurveTo(201.5 * a, 70.5 * a, 201.5 * a, 70.5 * a, 216 * a, 95 * a);
            c.bezierCurveTo(194.5 * a, 227.5 * a, 194.5 * a, 227.5 * a, 173 * a, 360 * a);
            c.closePath();
            h(c, f[0]);
            c.save();
            c.translate(131 * a, 425.5 * a);
            c.rotate(0.16);
            B(c, -14 * a, -56.5 * a, 28 * a, 113 * a, 8 * a);
            c.restore();
            h(c, f[0]);
            A(c, 122 * a, 480 * a, 18.439088914585774 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(79 * a, 371 * a);
            c.bezierCurveTo(131 * a, 373 * a, 145 * a, 378 * a, 197 * a, 388 * a);
            c.bezierCurveTo(205 * a, 382.5 * a, 205 * a, 382.5 * a, 213 * a, 377 * a);
            c.bezierCurveTo(167 * a, 352 * a, 117 * a, 345 * a, 69 * a, 355 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-20 * a, -20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(111 * a, 351 * a);
            c.bezierCurveTo(129 * a, 218 * a, 129 * a, 218 * a, 147 * a, 85 * a);
            c.bezierCurveTo(167 * a, 65.5 * a, 167 * a, 65.5 * a, 187 * a, 46 * a);
            c.bezierCurveTo(201.5 * a, 70.5 * a, 201.5 * a, 70.5 * a, 216 * a, 95 * a);
            c.bezierCurveTo(194.5 * a, 227.5 * a, 194.5 * a, 227.5 * a, 173 * a, 360 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            c.save();
            c.translate(131 * a, 425.5 * a);
            c.rotate(0.16);
            B(c, -14 * a, -56.5 * a, 28 * a, 113 * a, 8 * a);
            c.restore();
            h(c, f[4], f[5], 12.5 * a);
            A(c, 122 * a, 480 * a, 18.439088914585774 * a);
            h(c, f[4], f[5], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(79 * a, 371 * a);
            c.bezierCurveTo(131 * a, 373 * a, 145 * a, 378 * a, 197 * a, 388 * a);
            c.bezierCurveTo(205 * a, 382.5 * a, 205 * a, 382.5 * a, 213 * a, 377 * a);
            c.bezierCurveTo(167 * a, 352 * a, 117 * a, 345 * a, 69 * a, 355 * a);
            c.closePath();
            h(c, f[4], f[5], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(128 * a, 345 * a);
            c.bezierCurveTo(142 * a, 345 * a, 147 * a, 346 * a, 158 * a, 349 * a);
            c.bezierCurveTo(177.5 * a, 224.5 * a, 177.5 * a, 224.5 * a, 197 * a, 100 * a);
            c.bezierCurveTo(190.5 * a, 84.5 * a, 190.5 * a, 84.5 * a, 184 * a, 69 * a);
            c.bezierCurveTo(173.5 * a, 82 * a, 173.5 * a, 82 * a, 163 * a, 95 * a);
            c.closePath();
            h(c, f[3]);
            return d;
        };

        function zd(a, e, f, d) {
            e = document.createElement("canvas");
            var c = e.getContext("2d");
            e.width = 283 * a;
            e.height = 224 * a;
            c.translate(0, 15 * a);
            c.globalAlpha = 0.5;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(93 * a, 55 * a);
            c.bezierCurveTo(127 * a, 27 * a, 195 * a, 42 * a, 213 * a, 78 * a);
            c.bezierCurveTo(254 * a, 134 * a, 226 * a, 198 * a, 153 * a, 197 * a);
            c.bezierCurveTo(59 * a, 204 * a, 56 * a, 158 * a, 51 * a, 115 * a);
            c.bezierCurveTo(50 * a, 93 * a, 81 * a, 62 * a, 90 * a, 57 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100 * a, 33 * a);
            c.bezierCurveTo(85 * a, 62 * a, 102 * a, 66 * a, 110 * a, 83 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(181 * a, 32 * a);
            c.bezierCurveTo(196 * a, 62 * a, 181 * a, 68 * a, 178 * a, 69 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(225 * a, 52 * a);
            c.bezierCurveTo(228 * a, 78 * a, 207 * a, 77 * a, 192 * a, 88 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(34 * a, 134 * a);
            c.bezierCurveTo(46 * a, 111 * a, 57 * a, 111 * a, 79 * a, 109 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(249 * a, 135 * a);
            c.bezierCurveTo(233 * a, 107 * a, 212 * a, 112 * a, 202 * a, 115 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56 * a, 50 * a);
            c.bezierCurveTo(56 * a, 82 * a, 73 * a, 82 * a, 93 * a, 89 * a);
            h(c, f[0]);
            c.translate(0, -15 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100 * a, 33 * a);
            c.bezierCurveTo(85 * a, 62 * a, 102 * a, 66 * a, 110 * a, 83 * a);
            h(c, void 0, f[2], 40 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(181 * a, 32 * a);
            c.bezierCurveTo(196 * a, 62 * a, 181 * a, 68 * a, 178 * a, 69 * a);
            h(c, void 0, f[2], 40 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(225 * a, 52 * a);
            c.bezierCurveTo(228 * a, 78 * a, 207 * a, 77 * a, 192 * a, 88 * a);
            h(c, void 0, f[2], 40 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(34 * a, 134 * a);
            c.bezierCurveTo(46 * a, 111 * a, 57 * a, 111 * a, 79 * a, 109 * a);
            h(c, void 0, f[2], 40 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(249 * a, 135 * a);
            c.bezierCurveTo(233 * a, 107 * a, 212 * a, 112 * a, 202 * a, 115 * a);
            h(c, void 0, f[2], 40 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56 * a, 50 * a);
            c.bezierCurveTo(56 * a, 82 * a, 73 * a, 82 * a, 93 * a, 89 * a);
            h(c, void 0, f[2], 40 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(93 * a, 55 * a);
            c.bezierCurveTo(127 * a, 27 * a, 195 * a, 42 * a, 213 * a, 78 * a);
            c.bezierCurveTo(254 * a, 134 * a, 226 * a, 198 * a, 153 * a, 197 * a);
            c.bezierCurveTo(59 * a, 204 * a, 56 * a, 158 * a, 51 * a, 115 * a);
            c.bezierCurveTo(50 * a, 93 * a, 81 * a, 62 * a, 90 * a, 57 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100 * a, 33 * a);
            c.bezierCurveTo(85 * a, 62 * a, 102 * a, 66 * a, 110 * a, 83 * a);
            h(c, void 0, f[1], 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(181 * a, 32 * a);
            c.bezierCurveTo(196 * a, 62 * a, 181 * a, 68 * a, 178 * a, 69 * a);
            h(c, void 0, f[1], 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(225 * a, 52 * a);
            c.bezierCurveTo(228 * a, 78 * a, 207 * a, 77 * a, 192 * a, 88 * a);
            h(c, void 0, f[1], 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(34 * a, 134 * a);
            c.bezierCurveTo(46 * a, 111 * a, 57 * a, 111 * a, 79 * a, 109 * a);
            h(c, void 0, f[1], 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(249 * a, 135 * a);
            c.bezierCurveTo(233 * a, 107 * a, 212 * a, 112 * a, 202 * a, 115 * a);
            h(c, void 0, f[1], 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56 * a, 50 * a);
            c.bezierCurveTo(56 * a, 82 * a, 73 * a, 82 * a, 93 * a, 89 * a);
            h(c, void 0, f[1], 20 * a);
            A(c, 101 * a, 155 * a, 20.591260281974 * a);
            h(c, f[3]);
            A(c, 180 * a, 155 * a, 20.591260281974 * a);
            h(c, f[3]);
            A(c, 95 * a, 148 * a, 7.211102550927978 * a);
            h(c, f[4]);
            A(c, 173 * a, 148 * a, 7.211102550927978 * a);
            h(c, f[4]);
            (1 === d) && (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(191 * a, 107 * a), c.bezierCurveTo(180 * a, 104 * a, 175 * a, 101 * a, 180 * a, 95 * a), c.bezierCurveTo(180 * a, 95 * a, 181 * a, 99 * a, 188 * a, 103 * a), c.bezierCurveTo(191 * a, 101 * a, 191 * a, 95 * a, 190 * a, 91 * a), c.bezierCurveTo(190 * a, 91 * a, 196 * a, 89 * a, 195 * a, 99 * a), c.closePath(), h(c, f[2]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(206 * a, 98 * a), c.bezierCurveTo(203 * a, 95 * a, 200 * a, 93 * a, 198 * a, 101 * a), c.bezierCurveTo(194 * a, 109 * a, 193 * a, 109 * a, 196 * a, 110 * a), c.bezierCurveTo(206 * a, 115 * a, 209 * a, 114 * a, 211 * a, 111 * a), c.bezierCurveTo(211 * a, 106 * a, 208 * a, 108 * a, 203 * a, 108 * a), c.bezierCurveTo(193 * a, 107 * a, 204 * a, 101 * a, 206 * a, 99 * a), c.closePath(), h(c, f[2]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(172 * a, 111 * a), c.bezierCurveTo(172 * a, 106 * a, 174 * a, 105 * a, 185 * a, 109 * a), c.bezierCurveTo(190 * a, 109 * a, 189 * a, 114 * a, 185 * a, 120 * a), c.bezierCurveTo(181 * a, 125 * a, 180 * a, 126 * a, 176 * a, 122 * a), c.bezierCurveTo(182 * a, 119 * a, 187 * a, 110 * a, 182 * a, 112 * a), c.closePath(), h(c, f[2]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(202 * a, 125 * a), c.bezierCurveTo(197 * a, 117 * a, 193 * a, 116 * a, 193 * a, 120 * a), c.bezierCurveTo(192.5 * a, 124.5 * a, 192.5 * a, 124.5 * a, 192 * a, 129 * a), c.bezierCurveTo(188 * a, 129 * a, 187 * a, 124 * a, 189 * a, 120 * a), c.bezierCurveTo(191 * a, 110 * a, 192 * a, 110 * a, 200 * a, 116 * a), c.bezierCurveTo(208 * a, 120 * a, 207 * a, 123 * a, 202 * a, 125 * a), c.closePath(), h(c, f[2]));
            return e;
        };

        function Rf(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 283 * a;
            f.height = 224 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(100 * a, 33 * a);
            d.bezierCurveTo(85 * a, 62 * a, 102 * a, 66 * a, 110 * a, 83 * a);
            h(d, void 0, e[0], 40 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(181 * a, 32 * a);
            d.bezierCurveTo(196 * a, 62 * a, 181 * a, 68 * a, 178 * a, 69 * a);
            h(d, void 0, e[0], 40 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(225 * a, 52 * a);
            d.bezierCurveTo(228 * a, 78 * a, 207 * a, 77 * a, 192 * a, 88 * a);
            h(d, void 0, e[0], 40 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(34 * a, 134 * a);
            d.bezierCurveTo(46 * a, 111 * a, 57 * a, 111 * a, 79 * a, 109 * a);
            h(d, void 0, e[0], 40 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(249 * a, 135 * a);
            d.bezierCurveTo(233 * a, 107 * a, 212 * a, 112 * a, 202 * a, 115 * a);
            h(d, void 0, e[0], 40 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(56 * a, 50 * a);
            d.bezierCurveTo(56 * a, 82 * a, 73 * a, 82 * a, 93 * a, 89 * a);
            h(d, void 0, e[0], 40 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(93 * a, 55 * a);
            d.bezierCurveTo(124 * a, 29 * a, 179 * a, 44 * a, 188 * a, 52 * a);
            d.bezierCurveTo(207 * a, 64 * a, 226 * a, 94 * a, 231 * a, 118 * a);
            d.bezierCurveTo(236 * a, 145 * a, 222 * a, 184 * a, 193 * a, 192 * a);
            d.bezierCurveTo(147 * a, 201 * a, 116 * a, 200 * a, 93 * a, 193 * a);
            d.bezierCurveTo(61 * a, 180 * a, 48 * a, 147 * a, 50 * a, 123 * a);
            d.bezierCurveTo(50 * a, 93 * a, 76 * a, 66 * a, 92 * a, 56 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function uc(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 131 * a;
            e.height = 121 * a;
            d.translate(0, 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(110 * a, 59 * a);
            d.bezierCurveTo(93 * a, 61.5 * a, 93 * a, 61.5 * a, 76 * a, 64 * a);
            d.bezierCurveTo(84.5 * a, 78.5 * a, 84.5 * a, 78.5 * a, 93 * a, 93 * a);
            d.bezierCurveTo(70 * a, 111 * a, 43 * a, 103 * a, 30 * a, 82 * a);
            d.bezierCurveTo(17 * a, 61 * a, 25 * a, 30 * a, 51 * a, 21 * a);
            d.bezierCurveTo(66 * a, 15 * a, 83 * a, 18 * a, 96 * a, 29 * a);
            d.bezierCurveTo(104 * a, 35 * a, 109 * a, 47 * a, 110 * a, 58 * a);
            d.closePath();
            h(d, f[0]);
            d.globalAlpha = 1;
            d.translate(0, -20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(110 * a, 59 * a);
            d.bezierCurveTo(93 * a, 61.5 * a, 93 * a, 61.5 * a, 76 * a, 64 * a);
            d.bezierCurveTo(84.5 * a, 78.5 * a, 84.5 * a, 78.5 * a, 93 * a, 93 * a);
            d.bezierCurveTo(70 * a, 111 * a, 43 * a, 103 * a, 30 * a, 82 * a);
            d.bezierCurveTo(17 * a, 61 * a, 25 * a, 30 * a, 51 * a, 21 * a);
            d.bezierCurveTo(66 * a, 15 * a, 83 * a, 18 * a, 96 * a, 29 * a);
            d.bezierCurveTo(104 * a, 35 * a, 109 * a, 47 * a, 110 * a, 58 * a);
            d.closePath();
            h(d, f[1], f[2], 10 * a);
            return e;
        };

        function vc(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 104 * a;
            e.height = 112 * a;
            d.translate(0, 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 44 * a);
            d.bezierCurveTo(30.5 * a, 48 * a, 30.5 * a, 48 * a, 45 * a, 52 * a);
            d.bezierCurveTo(36.5 * a, 63 * a, 36.5 * a, 63 * a, 28 * a, 74 * a);
            d.bezierCurveTo(32 * a, 86 * a, 61 * a, 92 * a, 78 * a, 76 * a);
            d.bezierCurveTo(93 * a, 62 * a, 92 * a, 40 * a, 80 * a, 26 * a);
            d.bezierCurveTo(65 * a, 11 * a, 42 * a, 16 * a, 34 * a, 21 * a);
            d.bezierCurveTo(22 * a, 27 * a, 16 * a, 39 * a, 16 * a, 44 * a);
            d.closePath();
            h(d, f[0]);
            d.globalAlpha = 1;
            d.translate(0, -15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(16 * a, 44 * a);
            d.bezierCurveTo(30.5 * a, 48 * a, 30.5 * a, 48 * a, 45 * a, 52 * a);
            d.bezierCurveTo(36.5 * a, 63 * a, 36.5 * a, 63 * a, 28 * a, 74 * a);
            d.bezierCurveTo(32 * a, 86 * a, 61 * a, 92 * a, 78 * a, 76 * a);
            d.bezierCurveTo(93 * a, 62 * a, 92 * a, 40 * a, 80 * a, 26 * a);
            d.bezierCurveTo(65 * a, 11 * a, 42 * a, 16 * a, 34 * a, 21 * a);
            d.bezierCurveTo(22 * a, 27 * a, 16 * a, 39 * a, 16 * a, 44 * a);
            d.closePath();
            h(d, f[1], f[2], 8 * a);
            return e;
        };

        function Sf(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 321 * a;
            d.height = 284 * a;
            c.translate(100 * a, 30 * a);
            c.translate(5 * a, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(58 * a, 33 * a);
            c.bezierCurveTo(81 * a, 22 * a, 93 * a, 26 * a, 123 * a, 47 * a);
            c.bezierCurveTo(160 * a, 73 * a, 169 * a, 80 * a, 191 * a, 99 * a);
            c.bezierCurveTo(202 * a, 107 * a, 211 * a, 118 * a, 195 * a, 151 * a);
            c.bezierCurveTo(181 * a, 183 * a, 157 * a, 192 * a, 129 * a, 174 * a);
            c.bezierCurveTo(78 * a, 140 * a, 68 * a, 129 * a, 37 * a, 94 * a);
            c.bezierCurveTo(15 * a, 68 * a, 25 * a, 52 * a, 56 * a, 34 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(58 * a, 33 * a);
            c.bezierCurveTo(81 * a, 22 * a, 93 * a, 26 * a, 123 * a, 47 * a);
            c.bezierCurveTo(160 * a, 73 * a, 169 * a, 80 * a, 191 * a, 99 * a);
            c.bezierCurveTo(202 * a, 107 * a, 211 * a, 118 * a, 195 * a, 151 * a);
            c.bezierCurveTo(181 * a, 183 * a, 157 * a, 192 * a, 129 * a, 174 * a);
            c.bezierCurveTo(78 * a, 140 * a, 68 * a, 129 * a, 37 * a, 94 * a);
            c.bezierCurveTo(15 * a, 68 * a, 25 * a, 52 * a, 56 * a, 34 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(167 * a, 120 * a);
            c.bezierCurveTo(196 * a, 106 * a, 207 * a, 111 * a, 199 * a, 135 * a);
            c.bezierCurveTo(185 * a, 172 * a, 166 * a, 187 * a, 145 * a, 179 * a);
            c.bezierCurveTo(118 * a, 166 * a, 127 * a, 139 * a, 166 * a, 121 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(25 * a, 64 * a);
            c.bezierCurveTo(59 * a, 96 * a, 97 * a, 128 * a, 129 * a, 151 * a);
            c.bezierCurveTo(126 * a, 163 * a, 134 * a, 174 * a, 142 * a, 180 * a);
            c.bezierCurveTo(114 * a, 170 * a, 68 * a, 134 * a, 31 * a, 85 * a);
            c.bezierCurveTo(24 * a, 71 * a, 24 * a, 70 * a, 25 * a, 65 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(161 * a, 141 * a);
            c.bezierCurveTo(181 * a, 131 * a, 186 * a, 135 * a, 173 * a, 152 * a);
            c.bezierCurveTo(163 * a, 163 * a, 155 * a, 161 * a, 151 * a, 150 * a);
            c.bezierCurveTo(147 * a, 140 * a, 155 * a, 131 * a, 175 * a, 125 * a);
            c.bezierCurveTo(190 * a, 120 * a, 196 * a, 121 * a, 189 * a, 143 * a);
            c.bezierCurveTo(182 * a, 167 * a, 169 * a, 174 * a, 157 * a, 174 * a);
            c.bezierCurveTo(138 * a, 172 * a, 139 * a, 162 * a, 140 * a, 156 * a);
            h(c, void 0, f[4], 4 * a);
            c.translate(-100 * a, -30 * a);
            c.translate(10 * a, 70 * a);
            c.translate(5 * a, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(58 * a, 33 * a);
            c.bezierCurveTo(81 * a, 22 * a, 93 * a, 26 * a, 123 * a, 47 * a);
            c.bezierCurveTo(160 * a, 73 * a, 169 * a, 80 * a, 191 * a, 99 * a);
            c.bezierCurveTo(202 * a, 107 * a, 211 * a, 118 * a, 195 * a, 151 * a);
            c.bezierCurveTo(181 * a, 183 * a, 157 * a, 192 * a, 129 * a, 174 * a);
            c.bezierCurveTo(78 * a, 140 * a, 68 * a, 129 * a, 37 * a, 94 * a);
            c.bezierCurveTo(15 * a, 68 * a, 25 * a, 52 * a, 56 * a, 34 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(58 * a, 33 * a);
            c.bezierCurveTo(81 * a, 22 * a, 93 * a, 26 * a, 123 * a, 47 * a);
            c.bezierCurveTo(160 * a, 73 * a, 169 * a, 80 * a, 191 * a, 99 * a);
            c.bezierCurveTo(202 * a, 107 * a, 211 * a, 118 * a, 195 * a, 151 * a);
            c.bezierCurveTo(181 * a, 183 * a, 157 * a, 192 * a, 129 * a, 174 * a);
            c.bezierCurveTo(78 * a, 140 * a, 68 * a, 129 * a, 37 * a, 94 * a);
            c.bezierCurveTo(15 * a, 68 * a, 25 * a, 52 * a, 56 * a, 34 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(167 * a, 120 * a);
            c.bezierCurveTo(196 * a, 106 * a, 207 * a, 111 * a, 199 * a, 135 * a);
            c.bezierCurveTo(185 * a, 172 * a, 166 * a, 187 * a, 145 * a, 179 * a);
            c.bezierCurveTo(118 * a, 166 * a, 127 * a, 139 * a, 166 * a, 121 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(25 * a, 64 * a);
            c.bezierCurveTo(59 * a, 96 * a, 97 * a, 128 * a, 129 * a, 151 * a);
            c.bezierCurveTo(126 * a, 163 * a, 134 * a, 174 * a, 142 * a, 180 * a);
            c.bezierCurveTo(114 * a, 170 * a, 68 * a, 134 * a, 31 * a, 85 * a);
            c.bezierCurveTo(24 * a, 71 * a, 24 * a, 70 * a, 25 * a, 65 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(161 * a, 141 * a);
            c.bezierCurveTo(181 * a, 131 * a, 186 * a, 135 * a, 173 * a, 152 * a);
            c.bezierCurveTo(163 * a, 163 * a, 155 * a, 161 * a, 151 * a, 150 * a);
            c.bezierCurveTo(147 * a, 140 * a, 155 * a, 131 * a, 175 * a, 125 * a);
            c.bezierCurveTo(190 * a, 120 * a, 196 * a, 121 * a, 189 * a, 143 * a);
            c.bezierCurveTo(182 * a, 167 * a, 169 * a, 174 * a, 157 * a, 174 * a);
            c.bezierCurveTo(138 * a, 172 * a, 139 * a, 162 * a, 140 * a, 156 * a);
            h(c, void 0, f[4], 4 * a);
            c.translate(20 * a, -80 * a);
            c.translate(5 * a, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(58 * a, 33 * a);
            c.bezierCurveTo(81 * a, 22 * a, 93 * a, 26 * a, 123 * a, 47 * a);
            c.bezierCurveTo(160 * a, 73 * a, 169 * a, 80 * a, 191 * a, 99 * a);
            c.bezierCurveTo(202 * a, 107 * a, 211 * a, 118 * a, 195 * a, 151 * a);
            c.bezierCurveTo(181 * a, 183 * a, 157 * a, 192 * a, 129 * a, 174 * a);
            c.bezierCurveTo(78 * a, 140 * a, 68 * a, 129 * a, 37 * a, 94 * a);
            c.bezierCurveTo(15 * a, 68 * a, 25 * a, 52 * a, 56 * a, 34 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(58 * a, 33 * a);
            c.bezierCurveTo(81 * a, 22 * a, 93 * a, 26 * a, 123 * a, 47 * a);
            c.bezierCurveTo(160 * a, 73 * a, 169 * a, 80 * a, 191 * a, 99 * a);
            c.bezierCurveTo(202 * a, 107 * a, 211 * a, 118 * a, 195 * a, 151 * a);
            c.bezierCurveTo(181 * a, 183 * a, 157 * a, 192 * a, 129 * a, 174 * a);
            c.bezierCurveTo(78 * a, 140 * a, 68 * a, 129 * a, 37 * a, 94 * a);
            c.bezierCurveTo(15 * a, 68 * a, 25 * a, 52 * a, 56 * a, 34 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(167 * a, 120 * a);
            c.bezierCurveTo(196 * a, 106 * a, 207 * a, 111 * a, 199 * a, 135 * a);
            c.bezierCurveTo(185 * a, 172 * a, 166 * a, 187 * a, 145 * a, 179 * a);
            c.bezierCurveTo(118 * a, 166 * a, 127 * a, 139 * a, 166 * a, 121 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(25 * a, 64 * a);
            c.bezierCurveTo(59 * a, 96 * a, 97 * a, 128 * a, 129 * a, 151 * a);
            c.bezierCurveTo(126 * a, 163 * a, 134 * a, 174 * a, 142 * a, 180 * a);
            c.bezierCurveTo(114 * a, 170 * a, 68 * a, 134 * a, 31 * a, 85 * a);
            c.bezierCurveTo(24 * a, 71 * a, 24 * a, 70 * a, 25 * a, 65 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(161 * a, 141 * a);
            c.bezierCurveTo(181 * a, 131 * a, 186 * a, 135 * a, 173 * a, 152 * a);
            c.bezierCurveTo(163 * a, 163 * a, 155 * a, 161 * a, 151 * a, 150 * a);
            c.bezierCurveTo(147 * a, 140 * a, 155 * a, 131 * a, 175 * a, 125 * a);
            c.bezierCurveTo(190 * a, 120 * a, 196 * a, 121 * a, 189 * a, 143 * a);
            c.bezierCurveTo(182 * a, 167 * a, 169 * a, 174 * a, 157 * a, 174 * a);
            c.bezierCurveTo(138 * a, 172 * a, 139 * a, 162 * a, 140 * a, 156 * a);
            h(c, void 0, f[4], 4 * a);
            return d;
        };

        function ge(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 290 * a;
            d.height = 525 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(20 * a, 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(111 * a, 351 * a);
            c.bezierCurveTo(128.5 * a, 218.5 * a, 128.5 * a, 218.5 * a, 146 * a, 86 * a);
            c.bezierCurveTo(166.5 * a, 66.5 * a, 166.5 * a, 66.5 * a, 187 * a, 47 * a);
            c.bezierCurveTo(201 * a, 71.5 * a, 201 * a, 71.5 * a, 215 * a, 96 * a);
            c.bezierCurveTo(193 * a, 228.5 * a, 193 * a, 228.5 * a, 171 * a, 361 * a);
            c.closePath();
            h(c, f[0]);
            c.save();
            c.translate(129.5 * a, 424 * a);
            c.rotate(0.16);
            B(c, -15.5 * a, -63 * a, 31 * a, 126 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            A(c, 121 * a, 480 * a, 20.396078054371138 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(90 * a, 311 * a);
            c.bezierCurveTo(95 * a, 324 * a, 95 * a, 324 * a, 100 * a, 337 * a);
            c.bezierCurveTo(141.5 * a, 345.5 * a, 141.5 * a, 345.5 * a, 183 * a, 354 * a);
            c.bezierCurveTo(193.5 * a, 342.5 * a, 193.5 * a, 342.5 * a, 204 * a, 331 * a);
            c.bezierCurveTo(202 * a, 354 * a, 202 * a, 354 * a, 200 * a, 377 * a);
            c.bezierCurveTo(147 * a, 388 * a, 106 * a, 371 * a, 79 * a, 356 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-20 * a, -20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(111 * a, 351 * a);
            c.bezierCurveTo(128.5 * a, 218.5 * a, 128.5 * a, 218.5 * a, 146 * a, 86 * a);
            c.bezierCurveTo(166.5 * a, 66.5 * a, 166.5 * a, 66.5 * a, 187 * a, 47 * a);
            c.bezierCurveTo(201 * a, 71.5 * a, 201 * a, 71.5 * a, 215 * a, 96 * a);
            c.bezierCurveTo(193 * a, 228.5 * a, 193 * a, 228.5 * a, 171 * a, 361 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            c.save();
            c.translate(129.5 * a, 424 * a);
            c.rotate(0.16);
            B(c, -15.5 * a, -63 * a, 31 * a, 126 * a, 10 * a);
            c.restore();
            h(c, f[4], f[5], 12.5 * a);
            A(c, 121 * a, 480 * a, 20.396078054371138 * a);
            h(c, f[4], f[5], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(90 * a, 311 * a);
            c.bezierCurveTo(95 * a, 324 * a, 95 * a, 324 * a, 100 * a, 337 * a);
            c.bezierCurveTo(141.5 * a, 345.5 * a, 141.5 * a, 345.5 * a, 183 * a, 354 * a);
            c.bezierCurveTo(193.5 * a, 342.5 * a, 193.5 * a, 342.5 * a, 204 * a, 331 * a);
            c.bezierCurveTo(202 * a, 354 * a, 202 * a, 354 * a, 200 * a, 377 * a);
            c.bezierCurveTo(147 * a, 388 * a, 106 * a, 371 * a, 79 * a, 356 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            return d;
        };

        function he(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 290 * a;
            d.height = 525 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(20 * a, 20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(112 * a, 356 * a);
            c.bezierCurveTo(124 * a, 220.5 * a, 124 * a, 220.5 * a, 136 * a, 85 * a);
            c.bezierCurveTo(162.5 * a, 65.5 * a, 162.5 * a, 65.5 * a, 189 * a, 46 * a);
            c.bezierCurveTo(208.5 * a, 72.5 * a, 208.5 * a, 72.5 * a, 228 * a, 99 * a);
            c.bezierCurveTo(200 * a, 232 * a, 200 * a, 232 * a, 172 * a, 365 * a);
            c.closePath();
            h(c, f[0]);
            c.save();
            c.translate(131 * a, 423 * a);
            c.rotate(0.16);
            B(c, -14 * a, -53 * a, 28 * a, 106 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.save();
            c.translate(122 * a, 480 * a);
            c.rotate(1.72);
            P(c, 4, 26.476404589747453 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(210 * a, 387 * a);
            c.bezierCurveTo(138 * a, 376 * a, 138 * a, 376 * a, 66 * a, 365 * a);
            c.bezierCurveTo(76 * a, 355 * a, 76 * a, 355 * a, 86 * a, 345 * a);
            c.bezierCurveTo(99 * a, 346.5 * a, 99 * a, 346.5 * a, 112 * a, 348 * a);
            c.bezierCurveTo(128.5 * a, 344 * a, 128.5 * a, 344 * a, 145 * a, 340 * a);
            c.bezierCurveTo(158 * a, 348 * a, 158 * a, 348 * a, 171 * a, 356 * a);
            c.bezierCurveTo(184 * a, 358 * a, 184 * a, 358 * a, 197 * a, 360 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(129 * a, 338 * a);
            c.bezierCurveTo(137 * a, 336 * a, 137 * a, 336 * a, 145 * a, 334 * a);
            c.bezierCurveTo(152.5 * a, 338 * a, 152.5 * a, 338 * a, 160 * a, 342 * a);
            c.bezierCurveTo(184 * a, 224 * a, 184 * a, 224 * a, 208 * a, 106 * a);
            c.bezierCurveTo(197 * a, 88 * a, 187 * a, 70 * a, 186 * a, 70 * a);
            c.bezierCurveTo(169.5 * a, 83 * a, 169.5 * a, 83 * a, 153 * a, 96 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-20 * a, -20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(112 * a, 356 * a);
            c.bezierCurveTo(124 * a, 220.5 * a, 124 * a, 220.5 * a, 136 * a, 85 * a);
            c.bezierCurveTo(162.5 * a, 65.5 * a, 162.5 * a, 65.5 * a, 189 * a, 46 * a);
            c.bezierCurveTo(208.5 * a, 72.5 * a, 208.5 * a, 72.5 * a, 228 * a, 99 * a);
            c.bezierCurveTo(200 * a, 232 * a, 200 * a, 232 * a, 172 * a, 365 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            c.save();
            c.translate(131 * a, 423 * a);
            c.rotate(0.16);
            B(c, -14 * a, -53 * a, 28 * a, 106 * a, 10 * a);
            c.restore();
            h(c, f[4], f[5], 12.5 * a);
            c.save();
            c.translate(122 * a, 480 * a);
            c.rotate(1.72);
            P(c, 4, 26.476404589747453 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(210 * a, 387 * a);
            c.bezierCurveTo(138 * a, 376 * a, 138 * a, 376 * a, 66 * a, 365 * a);
            c.bezierCurveTo(76 * a, 355 * a, 76 * a, 355 * a, 86 * a, 345 * a);
            c.bezierCurveTo(99 * a, 346.5 * a, 99 * a, 346.5 * a, 112 * a, 348 * a);
            c.bezierCurveTo(128.5 * a, 344 * a, 128.5 * a, 344 * a, 145 * a, 340 * a);
            c.bezierCurveTo(158 * a, 348 * a, 158 * a, 348 * a, 171 * a, 356 * a);
            c.bezierCurveTo(184 * a, 358 * a, 184 * a, 358 * a, 197 * a, 360 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(129 * a, 338 * a);
            c.bezierCurveTo(137 * a, 336 * a, 137 * a, 336 * a, 145 * a, 334 * a);
            c.bezierCurveTo(152.5 * a, 338 * a, 152.5 * a, 338 * a, 160 * a, 342 * a);
            c.bezierCurveTo(184 * a, 224 * a, 184 * a, 224 * a, 208 * a, 106 * a);
            c.bezierCurveTo(197 * a, 88 * a, 187 * a, 70 * a, 186 * a, 70 * a);
            c.bezierCurveTo(169.5 * a, 83 * a, 169.5 * a, 83 * a, 153 * a, 96 * a);
            c.closePath();
            h(c, f[3]);
            return d;
        };

        function ie(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 290 * a;
            d.height = 525 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(20 * a, 20 * a);
            c.translate(-20 * a, -20 * a);
            c.save();
            c.translate(132 * a, 423 * a);
            c.rotate(0.16);
            B(c, -14 * a, -61 * a, 28 * a, 122 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100 * a, 344 * a);
            c.bezierCurveTo(123 * a, 214 * a, 123 * a, 214 * a, 146 * a, 84 * a);
            c.bezierCurveTo(166.5 * a, 65 * a, 166.5 * a, 65 * a, 187 * a, 46 * a);
            c.bezierCurveTo(201 * a, 71 * a, 201 * a, 71 * a, 215 * a, 96 * a);
            c.bezierCurveTo(199.5 * a, 226.5 * a, 199.5 * a, 226.5 * a, 184 * a, 357 * a);
            c.bezierCurveTo(162.5 * a, 362.5 * a, 162.5 * a, 362.5 * a, 141 * a, 368 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(75 * a, 328 * a);
            c.bezierCurveTo(88 * a, 336.5 * a, 88 * a, 336.5 * a, 101 * a, 345 * a);
            c.bezierCurveTo(123.5 * a, 337.5 * a, 123.5 * a, 337.5 * a, 146 * a, 330 * a);
            c.bezierCurveTo(165 * a, 343.5 * a, 165 * a, 343.5 * a, 184 * a, 357 * a);
            c.bezierCurveTo(198.5 * a, 353 * a, 198.5 * a, 353 * a, 213 * a, 349 * a);
            c.bezierCurveTo(200.5 * a, 364.5 * a, 200.5 * a, 364.5 * a, 188 * a, 380 * a);
            c.bezierCurveTo(163 * a, 380.5 * a, 163 * a, 380.5 * a, 138 * a, 381 * a);
            c.bezierCurveTo(112 * a, 373.5 * a, 112 * a, 373.5 * a, 86 * a, 366 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(121 * a, 332 * a);
            c.bezierCurveTo(133.5 * a, 327.5 * a, 133.5 * a, 327.5 * a, 146 * a, 323 * a);
            c.bezierCurveTo(157 * a, 330.5 * a, 157 * a, 330.5 * a, 168 * a, 338 * a);
            c.bezierCurveTo(182.5 * a, 219.5 * a, 182.5 * a, 219.5 * a, 197 * a, 101 * a);
            c.bezierCurveTo(190 * a, 84.5 * a, 190 * a, 84.5 * a, 183 * a, 68 * a);
            c.bezierCurveTo(172.5 * a, 81 * a, 172.5 * a, 81 * a, 162 * a, 94 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(105 * a, 463 * a);
            c.bezierCurveTo(124.5 * a, 466 * a, 124.5 * a, 466 * a, 144 * a, 469 * a);
            c.bezierCurveTo(145.5 * a, 478.5 * a, 145.5 * a, 478.5 * a, 147 * a, 488 * a);
            c.bezierCurveTo(133.5 * a, 495.5 * a, 133.5 * a, 495.5 * a, 120 * a, 503 * a);
            c.bezierCurveTo(108.5 * a, 492 * a, 108.5 * a, 492 * a, 97 * a, 481 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-20 * a, -20 * a);
            c.save();
            c.translate(132 * a, 423 * a);
            c.rotate(0.16);
            B(c, -14 * a, -61 * a, 28 * a, 122 * a, 10 * a);
            c.restore();
            h(c, f[4], f[5], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100 * a, 344 * a);
            c.bezierCurveTo(123 * a, 214 * a, 123 * a, 214 * a, 146 * a, 84 * a);
            c.bezierCurveTo(166.5 * a, 65 * a, 166.5 * a, 65 * a, 187 * a, 46 * a);
            c.bezierCurveTo(201 * a, 71 * a, 201 * a, 71 * a, 215 * a, 96 * a);
            c.bezierCurveTo(199.5 * a, 226.5 * a, 199.5 * a, 226.5 * a, 184 * a, 357 * a);
            c.bezierCurveTo(162.5 * a, 362.5 * a, 162.5 * a, 362.5 * a, 141 * a, 368 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(75 * a, 328 * a);
            c.bezierCurveTo(88 * a, 336.5 * a, 88 * a, 336.5 * a, 101 * a, 345 * a);
            c.bezierCurveTo(123.5 * a, 337.5 * a, 123.5 * a, 337.5 * a, 146 * a, 330 * a);
            c.bezierCurveTo(165 * a, 343.5 * a, 165 * a, 343.5 * a, 184 * a, 357 * a);
            c.bezierCurveTo(198.5 * a, 353 * a, 198.5 * a, 353 * a, 213 * a, 349 * a);
            c.bezierCurveTo(200.5 * a, 364.5 * a, 200.5 * a, 364.5 * a, 188 * a, 380 * a);
            c.bezierCurveTo(163 * a, 380.5 * a, 163 * a, 380.5 * a, 138 * a, 381 * a);
            c.bezierCurveTo(112 * a, 373.5 * a, 112 * a, 373.5 * a, 86 * a, 366 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(121 * a, 332 * a);
            c.bezierCurveTo(133.5 * a, 327.5 * a, 133.5 * a, 327.5 * a, 146 * a, 323 * a);
            c.bezierCurveTo(157 * a, 330.5 * a, 157 * a, 330.5 * a, 168 * a, 338 * a);
            c.bezierCurveTo(182.5 * a, 219.5 * a, 182.5 * a, 219.5 * a, 197 * a, 101 * a);
            c.bezierCurveTo(190 * a, 84.5 * a, 190 * a, 84.5 * a, 183 * a, 68 * a);
            c.bezierCurveTo(172.5 * a, 81 * a, 172.5 * a, 81 * a, 162 * a, 94 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(105 * a, 463 * a);
            c.bezierCurveTo(124.5 * a, 466 * a, 124.5 * a, 466 * a, 144 * a, 469 * a);
            c.bezierCurveTo(145.5 * a, 478.5 * a, 145.5 * a, 478.5 * a, 147 * a, 488 * a);
            c.bezierCurveTo(133.5 * a, 495.5 * a, 133.5 * a, 495.5 * a, 120 * a, 503 * a);
            c.bezierCurveTo(108.5 * a, 492 * a, 108.5 * a, 492 * a, 97 * a, 481 * a);
            c.closePath();
            h(c, f[1], f[2], 12.5 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(143 * a, 346 * a);
            c.bezierCurveTo(125 * a, 352 * a, 125 * a, 352 * a, 107 * a, 358 * a);
            c.bezierCurveTo(124 * a, 363 * a, 140 * a, 368 * a, 141 * a, 368 * a);
            c.bezierCurveTo(156.5 * a, 367 * a, 156.5 * a, 367 * a, 172 * a, 366 * a);
            c.closePath();
            h(c, f[3]);
            return d;
        };

        function je(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 154 * a;
            d.height = 261 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(125 * a, 69 * a);
            c.bezierCurveTo(123.5 * a, 141.5 * a, 123.5 * a, 141.5 * a, 122 * a, 214 * a);
            c.bezierCurveTo(123 * a, 228 * a, 119 * a, 239 * a, 102 * a, 239 * a);
            c.bezierCurveTo(90 * a, 238 * a, 86 * a, 225 * a, 89 * a, 197 * a);
            c.bezierCurveTo(92 * a, 159 * a, 92 * a, 141 * a, 94 * a, 84 * a);
            c.bezierCurveTo(94 * a, 58 * a, 87 * a, 50 * a, 73 * a, 52 * a);
            c.bezierCurveTo(53 * a, 54 * a, 54 * a, 92 * a, 34 * a, 87 * a);
            c.bezierCurveTo(13 * a, 85 * a, 22 * a, 58 * a, 34 * a, 40 * a);
            c.bezierCurveTo(44 * a, 24 * a, 68 * a, 17 * a, 86 * a, 21 * a);
            c.bezierCurveTo(111 * a, 23 * a, 123 * a, 39 * a, 125 * a, 67 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(125 * a, 69 * a);
            c.bezierCurveTo(123.5 * a, 141.5 * a, 123.5 * a, 141.5 * a, 122 * a, 214 * a);
            c.bezierCurveTo(123 * a, 228 * a, 119 * a, 239 * a, 102 * a, 239 * a);
            c.bezierCurveTo(90 * a, 238 * a, 86 * a, 225 * a, 89 * a, 197 * a);
            c.bezierCurveTo(92 * a, 159 * a, 92 * a, 141 * a, 94 * a, 84 * a);
            c.bezierCurveTo(94 * a, 58 * a, 87 * a, 50 * a, 73 * a, 52 * a);
            c.bezierCurveTo(53 * a, 54 * a, 54 * a, 92 * a, 34 * a, 87 * a);
            c.bezierCurveTo(13 * a, 85 * a, 22 * a, 58 * a, 34 * a, 40 * a);
            c.bezierCurveTo(44 * a, 24 * a, 68 * a, 17 * a, 86 * a, 21 * a);
            c.bezierCurveTo(111 * a, 23 * a, 123 * a, 39 * a, 125 * a, 67 * a);
            c.closePath();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(31 * a, 43 * a);
            c.bezierCurveTo(31 * a, 61 * a, 43 * a, 70 * a, 51 * a, 75 * a);
            c.bezierCurveTo(48 * a, 84 * a, 41 * a, 89 * a, 33 * a, 86 * a);
            c.bezierCurveTo(23 * a, 88 * a, 20 * a, 76 * a, 23 * a, 62 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(45 * a, 29 * a);
            c.bezierCurveTo(49 * a, 45 * a, 61 * a, 54 * a, 64 * a, 55 * a);
            c.bezierCurveTo(67.5 * a, 53 * a, 67.5 * a, 53 * a, 71 * a, 51 * a);
            c.bezierCurveTo(80 * a, 44 * a, 83 * a, 33 * a, 82 * a, 20 * a);
            c.bezierCurveTo(59 * a, 17 * a, 51 * a, 23 * a, 45 * a, 30 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(86 * a, 56 * a);
            c.bezierCurveTo(90 * a, 33 * a, 103 * a, 25 * a, 105 * a, 27 * a);
            c.bezierCurveTo(116 * a, 31 * a, 121 * a, 45 * a, 122 * a, 50 * a);
            c.bezierCurveTo(112 * a, 62 * a, 103 * a, 63 * a, 91 * a, 62 * a);
            c.bezierCurveTo(89 * a, 59.5 * a, 89 * a, 59.5 * a, 87 * a, 57 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(93 * a, 81 * a);
            c.bezierCurveTo(109 * a, 82 * a, 123 * a, 70 * a, 124 * a, 63 * a);
            c.bezierCurveTo(124 * a, 75.5 * a, 124 * a, 75.5 * a, 124 * a, 88 * a);
            c.bezierCurveTo(119 * a, 99 * a, 103 * a, 103 * a, 94 * a, 103 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(93 * a, 124 * a);
            c.bezierCurveTo(108 * a, 125 * a, 122 * a, 113 * a, 124 * a, 106 * a);
            c.bezierCurveTo(124 * a, 119 * a, 124 * a, 129 * a, 124 * a, 132 * a);
            c.bezierCurveTo(110 * a, 147 * a, 94 * a, 148 * a, 90 * a, 147 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(90 * a, 170 * a);
            c.bezierCurveTo(104 * a, 166 * a, 122 * a, 158 * a, 122 * a, 151 * a);
            c.bezierCurveTo(122 * a, 162.5 * a, 122 * a, 162.5 * a, 122 * a, 174 * a);
            c.bezierCurveTo(111 * a, 191 * a, 97 * a, 191 * a, 89 * a, 191 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(88 * a, 208 * a);
            c.bezierCurveTo(100 * a, 209 * a, 115 * a, 205 * a, 122 * a, 193 * a);
            c.bezierCurveTo(122 * a, 205.5 * a, 122 * a, 205.5 * a, 122 * a, 218 * a);
            c.bezierCurveTo(115 * a, 229 * a, 103 * a, 235 * a, 90 * a, 228 * a);
            c.bezierCurveTo(88 * a, 224 * a, 88 * a, 217 * a, 88 * a, 211 * a);
            c.closePath();
            h(c, f[3]);
            c.globalAlpha = 0.4;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(22 * a, 81 * a);
            c.bezierCurveTo(32 * a, 84 * a, 41 * a, 81 * a, 45 * a, 68 * a);
            c.bezierCurveTo(50 * a, 50 * a, 62 * a, 40 * a, 79 * a, 43 * a);
            c.bezierCurveTo(95 * a, 45 * a, 102 * a, 58 * a, 101 * a, 81 * a);
            c.bezierCurveTo(99.5 * a, 120.5 * a, 99.5 * a, 120.5 * a, 98 * a, 160 * a);
            c.bezierCurveTo(96.5 * a, 191.5 * a, 96.5 * a, 191.5 * a, 95 * a, 223 * a);
            c.bezierCurveTo(93 * a, 232 * a, 101 * a, 235 * a, 108 * a, 238 * a);
            c.bezierCurveTo(100 * a, 240 * a, 90 * a, 233 * a, 90 * a, 224 * a);
            c.bezierCurveTo(92 * a, 157 * a, 92 * a, 157 * a, 94 * a, 90 * a);
            c.bezierCurveTo(94 * a, 56 * a, 89 * a, 53 * a, 77 * a, 51 * a);
            c.bezierCurveTo(58 * a, 50 * a, 54 * a, 59 * a, 49 * a, 75 * a);
            c.bezierCurveTo(44 * a, 91 * a, 28 * a, 90 * a, 23 * a, 81 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(82 * a, 123 * a);
            c.bezierCurveTo(88 * a, 130 * a, 88 * a, 127 * a, 94 * a, 128 * a);
            c.bezierCurveTo(91 * a, 136 * a, 94 * a, 137 * a, 99 * a, 142 * a);
            c.bezierCurveTo(97 * a, 149 * a, 99 * a, 152 * a, 105 * a, 155 * a);
            c.bezierCurveTo(107 * a, 159 * a, 113 * a, 159 * a, 120 * a, 158 * a);
            c.bezierCurveTo(121 * a, 160 * a, 125 * a, 163 * a, 132 * a, 163 * a);
            c.bezierCurveTo(133 * a, 166 * a, 136 * a, 169 * a, 138 * a, 170 * a);
            c.bezierCurveTo(133 * a, 171 * a, 132 * a, 172 * a, 129 * a, 174 * a);
            c.bezierCurveTo(122 * a, 170 * a, 120 * a, 170 * a, 116 * a, 174 * a);
            c.bezierCurveTo(108 * a, 170.5 * a, 108 * a, 170.5 * a, 100 * a, 167 * a);
            c.bezierCurveTo(95 * a, 172 * a, 94 * a, 179 * a, 95 * a, 184 * a);
            c.bezierCurveTo(87 * a, 185 * a, 87 * a, 189 * a, 88 * a, 194 * a);
            c.bezierCurveTo(82 * a, 194 * a, 81 * a, 195 * a, 79 * a, 197 * a);
            c.bezierCurveTo(78 * a, 192 * a, 78 * a, 191 * a, 77 * a, 189 * a);
            c.bezierCurveTo(81 * a, 185 * a, 82 * a, 183 * a, 80 * a, 176 * a);
            c.bezierCurveTo(89 * a, 170 * a, 92 * a, 168 * a, 95 * a, 163 * a);
            c.bezierCurveTo(91 * a, 151 * a, 88 * a, 151 * a, 82 * a, 147 * a);
            c.bezierCurveTo(85 * a, 142 * a, 85 * a, 137 * a, 81 * a, 133 * a);
            c.bezierCurveTo(84 * a, 127 * a, 84 * a, 125 * a, 82 * a, 124 * a);
            c.closePath();
            h(c, f[4], f[5], 4 * a);
            A(c, 107 * a, 152 * a, 9 * a);
            h(c, f[6]);
            A(c, 105 * a, 173 * a, 9 * a);
            h(c, f[6]);
            A(c, 87 * a, 161 * a, 9 * a);
            h(c, f[6]);
            A(c, 106 * a, 147 * a, 4 * a);
            h(c, f[7]);
            A(c, 104 * a, 167 * a, 4 * a);
            h(c, f[7]);
            A(c, 86 * a, 154 * a, 4 * a);
            h(c, f[7]);
            return d;
        };

        function vh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 350 * a;
            e.height = 140 * a;
            d.translate(-50 * a, -150 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(184.5 * a, 222.0625 * a);
            d.bezierCurveTo(185.5 * a, 184.0625 * a, 302.5 * a, 171.0625 * a, 313.5 * a, 222.0625 * a);
            d.bezierCurveTo(330.5 * a, 263.0625 * a, 181.5 * a, 274.0625 * a, 184.5 * a, 223.0625 * a);
            d.closePath();
            h(d, f[0], f[1], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(131.5 * a, 241.0625 * a);
            d.bezierCurveTo(144.5 * a, 278.0625 * a, 270.5 * a, 209.0625 * a, 228.5 * a, 174.0625 * a);
            d.bezierCurveTo(196.5 * a, 147.0625 * a, 117.5 * a, 196.0625 * a, 131.5 * a, 240.0625 * a);
            d.closePath();
            h(d, f[0], f[1], 8 * a);
            A(d, 270.5 * a, 225.0625 * a, 15.811388300841896 * a);
            h(d, f[2]);
            A(d, 243.5 * a, 225.0625 * a, 6.082762530298219 * a);
            h(d, f[2]);
            A(d, 255.5 * a, 210.0625 * a, 10.816653826391969 * a);
            h(d, f[2]);
            A(d, 167.5 * a, 215.0625 * a, 15.297058540778355 * a);
            h(d, f[2]);
            A(d, 176.5 * a, 204.0625 * a, 7.280109889280518 * a);
            h(d, f[2]);
            A(d, 206.5 * a, 189.0625 * a, 7.280109889280518 * a);
            h(d, f[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(151.5 * a, 212.0625 * a);
            d.bezierCurveTo(161.5 * a, 204.0625 * a, 173.5 * a, 214.0625 * a, 158.5 * a, 221.0625 * a);
            d.bezierCurveTo(145.5 * a, 228.0625 * a, 144.5 * a, 216.0625 * a, 151.5 * a, 212.0625 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(194.5 * a, 209.0625 * a);
            d.bezierCurveTo(205.5 * a, 202.0625 * a, 215.5 * a, 207.0625 * a, 199.5 * a, 217.0625 * a);
            d.bezierCurveTo(187.5 * a, 224.0625 * a, 182.5 * a, 217.0625 * a, 194.5 * a, 209.0625 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(188.5 * a, 183.0625 * a);
            d.bezierCurveTo(201.5 * a, 176.0625 * a, 213.5 * a, 187.0625 * a, 193.5 * a, 193.0625 * a);
            d.bezierCurveTo(185.5 * a, 194.0625 * a, 175.5 * a, 189.0625 * a, 188.5 * a, 183.0625 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(261.5 * a, 202.0625 * a);
            d.bezierCurveTo(274.5 * a, 201.0625 * a, 282.5 * a, 214.0625 * a, 261.5 * a, 215.0625 * a);
            d.bezierCurveTo(246.5 * a, 214.0625 * a, 248.5 * a, 203.0625 * a, 261.5 * a, 202.0625 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(240.5 * a, 231.0625 * a);
            d.bezierCurveTo(255.5 * a, 231.0625 * a, 254.5 * a, 243.0625 * a, 240.5 * a, 242.0625 * a);
            d.bezierCurveTo(225.5 * a, 239.0625 * a, 225.5 * a, 232.0625 * a, 240.5 * a, 231.0625 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            return e;
        };

        function wh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 217 * a;
            e.height = 215 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(79 * a, 113 * a);
            d.bezierCurveTo(135 * a, 98 * a, 136 * a, 96 * a, 142 * a, 97 * a);
            d.bezierCurveTo(167 * a, 106 * a, 167 * a, 106 * a, 171 * a, 109 * a);
            d.bezierCurveTo(173 * a, 120 * a, 173 * a, 134 * a, 169 * a, 141 * a);
            d.bezierCurveTo(140 * a, 149.5 * a, 140 * a, 149.5 * a, 111 * a, 158 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(154 * a, 103 * a);
            d.bezierCurveTo(167 * a, 91 * a, 175 * a, 87 * a, 176 * a, 94 * a);
            d.bezierCurveTo(175 * a, 102 * a, 176 * a, 102 * a, 186 * a, 103 * a);
            d.bezierCurveTo(191 * a, 104 * a, 192 * a, 105 * a, 185 * a, 116 * a);
            d.bezierCurveTo(183 * a, 120 * a, 191 * a, 124 * a, 189 * a, 129 * a);
            d.bezierCurveTo(185 * a, 139 * a, 178 * a, 134 * a, 166 * a, 131 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(60 * a, 46 * a);
            d.bezierCurveTo(60 * a, 34 * a, 60 * a, 29 * a, 56 * a, 19 * a);
            d.bezierCurveTo(52 * a, 12 * a, 52 * a, 16 * a, 49 * a, 24 * a);
            d.bezierCurveTo(48 * a, 27 * a, 46 * a, 28 * a, 39 * a, 27 * a);
            d.bezierCurveTo(33 * a, 26 * a, 34 * a, 31 * a, 35 * a, 37 * a);
            d.bezierCurveTo(36 * a, 41 * a, 27 * a, 46 * a, 29 * a, 52 * a);
            d.bezierCurveTo(36 * a, 55 * a, 35 * a, 56 * a, 31 * a, 59 * a);
            d.bezierCurveTo(27 * a, 65 * a, 32 * a, 64 * a, 35 * a, 62 * a);
            d.closePath();
            h(d, f[4], f[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(46 * a, 50 * a);
            d.bezierCurveTo(51 * a, 35 * a, 70 * a, 32 * a, 78 * a, 29 * a);
            d.bezierCurveTo(84 * a, 27 * a, 113 * a, 36 * a, 127 * a, 41 * a);
            d.bezierCurveTo(140 * a, 47 * a, 147 * a, 69 * a, 137 * a, 73 * a);
            d.bezierCurveTo(124 * a, 92 * a, 117 * a, 92 * a, 109 * a, 94 * a);
            d.bezierCurveTo(101 * a, 96 * a, 89 * a, 92 * a, 65 * a, 83 * a);
            d.bezierCurveTo(54 * a, 80 * a, 46 * a, 58 * a, 46 * a, 51 * a);
            d.closePath();
            h(d, f[4], f[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(51 * a, 40 * a);
            d.bezierCurveTo(49 * a, 34 * a, 49 * a, 34 * a, 47 * a, 28 * a);
            d.bezierCurveTo(38 * a, 28 * a, 34 * a, 27 * a, 37 * a, 37 * a);
            d.bezierCurveTo(43 * a, 40.5 * a, 43 * a, 40.5 * a, 49 * a, 44 * a);
            d.closePath();
            h(d, f[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(29 * a, 48 * a);
            d.bezierCurveTo(38 * a, 49 * a, 38 * a, 49 * a, 47 * a, 50 * a);
            d.bezierCurveTo(46.5 * a, 51.5 * a, 46.5 * a, 51.5 * a, 46 * a, 53 * a);
            d.bezierCurveTo(40 * a, 53.5 * a, 40 * a, 53.5 * a, 34 * a, 54 * a);
            d.bezierCurveTo(29 * a, 51 * a, 32 * a, 51.5 * a, 30 * a, 49 * a);
            d.closePath();
            h(d, f[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(89 * a, 61 * a);
            d.bezierCurveTo(101 * a, 70 * a, 109 * a, 90 * a, 102 * a, 90 * a);
            d.bezierCurveTo(97 * a, 91 * a, 87 * a, 91 * a, 60 * a, 80 * a);
            d.bezierCurveTo(48 * a, 65 * a, 46 * a, 56 * a, 48 * a, 53 * a);
            d.bezierCurveTo(50 * a, 52 * a, 66 * a, 56 * a, 89 * a, 61 * a);
            d.closePath();
            h(d, f[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(99 * a, 59 * a);
            d.bezierCurveTo(115 * a, 45 * a, 125 * a, 42 * a, 129 * a, 47 * a);
            d.bezierCurveTo(138 * a, 56 * a, 140 * a, 63 * a, 138 * a, 67 * a);
            d.bezierCurveTo(131 * a, 80 * a, 122 * a, 87 * a, 114 * a, 90 * a);
            d.bezierCurveTo(105 * a, 80 * a, 95 * a, 62 * a, 98 * a, 61 * a);
            d.closePath();
            h(d, f[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(118 * a, 62 * a);
            d.bezierCurveTo(139 * a, 45 * a, 153 * a, 40 * a, 150 * a, 48 * a);
            d.bezierCurveTo(145 * a, 57 * a, 157 * a, 63 * a, 157 * a, 70 * a);
            d.bezierCurveTo(157 * a, 74 * a, 142 * a, 77 * a, 142 * a, 85 * a);
            d.bezierCurveTo(143 * a, 91 * a, 141 * a, 92 * a, 135 * a, 90 * a);
            d.bezierCurveTo(132 * a, 90 * a, 132 * a, 96 * a, 124 * a, 99 * a);
            d.bezierCurveTo(118 * a, 93 * a, 116 * a, 77 * a, 116 * a, 64 * a);
            d.closePath();
            h(d, f[4], f[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(90 * a, 130 * a);
            d.bezierCurveTo(157 * a, 115 * a, 165 * a, 111 * a, 167 * a, 115 * a);
            d.bezierCurveTo(170 * a, 117 * a, 171 * a, 135 * a, 167 * a, 141 * a);
            d.bezierCurveTo(135.5 * a, 149.5 * a, 135.5 * a, 149.5 * a, 104 * a, 158 * a);
            d.closePath();
            h(d, f[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(53 * a, 119 * a);
            d.bezierCurveTo(46 * a, 120 * a, 40 * a, 118 * a, 34 * a, 116 * a);
            d.bezierCurveTo(28 * a, 111 * a, 41 * a, 112 * a, 39 * a, 108 * a);
            d.bezierCurveTo(36 * a, 100 * a, 49 * a, 102 * a, 53 * a, 95 * a);
            d.bezierCurveTo(57 * a, 84 * a, 58 * a, 85 * a, 63 * a, 93 * a);
            d.bezierCurveTo(68 * a, 96 * a, 72 * a, 94 * a, 80 * a, 88 * a);
            d.bezierCurveTo(80 * a, 96 * a, 78 * a, 107 * a, 66 * a, 115 * a);
            d.closePath();
            h(d, f[9], f[10], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(118 * a, 64 * a);
            d.bezierCurveTo(133.5 * a, 57 * a, 133.5 * a, 57 * a, 149 * a, 50 * a);
            d.bezierCurveTo(145 * a, 54 * a, 154 * a, 65 * a, 157 * a, 68 * a);
            d.bezierCurveTo(138.5 * a, 66.5 * a, 138.5 * a, 66.5 * a, 120 * a, 65 * a);
            d.closePath();
            h(d, f[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(118 * a, 65 * a);
            d.bezierCurveTo(129 * a, 77 * a, 129 * a, 77 * a, 140 * a, 89 * a);
            d.bezierCurveTo(131 * a, 89 * a, 130 * a, 92 * a, 128 * a, 96 * a);
            d.bezierCurveTo(123.5 * a, 82 * a, 123.5 * a, 82 * a, 119 * a, 68 * a);
            d.closePath();
            h(d, f[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(51 * a, 112 * a);
            d.bezierCurveTo(63 * a, 108 * a, 78 * a, 111 * a, 88 * a, 112 * a);
            d.bezierCurveTo(98 * a, 122 * a, 117 * a, 136 * a, 125 * a, 157 * a);
            d.bezierCurveTo(123 * a, 180 * a, 123 * a, 185 * a, 118 * a, 186 * a);
            d.bezierCurveTo(101 * a, 190 * a, 89 * a, 191 * a, 79 * a, 187 * a);
            d.bezierCurveTo(53 * a, 165 * a, 50 * a, 153 * a, 47 * a, 144 * a);
            d.bezierCurveTo(46 * a, 128 * a, 46 * a, 124 * a, 50 * a, 112 * a);
            d.closePath();
            h(d, f[9], f[10], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(50 * a, 114 * a);
            d.bezierCurveTo(81 * a, 149 * a, 80 * a, 147 * a, 80 * a, 149 * a);
            d.bezierCurveTo(82 * a, 155 * a, 80 * a, 182 * a, 74 * a, 182 * a);
            d.bezierCurveTo(60 * a, 172 * a, 52 * a, 157 * a, 47 * a, 144 * a);
            d.closePath();
            h(d, f[11], f[11], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(85 * a, 152 * a);
            d.bezierCurveTo(99 * a, 150 * a, 109 * a, 152 * a, 119 * a, 156 * a);
            d.bezierCurveTo(122 * a, 163 * a, 122 * a, 174 * a, 117 * a, 182 * a);
            d.closePath();
            d.bezierCurveTo(93 * a, 188 * a, 82 * a, 187 * a, 83 * a, 179 * a);
            h(d, f[11], f[11], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(104 * a, 166 * a);
            d.bezierCurveTo(133 * a, 165 * a, 142 * a, 168 * a, 137 * a, 173 * a);
            d.bezierCurveTo(127 * a, 177 * a, 137 * a, 195 * a, 126 * a, 196 * a);
            d.bezierCurveTo(112 * a, 195 * a, 112 * a, 194 * a, 109 * a, 199 * a);
            d.bezierCurveTo(105 * a, 205 * a, 102 * a, 195 * a, 96 * a, 197 * a);
            d.bezierCurveTo(84 * a, 201 * a, 88 * a, 198 * a, 90 * a, 187 * a);
            d.bezierCurveTo(96 * a, 171 * a, 97 * a, 170 * a, 103 * a, 167 * a);
            d.closePath();
            h(d, f[9], f[10], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105 * a, 168 * a);
            d.bezierCurveTo(118 * a, 172.5 * a, 118 * a, 172.5 * a, 131 * a, 177 * a);
            d.bezierCurveTo(133 * a, 190 * a, 132 * a, 199 * a, 116 * a, 194 * a);
            d.bezierCurveTo(110 * a, 182 * a, 110 * a, 182 * a, 104 * a, 170 * a);
            d.closePath();
            h(d, f[10]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(102 * a, 169 * a);
            d.bezierCurveTo(100.5 * a, 182 * a, 100.5 * a, 182 * a, 99 * a, 195 * a);
            d.bezierCurveTo(93.5 * a, 196.5 * a, 93.5 * a, 196.5 * a, 88 * a, 198 * a);
            d.bezierCurveTo(94 * a, 176 * a, 96 * a, 174 * a, 101 * a, 168 * a);
            d.closePath();
            h(d, f[9], f[9], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(64 * a, 107 * a);
            d.bezierCurveTo(64 * a, 101 * a, 64 * a, 101 * a, 64 * a, 95 * a);
            d.bezierCurveTo(57 * a, 86 * a, 57 * a, 84 * a, 53 * a, 97 * a);
            d.bezierCurveTo(55 * a, 103.5 * a, 55 * a, 103.5 * a, 57 * a, 110 * a);
            d.closePath();
            h(d, f[11], f[11], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(40 * a, 108 * a);
            d.bezierCurveTo(46.5 * a, 111 * a, 46.5 * a, 111 * a, 53 * a, 114 * a);
            d.bezierCurveTo(50.5 * a, 117 * a, 50.5 * a, 117 * a, 48 * a, 120 * a);
            d.bezierCurveTo(40.5 * a, 117.5 * a, 40.5 * a, 117.5 * a, 33 * a, 115 * a);
            d.bezierCurveTo(36 * a, 112 * a, 36 * a, 112 * a, 39 * a, 109 * a);
            d.closePath();
            h(d, f[11], f[11], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(189 * a, 106 * a);
            d.bezierCurveTo(178.5 * a, 110.5 * a, 178.5 * a, 110.5 * a, 168 * a, 115 * a);
            d.bezierCurveTo(168.5 * a, 119 * a, 168.5 * a, 119 * a, 169 * a, 123 * a);
            d.bezierCurveTo(179 * a, 124.5 * a, 179 * a, 124.5 * a, 189 * a, 126 * a);
            d.bezierCurveTo(182 * a, 118 * a, 183 * a, 115 * a, 188 * a, 106 * a);
            d.closePath();
            h(d, f[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(69 * a, 178 * a);
            d.bezierCurveTo(69 * a, 141 * a, 70 * a, 136 * a, 77 * a, 137 * a);
            d.bezierCurveTo(88 * a, 133 * a, 101 * a, 134 * a, 108 * a, 137 * a);
            h(d, void 0, f[3], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(55 * a, 161 * a);
            d.bezierCurveTo(54 * a, 124 * a, 55 * a, 119 * a, 62 * a, 119 * a);
            d.bezierCurveTo(74 * a, 117 * a, 85 * a, 117 * a, 93 * a, 119 * a);
            h(d, void 0, f[3], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(91 * a, 29 * a);
            d.bezierCurveTo(74 * a, 33 * a, 62 * a, 46 * a, 57 * a, 54 * a);
            d.bezierCurveTo(57 * a, 63 * a, 68 * a, 76 * a, 77 * a, 87 * a);
            h(d, void 0, f[6], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107 * a, 33 * a);
            d.bezierCurveTo(82 * a, 51 * a, 80 * a, 52 * a, 79 * a, 59 * a);
            d.bezierCurveTo(78 * a, 65 * a, 93 * a, 86 * a, 101 * a, 93 * a);
            h(d, void 0, f[6], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130 * a, 98 * a);
            d.bezierCurveTo(126.5 * a, 103 * a, 126.5 * a, 103 * a, 123 * a, 108 * a);
            d.bezierCurveTo(133.5 * a, 107 * a, 133.5 * a, 107 * a, 144 * a, 106 * a);
            d.bezierCurveTo(138.5 * a, 110 * a, 138.5 * a, 110 * a, 133 * a, 114 * a);
            d.bezierCurveTo(142 * a, 114 * a, 142 * a, 114 * a, 151 * a, 114 * a);
            d.bezierCurveTo(146.5 * a, 119.5 * a, 146.5 * a, 119.5 * a, 142 * a, 125 * a);
            d.bezierCurveTo(146.5 * a, 127 * a, 146.5 * a, 127 * a, 151 * a, 129 * a);
            d.bezierCurveTo(147.5 * a, 132 * a, 147.5 * a, 132 * a, 144 * a, 135 * a);
            d.bezierCurveTo(148 * a, 137 * a, 148 * a, 137 * a, 152 * a, 139 * a);
            d.bezierCurveTo(149 * a, 142.5 * a, 149 * a, 142.5 * a, 146 * a, 146 * a);
            h(d, void 0, f[3], 4 * a);
            return e;
        };

        function xh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 118 * a;
            e.height = 114 * a;
            d.translate(0, 10 * a);
            A(d, 42 * a, 43 * a, 24.758836806279895 * a);
            h(d, f[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(65 * a, 90 * a);
            d.bezierCurveTo(72 * a, 91 * a, 75 * a, 92 * a, 71 * a, 96 * a);
            d.bezierCurveTo(65 * a, 98 * a, 65 * a, 94 * a, 65 * a, 91 * a);
            d.closePath();
            h(d, f[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(87 * a, 45 * a);
            d.bezierCurveTo(108 * a, 59 * a, 100 * a, 86 * a, 85 * a, 91 * a);
            d.bezierCurveTo(80 * a, 96 * a, 68 * a, 95 * a, 58 * a, 87 * a);
            d.bezierCurveTo(53 * a, 80 * a, 61 * a, 64 * a, 66 * a, 58 * a);
            d.bezierCurveTo(73 * a, 48 * a, 78 * a, 44 * a, 87 * a, 45 * a);
            d.closePath();
            h(d, f[0]);
            d.translate(0, -10 * a);
            A(d, 42 * a, 43 * a, 24.758836806279895 * a);
            h(d, f[1], f[2], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(65 * a, 90 * a);
            d.bezierCurveTo(72 * a, 91 * a, 75 * a, 92 * a, 71 * a, 96 * a);
            d.bezierCurveTo(65 * a, 98 * a, 65 * a, 94 * a, 65 * a, 91 * a);
            d.closePath();
            h(d, f[1], f[2], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(87 * a, 45 * a);
            d.bezierCurveTo(108 * a, 59 * a, 100 * a, 86 * a, 85 * a, 91 * a);
            d.bezierCurveTo(80 * a, 96 * a, 68 * a, 95 * a, 58 * a, 87 * a);
            d.bezierCurveTo(53 * a, 80 * a, 61 * a, 64 * a, 66 * a, 58 * a);
            d.bezierCurveTo(73 * a, 48 * a, 78 * a, 44 * a, 87 * a, 45 * a);
            d.closePath();
            h(d, f[1], f[2], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(52 * a, 16 * a);
            d.bezierCurveTo(55 * a, 19 * a, 54 * a, 20 * a, 55 * a, 22 * a);
            d.bezierCurveTo(52 * a, 24.5 * a, 52 * a, 24.5 * a, 49 * a, 27 * a);
            d.bezierCurveTo(45 * a, 25 * a, 45 * a, 25 * a, 41 * a, 23 * a);
            d.bezierCurveTo(45 * a, 19 * a, 48 * a, 16 * a, 52 * a, 16 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(62 * a, 30 * a);
            d.bezierCurveTo(66 * a, 29 * a, 64 * a, 30 * a, 66 * a, 30 * a);
            d.bezierCurveTo(67 * a, 31 * a, 67 * a, 31 * a, 68 * a, 32 * a);
            d.bezierCurveTo(66.5 * a, 33.5 * a, 66.5 * a, 33.5 * a, 65 * a, 35 * a);
            d.bezierCurveTo(63.5 * a, 32.5 * a, 63.5 * a, 32.5 * a, 62 * a, 30 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(29 * a, 21 * a);
            d.bezierCurveTo(31 * a, 22 * a, 31 * a, 26 * a, 29 * a, 29 * a);
            d.bezierCurveTo(26 * a, 28.5 * a, 26 * a, 28.5 * a, 23 * a, 28 * a);
            d.bezierCurveTo(23 * a, 26.5 * a, 23 * a, 26.5 * a, 23 * a, 25 * a);
            d.bezierCurveTo(25 * a, 23 * a, 25 * a, 23 * a, 27 * a, 21 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(18 * a, 36 * a);
            d.bezierCurveTo(23 * a, 36 * a, 24 * a, 42 * a, 19 * a, 46 * a);
            d.bezierCurveTo(12 * a, 39 * a, 15 * a, 38 * a, 18 * a, 37 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(30 * a, 34 * a);
            d.bezierCurveTo(35 * a, 36 * a, 36 * a, 39 * a, 32 * a, 45 * a);
            d.bezierCurveTo(25 * a, 46 * a, 25 * a, 44 * a, 30 * a, 34 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(59 * a, 35 * a);
            d.bezierCurveTo(58 * a, 27 * a, 57 * a, 27 * a, 52 * a, 31 * a);
            d.bezierCurveTo(50 * a, 36 * a, 53 * a, 38 * a, 58 * a, 36 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(63 * a, 46 * a);
            d.bezierCurveTo(64.5 * a, 46.5 * a, 64.5 * a, 46.5 * a, 66 * a, 47 * a);
            d.bezierCurveTo(70 * a, 50 * a, 70 * a, 53 * a, 61 * a, 55 * a);
            d.bezierCurveTo(62 * a, 50.5 * a, 62 * a, 50.5 * a, 63 * a, 46 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(41 * a, 42 * a);
            d.bezierCurveTo(47 * a, 41 * a, 53 * a, 47 * a, 46 * a, 51 * a);
            d.bezierCurveTo(38 * a, 49 * a, 39 * a, 46 * a, 41 * a, 43 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(44 * a, 57 * a);
            d.bezierCurveTo(54 * a, 57 * a, 54 * a, 58 * a, 55 * a, 61 * a);
            d.bezierCurveTo(54 * a, 63 * a, 52 * a, 64 * a, 48 * a, 65 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(20 * a, 52 * a);
            d.bezierCurveTo(25 * a, 51 * a, 27 * a, 50 * a, 28 * a, 54 * a);
            d.bezierCurveTo(27 * a, 58 * a, 24 * a, 58 * a, 22 * a, 58 * a);
            d.bezierCurveTo(21 * a, 55.5 * a, 21 * a, 55.5 * a, 20 * a, 53 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(30 * a, 61 * a);
            d.bezierCurveTo(37 * a, 61 * a, 39 * a, 63 * a, 39 * a, 68 * a);
            d.bezierCurveTo(36 * a, 68.5 * a, 36 * a, 68.5 * a, 33 * a, 69 * a);
            d.bezierCurveTo(30.5 * a, 67.5 * a, 30.5 * a, 67.5 * a, 28 * a, 66 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(88 * a, 45 * a);
            d.bezierCurveTo(90 * a, 46.5 * a, 90 * a, 46.5 * a, 92 * a, 48 * a);
            d.bezierCurveTo(92 * a, 50 * a, 92 * a, 50 * a, 92 * a, 52 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(96 * a, 53 * a);
            d.bezierCurveTo(97.5 * a, 55 * a, 97.5 * a, 55 * a, 99 * a, 57 * a);
            d.bezierCurveTo(97.5 * a, 59.5 * a, 97.5 * a, 59.5 * a, 96 * a, 62 * a);
            d.bezierCurveTo(93.5 * a, 60.5 * a, 93.5 * a, 60.5 * a, 91 * a, 59 * a);
            d.bezierCurveTo(91.5 * a, 57 * a, 91.5 * a, 57 * a, 92 * a, 55 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(92 * a, 71 * a);
            d.bezierCurveTo(94.5 * a, 70.5 * a, 94.5 * a, 70.5 * a, 97 * a, 70 * a);
            d.bezierCurveTo(98.5 * a, 72.5 * a, 98.5 * a, 72.5 * a, 100 * a, 75 * a);
            d.bezierCurveTo(97 * a, 76.5 * a, 97 * a, 76.5 * a, 94 * a, 78 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(95 * a, 82 * a);
            d.bezierCurveTo(96 * a, 83 * a, 96 * a, 83 * a, 97 * a, 84 * a);
            d.bezierCurveTo(97 * a, 85.5 * a, 97 * a, 85.5 * a, 97 * a, 87 * a);
            d.bezierCurveTo(93.5 * a, 87.5 * a, 93.5 * a, 87.5 * a, 90 * a, 88 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(86 * a, 72 * a);
            d.bezierCurveTo(89 * a, 76 * a, 88 * a, 81 * a, 85 * a, 82 * a);
            d.bezierCurveTo(80 * a, 80 * a, 82 * a, 78 * a, 85 * a, 72 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(80 * a, 86 * a);
            d.bezierCurveTo(84 * a, 88 * a, 86 * a, 88 * a, 85 * a, 93 * a);
            d.bezierCurveTo(80 * a, 96 * a, 79 * a, 96 * a, 76 * a, 91 * a);
            d.closePath();
            h(d, f[3], f[4], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(84 * a, 46 * a);
            d.bezierCurveTo(93 * a, 51 * a, 91 * a, 62 * a, 80 * a, 78 * a);
            d.bezierCurveTo(74 * a, 86 * a, 66 * a, 90 * a, 60 * a, 86 * a);
            d.bezierCurveTo(55 * a, 79 * a, 57 * a, 73 * a, 67 * a, 57 * a);
            d.bezierCurveTo(71 * a, 51 * a, 79 * a, 44 * a, 84 * a, 46 * a);
            d.closePath();
            h(d, f[5], f[6], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(76 * a, 60 * a);
            d.bezierCurveTo(80 * a, 66 * a, 75 * a, 74 * a, 68 * a, 74 * a);
            d.bezierCurveTo(60 * a, 64 * a, 68 * a, 59 * a, 76 * a, 59 * a);
            d.closePath();
            h(d, f[7], f[8], 5 * a);
            return e;
        };

        function va(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 4 * a,
                g = 5 * a;
            e.width = 70 * a;
            e.height = 90 * a;
            d.save();
            d.translate(-80 * a, (-70 * a) + g);
            d.globalAlpha = 0.5;
            d.beginPath();
            d.bezierCurveTo(130 * a, 79 * a, 132 * a, 86 * a, 130 * a, 93 * a);
            d.bezierCurveTo(128 * a, 100 * a, 121 * a, 107 * a, 120 * a, 107 * a);
            d.bezierCurveTo(120 * a, 107 * a, 115 * a, 98 * a, 115 * a, 92 * a);
            d.bezierCurveTo(115 * a, 86 * a, 119 * a, 76 * a, 127 * a, 73 * a);
            d.closePath();
            h(d, "#0d1b1c");
            d.restore();
            d.save();
            d.translate(-80 * a, (-70 * a) + g);
            d.globalAlpha = 0.5;
            d.beginPath();
            d.bezierCurveTo(112 * a, 109 * a, 111 * a, 100 * a, 106 * a, 93 * a);
            d.bezierCurveTo(104 * a, 90 * a, 91 * a, 87 * a, 91 * a, 87 * a);
            d.bezierCurveTo(91 * a, 88 * a, 91 * a, 96 * a, 94 * a, 102 * a);
            d.bezierCurveTo(97 * a, 108 * a, 106 * a, 112 * a, 113 * a, 112 * a);
            d.closePath();
            h(d, "#0d1b1c");
            d.restore();
            d.save();
            d.translate(-80 * a, (-70 * a) + g);
            d.globalAlpha = 0.5;
            d.beginPath();
            d.bezierCurveTo(108 * a, 120 * a, 100 * a, 119 * a, 91 * a, 127 * a);
            d.bezierCurveTo(83 * a, 134 * a, 82 * a, 146 * a, 83 * a, 146 * a);
            d.bezierCurveTo(84 * a, 146 * a, 98 * a, 142 * a, 103 * a, 138 * a);
            d.bezierCurveTo(107 * a, 135 * a, 110 * a, 130 * a, 112 * a, 121 * a);
            d.closePath();
            h(d, "#0d1b1c");
            d.restore();
            d.save();
            d.translate(3 * a, (-93 * a) + g);
            d.rotate(Math.PI / 5);
            d.globalAlpha = 0.5;
            d.beginPath();
            d.bezierCurveTo(130 * a, 79 * a, 132 * a, 86 * a, 130 * a, 93 * a);
            d.bezierCurveTo(128 * a, 100 * a, 121 * a, 107 * a, 120 * a, 107 * a);
            d.bezierCurveTo(120 * a, 107 * a, 115 * a, 98 * a, 115 * a, 92 * a);
            d.bezierCurveTo(115 * a, 86 * a, 119 * a, 76 * a, 127 * a, 73 * a);
            d.closePath();
            h(d, "#0d1b1c");
            d.restore();
            d.save();
            d.translate(-80 * a, -70 * a);
            d.globalAlpha = 1;
            d.beginPath();
            d.bezierCurveTo(130 * a, 79 * a, 132 * a, 86 * a, 130 * a, 93 * a);
            d.bezierCurveTo(128 * a, 100 * a, 121 * a, 107 * a, 120 * a, 107 * a);
            d.bezierCurveTo(120 * a, 107 * a, 115 * a, 98 * a, 115 * a, 92 * a);
            d.bezierCurveTo(115 * a, 86 * a, 119 * a, 76 * a, 127 * a, 73 * a);
            d.closePath();
            h(d, f[0], f[1], c);
            d.restore();
            d.save();
            d.translate(-80 * a, -70 * a);
            d.globalAlpha = 1;
            d.beginPath();
            d.bezierCurveTo(112 * a, 109 * a, 111 * a, 100 * a, 106 * a, 93 * a);
            d.bezierCurveTo(104 * a, 90 * a, 91 * a, 87 * a, 91 * a, 87 * a);
            d.bezierCurveTo(91 * a, 88 * a, 91 * a, 96 * a, 94 * a, 102 * a);
            d.bezierCurveTo(97 * a, 108 * a, 106 * a, 112 * a, 113 * a, 112 * a);
            d.closePath();
            h(d, f[0], f[1], c);
            d.restore();
            d.save();
            d.translate(-80 * a, -70 * a);
            d.globalAlpha = 1;
            d.beginPath();
            d.bezierCurveTo(108 * a, 120 * a, 100 * a, 119 * a, 91 * a, 127 * a);
            d.bezierCurveTo(83 * a, 134 * a, 82 * a, 146 * a, 83 * a, 146 * a);
            d.bezierCurveTo(84 * a, 146 * a, 98 * a, 142 * a, 103 * a, 138 * a);
            d.bezierCurveTo(107 * a, 135 * a, 110 * a, 130 * a, 112 * a, 121 * a);
            d.closePath();
            h(d, f[0], f[1], c);
            d.restore();
            d.save();
            d.translate(3 * a, -93 * a);
            d.rotate(Math.PI / 5);
            d.globalAlpha = 1;
            d.beginPath();
            d.bezierCurveTo(130 * a, 79 * a, 132 * a, 86 * a, 130 * a, 93 * a);
            d.bezierCurveTo(128 * a, 100 * a, 121 * a, 107 * a, 120 * a, 107 * a);
            d.bezierCurveTo(120 * a, 107 * a, 115 * a, 98 * a, 115 * a, 92 * a);
            d.bezierCurveTo(115 * a, 86 * a, 119 * a, 76 * a, 127 * a, 73 * a);
            d.closePath();
            h(d, f[0], f[1], c);
            d.restore();
            return e;
        };

        function Ia(a, e, f, d, c, h, g, k, l, m, p) {
            (void 0 === p) && (p = 0);
            var n = document.createElement("canvas"),
                Y = n.getContext("2d");
            h = h ? (h * a) : 0;
            var q = Math.floor(a * f);
            Y.font = q + "px Baloo Paaji";
            Y.lineJoin = "round";
            k *= a;
            var r = g ? (2 * k) : 0;
            l = l ? Math.min((Y.measureText(e).width + (2 * a)) + r, l) : (((Y.measureText(e).width + (2 * a)) + r) + ((p * a) * 2));
            q = (((q + h) + p) * a) + r;
            n.width = l;
            n.height = q;
            g && (Y.fillStyle = g, B(Y, 0, 0, l, q, 2 * k), Y.fill(), Y.translate(k, k));
            Y.textBaseline = "middle";
            Y.font = f + "px Baloo Paaji";
            Y.lineJoin = "round";
            c && (Y.beginPath(), Y.fillStyle = c, Y.fillText(e, 0, ((q / 2) + h) - (r / 2), l));
            Y.beginPath();
            m && (Y.strokeStyle = m, Y.lineWidth = p, Y.strokeText(e, p, (q - r) / 2, l));
            Y.fillStyle = d;
            Y.fillText(e, p, (q - r) / 2, l);
            return n;
        };

        function Lb(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 220 * a,
                g = 230 * a,
                k = 100 * a,
                l = k / 4;
            a *= 20;
            e.width = c;
            e.height = g;
            d.translate(c / 2, (g / 2) + a);
            d.globalAlpha = 0.5;
            P(d, 7, k, l);
            h(d, f[0]);
            d.globalAlpha = 1;
            d.translate(0, -a);
            P(d, 7, k, l);
            h(d, f[1]);
            P(d, 6, 0.65 * k, 0.65 * l);
            h(d, f[2]);
            return e;
        };

        function Fa(a, e, f, d) {
            var c = document.createElement("canvas"),
                g = c.getContext("2d"),
                k = 220 * a,
                l = 220 * a,
                m = 100 * a,
                p = m / 4;
            c.width = k;
            c.height = l;
            g.translate(k / 2, l / 2);
            g.globalAlpha = e ? 0.5 : 1;
            if (!e) g.translate(0 * a, -8 * a);
            P(g, 7, m, p);
            e ? h(g, f[0]) : h(g, f[1]);
            g.globalAlpha = 1;
            (0 == d) ? (P(g, 6, 0.65 * m, 0.65 * p), h(g, f[2])) : ((1 == d) && (g.translate(20 * a, 20 * a), P(g, 6, 0.45 * m, 0.4 * p), h(g, f[2])));
            return c;
        };

        function $a(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 120 * a,
                g = 150 * a,
                k = 60 * a,
                l = k / 4,
                m = 15 * a;
            e.width = c;
            e.height = g;
            d.save();
            d.translate((c / 2) + (0 * a), ((g / 2) + (0 * a)) + m);
            d.rotate(Math.PI / 3);
            d.globalAlpha = 0.5;
            P(d, 8, k, l);
            h(d, f[0]);
            d.restore();
            d.save();
            d.translate((c / 2) - (11 * a), (g / 2) + (12 * a));
            d.globalAlpha = 1;
            d.rotate(Math.PI / 3);
            d.translate(0, -m);
            P(d, 8, k, l);
            h(d, f[1]);
            d.restore();
            d.save();
            d.translate((c / 2) - (9 * a), (g / 2) - (12 * a));
            d.rotate(Math.PI / 2.8);
            P(d, 5, 0.5 * k, 0.4 * l);
            h(d, f[2]);
            d.restore();
            d.save();
            d.translate((c / 2) + (19 * a), (g / 2) + (5 * a));
            d.rotate(Math.PI / 1);
            P(d, 5, 0.5 * k, 0.4 * l);
            h(d, f[2]);
            d.restore();
            d.save();
            d.translate((c / 2) - (8 * a), (g / 2) + (20 * a));
            d.rotate(Math.PI / 2.25);
            P(d, 5, 0.5 * k, 0.4 * l);
            h(d, f[2]);
            d.restore();
            return e;
        };

        function Wa(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d"),
                c = 180 * a,
                g = 210 * a,
                k = 60 * a,
                l = k / 4,
                m = 20 * a;
            e.width = c;
            e.height = g;
            d.save();
            d.translate((c / 2) - (0 * a), ((g / 2) - (35 * a)) + m);
            d.rotate(Math.PI / -1.8);
            d.globalAlpha = 0.5;
            d.translate(0 * a, -20 * a);
            P(d, 5, k, l);
            h(d, f[0]);
            d.restore();
            d.save();
            d.translate((c / 2) + (10 * a), ((g / 2) + (15 * a)) + m);
            d.rotate(Math.PI / 2);
            d.globalAlpha = 0.5;
            d.translate(0 * a, -20 * a);
            P(d, 5, k, l);
            h(d, f[0]);
            d.restore();
            d.save();
            d.translate((c / 2) - (50 * a), ((g / 2) + (40 * a)) + m);
            d.rotate(Math.PI / 3);
            d.globalAlpha = 0.5;
            d.translate(0, -20 * a);
            P(d, 5, k, l);
            h(d, f[0]);
            d.restore();
            d.save();
            d.translate((c / 2) - (0 * a), (g / 2) - (35 * a));
            d.rotate(Math.PI / -1.8);
            d.globalAlpha = 1;
            d.translate(0 * a, -20 * a);
            P(d, 5, k, l);
            h(d, f[1]);
            d.restore();
            d.save();
            d.translate((c / 2) + (10 * a), (g / 2) + (15 * a));
            d.rotate(Math.PI / 2);
            d.globalAlpha = 1;
            d.translate(0, -20 * a);
            P(d, 5, k, l);
            h(d, f[1]);
            d.restore();
            d.save();
            d.translate((c / 2) - (50 * a), (g / 2) + (40 * a));
            d.rotate(Math.PI / 3);
            d.globalAlpha = 1;
            d.translate(0, -20 * a);
            P(d, 5, k, l);
            h(d, f[1]);
            d.restore();
            k = 30 * a;
            l = k / 4;
            d.save();
            d.translate((c / 2) + (5 * a), (g / 2) - (20 * a));
            d.rotate(Math.PI / -1.8);
            d.globalAlpha = 1;
            d.translate(0, -20 * a);
            P(d, 5, k, l);
            h(d, f[2]);
            d.restore();
            d.save();
            d.translate((c / 2) + (0 * a), (g / 2) + (10 * a));
            d.rotate(Math.PI / 2);
            d.globalAlpha = 1;
            d.translate(0, -20 * a);
            P(d, 5, k, l);
            h(d, f[2]);
            d.restore();
            d.save();
            d.translate((c / 2) - (45 * a), (g / 2) + (35 * a));
            d.rotate(Math.PI / 3);
            d.globalAlpha = 1;
            d.translate(0, -20 * a);
            P(d, 5, k, l);
            h(d, f[2]);
            d.restore();
            A(d, (c / 2) - (7 * a), (g / 2) + (7 * a), 5);
            h(d, f[2]);
            return e;
        };

        function Za(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                g = 10 * a,
                k = 4 * a;
            d.width = 140 * a;
            d.height = 150 * a;
            c.translate(-50 * a, (-38 * a) + g);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.bezierCurveTo(160 * a, 65 * a, 160 * a, 85 * a, 152 * a, 95 * a);
            c.bezierCurveTo(152 * a, 95 * a, 173 * a, 94 * a, 187 * a, 102 * a);
            c.bezierCurveTo(187 * a, 102 * a, 180 * a, 120 * a, 155 * a, 126 * a);
            c.bezierCurveTo(154 * a, 126 * a, 166 * a, 138 * a, 169 * a, 148 * a);
            c.bezierCurveTo(169 * a, 148 * a, 148 * a, 152 * a, 133 * a, 140 * a);
            c.bezierCurveTo(133 * a, 140 * a, 134 * a, 160 * a, 122 * a, 175 * a);
            c.bezierCurveTo(122 * a, 175 * a, 107 * a, 162 * a, 107 * a, 144 * a);
            c.bezierCurveTo(107 * a, 144 * a, 98 * a, 164 * a, 73 * a, 167 * a);
            c.bezierCurveTo(73 * a, 167 * a, 72 * a, 134 * a, 90 * a, 127 * a);
            c.bezierCurveTo(90 * a, 127 * a, 70 * a, 134 * a, 55 * a, 123 * a);
            c.bezierCurveTo(55 * a, 123 * a, 58 * a, 115 * a, 75 * a, 104 * a);
            c.bezierCurveTo(75 * a, 104 * a, 66 * a, 96 * a, 61 * a, 77 * a);
            c.bezierCurveTo(61 * a, 77 * a, 83 * a, 74 * a, 102 * a, 89 * a);
            c.bezierCurveTo(102 * a, 89 * a, 92 * a, 66 * a, 110 * a, 41 * a);
            c.bezierCurveTo(111 * a, 40 * a, 130 * a, 54 * a, 130 * a, 82 * a);
            c.bezierCurveTo(130 * a, 82 * a, 143 * a, 67 * a, 159 * a, 65 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(0, 0 - g);
            c.globalAlpha = 1;
            c.beginPath();
            c.bezierCurveTo(160 * a, 65 * a, 160 * a, 85 * a, 152 * a, 95 * a);
            c.bezierCurveTo(152 * a, 95 * a, 173 * a, 94 * a, 187 * a, 102 * a);
            c.bezierCurveTo(187 * a, 102 * a, 180 * a, 120 * a, 155 * a, 126 * a);
            c.bezierCurveTo(154 * a, 126 * a, 166 * a, 138 * a, 169 * a, 148 * a);
            c.bezierCurveTo(169 * a, 148 * a, 148 * a, 152 * a, 133 * a, 140 * a);
            c.bezierCurveTo(133 * a, 140 * a, 134 * a, 160 * a, 122 * a, 175 * a);
            c.bezierCurveTo(122 * a, 175 * a, 107 * a, 162 * a, 107 * a, 144 * a);
            c.bezierCurveTo(107 * a, 144 * a, 98 * a, 164 * a, 73 * a, 167 * a);
            c.bezierCurveTo(73 * a, 167 * a, 72 * a, 134 * a, 90 * a, 127 * a);
            c.bezierCurveTo(90 * a, 127 * a, 70 * a, 134 * a, 55 * a, 123 * a);
            c.bezierCurveTo(55 * a, 123 * a, 58 * a, 115 * a, 75 * a, 104 * a);
            c.bezierCurveTo(75 * a, 104 * a, 66 * a, 96 * a, 61 * a, 77 * a);
            c.bezierCurveTo(61 * a, 77 * a, 83 * a, 74 * a, 102 * a, 89 * a);
            c.bezierCurveTo(102 * a, 89 * a, 92 * a, 66 * a, 110 * a, 41 * a);
            c.bezierCurveTo(111 * a, 40 * a, 130 * a, 54 * a, 130 * a, 82 * a);
            c.bezierCurveTo(130 * a, 82 * a, 143 * a, 67 * a, 159 * a, 65 * a);
            c.closePath();
            h(c, f[1], f[2], k);
            return d;
        };

        function fb(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 18 * a;
            e.height = 18 * a;
            var c = 9 * a,
                g = 9 * a,
                k = 8 * a;
            d.save();
            d.translate(c, g);
            d.globalAlpha = 1;
            A(d, 0, 0, k);
            h(d, f[0]);
            k = 3 * a;
            d.translate(0, -3 * a);
            d.globalAlpha = 1;
            A(d, 0, 0, k);
            h(d, f[1]);
            d.restore();
            return e;
        };

        function Tc(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 80 * a;
            f.height = 100 * a;
            d.scale(0.5, 0.5);
            d.translate(10, 15);
            d.globalAlpha = 0.5;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(47 * a, 5 * a);
            d.bezierCurveTo(19 * a, 30 * a, 12 * a, 42 * a, 10 * a, 55 * a);
            d.bezierCurveTo(11 * a, 75 * a, 27 * a, 76 * a, 36 * a, 72 * a);
            d.bezierCurveTo(52 * a, 60 * a, 53 * a, 46 * a, 54 * a, 31 * a);
            d.bezierCurveTo(53 * a, 14 * a, 50 * a, 9 * a, 48 * a, 6 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17 * a, 70 * a);
            d.bezierCurveTo(18 * a, 77 * a, 10 * a, 83 * a, 4 * a, 87 * a);
            h(d, void 0, e[0], 10 * a);
            d.translate(0, -10);
            d.globalAlpha = 1;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(47 * a, 5 * a);
            d.bezierCurveTo(19 * a, 30 * a, 12 * a, 42 * a, 10 * a, 55 * a);
            d.bezierCurveTo(11 * a, 75 * a, 27 * a, 76 * a, 36 * a, 72 * a);
            d.bezierCurveTo(52 * a, 60 * a, 53 * a, 46 * a, 54 * a, 31 * a);
            d.bezierCurveTo(53 * a, 14 * a, 50 * a, 9 * a, 48 * a, 6 * a);
            d.closePath();
            h(d, e[1], e[2], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17 * a, 70 * a);
            d.bezierCurveTo(18 * a, 77 * a, 10 * a, 83 * a, 4 * a, 87 * a);
            h(d, void 0, e[2], 8 * a);
            d.globalAlpha = 0.5;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17 * a, 70 * a);
            d.bezierCurveTo(33 * a, 52 * a, 39 * a, 33 * a, 48 * a, 7 * a);
            h(d, void 0, e[2], 8 * a);
            return f;
        };

        function Tc(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 234 * a;
            f.height = 183 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(76 * a, 25 * a);
            d.bezierCurveTo(150 * a, 3 * a, 181 * a, 22 * a, 203 * a, 41 * a);
            d.bezierCurveTo(225 * a, 63 * a, 225 * a, 105 * a, 198 * a, 133 * a);
            d.bezierCurveTo(179 * a, 157 * a, 134 * a, 178 * a, 81 * a, 164 * a);
            d.bezierCurveTo(19 * a, 148 * a, 6 * a, 95 * a, 21 * a, 66 * a);
            d.bezierCurveTo(34 * a, 39 * a, 52 * a, 33 * a, 75 * a, 25 * a);
            d.closePath();
            h(d, e[0], e[0], 4 * a);
            return f;
        };

        function wc(a, e, f, d, c) {
            e = document.createElement("canvas");
            c = e.getContext("2d");
            (0 == d) ? (e.width = 270 * a, e.height = 250 * a, c.beginPath(), c.moveTo(140 * a, 3 * a), c.translate(-25 * a, -20 * a), c.bezierCurveTo(218 * a, 31 * a, 251 * a, 61 * a, 265 * a, 85 * a), c.bezierCurveTo(278 * a, 108 * a, 295 * a, 160 * a, 285 * a, 195 * a), c.bezierCurveTo(271 * a, 242 * a, 213 * a, 268 * a, 188 * a, 266 * a), c.bezierCurveTo(139 * a, 262 * a, 70 * a, 244 * a, 47 * a, 204 * a), c.bezierCurveTo(20 * a, 158 * a, 35 * a, 78 * a, 59 * a, 56 * a), c.bezierCurveTo(90 * a, 28 * a, 124 * a, 23 * a, 140 * a, 23 * a), c.closePath(), h(c, f[0])) : ((1 == d) ? (e.width = 430 * a, e.height = 350 * a, c.beginPath(), c.moveTo(180 * a, 5 * a), c.translate(-30 * a, -60 * a), c.bezierCurveTo(283 * a, 60 * a, 265 * a, 163 * a, 335 * a, 206 * a), c.bezierCurveTo(376 * a, 231 * a, 492 * a, 299 * a, 434 * a, 357 * a), c.bezierCurveTo(371 * a, 421 * a, 289 * a, 394 * a, 255 * a, 386 * a), c.bezierCurveTo(218 * a, 377 * a, 91 * a, 359 * a, 50 * a, 272 * a), c.bezierCurveTo(12 * a, 192 * a, 107 * a, 75 * a, 178 * a, 69 * a), c.closePath(), h(c, f[0])) : ((2 == d) && (e.width = 400 * a, e.height = 300 * a, c.beginPath(), c.moveTo(80 * a, 52 * a), c.translate(-40 * a, -30 * a), c.bezierCurveTo(124 * a, 77 * a, 241 * a, 22 * a, 311 * a, 65 * a), c.bezierCurveTo(352 * a, 90 * a, 404 * a, 176 * a, 346 * a, 234 * a), c.bezierCurveTo(283 * a, 298 * a, 179 * a, 299 * a, 145 * a, 291 * a), c.bezierCurveTo(108 * a, 282 * a, 100 * a, 239 * a, 63 * a, 205 * a), c.bezierCurveTo(37 * a, 181 * a, 45 * a, 131 * a, 80 * a, 107 * a), c.closePath(), h(c, f[0]))));
            return e;
        };

        function Mb(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                g = (a * e) * 2,
                k = (a * e) * 2;
            d.width = g;
            d.height = k;
            c.translate(g / 2, k / 2);
            A(c, 0, 0, e * a, 0);
            h(c, f);
            return d;
        };

        function ke(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 373 * a;
            d.height = 314 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(184.048583984375 * a, 69.1805419921875 * a);
            B(c, -40 * a, -28.5 * a, 80 * a, 57 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(185.048583984375 * a, 61.6805419921875 * a);
            c.bezierCurveTo(145.048583984375 * a, 59.6805419921875 * a, 138.048583984375 * a, 41.6805419921875 * a, 148.048583984375 * a, 33.6805419921875 * a);
            c.bezierCurveTo(169.048583984375 * a, 17.6805419921875 * a, 194.048583984375 * a, 20.6805419921875 * a, 210.048583984375 * a, 27.6805419921875 * a);
            c.bezierCurveTo(234.048583984375 * a, 40.6805419921875 * a, 225.048583984375 * a, 57.6805419921875 * a, 186.048583984375 * a, 61.6805419921875 * a);
            c.closePath();
            h(c, f[0], f[0], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(224.048583984375 * a, 56.6805419921875 * a);
            c.bezierCurveTo(326.048583984375 * a, 69.6805419921875 * a, 363.048583984375 * a, 148.6805419921875 * a, 349.048583984375 * a, 206.6805419921875 * a);
            c.bezierCurveTo(329.048583984375 * a, 278.6805419921875 * a, 252.048583984375 * a, 283.6805419921875 * a, 206.048583984375 * a, 275.6805419921875 * a);
            c.bezierCurveTo(206.548583984375 * a, 266.6805419921875 * a, 206.548583984375 * a, 266.6805419921875 * a, 207.048583984375 * a, 257.6805419921875 * a);
            c.bezierCurveTo(276.048583984375 * a, 268.6805419921875 * a, 308.048583984375 * a, 239.6805419921875 * a, 323.048583984375 * a, 208.6805419921875 * a);
            c.bezierCurveTo(352.048583984375 * a, 145.6805419921875 * a, 292.048583984375 * a, 86.6805419921875 * a, 223.048583984375 * a, 74.6805419921875 * a);
            c.closePath();
            h(c, f[0], f[0], 6 * a);
            c.save();
            c.translate(183.548583984375 * a, 119.6805419921875 * a);
            B(c, -121.5 * a, -45 * a, 243 * a, 90 * a, 40 * a);
            c.restore();
            h(c, f[0], f[0], 6 * a);
            c.save();
            c.translate(183.048583984375 * a, 155.6805419921875 * a);
            B(c, -121 * a, -52 * a, 242 * a, 104 * a, 40 * a);
            c.restore();
            h(c, f[0], f[0], 6 * a);
            c.save();
            c.translate(183.048583984375 * a, 205.1805419921875 * a);
            B(c, -121 * a, -50.5 * a, 242 * a, 101 * a, 40 * a);
            c.restore();
            h(c, f[0], f[0], 6 * a);
            c.save();
            c.translate(185.048583984375 * a, 204.1805419921875 * a);
            B(c, -100 * a, -34.5 * a, 200 * a, 69 * a, 40 * a);
            c.restore();
            h(c, f[0], f[0], 6 * a);
            A(c, 185.048583984375 * a, 257.6805419921875 * a, 27.018512172212592 * a);
            h(c, f[0], f[0], 6 * a);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(224.048583984375 * a, 56.6805419921875 * a);
            c.bezierCurveTo(326.048583984375 * a, 69.6805419921875 * a, 363.048583984375 * a, 148.6805419921875 * a, 349.048583984375 * a, 206.6805419921875 * a);
            c.bezierCurveTo(329.048583984375 * a, 278.6805419921875 * a, 252.048583984375 * a, 283.6805419921875 * a, 206.048583984375 * a, 275.6805419921875 * a);
            c.bezierCurveTo(206.548583984375 * a, 266.6805419921875 * a, 206.548583984375 * a, 266.6805419921875 * a, 207.048583984375 * a, 257.6805419921875 * a);
            c.bezierCurveTo(276.048583984375 * a, 268.6805419921875 * a, 308.048583984375 * a, 239.6805419921875 * a, 323.048583984375 * a, 208.6805419921875 * a);
            c.bezierCurveTo(352.048583984375 * a, 145.6805419921875 * a, 292.048583984375 * a, 86.6805419921875 * a, 223.048583984375 * a, 74.6805419921875 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.save();
            c.translate(184.048583984375 * a, 69.1805419921875 * a);
            B(c, -40 * a, -28.5 * a, 80 * a, 57 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(185.048583984375 * a, 61.6805419921875 * a);
            c.bezierCurveTo(145.048583984375 * a, 59.6805419921875 * a, 138.048583984375 * a, 41.6805419921875 * a, 148.048583984375 * a, 33.6805419921875 * a);
            c.bezierCurveTo(169.048583984375 * a, 17.6805419921875 * a, 194.048583984375 * a, 20.6805419921875 * a, 210.048583984375 * a, 27.6805419921875 * a);
            c.bezierCurveTo(234.048583984375 * a, 40.6805419921875 * a, 225.048583984375 * a, 57.6805419921875 * a, 186.048583984375 * a, 61.6805419921875 * a);
            c.closePath();
            h(c, f[1], f[2], 6 * a);
            c.save();
            c.translate(183.548583984375 * a, 119.6805419921875 * a);
            B(c, -121.5 * a, -45 * a, 243 * a, 90 * a, 40 * a);
            c.restore();
            h(c, f[5], f[4], 6 * a);
            c.save();
            c.translate(183.048583984375 * a, 155.6805419921875 * a);
            B(c, -121 * a, -52 * a, 242 * a, 104 * a, 40 * a);
            c.restore();
            h(c, f[3], f[4], 6 * a);
            c.save();
            c.translate(183.048583984375 * a, 205.1805419921875 * a);
            B(c, -121 * a, -50.5 * a, 242 * a, 101 * a, 40 * a);
            c.restore();
            h(c, f[6], f[4], 6 * a);
            c.globalCompositeOperation = "destination-out";
            c.save();
            c.translate(185.048583984375 * a, 204.1805419921875 * a);
            B(c, -100 * a, -34.5 * a, 200 * a, 69 * a, 40 * a);
            c.restore();
            h(c, f[7], f[8], 6 * a);
            c.globalCompositeOperation = "source-over";
            c.globalAlpha = 0.5;
            c.save();
            c.translate(185.048583984375 * a, 204.1805419921875 * a);
            B(c, -100 * a, -34.5 * a, 200 * a, 69 * a, 40 * a);
            c.restore();
            h(c, f[7], f[8], 6 * a);
            c.globalAlpha = 1;
            c.save();
            A(c, 185.048583984375 * a, 257.6805419921875 * a, 27.018512172212592 * a);
            h(c, f[3], f[4], 6 * a);
            c.restore();
            return d;
        };

        function le(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 220 * a;
            d.height = 180 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(-90 * a, -150 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(104 * a, 237.8000030517578 * a);
            c.bezierCurveTo(110 * a, 237.8000030517578 * a, 110 * a, 237.8000030517578 * a, 116 * a, 237.8000030517578 * a);
            c.bezierCurveTo(116 * a, 241.8000030517578 * a, 116 * a, 241.8000030517578 * a, 116 * a, 245.8000030517578 * a);
            c.bezierCurveTo(115 * a, 245.3000030517578 * a, 115 * a, 245.3000030517578 * a, 114 * a, 244.8000030517578 * a);
            c.bezierCurveTo(109.5 * a, 244.8000030517578 * a, 109.5 * a, 244.8000030517578 * a, 105 * a, 244.8000030517578 * a);
            c.closePath();
            h(c, f[5], f[5], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(115 * a, 211.20000457763672 * a);
            c.bezierCurveTo(106 * a, 216.20000457763672 * a, 101 * a, 234.20000457763672 * a, 102 * a, 241.20000457763672 * a);
            c.bezierCurveTo(102 * a, 260.2000045776367 * a, 115 * a, 269.2000045776367 * a, 115 * a, 269.2000045776367 * a);
            c.bezierCurveTo(116 * a, 265.2000045776367 * a, 115.5 * a, 265.2000045776367 * a, 116 * a, 261.2000045776367 * a);
            c.bezierCurveTo(112 * a, 264 * a, 108 * a, 254 * a, 106 * a, 242 * a);
            c.bezierCurveTo(105 * a, 232 * a, 110 * a, 222 * a, 115 * a, 218 * a);
            c.bezierCurveTo(116 * a, 216.75 * a, 115.5 * a, 217.375 * a, 116 * a, 216.75 * a);
            c.closePath();
            h(c, f[5], f[5], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(120 * a, 207 * a);
            c.bezierCurveTo(115 * a, 206 * a, 114 * a, 209 * a, 114 * a, 211 * a);
            c.bezierCurveTo(114 * a, 268 * a, 114 * a, 241 * a, 114 * a, 271 * a);
            c.bezierCurveTo(115 * a, 276 * a, 118 * a, 276 * a, 120 * a, 276 * a);
            c.bezierCurveTo(122 * a, 273 * a, 120.5 * a, 274.5 * a, 121 * a, 273 * a);
            c.bezierCurveTo(121 * a, 241 * a, 121 * a, 241 * a, 121 * a, 209 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(284 * a, 238 * a);
            c.bezierCurveTo(289.5 * a, 238 * a, 289.5 * a, 238 * a, 295 * a, 238 * a);
            c.bezierCurveTo(295 * a, 241.5 * a, 295 * a, 241.5 * a, 295 * a, 245 * a);
            c.bezierCurveTo(289.5 * a, 245 * a, 289.5 * a, 245 * a, 284 * a, 245 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(283 * a, 211 * a);
            c.bezierCurveTo(293 * a, 216 * a, 297 * a, 231 * a, 297 * a, 241 * a);
            c.bezierCurveTo(298 * a, 254 * a, 290 * a, 265 * a, 284 * a, 269 * a);
            c.bezierCurveTo(283 * a, 266 * a, 283.5 * a, 266 * a, 283 * a, 263 * a);
            c.bezierCurveTo(290 * a, 260 * a, 292 * a, 251 * a, 293 * a, 242 * a);
            c.bezierCurveTo(292 * a, 223 * a, 289 * a, 224 * a, 284 * a, 218 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(280 * a, 206 * a);
            c.bezierCurveTo(284 * a, 206 * a, 285 * a, 208 * a, 285 * a, 211 * a);
            c.bezierCurveTo(285 * a, 241.5 * a, 285 * a, 241.5 * a, 285 * a, 272 * a);
            c.bezierCurveTo(284 * a, 275 * a, 284 * a, 275 * a, 280 * a, 275 * a);
            c.bezierCurveTo(279 * a, 273.5 * a, 279 * a, 273.5 * a, 278 * a, 272 * a);
            c.bezierCurveTo(278 * a, 240.5 * a, 278 * a, 240.5 * a, 278 * a, 209 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(138 * a, 298.40000915527344 * a);
            c.bezierCurveTo(141 * a, 311.40000915527344 * a, 151 * a, 314.40000915527344 * a, 162 * a, 316.40000915527344 * a);
            c.bezierCurveTo(224 * a, 316.40000915527344 * a, 200 * a, 315.90000915527344 * a, 238 * a, 315.40000915527344 * a);
            c.bezierCurveTo(254 * a, 316.40000915527344 * a, 261 * a, 306.40000915527344 * a, 264 * a, 298.40000915527344 * a);
            c.bezierCurveTo(255 * a, 304.40000915527344 * a, 250 * a, 306.40000915527344 * a, 244 * a, 306.40000915527344 * a);
            c.bezierCurveTo(201 * a, 306.90000915527344 * a, 201 * a, 306.90000915527344 * a, 158 * a, 307.40000915527344 * a);
            c.bezierCurveTo(150 * a, 306.40000915527344 * a, 148 * a, 306.40000915527344 * a, 139 * a, 300.40000915527344 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(161 * a, 177.5999984741211 * a);
            c.bezierCurveTo(130 * a, 175.5999984741211 * a, 123 * a, 190.5999984741211 * a, 122 * a, 205.5999984741211 * a);
            c.bezierCurveTo(121 * a, 277.5999984741211 * a, 122 * a, 242.5999984741211 * a, 122 * a, 279.5999984741211 * a);
            c.bezierCurveTo(128 * a, 297.5999984741211 * a, 137 * a, 299.5999984741211 * a, 143 * a, 300.5999984741211 * a);
            c.bezierCurveTo(163 * a, 301.0999984741211 * a, 163 * a, 301.0999984741211 * a, 183 * a, 301.5999984741211 * a);
            c.bezierCurveTo(150 * a, 300.5999984741211 * a, 135 * a, 290.5999984741211 * a, 134 * a, 267.5999984741211 * a);
            c.bezierCurveTo(133 * a, 245.5999984741211 * a, 146 * a, 235.5999984741211 * a, 164 * a, 235.5999984741211 * a);
            c.bezierCurveTo(206 * a, 236.0999984741211 * a, 206 * a, 236.0999984741211 * a, 248 * a, 236.5999984741211 * a);
            c.bezierCurveTo(266 * a, 243.5999984741211 * a, 268 * a, 259.5999984741211 * a, 267 * a, 266.5999984741211 * a);
            c.bezierCurveTo(266 * a, 288.5999984741211 * a, 251 * a, 294.5999984741211 * a, 244 * a, 297.5999984741211 * a);
            c.bezierCurveTo(228.5 * a, 299.5999984741211 * a, 228.5 * a, 299.5999984741211 * a, 213 * a, 301.5999984741211 * a);
            c.bezierCurveTo(236 * a, 301.0999984741211 * a, 236 * a, 301.0999984741211 * a, 259 * a, 300.5999984741211 * a);
            c.bezierCurveTo(272 * a, 295.5999984741211 * a, 277 * a, 288.5999984741211 * a, 278 * a, 271.5999984741211 * a);
            c.bezierCurveTo(277.5 * a, 236.5999984741211 * a, 277.5 * a, 236.5999984741211 * a, 277 * a, 201.5999984741211 * a);
            c.bezierCurveTo(276 * a, 186.5999984741211 * a, 265 * a, 178.5999984741211 * a, 254 * a, 177.5999984741211 * a);
            c.bezierCurveTo(247.5 * a, 177.5999984741211 * a, 247.5 * a, 177.5999984741211 * a, 241 * a, 177.5999984741211 * a);
            c.bezierCurveTo(255 * a, 202.5999984741211 * a, 214 * a, 217.5999984741211 * a, 201 * a, 215.5999984741211 * a);
            c.bezierCurveTo(170 * a, 215.5999984741211 * a, 152 * a, 197.5999984741211 * a, 161 * a, 178.5999984741211 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(162 * a, 175.5999984741211 * a);
            c.bezierCurveTo(153 * a, 176.0999984741211 * a, 153 * a, 176.0999984741211 * a, 144 * a, 176.5999984741211 * a);
            c.bezierCurveTo(125 * a, 178.5999984741211 * a, 121 * a, 196.5999984741211 * a, 121 * a, 207.5999984741211 * a);
            c.bezierCurveTo(121 * a, 243.20000076293945 * a, 121 * a, 243.20000076293945 * a, 121 * a, 278.8000030517578 * a);
            c.bezierCurveTo(126 * a, 298.8000030517578 * a, 137 * a, 300.8000030517578 * a, 146 * a, 302.8000030517578 * a);
            c.bezierCurveTo(200.5 * a, 302.8000030517578 * a, 200.5 * a, 302.8000030517578 * a, 255 * a, 302.8000030517578 * a);
            c.bezierCurveTo(271 * a, 301.8000030517578 * a, 279 * a, 288.8000030517578 * a, 279 * a, 273.8000030517578 * a);
            c.bezierCurveTo(279 * a, 236.8000030517578 * a, 279 * a, 236.8000030517578 * a, 279 * a, 199.8000030517578 * a);
            c.bezierCurveTo(274 * a, 178.8000030517578 * a, 263 * a, 177.8000030517578 * a, 255 * a, 175.8000030517578 * a);
            c.bezierCurveTo(248 * a, 175.8000030517578 * a, 248 * a, 175.8000030517578 * a, 241 * a, 175.8000030517578 * a);
            c.bezierCurveTo(240 * a, 175.8000030517578 * a, 240 * a, 175.8000030517578 * a, 239 * a, 175.8000030517578 * a);
            c.bezierCurveTo(254 * a, 200.8000030517578 * a, 222 * a, 211.8000030517578 * a, 202 * a, 212.8000030517578 * a);
            c.bezierCurveTo(168 * a, 213.8000030517578 * a, 151 * a, 190.8000030517578 * a, 163 * a, 176.8000030517578 * a);
            c.closePath();
            h(c, void 0, f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(198 * a, 161.4000015258789 * a);
            c.bezierCurveTo(198 * a, 186.9000015258789 * a, 198 * a, 186.9000015258789 * a, 198 * a, 212.4000015258789 * a);
            c.bezierCurveTo(201 * a, 212.4000015258789 * a, 201 * a, 212.4000015258789 * a, 204 * a, 212.4000015258789 * a);
            c.bezierCurveTo(204 * a, 186.9000015258789 * a, 204 * a, 186.9000015258789 * a, 204 * a, 161.4000015258789 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(161 * a, 194 * a);
            c.bezierCurveTo(188 * a, 169 * a, 231 * a, 179 * a, 241 * a, 194 * a);
            c.bezierCurveTo(239.5 * a, 196 * a, 239.5 * a, 196 * a, 238 * a, 198 * a);
            c.bezierCurveTo(221 * a, 179 * a, 182 * a, 182 * a, 165 * a, 198 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(157 * a, 188.80000019073486 * a);
            c.bezierCurveTo(162 * a, 150.80000019073486 * a, 241 * a, 150.80000019073486 * a, 245 * a, 188.80000019073486 * a);
            c.bezierCurveTo(242 * a, 224.80000019073486 * a, 162 * a, 228.80000019073486 * a, 157 * a, 188.80000019073486 * a);
            c.bezierCurveTo(159 * a, 188.80000019073486 * a, 159 * a, 188.80000019073486 * a, 161 * a, 188.80000019073486 * a);
            c.bezierCurveTo(168 * a, 216.80000019073486 * a, 231 * a, 218.80000019073486 * a, 241 * a, 188.80000019073486 * a);
            c.bezierCurveTo(236 * a, 156.80000019073486 * a, 169 * a, 152.80000019073486 * a, 161 * a, 188.80000019073486 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(156 * a, 188 * a);
            c.bezierCurveTo(160 * a, 164 * a, 183 * a, 159 * a, 201 * a, 158 * a);
            c.bezierCurveTo(232 * a, 159 * a, 244 * a, 174 * a, 246 * a, 188 * a);
            c.bezierCurveTo(245 * a, 212 * a, 213 * a, 219 * a, 201 * a, 218 * a);
            c.bezierCurveTo(181 * a, 221 * a, 158 * a, 207 * a, 156 * a, 190 * a);
            c.closePath();
            h(c, void 0, f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(162 * a, 189 * a);
            c.bezierCurveTo(166 * a, 170 * a, 185 * a, 165 * a, 201 * a, 164 * a);
            c.bezierCurveTo(227 * a, 165 * a, 240 * a, 178 * a, 239 * a, 188 * a);
            c.bezierCurveTo(239 * a, 204 * a, 210 * a, 210 * a, 201 * a, 210 * a);
            c.bezierCurveTo(182 * a, 211 * a, 166 * a, 200 * a, 162 * a, 190 * a);
            c.closePath();
            h(c, void 0, f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(131 * a, 262 * a);
            c.bezierCurveTo(136 * a, 241 * a, 144 * a, 236 * a, 158 * a, 233 * a);
            c.bezierCurveTo(200.5 * a, 233 * a, 229 * a, 232 * a, 243 * a, 233 * a);
            c.bezierCurveTo(259 * a, 235 * a, 267 * a, 248 * a, 269 * a, 260 * a);
            c.bezierCurveTo(269 * a, 266.5 * a, 269 * a, 266.5 * a, 269 * a, 273 * a);
            c.bezierCurveTo(265 * a, 290 * a, 251 * a, 297 * a, 242 * a, 298 * a);
            c.bezierCurveTo(202 * a, 298 * a, 202 * a, 298 * a, 162 * a, 298 * a);
            c.bezierCurveTo(148 * a, 298 * a, 136 * a, 289 * a, 132 * a, 273 * a);
            c.bezierCurveTo(131.5 * a, 268 * a, 131.5 * a, 268 * a, 131 * a, 263 * a);
            c.bezierCurveTo(135 * a, 263 * a, 135 * a, 263 * a, 139 * a, 263 * a);
            c.bezierCurveTo(139 * a, 281 * a, 151 * a, 287 * a, 160 * a, 290 * a);
            c.bezierCurveTo(200.5 * a, 290 * a, 200.5 * a, 290 * a, 241 * a, 290 * a);
            c.bezierCurveTo(252 * a, 290 * a, 257 * a, 281 * a, 262 * a, 271 * a);
            c.bezierCurveTo(261.5 * a, 267 * a, 261.5 * a, 267 * a, 261 * a, 263 * a);
            c.bezierCurveTo(260 * a, 249 * a, 251 * a, 242 * a, 241 * a, 241 * a);
            c.bezierCurveTo(240.5 * a, 240.5 * a, 240.5 * a, 240.5 * a, 240 * a, 240 * a);
            c.bezierCurveTo(200 * a, 240 * a, 200 * a, 240 * a, 160 * a, 240 * a);
            c.bezierCurveTo(145 * a, 244 * a, 142 * a, 250 * a, 139 * a, 264 * a);
            c.closePath();
            h(c, f[4], f[4], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(130 * a, 264 * a);
            c.bezierCurveTo(132 * a, 244 * a, 144 * a, 235 * a, 157 * a, 232 * a);
            c.bezierCurveTo(245 * a, 232 * a, 201 * a, 232 * a, 245 * a, 232 * a);
            c.bezierCurveTo(264 * a, 235 * a, 269 * a, 251 * a, 270 * a, 264 * a);
            c.bezierCurveTo(272 * a, 291 * a, 248 * a, 299 * a, 242 * a, 299 * a);
            c.bezierCurveTo(200 * a, 299 * a, 200 * a, 299 * a, 158 * a, 299 * a);
            c.bezierCurveTo(139 * a, 298 * a, 130 * a, 276 * a, 130 * a, 265 * a);
            c.closePath();
            h(c, void 0, f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(140 * a, 265.33333587646484 * a);
            c.bezierCurveTo(141 * a, 250.33333587646484 * a, 148 * a, 244.33333587646484 * a, 160 * a, 241.33333587646484 * a);
            c.bezierCurveTo(200 * a, 241.33333587646484 * a, 200 * a, 241.33333587646484 * a, 240 * a, 241.33333587646484 * a);
            c.bezierCurveTo(256 * a, 243.33333587646484 * a, 260 * a, 255.33333587646484 * a, 260 * a, 265.33333587646484 * a);
            c.bezierCurveTo(261 * a, 281.33333587646484 * a, 247 * a, 289.33333587646484 * a, 240 * a, 289.33333587646484 * a);
            c.bezierCurveTo(161 * a, 289.33333587646484 * a, 200.5 * a, 289.33333587646484 * a, 161 * a, 289.33333587646484 * a);
            c.bezierCurveTo(149 * a, 288.33333587646484 * a, 142 * a, 278.33333587646484 * a, 140 * a, 266.33333587646484 * a);
            c.closePath();
            h(c, void 0, f[4], 6 * a);
            c.globalAlpha = 0.5;
            c.scale(1, 1);
            c.translate(105 * a, 155 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(59.27557373046875 * a, 20.406280517578125 * a);
            c.bezierCurveTo(74.27557373046875 * a, 5.406280517578125 * a, 90.27557373046875 * a, 6.406280517578125 * a, 99.27557373046875 * a, 5.406280517578125 * a);
            c.bezierCurveTo(120.27557373046875 * a, 5.406280517578125 * a, 126.27557373046875 * a, 10.406280517578125 * a, 136.27557373046875 * a, 20.406280517578125 * a);
            c.bezierCurveTo(157.77557373046875 * a, 37.906280517578125 * a, 157.77557373046875 * a, 37.906280517578125 * a, 179.27557373046875 * a, 55.406280517578125 * a);
            c.bezierCurveTo(190.27557373046875 * a, 63.406280517578125 * a, 192.27557373046875 * a, 77.40628051757812 * a, 189.27557373046875 * a, 91.40628051757812 * a);
            c.bezierCurveTo(183.27557373046875 * a, 108.40628051757812 * a, 176.27557373046875 * a, 110.40628051757812 * a, 169.27557373046875 * a, 118.40628051757812 * a);
            c.bezierCurveTo(152.27557373046875 * a, 133.40628051757812 * a, 152.27557373046875 * a, 133.40628051757812 * a, 135.27557373046875 * a, 148.40628051757812 * a);
            c.bezierCurveTo(87.27557373046875 * a, 143.40628051757812 * a, 87.27557373046875 * a, 143.40628051757812 * a, 39.27557373046875 * a, 138.40628051757812 * a);
            c.bezierCurveTo(26.77557373046875 * a, 123.40628051757812 * a, 26.77557373046875 * a, 123.40628051757812 * a, 14.27557373046875 * a, 108.40628051757812 * a);
            c.bezierCurveTo(2.27557373046875 * a, 95.40628051757812 * a, 2.27557373046875 * a, 92.40628051757812 * a, 3.27557373046875 * a, 83.40628051757812 * a);
            c.bezierCurveTo(4.27557373046875 * a, 63.406280517578125 * a, 12.27557373046875 * a, 60.406280517578125 * a, 24.27557373046875 * a, 40.406280517578125 * a);
            c.closePath();
            h(c, f[5], f[5], 4 * a);
            c.globalAlpha = 1;
            c.translate(-110 * a, -155 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(104 * a, 237.8000030517578 * a);
            c.bezierCurveTo(110 * a, 237.8000030517578 * a, 110 * a, 237.8000030517578 * a, 116 * a, 237.8000030517578 * a);
            c.bezierCurveTo(116 * a, 241.8000030517578 * a, 116 * a, 241.8000030517578 * a, 116 * a, 245.8000030517578 * a);
            c.bezierCurveTo(115 * a, 245.3000030517578 * a, 115 * a, 245.3000030517578 * a, 114 * a, 244.8000030517578 * a);
            c.bezierCurveTo(109.5 * a, 244.8000030517578 * a, 109.5 * a, 244.8000030517578 * a, 105 * a, 244.8000030517578 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(115 * a, 211.20000457763672 * a);
            c.bezierCurveTo(106 * a, 216.20000457763672 * a, 101 * a, 234.20000457763672 * a, 102 * a, 241.20000457763672 * a);
            c.bezierCurveTo(102 * a, 260.2000045776367 * a, 115 * a, 269.2000045776367 * a, 115 * a, 269.2000045776367 * a);
            c.bezierCurveTo(116 * a, 265.2000045776367 * a, 115.5 * a, 265.2000045776367 * a, 116 * a, 261.2000045776367 * a);
            c.bezierCurveTo(112 * a, 264 * a, 108 * a, 254 * a, 106 * a, 242 * a);
            c.bezierCurveTo(105 * a, 232 * a, 110 * a, 222 * a, 115 * a, 218 * a);
            c.bezierCurveTo(116 * a, 216.75 * a, 115.5 * a, 217.375 * a, 116 * a, 216.75 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(120 * a, 207 * a);
            c.bezierCurveTo(115 * a, 206 * a, 114 * a, 209 * a, 114 * a, 211 * a);
            c.bezierCurveTo(114 * a, 268 * a, 114 * a, 241 * a, 114 * a, 271 * a);
            c.bezierCurveTo(115 * a, 276 * a, 118 * a, 276 * a, 120 * a, 276 * a);
            c.bezierCurveTo(122 * a, 273 * a, 120.5 * a, 274.5 * a, 121 * a, 273 * a);
            c.bezierCurveTo(121 * a, 241 * a, 121 * a, 241 * a, 121 * a, 209 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(284 * a, 238 * a);
            c.bezierCurveTo(289.5 * a, 238 * a, 289.5 * a, 238 * a, 295 * a, 238 * a);
            c.bezierCurveTo(295 * a, 241.5 * a, 295 * a, 241.5 * a, 295 * a, 245 * a);
            c.bezierCurveTo(289.5 * a, 245 * a, 289.5 * a, 245 * a, 284 * a, 245 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(283 * a, 211 * a);
            c.bezierCurveTo(293 * a, 216 * a, 297 * a, 231 * a, 297 * a, 241 * a);
            c.bezierCurveTo(298 * a, 254 * a, 290 * a, 265 * a, 284 * a, 269 * a);
            c.bezierCurveTo(283 * a, 266 * a, 283.5 * a, 266 * a, 283 * a, 263 * a);
            c.bezierCurveTo(290 * a, 260 * a, 292 * a, 251 * a, 293 * a, 242 * a);
            c.bezierCurveTo(292 * a, 223 * a, 289 * a, 224 * a, 284 * a, 218 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(280 * a, 206 * a);
            c.bezierCurveTo(284 * a, 206 * a, 285 * a, 208 * a, 285 * a, 211 * a);
            c.bezierCurveTo(285 * a, 241.5 * a, 285 * a, 241.5 * a, 285 * a, 272 * a);
            c.bezierCurveTo(284 * a, 275 * a, 284 * a, 275 * a, 280 * a, 275 * a);
            c.bezierCurveTo(279 * a, 273.5 * a, 279 * a, 273.5 * a, 278 * a, 272 * a);
            c.bezierCurveTo(278 * a, 240.5 * a, 278 * a, 240.5 * a, 278 * a, 209 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(138 * a, 298.40000915527344 * a);
            c.bezierCurveTo(141 * a, 311.40000915527344 * a, 151 * a, 314.40000915527344 * a, 162 * a, 316.40000915527344 * a);
            c.bezierCurveTo(224 * a, 316.40000915527344 * a, 200 * a, 315.90000915527344 * a, 238 * a, 315.40000915527344 * a);
            c.bezierCurveTo(254 * a, 316.40000915527344 * a, 261 * a, 306.40000915527344 * a, 264 * a, 298.40000915527344 * a);
            c.bezierCurveTo(255 * a, 304.40000915527344 * a, 250 * a, 306.40000915527344 * a, 244 * a, 306.40000915527344 * a);
            c.bezierCurveTo(201 * a, 306.90000915527344 * a, 201 * a, 306.90000915527344 * a, 158 * a, 307.40000915527344 * a);
            c.bezierCurveTo(150 * a, 306.40000915527344 * a, 148 * a, 306.40000915527344 * a, 139 * a, 300.40000915527344 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(161 * a, 177.5999984741211 * a);
            c.bezierCurveTo(130 * a, 175.5999984741211 * a, 123 * a, 190.5999984741211 * a, 122 * a, 205.5999984741211 * a);
            c.bezierCurveTo(121 * a, 277.5999984741211 * a, 122 * a, 242.5999984741211 * a, 122 * a, 279.5999984741211 * a);
            c.bezierCurveTo(128 * a, 297.5999984741211 * a, 137 * a, 299.5999984741211 * a, 143 * a, 300.5999984741211 * a);
            c.bezierCurveTo(163 * a, 301.0999984741211 * a, 163 * a, 301.0999984741211 * a, 183 * a, 301.5999984741211 * a);
            c.bezierCurveTo(150 * a, 300.5999984741211 * a, 135 * a, 290.5999984741211 * a, 134 * a, 267.5999984741211 * a);
            c.bezierCurveTo(133 * a, 245.5999984741211 * a, 146 * a, 235.5999984741211 * a, 164 * a, 235.5999984741211 * a);
            c.bezierCurveTo(206 * a, 236.0999984741211 * a, 206 * a, 236.0999984741211 * a, 248 * a, 236.5999984741211 * a);
            c.bezierCurveTo(266 * a, 243.5999984741211 * a, 268 * a, 259.5999984741211 * a, 267 * a, 266.5999984741211 * a);
            c.bezierCurveTo(266 * a, 288.5999984741211 * a, 251 * a, 294.5999984741211 * a, 244 * a, 297.5999984741211 * a);
            c.bezierCurveTo(228.5 * a, 299.5999984741211 * a, 228.5 * a, 299.5999984741211 * a, 213 * a, 301.5999984741211 * a);
            c.bezierCurveTo(236 * a, 301.0999984741211 * a, 236 * a, 301.0999984741211 * a, 259 * a, 300.5999984741211 * a);
            c.bezierCurveTo(272 * a, 295.5999984741211 * a, 277 * a, 288.5999984741211 * a, 278 * a, 271.5999984741211 * a);
            c.bezierCurveTo(277.5 * a, 236.5999984741211 * a, 277.5 * a, 236.5999984741211 * a, 277 * a, 201.5999984741211 * a);
            c.bezierCurveTo(276 * a, 186.5999984741211 * a, 265 * a, 178.5999984741211 * a, 254 * a, 177.5999984741211 * a);
            c.bezierCurveTo(247.5 * a, 177.5999984741211 * a, 247.5 * a, 177.5999984741211 * a, 241 * a, 177.5999984741211 * a);
            c.bezierCurveTo(255 * a, 202.5999984741211 * a, 214 * a, 217.5999984741211 * a, 201 * a, 215.5999984741211 * a);
            c.bezierCurveTo(170 * a, 215.5999984741211 * a, 152 * a, 197.5999984741211 * a, 161 * a, 178.5999984741211 * a);
            c.closePath();
            h(c, f[2], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(162 * a, 175.5999984741211 * a);
            c.bezierCurveTo(153 * a, 176.0999984741211 * a, 153 * a, 176.0999984741211 * a, 144 * a, 176.5999984741211 * a);
            c.bezierCurveTo(125 * a, 178.5999984741211 * a, 121 * a, 196.5999984741211 * a, 121 * a, 207.5999984741211 * a);
            c.bezierCurveTo(121 * a, 243.20000076293945 * a, 121 * a, 243.20000076293945 * a, 121 * a, 278.8000030517578 * a);
            c.bezierCurveTo(126 * a, 298.8000030517578 * a, 137 * a, 300.8000030517578 * a, 146 * a, 302.8000030517578 * a);
            c.bezierCurveTo(200.5 * a, 302.8000030517578 * a, 200.5 * a, 302.8000030517578 * a, 255 * a, 302.8000030517578 * a);
            c.bezierCurveTo(271 * a, 301.8000030517578 * a, 279 * a, 288.8000030517578 * a, 279 * a, 273.8000030517578 * a);
            c.bezierCurveTo(279 * a, 236.8000030517578 * a, 279 * a, 236.8000030517578 * a, 279 * a, 199.8000030517578 * a);
            c.bezierCurveTo(274 * a, 178.8000030517578 * a, 263 * a, 177.8000030517578 * a, 255 * a, 175.8000030517578 * a);
            c.bezierCurveTo(248 * a, 175.8000030517578 * a, 248 * a, 175.8000030517578 * a, 241 * a, 175.8000030517578 * a);
            c.bezierCurveTo(240 * a, 175.8000030517578 * a, 240 * a, 175.8000030517578 * a, 239 * a, 175.8000030517578 * a);
            c.bezierCurveTo(254 * a, 200.8000030517578 * a, 222 * a, 211.8000030517578 * a, 202 * a, 212.8000030517578 * a);
            c.bezierCurveTo(168 * a, 213.8000030517578 * a, 151 * a, 190.8000030517578 * a, 163 * a, 176.8000030517578 * a);
            c.closePath();
            h(c, void 0, f[3], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(198 * a, 161.4000015258789 * a);
            c.bezierCurveTo(198 * a, 186.9000015258789 * a, 198 * a, 186.9000015258789 * a, 198 * a, 212.4000015258789 * a);
            c.bezierCurveTo(201 * a, 212.4000015258789 * a, 201 * a, 212.4000015258789 * a, 204 * a, 212.4000015258789 * a);
            c.bezierCurveTo(204 * a, 186.9000015258789 * a, 204 * a, 186.9000015258789 * a, 204 * a, 161.4000015258789 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(161 * a, 194 * a);
            c.bezierCurveTo(188 * a, 169 * a, 231 * a, 179 * a, 241 * a, 194 * a);
            c.bezierCurveTo(239.5 * a, 196 * a, 239.5 * a, 196 * a, 238 * a, 198 * a);
            c.bezierCurveTo(221 * a, 179 * a, 182 * a, 182 * a, 165 * a, 198 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(157 * a, 188.80000019073486 * a);
            c.bezierCurveTo(162 * a, 150.80000019073486 * a, 241 * a, 150.80000019073486 * a, 245 * a, 188.80000019073486 * a);
            c.bezierCurveTo(242 * a, 224.80000019073486 * a, 162 * a, 228.80000019073486 * a, 157 * a, 188.80000019073486 * a);
            c.bezierCurveTo(159 * a, 188.80000019073486 * a, 159 * a, 188.80000019073486 * a, 161 * a, 188.80000019073486 * a);
            c.bezierCurveTo(168 * a, 216.80000019073486 * a, 231 * a, 218.80000019073486 * a, 241 * a, 188.80000019073486 * a);
            c.bezierCurveTo(236 * a, 156.80000019073486 * a, 169 * a, 152.80000019073486 * a, 161 * a, 188.80000019073486 * a);
            c.closePath();
            h(c, f[0], f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(156 * a, 188 * a);
            c.bezierCurveTo(160 * a, 164 * a, 183 * a, 159 * a, 201 * a, 158 * a);
            c.bezierCurveTo(232 * a, 159 * a, 244 * a, 174 * a, 246 * a, 188 * a);
            c.bezierCurveTo(245 * a, 212 * a, 213 * a, 219 * a, 201 * a, 218 * a);
            c.bezierCurveTo(181 * a, 221 * a, 158 * a, 207 * a, 156 * a, 190 * a);
            c.closePath();
            h(c, void 0, f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(162 * a, 189 * a);
            c.bezierCurveTo(166 * a, 170 * a, 185 * a, 165 * a, 201 * a, 164 * a);
            c.bezierCurveTo(227 * a, 165 * a, 240 * a, 178 * a, 239 * a, 188 * a);
            c.bezierCurveTo(239 * a, 204 * a, 210 * a, 210 * a, 201 * a, 210 * a);
            c.bezierCurveTo(182 * a, 211 * a, 166 * a, 200 * a, 162 * a, 190 * a);
            c.closePath();
            h(c, void 0, f[1], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(131 * a, 262 * a);
            c.bezierCurveTo(136 * a, 241 * a, 144 * a, 236 * a, 158 * a, 233 * a);
            c.bezierCurveTo(200.5 * a, 233 * a, 229 * a, 232 * a, 243 * a, 233 * a);
            c.bezierCurveTo(259 * a, 235 * a, 267 * a, 248 * a, 269 * a, 260 * a);
            c.bezierCurveTo(269 * a, 266.5 * a, 269 * a, 266.5 * a, 269 * a, 273 * a);
            c.bezierCurveTo(265 * a, 290 * a, 251 * a, 297 * a, 242 * a, 298 * a);
            c.bezierCurveTo(202 * a, 298 * a, 202 * a, 298 * a, 162 * a, 298 * a);
            c.bezierCurveTo(148 * a, 298 * a, 136 * a, 289 * a, 132 * a, 273 * a);
            c.bezierCurveTo(131.5 * a, 268 * a, 131.5 * a, 268 * a, 131 * a, 263 * a);
            c.bezierCurveTo(135 * a, 263 * a, 135 * a, 263 * a, 139 * a, 263 * a);
            c.bezierCurveTo(139 * a, 281 * a, 151 * a, 287 * a, 160 * a, 290 * a);
            c.bezierCurveTo(200.5 * a, 290 * a, 200.5 * a, 290 * a, 241 * a, 290 * a);
            c.bezierCurveTo(252 * a, 290 * a, 257 * a, 281 * a, 262 * a, 271 * a);
            c.bezierCurveTo(261.5 * a, 267 * a, 261.5 * a, 267 * a, 261 * a, 263 * a);
            c.bezierCurveTo(260 * a, 249 * a, 251 * a, 242 * a, 241 * a, 241 * a);
            c.bezierCurveTo(240.5 * a, 240.5 * a, 240.5 * a, 240.5 * a, 240 * a, 240 * a);
            c.bezierCurveTo(200 * a, 240 * a, 200 * a, 240 * a, 160 * a, 240 * a);
            c.bezierCurveTo(145 * a, 244 * a, 142 * a, 250 * a, 139 * a, 264 * a);
            c.closePath();
            h(c, f[0], f[0], 2 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(130 * a, 264 * a);
            c.bezierCurveTo(132 * a, 244 * a, 144 * a, 235 * a, 157 * a, 232 * a);
            c.bezierCurveTo(245 * a, 232 * a, 201 * a, 232 * a, 245 * a, 232 * a);
            c.bezierCurveTo(264 * a, 235 * a, 269 * a, 251 * a, 270 * a, 264 * a);
            c.bezierCurveTo(272 * a, 291 * a, 248 * a, 299 * a, 242 * a, 299 * a);
            c.bezierCurveTo(200 * a, 299 * a, 200 * a, 299 * a, 158 * a, 299 * a);
            c.bezierCurveTo(139 * a, 298 * a, 130 * a, 276 * a, 130 * a, 265 * a);
            c.closePath();
            h(c, void 0, f[1], 2 * a);
            return d;
        };

        function yh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 243 * a;
            f.height = 172 * a;
            A(d, 119.5 * a, 140.125 * a, 19 * a);
            h(d, void 0, e[1], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(36.5 * a, 20.125 * a);
            d.bezierCurveTo(119.5 * a, 20.625 * a, 119.5 * a, 20.625 * a, 202.5 * a, 21.125 * a);
            d.bezierCurveTo(214.5 * a, 22.125 * a, 216.5 * a, 26.125 * a, 217.5 * a, 35.125 * a);
            d.bezierCurveTo(221 * a, 76.125 * a, 221 * a, 76.125 * a, 224.5 * a, 117.125 * a);
            d.bezierCurveTo(225.5 * a, 127.125 * a, 221.5 * a, 131.125 * a, 210.5 * a, 132.125 * a);
            d.bezierCurveTo(117.5 * a, 132.125 * a, 117.5 * a, 132.125 * a, 24.5 * a, 132.125 * a);
            d.bezierCurveTo(14.5 * a, 131.125 * a, 13.5 * a, 126.125 * a, 16.5 * a, 111.125 * a);
            d.bezierCurveTo(19.5 * a, 73.125 * a, 19.5 * a, 73.125 * a, 22.5 * a, 35.125 * a);
            d.bezierCurveTo(23.5 * a, 23.125 * a, 29.5 * a, 21.125 * a, 36.5 * a, 20.125 * a);
            d.closePath();
            h(d, e[0], e[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(15.5 * a, 138.625 * a);
            d.bezierCurveTo(120 * a, 138.625 * a, 120 * a, 138.625 * a, 224.5 * a, 138.625 * a);
            d.closePath();
            h(d, void 0, e[2], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(13.5 * a, 131.625 * a);
            d.bezierCurveTo(119.5 * a, 131.625 * a, 119.5 * a, 131.625 * a, 225.5 * a, 131.625 * a);
            d.closePath();
            h(d, void 0, e[3], 10 * a);
            A(d, 119.5 * a, 140.125 * a, 14.866068747318506 * a);
            h(d, e[4], e[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(106.5 * a, 146.625 * a);
            d.bezierCurveTo(116.5 * a, 137.625 * a, 118.5 * a, 136.625 * a, 123.5 * a, 138.625 * a);
            d.bezierCurveTo(131.5 * a, 145.625 * a, 133.5 * a, 148.625 * a, 127.5 * a, 152.625 * a);
            d.bezierCurveTo(115.5 * a, 158.625 * a, 111.5 * a, 153.625 * a, 106.5 * a, 147.625 * a);
            d.closePath();
            h(d, e[6], e[7], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105.5 * a, 146.625 * a);
            d.bezierCurveTo(116.5 * a, 159.625 * a, 124.5 * a, 156.625 * a, 132.5 * a, 146.625 * a);
            h(d, void 0, e[8], 5 * a);
            d.save();
            d.translate(75.5 * a, 80.125 * a);
            B(d, -39 * a, -40 * a, 78 * a, 78 * a, 10 * a);
            d.restore();
            h(d, e[9]);
            d.save();
            d.translate(167 * a, 80.125 * a);
            B(d, -38.5 * a, -39 * a, 78 * a, 78 * a, 10 * a);
            d.restore();
            h(d, e[9]);
            return f;
        };

        function zh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 400 * a;
            e.height = 400 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(96.5 * a, 277.34375 * a);
            d.bezierCurveTo(197.5 * a, 259.84375 * a, 197.5 * a, 259.84375 * a, 298.5 * a, 242.34375 * a);
            d.bezierCurveTo(311.5 * a, 231.34375 * a, 307.5 * a, 168.34375 * a, 298.5 * a, 150.34375 * a);
            d.bezierCurveTo(198 * a, 170.34375 * a, 198 * a, 170.34375 * a, 97.5 * a, 190.34375 * a);
            d.closePath();
            h(d, f[1], f[2], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(98.5 * a, 214.34375 * a);
            d.bezierCurveTo(199 * a, 196.34375 * a, 199 * a, 196.34375 * a, 299.5 * a, 178.34375 * a);
            d.closePath();
            h(d, void 0, f[2], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(98.5 * a, 247.34375 * a);
            d.bezierCurveTo(201.5 * a, 229.34375 * a, 201.5 * a, 229.34375 * a, 304.5 * a, 211.34375 * a);
            d.closePath();
            h(d, void 0, f[2], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(97.5 * a, 189.34375 * a);
            d.bezierCurveTo(97 * a, 199.84375 * a, 97 * a, 199.84375 * a, 96.5 * a, 210.34375 * a);
            d.bezierCurveTo(110.5 * a, 204.34375 * a, 110.5 * a, 204.34375 * a, 124.5 * a, 198.34375 * a);
            d.bezierCurveTo(137.5 * a, 203.84375 * a, 137.5 * a, 203.84375 * a, 150.5 * a, 209.34375 * a);
            d.bezierCurveTo(172 * a, 197.84375 * a, 172 * a, 197.84375 * a, 193.5 * a, 186.34375 * a);
            d.bezierCurveTo(211.5 * a, 189.84375 * a, 211.5 * a, 189.84375 * a, 229.5 * a, 193.34375 * a);
            d.bezierCurveTo(240.5 * a, 193.34375 * a, 240.5 * a, 193.34375 * a, 251.5 * a, 193.34375 * a);
            d.bezierCurveTo(261 * a, 182.84375 * a, 261 * a, 182.84375 * a, 270.5 * a, 172.34375 * a);
            d.bezierCurveTo(287.5 * a, 169.34375 * a, 287.5 * a, 169.34375 * a, 304.5 * a, 166.34375 * a);
            d.bezierCurveTo(304.5 * a, 156.34375 * a, 300.5 * a, 145.34375 * a, 298.5 * a, 147.34375 * a);
            d.closePath();
            h(d, f[3], f[4], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(300.5 * a, 147.34375 * a);
            d.bezierCurveTo(293.5 * a, 121.34375 * a, 278.5 * a, 106.34375 * a, 256.5 * a, 101.34375 * a);
            d.bezierCurveTo(176.5 * a, 145.34375 * a, 176.5 * a, 145.34375 * a, 96.5 * a, 189.34375 * a);
            d.closePath();
            h(d, f[5], f[6], 12 * a);
            A(d, 252.5 * a, 129.34375 * a, 18.027756377319946 * a);
            h(d, f[7]);
            A(d, 248.5 * a, 121.34375 * a, 8.246211251235321 * a);
            h(d, f[8]);
            return e;
        };

        function Ah(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 400 * a;
            d.height = 400 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(10 * a, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100.5 * a, 126.34375 * a);
            c.bezierCurveTo(151.5 * a, 104.34375 * a, 279.5 * a, 188.34375 * a, 297.5 * a, 292.34375 * a);
            c.bezierCurveTo(222.5 * a, 307.34375 * a, 106.5 * a, 196.34375 * a, 100.5 * a, 127.34375 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(106.5 * a, 131.34375 * a);
            c.bezierCurveTo(140.5 * a, 142.34375 * a, 225.5 * a, 184.34375 * a, 290.5 * a, 287.34375 * a);
            c.bezierCurveTo(270.5 * a, 188.34375 * a, 152.5 * a, 118.34375 * a, 107.5 * a, 131.34375 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(157.5 * a, 137.34375 * a);
            c.bezierCurveTo(161.5 * a, 138.34375 * a, 164.5 * a, 140.34375 * a, 168.5 * a, 142.34375 * a);
            c.bezierCurveTo(165.5 * a, 156.34375 * a, 141.5 * a, 176.34375 * a, 126.5 * a, 179.34375 * a);
            c.bezierCurveTo(123.5 * a, 173.34375 * a, 120.5 * a, 169.34375 * a, 120.5 * a, 169.34375 * a);
            c.bezierCurveTo(141.5 * a, 161.34375 * a, 156.5 * a, 145.34375 * a, 155.5 * a, 136.34375 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(196.5 * a, 151.34375 * a);
            c.bezierCurveTo(211.5 * a, 158.34375 * a, 224.5 * a, 171.34375 * a, 229.5 * a, 176.34375 * a);
            c.bezierCurveTo(246.5 * a, 163.34375 * a, 259.5 * a, 166.34375 * a, 272.5 * a, 168.34375 * a);
            c.bezierCurveTo(254.5 * a, 146.34375 * a, 214.5 * a, 145.34375 * a, 198.5 * a, 151.34375 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(154.5 * a, 222.34375 * a);
            c.bezierCurveTo(164.5 * a, 234.34375 * a, 173.5 * a, 242.34375 * a, 178.5 * a, 245.34375 * a);
            c.bezierCurveTo(174.5 * a, 265.34375 * a, 180.5 * a, 274.34375 * a, 186.5 * a, 283.34375 * a);
            c.bezierCurveTo(165.5 * a, 277.34375 * a, 151.5 * a, 245.34375 * a, 155.5 * a, 224.34375 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(279.5 * a, 294.34375 * a);
            c.bezierCurveTo(286.5 * a, 285.84375 * a, 286.5 * a, 285.84375 * a, 293.5 * a, 277.34375 * a);
            c.bezierCurveTo(315.5 * a, 280.34375 * a, 315.5 * a, 280.34375 * a, 337.5 * a, 283.34375 * a);
            c.bezierCurveTo(340.5 * a, 311.34375 * a, 317.5 * a, 326.34375 * a, 307.5 * a, 331.34375 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(-10 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100.5 * a, 126.34375 * a);
            c.bezierCurveTo(151.5 * a, 104.34375 * a, 279.5 * a, 188.34375 * a, 297.5 * a, 292.34375 * a);
            c.bezierCurveTo(222.5 * a, 307.34375 * a, 106.5 * a, 196.34375 * a, 100.5 * a, 127.34375 * a);
            c.closePath();
            h(c, f[1], f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(106.5 * a, 131.34375 * a);
            c.bezierCurveTo(140.5 * a, 142.34375 * a, 225.5 * a, 184.34375 * a, 290.5 * a, 287.34375 * a);
            c.bezierCurveTo(270.5 * a, 188.34375 * a, 152.5 * a, 118.34375 * a, 107.5 * a, 131.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(157.5 * a, 137.34375 * a);
            c.bezierCurveTo(161.5 * a, 138.34375 * a, 164.5 * a, 140.34375 * a, 168.5 * a, 142.34375 * a);
            c.bezierCurveTo(165.5 * a, 156.34375 * a, 141.5 * a, 176.34375 * a, 126.5 * a, 179.34375 * a);
            c.bezierCurveTo(123.5 * a, 173.34375 * a, 120.5 * a, 169.34375 * a, 120.5 * a, 169.34375 * a);
            c.bezierCurveTo(141.5 * a, 161.34375 * a, 156.5 * a, 145.34375 * a, 155.5 * a, 136.34375 * a);
            c.closePath();
            h(c, f[4]);
            A(c, 125.5 * a, 140.34375 * a, 11.180339887498949 * a);
            h(c, f[5]);
            A(c, 122.5 * a, 135.34375 * a, 5.0990195135927845 * a);
            h(c, f[6]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(196.5 * a, 151.34375 * a);
            c.bezierCurveTo(211.5 * a, 158.34375 * a, 224.5 * a, 171.34375 * a, 229.5 * a, 176.34375 * a);
            c.bezierCurveTo(246.5 * a, 163.34375 * a, 259.5 * a, 166.34375 * a, 272.5 * a, 168.34375 * a);
            c.bezierCurveTo(254.5 * a, 146.34375 * a, 214.5 * a, 145.34375 * a, 198.5 * a, 151.34375 * a);
            c.closePath();
            h(c, f[7], f[8], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(154.5 * a, 222.34375 * a);
            c.bezierCurveTo(164.5 * a, 234.34375 * a, 173.5 * a, 242.34375 * a, 178.5 * a, 245.34375 * a);
            c.bezierCurveTo(174.5 * a, 265.34375 * a, 180.5 * a, 274.34375 * a, 186.5 * a, 283.34375 * a);
            c.bezierCurveTo(165.5 * a, 277.34375 * a, 151.5 * a, 245.34375 * a, 155.5 * a, 224.34375 * a);
            c.closePath();
            h(c, f[7], f[8], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(279.5 * a, 294.34375 * a);
            c.bezierCurveTo(286.5 * a, 285.84375 * a, 286.5 * a, 285.84375 * a, 293.5 * a, 277.34375 * a);
            c.bezierCurveTo(315.5 * a, 280.34375 * a, 315.5 * a, 280.34375 * a, 337.5 * a, 283.34375 * a);
            c.bezierCurveTo(340.5 * a, 311.34375 * a, 317.5 * a, 326.34375 * a, 307.5 * a, 331.34375 * a);
            c.closePath();
            h(c, f[7], f[8], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(296.5 * a, 287.34375 * a);
            c.bezierCurveTo(311.5 * a, 291.34375 * a, 311.5 * a, 291.34375 * a, 326.5 * a, 295.34375 * a);
            c.closePath();
            h(c, void 0, f[9], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(294.5 * a, 289.34375 * a);
            c.bezierCurveTo(308.5 * a, 297.34375 * a, 308.5 * a, 297.34375 * a, 322.5 * a, 305.34375 * a);
            c.closePath();
            h(c, void 0, f[9], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(294.5 * a, 291.34375 * a);
            c.bezierCurveTo(304 * a, 303.34375 * a, 304 * a, 303.34375 * a, 313.5 * a, 315.34375 * a);
            c.closePath();
            h(c, void 0, f[9], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(226.5 * a, 161.34375 * a);
            c.bezierCurveTo(230.5 * a, 160.34375 * a, 236.5 * a, 158.34375 * a, 238.5 * a, 161.34375 * a);
            c.bezierCurveTo(238.5 * a, 157.34375 * a, 228.5 * a, 159.34375 * a, 227.5 * a, 161.34375 * a);
            c.closePath();
            h(c, void 0, f[9], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(167.5 * a, 248.34375 * a);
            c.bezierCurveTo(165.5 * a, 251.34375 * a, 168.5 * a, 256.34375 * a, 168.5 * a, 253.34375 * a);
            c.bezierCurveTo(166.5 * a, 252.34375 * a, 168.5 * a, 246.34375 * a, 166.5 * a, 247.34375 * a);
            c.closePath();
            h(c, void 0, f[9], 3 * a);
            return d;
        };

        function Bh(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 309 * a;
            d.height = 287 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(10 * a, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(34.5 * a, 38.53125 * a);
            c.bezierCurveTo(91.5 * a, 30.53125 * a, 138.5 * a, 68.53125 * a, 169.5 * a, 93.53125 * a);
            c.bezierCurveTo(208.5 * a, 128.53125 * a, 226.5 * a, 157.53125 * a, 233.5 * a, 209.53125 * a);
            c.bezierCurveTo(195.5 * a, 218.53125 * a, 138.5 * a, 191.53125 * a, 105.5 * a, 157.53125 * a);
            c.bezierCurveTo(54.5 * a, 112.53125 * a, 41.5 * a, 80.53125 * a, 33.5 * a, 38.53125 * a);
            c.closePath();
            h(c, f[0], f[0], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(143.5 * a, 74.53125 * a);
            c.bezierCurveTo(164.5 * a, 73.53125 * a, 159 * a, 74.53125 * a, 174.5 * a, 74.53125 * a);
            c.bezierCurveTo(186 * a, 86.53125 * a, 186 * a, 86.53125 * a, 197.5 * a, 98.53125 * a);
            c.bezierCurveTo(186 * a, 97.03125 * a, 186 * a, 97.03125 * a, 174.5 * a, 95.53125 * a);
            c.closePath();
            h(c, f[0], f[0], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(87.5 * a, 142.53125 * a);
            c.bezierCurveTo(92 * a, 160.03125 * a, 92 * a, 160.03125 * a, 96.5 * a, 177.53125 * a);
            c.bezierCurveTo(108 * a, 181.53125 * a, 108 * a, 181.53125 * a, 119.5 * a, 185.53125 * a);
            c.bezierCurveTo(116.5 * a, 175.53125 * a, 116.5 * a, 175.53125 * a, 113.5 * a, 165.53125 * a);
            c.closePath();
            h(c, f[0], f[0], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(236.5 * a, 189.53125 * a);
            c.bezierCurveTo(274.5 * a, 197.53125 * a, 255.5 * a, 194.03125 * a, 274.5 * a, 198.53125 * a);
            c.bezierCurveTo(272.5 * a, 236.53125 * a, 261.5 * a, 237.53125 * a, 242.5 * a, 248.53125 * a);
            c.bezierCurveTo(230.5 * a, 231.03125 * a, 230.5 * a, 231.03125 * a, 218.5 * a, 213.53125 * a);
            c.closePath();
            h(c, f[0], f[0], 10 * a);
            c.globalAlpha = 1;
            c.translate(-10 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(34.5 * a, 38.53125 * a);
            c.bezierCurveTo(91.5 * a, 30.53125 * a, 138.5 * a, 68.53125 * a, 169.5 * a, 93.53125 * a);
            c.bezierCurveTo(208.5 * a, 128.53125 * a, 226.5 * a, 157.53125 * a, 233.5 * a, 209.53125 * a);
            c.bezierCurveTo(195.5 * a, 218.53125 * a, 138.5 * a, 191.53125 * a, 105.5 * a, 157.53125 * a);
            c.bezierCurveTo(54.5 * a, 112.53125 * a, 41.5 * a, 80.53125 * a, 33.5 * a, 38.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(143.5 * a, 74.53125 * a);
            c.bezierCurveTo(164.5 * a, 73.53125 * a, 159 * a, 74.53125 * a, 174.5 * a, 74.53125 * a);
            c.bezierCurveTo(186 * a, 86.53125 * a, 186 * a, 86.53125 * a, 197.5 * a, 98.53125 * a);
            c.bezierCurveTo(186 * a, 97.03125 * a, 186 * a, 97.03125 * a, 174.5 * a, 95.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(87.5 * a, 142.53125 * a);
            c.bezierCurveTo(92 * a, 160.03125 * a, 92 * a, 160.03125 * a, 96.5 * a, 177.53125 * a);
            c.bezierCurveTo(108 * a, 181.53125 * a, 108 * a, 181.53125 * a, 119.5 * a, 185.53125 * a);
            c.bezierCurveTo(116.5 * a, 175.53125 * a, 116.5 * a, 175.53125 * a, 113.5 * a, 165.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(236.5 * a, 189.53125 * a);
            c.bezierCurveTo(274.5 * a, 197.53125 * a, 255.5 * a, 194.03125 * a, 274.5 * a, 198.53125 * a);
            c.bezierCurveTo(272.5 * a, 236.53125 * a, 261.5 * a, 237.53125 * a, 242.5 * a, 248.53125 * a);
            c.bezierCurveTo(230.5 * a, 231.03125 * a, 230.5 * a, 231.03125 * a, 218.5 * a, 213.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(109.5 * a, 51.53125 * a);
            c.bezierCurveTo(107.5 * a, 92.53125 * a, 91.5 * a, 95.53125 * a, 59.5 * a, 101.53125 * a);
            h(c, f[1], f[2], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(72.5 * a, 51.53125 * a);
            c.bezierCurveTo(71 * a, 64.53125 * a, 69.5 * a, 76.53125 * a, 69.5 * a, 77.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(84.5 * a, 63.53125 * a);
            c.bezierCurveTo(70.5 * a, 65.03125 * a, 70.5 * a, 65.03125 * a, 56.5 * a, 66.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(125.5 * a, 84.53125 * a);
            c.bezierCurveTo(125.5 * a, 110.03125 * a, 125.5 * a, 110.03125 * a, 125.5 * a, 135.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(149.5 * a, 108.53125 * a);
            c.bezierCurveTo(150 * a, 137.03125 * a, 150 * a, 137.03125 * a, 150.5 * a, 165.53125 * a);
            c.closePath();
            h(c, f[1], f[2], 7 * a);
            return d;
        };

        function me(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                g = 130 * a,
                k = 142 * a;
            d.width = g;
            d.height = k;
            c.translate(g / 2, (k / 2) + (7 * a));
            c.globalAlpha = e ? 0.5 : 1;
            A(c, 0, 0, 60 * a);
            h(c, f[0]);
            c.translate(0, -7 * a);
            c.globalAlpha = 1;
            A(c, 0, 0, 60 * a, 0);
            h(c, f[1], f[2], 4 * a);
            A(c, 0, 0, 40 * a);
            h(c, f[3]);
            A(c, 0, 0, 25 * a);
            h(c, f[4], f[5], 8 * a);
            return d;
        };

        function Ch(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d"),
                c = 130 * a,
                g = 142 * a,
                k = c / 2,
                l = g / 2;
            f.width = c;
            f.height = g;
            A(d, k, l, 40 * a, 0);
            h(d, void 0, e[0], 7 * a);
            A(d, k, l, 30 * a, 0);
            h(d, void 0, e[0], 7 * a);
            A(d, k, l, 20 * a, 0);
            h(d, e[0]);
            return f;
        };

        function ne(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 130 * a;
            d.height = 142 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(65 * a, 80 * a);
            c.rotate(0.2);
            P(c, 9, 60 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.save();
            c.translate(65 * a, 71 * a);
            c.rotate(0.2);
            P(c, 9, 60 * a, 10 * a);
            h(c, f[1], f[2], 4);
            c.rotate(-0.32);
            P(c, 9, 38 * a, 10 * a);
            h(c, f[3], f[4], 4);
            c.rotate(0.68);
            P(c, 9, 20 * a, 8 * a);
            h(c, f[5], f[6], 6);
            c.restore();
            return d;
        };

        function xc(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 372 * a;
            f.height = 375 * a;
            d.globalAlpha = 0.5;
            d.translate(15 * a, 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(313.0000305175781 * a, 76.58523559570312 * a);
            d.bezierCurveTo(308.0000305175781 * a, 130.58523559570312 * a, 279.0000305175781 * a, 158.58523559570312 * a, 254.00003051757812 * a, 175.58523559570312 * a);
            d.bezierCurveTo(287.0000305175781 * a, 182.58523559570312 * a, 274.0000305175781 * a, 181.08523559570312 * a, 294.0000305175781 * a, 186.58523559570312 * a);
            d.bezierCurveTo(293.5000305175781 * a, 196.08523559570312 * a, 293.5000305175781 * a, 196.08523559570312 * a, 293.0000305175781 * a, 205.58523559570312 * a);
            d.bezierCurveTo(304.0000305175781 * a, 201.08523559570312 * a, 304.0000305175781 * a, 201.08523559570312 * a, 315.0000305175781 * a, 196.58523559570312 * a);
            d.bezierCurveTo(350.0000305175781 * a, 219.58523559570312 * a, 343.0000305175781 * a, 221.58523559570312 * a, 351.0000305175781 * a, 230.58523559570312 * a);
            d.bezierCurveTo(296.0000305175781 * a, 260.5852355957031 * a, 264.0000305175781 * a, 256.5852355957031 * a, 220.00003051757812 * a, 236.58523559570312 * a);
            d.bezierCurveTo(233.00003051757812 * a, 266.5852355957031 * a, 232.00003051757812 * a, 279.5852355957031 * a, 231.00003051757812 * a, 295.5852355957031 * a);
            d.bezierCurveTo(222.00003051757812 * a, 297.5852355957031 * a, 222.00003051757812 * a, 297.5852355957031 * a, 213.00003051757812 * a, 299.5852355957031 * a);
            d.bezierCurveTo(219.50003051757812 * a, 308.0852355957031 * a, 219.50003051757812 * a, 308.0852355957031 * a, 226.00003051757812 * a, 316.5852355957031 * a);
            d.bezierCurveTo(223.00003051757812 * a, 344.5852355957031 * a, 216.00003051757812 * a, 350.5852355957031 * a, 209.00003051757812 * a, 363.5852355957031 * a);
            d.bezierCurveTo(154.00003051757812 * a, 318.5852355957031 * a, 156.00003051757812 * a, 268.5852355957031 * a, 160.00003051757812 * a, 238.58523559570312 * a);
            d.bezierCurveTo(135.00003051757812 * a, 268.5852355957031 * a, 125.00003051757812 * a, 267.5852355957031 * a, 112.00003051757812 * a, 272.5852355957031 * a);
            d.bezierCurveTo(104.50003051757812 * a, 266.5852355957031 * a, 104.50003051757812 * a, 266.5852355957031 * a, 97.00003051757812 * a, 260.5852355957031 * a);
            d.bezierCurveTo(93.00003051757812 * a, 271.0852355957031 * a, 93.00003051757812 * a, 271.0852355957031 * a, 89.00003051757812 * a, 281.5852355957031 * a);
            d.bezierCurveTo(66.00003051757812 * a, 288.5852355957031 * a, 59.000030517578125 * a, 288.5852355957031 * a, 39.000030517578125 * a, 285.5852355957031 * a);
            d.bezierCurveTo(56.000030517578125 * a, 216.58523559570312 * a, 91.00003051757812 * a, 204.58523559570312 * a, 129.00003051757812 * a, 189.58523559570312 * a);
            d.bezierCurveTo(90.00003051757812 * a, 176.58523559570312 * a, 89.00003051757812 * a, 173.58523559570312 * a, 79.00003051757812 * a, 166.58523559570312 * a);
            d.bezierCurveTo(82.00003051757812 * a, 155.08523559570312 * a, 82.00003051757812 * a, 155.08523559570312 * a, 85.00003051757812 * a, 143.58523559570312 * a);
            d.bezierCurveTo(75.50003051757812 * a, 147.58523559570312 * a, 75.50003051757812 * a, 147.58523559570312 * a, 66.00003051757812 * a, 151.58523559570312 * a);
            d.bezierCurveTo(44.000030517578125 * a, 133.58523559570312 * a, 41.000030517578125 * a, 124.58523559570312 * a, 34.000030517578125 * a, 102.58523559570312 * a);
            d.bezierCurveTo(100.00003051757812 * a, 81.58523559570312 * a, 134.00003051757812 * a, 118.58523559570312 * a, 150.00003051757812 * a, 128.58523559570312 * a);
            d.bezierCurveTo(144.00003051757812 * a, 102.58523559570312 * a, 147.00003051757812 * a, 90.58523559570312 * a, 150.00003051757812 * a, 80.58523559570312 * a);
            d.bezierCurveTo(159.50003051757812 * a, 79.08523559570312 * a, 159.50003051757812 * a, 79.08523559570312 * a, 169.00003051757812 * a, 77.58523559570312 * a);
            d.bezierCurveTo(163.00003051757812 * a, 72.58523559570312 * a, 163.00003051757812 * a, 72.58523559570312 * a, 157.00003051757812 * a, 67.58523559570312 * a);
            d.bezierCurveTo(162.00003051757812 * a, 42.585235595703125 * a, 169.00003051757812 * a, 29.585235595703125 * a, 182.00003051757812 * a, 14.585235595703125 * a);
            d.bezierCurveTo(219.00003051757812 * a, 48.585235595703125 * a, 222.00003051757812 * a, 92.58523559570312 * a, 218.00003051757812 * a, 112.58523559570312 * a);
            d.bezierCurveTo(239.00003051757812 * a, 95.58523559570312 * a, 242.00003051757812 * a, 97.58523559570312 * a, 249.00003051757812 * a, 94.58523559570312 * a);
            d.bezierCurveTo(255.00003051757812 * a, 103.08523559570312 * a, 255.00003051757812 * a, 103.08523559570312 * a, 261.0000305175781 * a, 111.58523559570312 * a);
            d.bezierCurveTo(261.5000305175781 * a, 99.58523559570312 * a, 261.5000305175781 * a, 99.58523559570312 * a, 262.0000305175781 * a, 87.58523559570312 * a);
            d.bezierCurveTo(282.0000305175781 * a, 77.58523559570312 * a, 301.0000305175781 * a, 74.58523559570312 * a, 314.0000305175781 * a, 76.58523559570312 * a);
            d.closePath();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.translate(-15 * a, -15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(313.0000305175781 * a, 76.58523559570312 * a);
            d.bezierCurveTo(308.0000305175781 * a, 130.58523559570312 * a, 279.0000305175781 * a, 158.58523559570312 * a, 254.00003051757812 * a, 175.58523559570312 * a);
            d.bezierCurveTo(287.0000305175781 * a, 182.58523559570312 * a, 274.0000305175781 * a, 181.08523559570312 * a, 294.0000305175781 * a, 186.58523559570312 * a);
            d.bezierCurveTo(293.5000305175781 * a, 196.08523559570312 * a, 293.5000305175781 * a, 196.08523559570312 * a, 293.0000305175781 * a, 205.58523559570312 * a);
            d.bezierCurveTo(304.0000305175781 * a, 201.08523559570312 * a, 304.0000305175781 * a, 201.08523559570312 * a, 315.0000305175781 * a, 196.58523559570312 * a);
            d.bezierCurveTo(350.0000305175781 * a, 219.58523559570312 * a, 343.0000305175781 * a, 221.58523559570312 * a, 351.0000305175781 * a, 230.58523559570312 * a);
            d.bezierCurveTo(296.0000305175781 * a, 260.5852355957031 * a, 264.0000305175781 * a, 256.5852355957031 * a, 220.00003051757812 * a, 236.58523559570312 * a);
            d.bezierCurveTo(233.00003051757812 * a, 266.5852355957031 * a, 232.00003051757812 * a, 279.5852355957031 * a, 231.00003051757812 * a, 295.5852355957031 * a);
            d.bezierCurveTo(222.00003051757812 * a, 297.5852355957031 * a, 222.00003051757812 * a, 297.5852355957031 * a, 213.00003051757812 * a, 299.5852355957031 * a);
            d.bezierCurveTo(219.50003051757812 * a, 308.0852355957031 * a, 219.50003051757812 * a, 308.0852355957031 * a, 226.00003051757812 * a, 316.5852355957031 * a);
            d.bezierCurveTo(223.00003051757812 * a, 344.5852355957031 * a, 216.00003051757812 * a, 350.5852355957031 * a, 209.00003051757812 * a, 363.5852355957031 * a);
            d.bezierCurveTo(154.00003051757812 * a, 318.5852355957031 * a, 156.00003051757812 * a, 268.5852355957031 * a, 160.00003051757812 * a, 238.58523559570312 * a);
            d.bezierCurveTo(135.00003051757812 * a, 268.5852355957031 * a, 125.00003051757812 * a, 267.5852355957031 * a, 112.00003051757812 * a, 272.5852355957031 * a);
            d.bezierCurveTo(104.50003051757812 * a, 266.5852355957031 * a, 104.50003051757812 * a, 266.5852355957031 * a, 97.00003051757812 * a, 260.5852355957031 * a);
            d.bezierCurveTo(93.00003051757812 * a, 271.0852355957031 * a, 93.00003051757812 * a, 271.0852355957031 * a, 89.00003051757812 * a, 281.5852355957031 * a);
            d.bezierCurveTo(66.00003051757812 * a, 288.5852355957031 * a, 59.000030517578125 * a, 288.5852355957031 * a, 39.000030517578125 * a, 285.5852355957031 * a);
            d.bezierCurveTo(56.000030517578125 * a, 216.58523559570312 * a, 91.00003051757812 * a, 204.58523559570312 * a, 129.00003051757812 * a, 189.58523559570312 * a);
            d.bezierCurveTo(90.00003051757812 * a, 176.58523559570312 * a, 89.00003051757812 * a, 173.58523559570312 * a, 79.00003051757812 * a, 166.58523559570312 * a);
            d.bezierCurveTo(82.00003051757812 * a, 155.08523559570312 * a, 82.00003051757812 * a, 155.08523559570312 * a, 85.00003051757812 * a, 143.58523559570312 * a);
            d.bezierCurveTo(75.50003051757812 * a, 147.58523559570312 * a, 75.50003051757812 * a, 147.58523559570312 * a, 66.00003051757812 * a, 151.58523559570312 * a);
            d.bezierCurveTo(44.000030517578125 * a, 133.58523559570312 * a, 41.000030517578125 * a, 124.58523559570312 * a, 34.000030517578125 * a, 102.58523559570312 * a);
            d.bezierCurveTo(100.00003051757812 * a, 81.58523559570312 * a, 134.00003051757812 * a, 118.58523559570312 * a, 150.00003051757812 * a, 128.58523559570312 * a);
            d.bezierCurveTo(144.00003051757812 * a, 102.58523559570312 * a, 147.00003051757812 * a, 90.58523559570312 * a, 150.00003051757812 * a, 80.58523559570312 * a);
            d.bezierCurveTo(159.50003051757812 * a, 79.08523559570312 * a, 159.50003051757812 * a, 79.08523559570312 * a, 169.00003051757812 * a, 77.58523559570312 * a);
            d.bezierCurveTo(163.00003051757812 * a, 72.58523559570312 * a, 163.00003051757812 * a, 72.58523559570312 * a, 157.00003051757812 * a, 67.58523559570312 * a);
            d.bezierCurveTo(162.00003051757812 * a, 42.585235595703125 * a, 169.00003051757812 * a, 29.585235595703125 * a, 182.00003051757812 * a, 14.585235595703125 * a);
            d.bezierCurveTo(219.00003051757812 * a, 48.585235595703125 * a, 222.00003051757812 * a, 92.58523559570312 * a, 218.00003051757812 * a, 112.58523559570312 * a);
            d.bezierCurveTo(239.00003051757812 * a, 95.58523559570312 * a, 242.00003051757812 * a, 97.58523559570312 * a, 249.00003051757812 * a, 94.58523559570312 * a);
            d.bezierCurveTo(255.00003051757812 * a, 103.08523559570312 * a, 255.00003051757812 * a, 103.08523559570312 * a, 261.0000305175781 * a, 111.58523559570312 * a);
            d.bezierCurveTo(261.5000305175781 * a, 99.58523559570312 * a, 261.5000305175781 * a, 99.58523559570312 * a, 262.0000305175781 * a, 87.58523559570312 * a);
            d.bezierCurveTo(282.0000305175781 * a, 77.58523559570312 * a, 301.0000305175781 * a, 74.58523559570312 * a, 314.0000305175781 * a, 76.58523559570312 * a);
            d.closePath();
            h(d, e[1], e[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(186.00003051757812 * a, 192.94886779785156 * a);
            d.bezierCurveTo(185.00003051757812 * a, 66.94886779785156 * a, 184.50003051757812 * a, 104.94886779785156 * a, 183.00003051757812 * a, 16.948867797851562 * a);
            d.bezierCurveTo(216.00003051757812 * a, 47.94886779785156 * a, 219.00003051757812 * a, 80.94886779785156 * a, 218.00003051757812 * a, 113.94886779785156 * a);
            d.bezierCurveTo(209.00003051757812 * a, 165.94886779785156 * a, 200.00003051757812 * a, 176.94886779785156 * a, 189.00003051757812 * a, 192.94886779785156 * a);
            d.closePath();
            h(d, e[3], e[3], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(190.00003051757812 * a, 191.94886779785156 * a);
            d.bezierCurveTo(207.00003051757812 * a, 348.94886779785156 * a, 205.00003051757812 * a, 323.94886779785156 * a, 209.00003051757812 * a, 358.94886779785156 * a);
            d.bezierCurveTo(171.00003051757812 * a, 334.94886779785156 * a, 167.00003051757812 * a, 302.94886779785156 * a, 161.00003051757812 * a, 268.94886779785156 * a);
            d.bezierCurveTo(160.00003051757812 * a, 218.94886779785156 * a, 181.00003051757812 * a, 191.94886779785156 * a, 189.00003051757812 * a, 186.94886779785156 * a);
            d.closePath();
            h(d, e[3], e[3], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(194.00003051757812 * a, 195.94886779785156 * a);
            d.bezierCurveTo(116.00003051757812 * a, 150.94886779785156 * a, 116.00003051757812 * a, 150.94886779785156 * a, 38.000030517578125 * a, 105.94886779785156 * a);
            d.bezierCurveTo(67.00003051757812 * a, 90.94886779785156 * a, 96.00003051757812 * a, 99.94886779785156 * a, 123.00003051757812 * a, 111.94886779785156 * a);
            d.bezierCurveTo(183.00003051757812 * a, 152.94886779785156 * a, 179.00003051757812 * a, 180.94886779785156 * a, 193.00003051757812 * a, 194.94886779785156 * a);
            d.closePath();
            h(d, e[3], e[3], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(189.00003051757812 * a, 190.94886779785156 * a);
            d.bezierCurveTo(250.00003051757812 * a, 133.94886779785156 * a, 311.0000305175781 * a, 78.94886779785156 * a, 311.0000305175781 * a, 76.94886779785156 * a);
            d.bezierCurveTo(306.0000305175781 * a, 127.94886779785156 * a, 283.0000305175781 * a, 148.94886779785156 * a, 261.0000305175781 * a, 166.94886779785156 * a);
            d.bezierCurveTo(220.00003051757812 * a, 197.94886779785156 * a, 191.00003051757812 * a, 194.94886779785156 * a, 189.00003051757812 * a, 195.94886779785156 * a);
            d.closePath();
            h(d, e[3], e[3], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(189.00003051757812 * a, 194.94886779785156 * a);
            d.bezierCurveTo(268.5000305175781 * a, 211.94886779785156 * a, 268.5000305175781 * a, 211.94886779785156 * a, 348.0000305175781 * a, 228.94886779785156 * a);
            d.bezierCurveTo(316.0000305175781 * a, 247.94886779785156 * a, 298.0000305175781 * a, 256.94886779785156 * a, 250.00003051757812 * a, 246.94886779785156 * a);
            d.bezierCurveTo(197.00003051757812 * a, 229.94886779785156 * a, 189.00003051757812 * a, 202.94886779785156 * a, 188.00003051757812 * a, 199.94886779785156 * a);
            d.closePath();
            h(d, e[3], e[3], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(192.00003051757812 * a, 191.94886779785156 * a);
            d.bezierCurveTo(116.50003051757812 * a, 238.44886779785156 * a, 116.50003051757812 * a, 238.44886779785156 * a, 41.000030517578125 * a, 284.94886779785156 * a);
            d.bezierCurveTo(49.000030517578125 * a, 252.94886779785156 * a, 56.000030517578125 * a, 242.94886779785156 * a, 80.00003051757812 * a, 215.94886779785156 * a);
            d.bezierCurveTo(125.00003051757812 * a, 181.94886779785156 * a, 174.00003051757812 * a, 183.94886779785156 * a, 192.00003051757812 * a, 191.94886779785156 * a);
            d.closePath();
            h(d, e[3], e[3], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(313.0000305175781 * a, 76.58523559570312 * a);
            d.bezierCurveTo(308.0000305175781 * a, 130.58523559570312 * a, 279.0000305175781 * a, 158.58523559570312 * a, 254.00003051757812 * a, 175.58523559570312 * a);
            d.bezierCurveTo(287.0000305175781 * a, 182.58523559570312 * a, 274.0000305175781 * a, 181.08523559570312 * a, 294.0000305175781 * a, 186.58523559570312 * a);
            d.bezierCurveTo(293.5000305175781 * a, 196.08523559570312 * a, 293.5000305175781 * a, 196.08523559570312 * a, 293.0000305175781 * a, 205.58523559570312 * a);
            d.bezierCurveTo(304.0000305175781 * a, 201.08523559570312 * a, 304.0000305175781 * a, 201.08523559570312 * a, 315.0000305175781 * a, 196.58523559570312 * a);
            d.bezierCurveTo(350.0000305175781 * a, 219.58523559570312 * a, 343.0000305175781 * a, 221.58523559570312 * a, 351.0000305175781 * a, 230.58523559570312 * a);
            d.bezierCurveTo(296.0000305175781 * a, 260.5852355957031 * a, 264.0000305175781 * a, 256.5852355957031 * a, 220.00003051757812 * a, 236.58523559570312 * a);
            d.bezierCurveTo(233.00003051757812 * a, 266.5852355957031 * a, 232.00003051757812 * a, 279.5852355957031 * a, 231.00003051757812 * a, 295.5852355957031 * a);
            d.bezierCurveTo(222.00003051757812 * a, 297.5852355957031 * a, 222.00003051757812 * a, 297.5852355957031 * a, 213.00003051757812 * a, 299.5852355957031 * a);
            d.bezierCurveTo(219.50003051757812 * a, 308.0852355957031 * a, 219.50003051757812 * a, 308.0852355957031 * a, 226.00003051757812 * a, 316.5852355957031 * a);
            d.bezierCurveTo(223.00003051757812 * a, 344.5852355957031 * a, 216.00003051757812 * a, 350.5852355957031 * a, 209.00003051757812 * a, 363.5852355957031 * a);
            d.bezierCurveTo(154.00003051757812 * a, 318.5852355957031 * a, 156.00003051757812 * a, 268.5852355957031 * a, 160.00003051757812 * a, 238.58523559570312 * a);
            d.bezierCurveTo(135.00003051757812 * a, 268.5852355957031 * a, 125.00003051757812 * a, 267.5852355957031 * a, 112.00003051757812 * a, 272.5852355957031 * a);
            d.bezierCurveTo(104.50003051757812 * a, 266.5852355957031 * a, 104.50003051757812 * a, 266.5852355957031 * a, 97.00003051757812 * a, 260.5852355957031 * a);
            d.bezierCurveTo(93.00003051757812 * a, 271.0852355957031 * a, 93.00003051757812 * a, 271.0852355957031 * a, 89.00003051757812 * a, 281.5852355957031 * a);
            d.bezierCurveTo(66.00003051757812 * a, 288.5852355957031 * a, 59.000030517578125 * a, 288.5852355957031 * a, 39.000030517578125 * a, 285.5852355957031 * a);
            d.bezierCurveTo(56.000030517578125 * a, 216.58523559570312 * a, 91.00003051757812 * a, 204.58523559570312 * a, 129.00003051757812 * a, 189.58523559570312 * a);
            d.bezierCurveTo(90.00003051757812 * a, 176.58523559570312 * a, 89.00003051757812 * a, 173.58523559570312 * a, 79.00003051757812 * a, 166.58523559570312 * a);
            d.bezierCurveTo(82.00003051757812 * a, 155.08523559570312 * a, 82.00003051757812 * a, 155.08523559570312 * a, 85.00003051757812 * a, 143.58523559570312 * a);
            d.bezierCurveTo(75.50003051757812 * a, 147.58523559570312 * a, 75.50003051757812 * a, 147.58523559570312 * a, 66.00003051757812 * a, 151.58523559570312 * a);
            d.bezierCurveTo(44.000030517578125 * a, 133.58523559570312 * a, 41.000030517578125 * a, 124.58523559570312 * a, 34.000030517578125 * a, 102.58523559570312 * a);
            d.bezierCurveTo(100.00003051757812 * a, 81.58523559570312 * a, 134.00003051757812 * a, 118.58523559570312 * a, 150.00003051757812 * a, 128.58523559570312 * a);
            d.bezierCurveTo(144.00003051757812 * a, 102.58523559570312 * a, 147.00003051757812 * a, 90.58523559570312 * a, 150.00003051757812 * a, 80.58523559570312 * a);
            d.bezierCurveTo(159.50003051757812 * a, 79.08523559570312 * a, 159.50003051757812 * a, 79.08523559570312 * a, 169.00003051757812 * a, 77.58523559570312 * a);
            d.bezierCurveTo(163.00003051757812 * a, 72.58523559570312 * a, 163.00003051757812 * a, 72.58523559570312 * a, 157.00003051757812 * a, 67.58523559570312 * a);
            d.bezierCurveTo(162.00003051757812 * a, 42.585235595703125 * a, 169.00003051757812 * a, 29.585235595703125 * a, 182.00003051757812 * a, 14.585235595703125 * a);
            d.bezierCurveTo(219.00003051757812 * a, 48.585235595703125 * a, 222.00003051757812 * a, 92.58523559570312 * a, 218.00003051757812 * a, 112.58523559570312 * a);
            d.bezierCurveTo(239.00003051757812 * a, 95.58523559570312 * a, 242.00003051757812 * a, 97.58523559570312 * a, 249.00003051757812 * a, 94.58523559570312 * a);
            d.bezierCurveTo(255.00003051757812 * a, 103.08523559570312 * a, 255.00003051757812 * a, 103.08523559570312 * a, 261.0000305175781 * a, 111.58523559570312 * a);
            d.bezierCurveTo(261.5000305175781 * a, 99.58523559570312 * a, 261.5000305175781 * a, 99.58523559570312 * a, 262.0000305175781 * a, 87.58523559570312 * a);
            d.bezierCurveTo(282.0000305175781 * a, 77.58523559570312 * a, 301.0000305175781 * a, 74.58523559570312 * a, 314.0000305175781 * a, 76.58523559570312 * a);
            d.closePath();
            h(d, void 0, e[2], 4 * a);
            return f;
        };

        function Tf(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 248 * a;
            e.height = 128 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(137 * a, 7 * a);
            d.bezierCurveTo(169 * a, 14 * a, 212 * a, 9 * a, 241 * a, 5 * a);
            d.bezierCurveTo(211 * a, 63 * a, 158 * a, 92 * a, 103 * a, 109 * a);
            d.bezierCurveTo(73 * a, 126 * a, 54 * a, 124 * a, 6 * a, 99 * a);
            d.bezierCurveTo(82 * a, 63 * a, 113 * a, 35 * a, 137 * a, 8 * a);
            d.closePath();
            h(d, f[0], f[1], 14 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(73 * a, 124 * a);
            d.bezierCurveTo(111 * a, 126 * a, 162 * a, 97 * a, 203 * a, 61 * a);
            d.bezierCurveTo(156 * a, 98 * a, 131 * a, 106 * a, 105 * a, 109 * a);
            d.bezierCurveTo(99 * a, 121 * a, 87 * a, 124 * a, 72 * a, 124 * a);
            d.closePath();
            h(d, f[2], f[3], 1 * a);
            return e;
        };

        function yc(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 130 * a;
            d.height = 148 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(65 * a, 85 * a);
            c.rotate(1.4);
            P(c, 7, 60 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.save();
            c.translate(65 * a, 74 * a);
            c.rotate(1.4);
            P(c, 7, 60 * a, 10 * a);
            h(c, f[1], f[2], 4);
            c.rotate(0.64);
            P(c, 7, 40 * a, 10 * a);
            h(c, f[3], f[4], 4);
            c.rotate(0.12);
            P(c, 7, 23 * a, 5 * a);
            c.restore();
            h(c, f[5]);
            return d;
        };

        function oe(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 125 * a;
            d.height = 139 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(63 * a, 79 * a);
            c.rotate(1);
            P(c, 8, 60 * a, 10 * a);
            h(c, f[0]);
            c.restore();
            c.globalAlpha = 1;
            c.save();
            c.translate(63 * a, 69 * a);
            c.rotate(1);
            P(c, 8, 60 * a, 10 * a);
            h(c, f[1], f[2], 4);
            c.rotate(0.56);
            P(c, 8, 40 * a, 10 * a);
            h(c, f[3], f[4], 4);
            c.rotate(0.28);
            P(c, 8, 28 * a, 8 * a);
            h(c, f[5]);
            c.restore();
            return d;
        };

        function Nb(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 90 * a;
            d.height = 101 * a;
            c.translate(0 * a, 5 * a);
            (0 === za) && (c.globalAlpha = e ? 0.5 : 1, A(c, 44 * a, 55 * a, 41 * a), h(c, f[0]));
            c.globalAlpha = 1;
            A(c, 44 * a, 45 * a, 41 * a);
            h(c, f[1], f[2], 4 * a);
            A(c, 44 * a, 45 * a, 31 * a);
            h(c, f[3]);
            c.save();
            c.translate(45 * a, 45 * a);
            B(c, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            c.save();
            c.translate(45 * a, 45 * a);
            B(c, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            A(c, 45 * a, 29 * a, 7 * a);
            h(c, f[5]);
            A(c, 45 * a, 61 * a, 7 * a);
            h(c, f[5]);
            A(c, 28 * a, 45 * a, 7 * a);
            h(c, f[5]);
            A(c, 62 * a, 45 * a, 7 * a);
            h(c, f[5]);
            return d;
        };

        function Ca(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 90 * a;
            d.height = 98 * a;
            c.translate(0, 4 * a);
            (0 === za) && (c.globalAlpha = e ? 0.5 : 1, c.save(), c.translate(44 * a, 50 * a), c.rotate(1.4), P(c, 7, 41 * a, 10 * a), c.restore(), h(c, f[0]));
            c.globalAlpha = 1;
            c.save();
            c.translate(44 * a, 44 * a);
            c.rotate(1.4);
            P(c, 7, 41 * a, 10 * a);
            h(c, f[1], f[2], 4 * a);
            P(c, 7, 35 * a, 10 * a);
            h(c, f[3], f[4], 4 * a);
            P(c, 7, 23 * a, 5 * a);
            c.restore();
            h(c, f[5]);
            c.save();
            c.translate(45 * a, 45 * a);
            c.rotate(0);
            B(c, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            c.save();
            c.translate(45 * a, 45 * a);
            c.rotate(0);
            B(c, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            A(c, 45 * a, 29 * a, 7 * a);
            h(c, f[5]);
            A(c, 45 * a, 61 * a, 7 * a);
            h(c, f[5]);
            A(c, 28 * a, 45 * a, 7 * a);
            h(c, f[5]);
            A(c, 62 * a, 45 * a, 7 * a);
            h(c, f[5]);
            return d;
        };

        function Ub(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 90 * a;
            d.height = 98 * a;
            c.translate(0, 4 * a);
            (0 === za) && (c.globalAlpha = e ? 0.5 : 1, c.save(), c.translate(44 * a, 50 * a), c.rotate(1), P(c, 8, 41 * a, 10 * a), h(c, f[0]), c.restore());
            c.globalAlpha = 1;
            c.save();
            c.translate(44 * a, 44 * a);
            c.rotate(1);
            P(c, 8, 41 * a, 10 * a);
            h(c, f[1], f[2], 4 * a);
            c.rotate(0.56);
            P(c, 8, 33 * a, 10 * a);
            h(c, f[3], f[4], 4 * a);
            c.rotate(0.28);
            P(c, 8, 24 * a, 8 * a);
            h(c, f[5]);
            c.restore();
            c.save();
            c.translate(45 * a, 45 * a);
            c.rotate(0);
            B(c, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            c.save();
            c.translate(45 * a, 45 * a);
            c.rotate(0);
            B(c, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            A(c, 45 * a, 29 * a, 7 * a);
            h(c, f[5]);
            A(c, 45 * a, 61 * a, 7 * a);
            h(c, f[5]);
            A(c, 28 * a, 45 * a, 7 * a);
            h(c, f[5]);
            A(c, 62 * a, 45 * a, 7 * a);
            h(c, f[5]);
            return d;
        };

        function pe(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 300 * a;
            d.height = 300 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(150 * a, 160 * a);
            c.rotate(6.28);
            P(c, 6, 146 * a, 30 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.save();
            c.translate(150 * a, 150 * a);
            c.rotate(6.28);
            P(c, 6, 146 * a, 30 * a);
            c.restore();
            h(c, f[1], f[2], 8 * a);
            c.save();
            c.translate(150 * a, 150 * a);
            c.rotate(0);
            P(c, 6, 105 * a, 30 * a);
            c.restore();
            h(c, f[3], f[3], 8 * a);
            c.save();
            c.translate(150 * a, 150 * a);
            c.rotate(0);
            P(c, 6, 66 * a, 30 * a);
            c.restore();
            h(c, f[4], f[2], 8 * a);
            c.save();
            c.translate(150 * a, 150 * a);
            c.rotate(0);
            P(c, 6, 31 * a, 30 * a);
            c.restore();
            h(c, f[5], f[6], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(150 * a, 207 * a);
            c.bezierCurveTo(150 * a, 151 * a, 150 * a, 101 * a, 150 * a, 94 * a);
            c.closePath();
            h(c, void 0, f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(118 * a, 100 * a);
            c.bezierCurveTo(118 * a, 205 * a, 118 * a, 207 * a, 118 * a, 200 * a);
            c.closePath();
            h(c, void 0, f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(183 * a, 100 * a);
            c.bezierCurveTo(183 * a, 203 * a, 183 * a, 203 * a, 183 * a, 200 * a);
            c.closePath();
            h(c, void 0, f[2], 8 * a);
            return d;
        };

        function Uf(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 300 * a;
            d.height = 300 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(150 * a, 160 * a);
            c.rotate(6.28);
            P(c, 6, 146 * a, 30 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.save();
            c.translate(150 * a, 150 * a);
            c.rotate(6.28);
            P(c, 6, 146 * a, 30 * a);
            c.restore();
            h(c, f[1], f[2], 8 * a);
            c.save();
            c.translate(150 * a, 150 * a);
            c.rotate(0);
            P(c, 6, 105 * a, 30 * a);
            c.restore();
            h(c, f[3], f[3], 8 * a);
            c.save();
            c.translate(150 * a, 150 * a);
            c.rotate(0);
            P(c, 6, 66 * a, 30 * a);
            c.restore();
            h(c, f[4], f[2], 8 * a);
            c.save();
            c.translate(131 * a, 116 * a);
            P(c, 7, 17 * a, 8 * a);
            c.restore();
            h(c, f[6]);
            c.save();
            c.translate(163 * a, 168 * a);
            P(c, 7, 25 * a, 8 * a);
            c.restore();
            h(c, f[6]);
            c.save();
            c.translate(117 * a, 151 * a);
            P(c, 7, 11 * a, 8 * a);
            c.restore();
            h(c, f[6]);
            c.save();
            c.translate(167 * a, 122 * a);
            P(c, 7, 12 * a, 8 * a);
            c.restore();
            h(c, f[6]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(150 * a, 207 * a);
            c.bezierCurveTo(150 * a, 151 * a, 150 * a, 101 * a, 150 * a, 94 * a);
            c.closePath();
            h(c, void 0, f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(118 * a, 100 * a);
            c.bezierCurveTo(118 * a, 205 * a, 118 * a, 207 * a, 118 * a, 200 * a);
            c.closePath();
            h(c, void 0, f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(183 * a, 100 * a);
            c.bezierCurveTo(183 * a, 203 * a, 183 * a, 203 * a, 183 * a, 200 * a);
            c.closePath();
            h(c, void 0, f[2], 8 * a);
            return d;
        };

        function Dh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 118 * a;
            e.height = 129 * a;
            d.save();
            d.translate(90 * a, 90 * a);
            B(d, -86.5 * a, -86 * a, 110 * a, 110 * a, 15 * a);
            d.restore();
            h(d, f[0], f[1], 4);
            return e;
        };

        function Ob(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 90 * a;
            d.height = 98 * a;
            c.translate(0, 4 * a);
            (0 === za) && (c.globalAlpha = e ? 0.5 : 1, c.save(), c.translate(44 * a, 50 * a), c.rotate(0.2), P(c, 9, 41 * a, 10 * a), c.restore(), h(c, f[0]));
            c.globalAlpha = 1;
            c.save();
            c.translate(44 * a, 44 * a);
            c.rotate(0.2);
            P(c, 9, 41 * a, 10 * a);
            h(c, f[1], f[2], 4 * a);
            c.rotate(-0.32);
            P(c, 9, 32 * a, 10 * a);
            h(c, f[3], f[4], 4 * a);
            c.rotate(0.68);
            P(c, 9, 23 * a, 8 * a);
            h(c, f[5], f[6], 6 * a);
            c.restore();
            c.save();
            c.translate(45 * a, 45 * a);
            c.rotate(0);
            B(c, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            c.save();
            c.translate(45 * a, 45 * a);
            c.rotate(0);
            B(c, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
            c.restore();
            h(c, f[4], f[4], 2 * a);
            A(c, 45 * a, 29 * a, 7 * a);
            h(c, f[5]);
            A(c, 45 * a, 61 * a, 7 * a);
            h(c, f[5]);
            A(c, 28 * a, 45 * a, 7 * a);
            h(c, f[5]);
            A(c, 62 * a, 45 * a, 7 * a);
            h(c, f[5]);
            return d;
        };

        function qe(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 135 * a;
            e.height = 120 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(3.5 * a, 55.25 * a);
            d.bezierCurveTo(3.5 * a, 114.25 * a, 2.5 * a, 109.25 * a, 3.5 * a, 112.25 * a);
            d.bezierCurveTo(5.5 * a, 119.25 * a, 8.5 * a, 119.25 * a, 11.5 * a, 119.25 * a);
            d.bezierCurveTo(15.5 * a, 114.25 * a, 13.5 * a, 95.25 * a, 14.5 * a, 82.25 * a);
            d.closePath();
            h(d, f[0], f[1], 7 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(6.5 * a, 43.25 * a);
            d.bezierCurveTo(3.5 * a, 27.25 * a, 7.5 * a, 20.25 * a, 25.5 * a, 11.25 * a);
            d.bezierCurveTo(45.5 * a, -0.75 * a, 73.5 * a, 1.25 * a, 107.5 * a, 10.25 * a);
            d.bezierCurveTo(131.5 * a, 21.25 * a, 125.5 * a, 34.25 * a, 125.5 * a, 36.25 * a);
            d.closePath();
            h(d, f[0], f[1], 7 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(120.5 * a, 62.25 * a);
            d.bezierCurveTo(121.5 * a, 95.25 * a, 120.5 * a, 80.25 * a, 120.5 * a, 100.25 * a);
            d.bezierCurveTo(118.5 * a, 119.25 * a, 123.5 * a, 118.25 * a, 129.5 * a, 113.25 * a);
            d.bezierCurveTo(133.5 * a, 107.25 * a, 130.5 * a, 97.25 * a, 130.5 * a, 87.25 * a);
            d.bezierCurveTo(129.5 * a, 56.25 * a, 130 * a, 70.75 * a, 129.5 * a, 54.25 * a);
            d.closePath();
            h(d, f[0], f[1], 7 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17.5 * a, 27 * a);
            d.bezierCurveTo(48.5 * a, 5 * a, 93.5 * a, 14 * a, 118.5 * a, 26 * a);
            d.bezierCurveTo(132.5 * a, 35 * a, 133.5 * a, 52 * a, 132.5 * a, 68 * a);
            d.bezierCurveTo(125.5 * a, 87 * a, 116.5 * a, 84 * a, 96.5 * a, 75 * a);
            d.bezierCurveTo(60.5 * a, 66 * a, 52.5 * a, 74 * a, 37.5 * a, 78 * a);
            d.bezierCurveTo(2.5 * a, 86 * a, 3.5 * a, 78 * a, 1.5 * a, 61 * a);
            d.bezierCurveTo(1.5 * a, 37 * a, 9.5 * a, 32 * a, 15.5 * a, 28 * a);
            d.closePath();
            h(d, f[2], f[3], 7 * a);
            return e;
        };

        function re(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 501 * a;
            d.height = 309 * a;
            c.translate(0, 6 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(126 * a, 184 * a);
            c.bezierCurveTo(169 * a, 196 * a, 194 * a, 198 * a, 227 * a, 198 * a);
            c.bezierCurveTo(235 * a, 222 * a, 236 * a, 223 * a, 241 * a, 226 * a);
            c.bezierCurveTo(245 * a, 228 * a, 257 * a, 228 * a, 263 * a, 226 * a);
            c.bezierCurveTo(267 * a, 225 * a, 270 * a, 211 * a, 275 * a, 198 * a);
            c.bezierCurveTo(332 * a, 194 * a, 347 * a, 192 * a, 372 * a, 188 * a);
            c.bezierCurveTo(366 * a, 174.5 * a, 366 * a, 174.5 * a, 360 * a, 161 * a);
            c.bezierCurveTo(253.5 * a, 162 * a, 253.5 * a, 162 * a, 147 * a, 163 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100 * a, 116 * a);
            c.bezierCurveTo(90 * a, 101 * a, 96 * a, 89 * a, 106 * a, 83 * a);
            c.bezierCurveTo(86 * a, 79 * a, 86 * a, 52 * a, 93 * a, 38 * a);
            c.bezierCurveTo(99 * a, 51 * a, 107 * a, 57 * a, 122 * a, 63 * a);
            c.bezierCurveTo(130 * a, 53 * a, 141 * a, 46 * a, 161 * a, 46 * a);
            c.bezierCurveTo(157 * a, 31 * a, 158 * a, 20 * a, 169 * a, 6 * a);
            c.bezierCurveTo(171 * a, 24 * a, 186 * a, 33 * a, 198 * a, 45 * a);
            c.bezierCurveTo(252 * a, 45 * a, 252 * a, 45 * a, 306 * a, 45 * a);
            c.bezierCurveTo(323 * a, 33 * a, 332 * a, 21 * a, 335 * a, 7 * a);
            c.bezierCurveTo(349 * a, 21 * a, 347 * a, 36 * a, 345 * a, 46 * a);
            c.bezierCurveTo(364 * a, 46 * a, 369 * a, 48 * a, 377 * a, 63 * a);
            c.bezierCurveTo(398 * a, 58 * a, 403 * a, 49 * a, 409 * a, 40 * a);
            c.bezierCurveTo(419 * a, 57 * a, 411 * a, 79 * a, 398 * a, 85 * a);
            c.bezierCurveTo(405 * a, 100 * a, 405 * a, 106 * a, 401 * a, 118 * a);
            c.bezierCurveTo(332.5 * a, 128.5 * a, 332.5 * a, 128.5 * a, 264 * a, 139 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(122 * a, 191 * a);
            c.bezierCurveTo(123 * a, 237 * a, 135 * a, 245 * a, 153 * a, 259 * a);
            c.bezierCurveTo(167 * a, 269 * a, 158 * a, 281 * a, 118 * a, 276 * a);
            c.bezierCurveTo(104 * a, 273 * a, 98 * a, 268 * a, 93 * a, 242 * a);
            c.bezierCurveTo(89 * a, 220 * a, 92 * a, 201 * a, 102 * a, 179 * a);
            c.closePath();
            h(c, f[3], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(403 * a, 182 * a);
            c.bezierCurveTo(414 * a, 215 * a, 412 * a, 232 * a, 403 * a, 260 * a);
            c.bezierCurveTo(395 * a, 274 * a, 375 * a, 272 * a, 356 * a, 270 * a);
            c.bezierCurveTo(345 * a, 268 * a, 339 * a, 262 * a, 354 * a, 252 * a);
            c.bezierCurveTo(370 * a, 242 * a, 380 * a, 225 * a, 384 * a, 184 * a);
            c.closePath();
            h(c, f[3], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(155 * a, 157 * a);
            c.bezierCurveTo(146 * a, 189 * a, 137 * a, 198 * a, 114 * a, 219 * a);
            c.bezierCurveTo(104 * a, 212 * a, 98 * a, 203 * a, 89 * a, 189 * a);
            c.bezierCurveTo(82 * a, 178 * a, 91 * a, 164 * a, 93 * a, 136 * a);
            c.closePath();
            h(c, f[4], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(347 * a, 162 * a);
            c.bezierCurveTo(357 * a, 195 * a, 376 * a, 209 * a, 387 * a, 217 * a);
            c.bezierCurveTo(409 * a, 201 * a, 420 * a, 181 * a, 416 * a, 166 * a);
            c.bezierCurveTo(410 * a, 150 * a, 412 * a, 149 * a, 408 * a, 130 * a);
            c.closePath();
            h(c, f[4], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(86 * a, 134 * a);
            c.bezierCurveTo(79 * a, 102 * a, 92 * a, 84 * a, 108 * a, 92 * a);
            c.bezierCurveTo(149 * a, 108 * a, 184 * a, 111 * a, 242 * a, 111 * a);
            c.bezierCurveTo(294 * a, 108 * a, 341 * a, 105 * a, 386 * a, 98 * a);
            c.bezierCurveTo(412 * a, 91 * a, 417 * a, 86 * a, 415 * a, 133 * a);
            c.bezierCurveTo(413 * a, 160 * a, 413 * a, 160 * a, 368 * a, 174 * a);
            c.bezierCurveTo(308 * a, 184 * a, 291 * a, 185 * a, 270 * a, 186 * a);
            c.bezierCurveTo(264 * a, 206 * a, 262 * a, 215 * a, 253 * a, 215 * a);
            c.bezierCurveTo(239 * a, 217 * a, 239 * a, 211 * a, 231 * a, 186 * a);
            c.bezierCurveTo(178 * a, 184 * a, 156 * a, 179 * a, 112 * a, 162 * a);
            c.bezierCurveTo(87 * a, 151 * a, 90 * a, 144 * a, 87 * a, 137 * a);
            c.closePath();
            h(c, f[4], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(63 * a, 98 * a);
            c.bezierCurveTo(84 * a, 121 * a, 109 * a, 102 * a, 124 * a, 117 * a);
            c.bezierCurveTo(138 * a, 136 * a, 123 * a, 165 * a, 94 * a, 150 * a);
            c.bezierCurveTo(66 * a, 131 * a, 64 * a, 115 * a, 63 * a, 99 * a);
            c.closePath();
            h(c, f[3], f[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(449 * a, 97 * a);
            c.bezierCurveTo(446 * a, 143 * a, 415 * a, 151 * a, 402 * a, 155 * a);
            c.bezierCurveTo(386 * a, 157 * a, 373 * a, 133 * a, 391 * a, 116 * a);
            c.bezierCurveTo(402 * a, 106 * a, 432 * a, 124 * a, 449 * a, 97 * a);
            c.closePath();
            h(c, f[3], f[2], 10 * a);
            return d;
        };

        function Vf(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 304 * a;
            d.height = 278 * a;
            c.translate(10 * a, 25 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(128 * a, 137 * a);
            c.bezierCurveTo(155 * a, 144 * a, 223 * a, 143 * a, 256 * a, 122 * a);
            c.bezierCurveTo(249 * a, 180 * a, 210 * a, 227 * a, 164 * a, 242 * a);
            c.bezierCurveTo(74 * a, 213 * a, 99 * a, 166 * a, 127 * a, 138 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(284 * a, 52 * a);
            c.bezierCurveTo(126 * a, 112 * a, 89 * a, 177 * a, 170 * a, 241 * a);
            c.bezierCurveTo(103 * a, 275 * a, 20 * a, 239 * a, 12 * a, 159 * a);
            c.bezierCurveTo(5 * a, 76 * a, 75 * a, 4 * a, 165 * a, 13 * a);
            c.bezierCurveTo(233 * a, 15 * a, 260 * a, 33 * a, 284 * a, 52 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-10 * a, -25 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(128 * a, 137 * a);
            c.bezierCurveTo(155 * a, 144 * a, 223 * a, 143 * a, 256 * a, 122 * a);
            c.bezierCurveTo(249 * a, 180 * a, 210 * a, 227 * a, 164 * a, 242 * a);
            c.bezierCurveTo(74 * a, 213 * a, 99 * a, 166 * a, 127 * a, 138 * a);
            c.closePath();
            h(c, f[1], f[2], 15 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(284 * a, 52 * a);
            c.bezierCurveTo(126 * a, 112 * a, 89 * a, 177 * a, 170 * a, 241 * a);
            c.bezierCurveTo(103 * a, 275 * a, 20 * a, 239 * a, 12 * a, 159 * a);
            c.bezierCurveTo(5 * a, 76 * a, 75 * a, 4 * a, 165 * a, 13 * a);
            c.bezierCurveTo(233 * a, 15 * a, 260 * a, 33 * a, 284 * a, 52 * a);
            c.closePath();
            h(c, f[3], f[4], 15 * a);
            return d;
        };

        function se(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 175 * a;
            e.height = 169 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(19 * a, 139 * a);
            d.bezierCurveTo(18 * a, 163 * a, 22 * a, 156 * a, 53 * a, 157 * a);
            d.bezierCurveTo(97.5 * a, 157 * a, 97.5 * a, 157 * a, 142 * a, 157 * a);
            d.bezierCurveTo(150 * a, 157 * a, 153 * a, 156 * a, 154 * a, 142 * a);
            d.closePath();
            h(d, f[0]);
            d.globalAlpha = 1;
            d.translate(0, -3 * a);
            d.save();
            d.translate(86.5 * a, 81.5 * a);
            B(d, -66.5 * a, -65.5 * a, 133 * a, 131 * a, 10 * a);
            d.restore();
            h(d, f[1], f[2], 5 * a);
            d.save();
            d.translate(84.5 * a, 79 * a);
            B(d, -50.5 * a, -49 * a, 101 * a, 98 * a, 10 * a);
            d.restore();
            h(d, f[3], f[2], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42 * a, 54 * a);
            d.bezierCurveTo(37 * a, 48 * a, 39 * a, 44 * a, 38 * a, 41 * a);
            d.bezierCurveTo(42 * a, 40 * a, 45 * a, 40 * a, 50 * a, 41 * a);
            d.bezierCurveTo(85 * a, 36 * a, 98 * a, 37 * a, 116 * a, 42 * a);
            d.bezierCurveTo(132 * a, 39 * a, 132 * a, 39 * a, 133 * a, 56 * a);
            d.bezierCurveTo(136 * a, 73 * a, 136 * a, 84 * a, 132 * a, 106 * a);
            d.bezierCurveTo(47 * a, 113 * a, 85.5 * a, 106 * a, 39 * a, 106 * a);
            d.bezierCurveTo(32 * a, 81 * a, 38 * a, 60 * a, 42 * a, 55 * a);
            d.closePath();
            h(d, f[4], f[5], 5 * a);
            d.save();
            d.translate(28 * a, 24 * a);
            d.rotate(0);
            B(d, -14 * a, -14 * a, 28 * a, 28 * a, 4 * a);
            d.restore();
            h(d, f[1], f[2], 5 * a);
            d.save();
            d.translate(143 * a, 23 * a);
            d.rotate(0);
            B(d, -14 * a, -14 * a, 28 * a, 28 * a, 4 * a);
            d.restore();
            h(d, f[1], f[2], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(55 * a, 80 * a);
            d.bezierCurveTo(73 * a, 78 * a, 84 * a, 74 * a, 100 * a, 64 * a);
            d.bezierCurveTo(111 * a, 57 * a, 125 * a, 67 * a, 108 * a, 84 * a);
            d.bezierCurveTo(96 * a, 95 * a, 86 * a, 96 * a, 70 * a, 88 * a);
            d.bezierCurveTo(62.5 * a, 84 * a, 62.5 * a, 84 * a, 55 * a, 80 * a);
            d.closePath();
            h(d, f[5]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17 * a, 112 * a);
            d.bezierCurveTo(14 * a, 146 * a, 27 * a, 152 * a, 37 * a, 149 * a);
            d.bezierCurveTo(78 * a, 155 * a, 128 * a, 150 * a, 146 * a, 150 * a);
            d.bezierCurveTo(158 * a, 144 * a, 158 * a, 121 * a, 153 * a, 114 * a);
            d.closePath();
            h(d, f[8], f[9], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(127 * a, 111 * a);
            d.bezierCurveTo(133 * a, 136 * a, 115 * a, 149 * a, 88 * a, 150 * a);
            d.bezierCurveTo(119.5 * a, 151 * a, 119.5 * a, 151 * a, 151 * a, 152 * a);
            d.bezierCurveTo(159 * a, 136 * a, 155 * a, 126 * a, 154 * a, 113 * a);
            d.closePath();
            h(d, f[9]);
            d.globalAlpha = 0.5;
            d.translate(0, 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(15 * a, 117 * a);
            d.bezierCurveTo(34 * a, 109 * a, 61 * a, 106 * a, 94 * a, 109 * a);
            d.bezierCurveTo(126 * a, 110 * a, 142 * a, 113 * a, 154 * a, 119 * a);
            d.bezierCurveTo(154 * a, 123 * a, 154 * a, 123 * a, 154 * a, 127 * a);
            d.bezierCurveTo(127 * a, 118 * a, 15 * a, 122 * a, 18 * a, 129 * a);
            d.closePath();
            h(d, f[0]);
            d.globalAlpha = 1;
            d.translate(0, -3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(14 * a, 127 * a);
            d.bezierCurveTo(13 * a, 117 * a, 12 * a, 109 * a, 15 * a, 103 * a);
            d.bezierCurveTo(16 * a, 95 * a, 21 * a, 92 * a, 60 * a, 93 * a);
            d.bezierCurveTo(91 * a, 93 * a, 118 * a, 93 * a, 143 * a, 96 * a);
            d.bezierCurveTo(151 * a, 96 * a, 155 * a, 99 * a, 156 * a, 112 * a);
            d.bezierCurveTo(157 * a, 124 * a, 157 * a, 127 * a, 156 * a, 128 * a);
            d.bezierCurveTo(138 * a, 112 * a, 100 * a, 118 * a, 84 * a, 118 * a);
            d.bezierCurveTo(28 * a, 118 * a, 20 * a, 120 * a, 16 * a, 127 * a);
            d.closePath();
            h(d, f[4], f[5], 5 * a);
            d.save();
            d.translate(27.5 * a, 138.5 * a);
            B(d, -13.5 * a, -14.5 * a, 27 * a, 29 * a, 4 * a);
            d.restore();
            h(d, f[1], f[2], 5 * a);
            d.save();
            d.translate(143.5 * a, 137 * a);
            B(d, -13.5 * a, -14 * a, 27 * a, 28 * a, 4 * a);
            d.restore();
            h(d, f[1], f[2], 5 * a);
            return e;
        };

        function Wf(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 175 * a;
            e.height = 169 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17 * a, 112 * a);
            d.bezierCurveTo(14 * a, 146 * a, 27 * a, 152 * a, 37 * a, 149 * a);
            d.bezierCurveTo(78 * a, 155 * a, 128 * a, 150 * a, 146 * a, 150 * a);
            d.bezierCurveTo(158 * a, 144 * a, 158 * a, 121 * a, 153 * a, 114 * a);
            d.closePath();
            h(d, f[8], f[9], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(127 * a, 111 * a);
            d.bezierCurveTo(133 * a, 136 * a, 115 * a, 149 * a, 88 * a, 150 * a);
            d.bezierCurveTo(119.5 * a, 151 * a, 119.5 * a, 151 * a, 151 * a, 152 * a);
            d.bezierCurveTo(159 * a, 136 * a, 155 * a, 126 * a, 154 * a, 113 * a);
            d.closePath();
            h(d, f[9]);
            d.globalAlpha = 0.5;
            d.translate(0, 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(15 * a, 117 * a);
            d.bezierCurveTo(34 * a, 109 * a, 61 * a, 106 * a, 94 * a, 109 * a);
            d.bezierCurveTo(126 * a, 110 * a, 142 * a, 113 * a, 154 * a, 119 * a);
            d.bezierCurveTo(154 * a, 123 * a, 154 * a, 123 * a, 154 * a, 127 * a);
            d.bezierCurveTo(127 * a, 118 * a, 15 * a, 122 * a, 18 * a, 129 * a);
            d.closePath();
            h(d, f[0]);
            d.globalAlpha = 1;
            d.translate(0, -3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(14 * a, 127 * a);
            d.bezierCurveTo(13 * a, 117 * a, 12 * a, 109 * a, 15 * a, 103 * a);
            d.bezierCurveTo(16 * a, 95 * a, 21 * a, 92 * a, 60 * a, 93 * a);
            d.bezierCurveTo(91 * a, 93 * a, 118 * a, 93 * a, 143 * a, 96 * a);
            d.bezierCurveTo(151 * a, 96 * a, 155 * a, 99 * a, 156 * a, 112 * a);
            d.bezierCurveTo(157 * a, 124 * a, 157 * a, 127 * a, 156 * a, 128 * a);
            d.bezierCurveTo(138 * a, 112 * a, 100 * a, 118 * a, 84 * a, 118 * a);
            d.bezierCurveTo(28 * a, 118 * a, 20 * a, 120 * a, 16 * a, 127 * a);
            d.closePath();
            h(d, f[4], f[5], 5 * a);
            d.save();
            d.translate(27.5 * a, 138.5 * a);
            B(d, -13.5 * a, -14.5 * a, 27 * a, 29 * a, 4 * a);
            d.restore();
            h(d, f[1], f[2], 5 * a);
            d.save();
            d.translate(143.5 * a, 137 * a);
            B(d, -13.5 * a, -14 * a, 27 * a, 28 * a, 4 * a);
            d.restore();
            h(d, f[1], f[2], 5 * a);
            return e;
        };

        function te(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 115 * a;
            d.height = 585 * a;
            c.scale(-1, 1);
            c.translate(-110 * a, 0);
            c.translate(10 * a, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(51.5 * a, 342 * a);
            B(c, -14.5 * a, -225 * a, 29 * a, 450 * a, 20 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(54 * a, 83 * a);
            c.bezierCurveTo(70 * a, 69 * a, 78 * a, 62 * a, 82 * a, 40 * a);
            c.bezierCurveTo(93 * a, 48 * a, 103 * a, 64 * a, 95 * a, 102 * a);
            c.bezierCurveTo(60 * a, 114 * a, 53 * a, 103 * a, 54 * a, 85 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(95 * a, 97 * a);
            c.bezierCurveTo(56 * a, 102 * a, 43 * a, 77 * a, 71 * a, 6 * a);
            c.bezierCurveTo(34 * a, 10 * a, 6 * a, 43 * a, 5 * a, 76 * a);
            c.bezierCurveTo(4 * a, 98 * a, 15 * a, 130 * a, 64 * a, 130 * a);
            c.bezierCurveTo(76 * a, 129 * a, 95 * a, 113 * a, 97 * a, 97 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(55 * a, 176 * a);
            c.bezierCurveTo(74 * a, 175 * a, 82 * a, 169 * a, 96 * a, 155 * a);
            c.bezierCurveTo(103 * a, 183 * a, 95 * a, 214 * a, 54 * a, 219 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(50 * a, 176 * a);
            c.bezierCurveTo(25 * a, 177 * a, 16 * a, 164 * a, 7 * a, 156 * a);
            c.bezierCurveTo(0 * a, 186 * a, 10 * a, 201 * a, 43 * a, 220 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 403 * a);
            c.bezierCurveTo(47 * a, 412 * a, 58 * a, 412 * a, 67 * a, 403 * a);
            c.bezierCurveTo(66.5 * a, 434 * a, 66.5 * a, 434 * a, 66 * a, 465 * a);
            c.bezierCurveTo(56 * a, 480 * a, 40 * a, 472 * a, 36 * a, 465 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(59 * a, 67 * a);
            c.bezierCurveTo(47 * a, 97 * a, 18 * a, 117 * a, 11 * a, 110 * a);
            c.bezierCurveTo(11 * a, 115 * a, 15 * a, 122 * a, 23 * a, 124 * a);
            c.bezierCurveTo(46 * a, 118 * a, 52 * a, 113 * a, 62 * a, 86 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 125 * a);
            c.bezierCurveTo(47 * a, 136 * a, 57 * a, 134 * a, 77 * a, 127 * a);
            c.bezierCurveTo(71 * a, 158 * a, 71 * a, 159 * a, 66 * a, 159 * a);
            c.bezierCurveTo(50.5 * a, 156.5 * a, 50.5 * a, 156.5 * a, 35 * a, 154 * a);
            c.bezierCurveTo(31 * a, 145 * a, 31 * a, 136 * a, 31 * a, 125 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 171 * a);
            c.bezierCurveTo(32 * a, 221 * a, 43 * a, 233 * a, 70 * a, 247 * a);
            c.bezierCurveTo(75 * a, 234 * a, 75 * a, 230 * a, 72 * a, 221 * a);
            c.bezierCurveTo(48 * a, 206 * a, 54 * a, 188 * a, 50 * a, 176 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(60 * a, 68 * a);
            c.bezierCurveTo(63 * a, 69 * a, 65 * a, 71 * a, 67 * a, 77 * a);
            c.bezierCurveTo(61 * a, 123 * a, 52 * a, 137 * a, 42 * a, 150 * a);
            c.bezierCurveTo(38 * a, 151 * a, 38 * a, 151 * a, 34 * a, 152 * a);
            c.bezierCurveTo(33 * a, 146.5 * a, 33 * a, 146.5 * a, 32 * a, 141 * a);
            c.bezierCurveTo(49 * a, 118 * a, 63 * a, 87 * a, 59 * a, 68 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(71 * a, 172 * a);
            c.bezierCurveTo(56 * a, 222 * a, 49 * a, 234 * a, 35 * a, 248 * a);
            c.bezierCurveTo(30 * a, 236 * a, 30 * a, 230 * a, 31 * a, 217 * a);
            c.bezierCurveTo(44 * a, 202 * a, 49 * a, 191 * a, 52 * a, 172 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 151 * a);
            c.bezierCurveTo(27 * a, 165 * a, 31 * a, 173 * a, 36 * a, 178 * a);
            c.bezierCurveTo(56 * a, 185 * a, 73 * a, 184 * a, 71 * a, 170 * a);
            c.bezierCurveTo(72 * a, 154 * a, 71 * a, 154 * a, 63 * a, 155 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-10 * a, -10 * a);
            c.globalAlpha = 1;
            c.save();
            c.translate(51.5 * a, 342 * a);
            B(c, -14.5 * a, -225 * a, 29 * a, 450 * a, 20 * a);
            c.restore();
            h(c, f[1], f[2], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(54 * a, 83 * a);
            c.bezierCurveTo(70 * a, 69 * a, 78 * a, 62 * a, 82 * a, 40 * a);
            c.bezierCurveTo(93 * a, 48 * a, 103 * a, 64 * a, 95 * a, 102 * a);
            c.bezierCurveTo(60 * a, 114 * a, 53 * a, 103 * a, 54 * a, 85 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(95 * a, 97 * a);
            c.bezierCurveTo(56 * a, 102 * a, 43 * a, 77 * a, 71 * a, 6 * a);
            c.bezierCurveTo(34 * a, 10 * a, 6 * a, 43 * a, 5 * a, 76 * a);
            c.bezierCurveTo(4 * a, 98 * a, 15 * a, 130 * a, 64 * a, 130 * a);
            c.bezierCurveTo(76 * a, 129 * a, 95 * a, 113 * a, 97 * a, 97 * a);
            c.closePath();
            h(c, f[5], f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 403 * a);
            c.bezierCurveTo(47 * a, 412 * a, 58 * a, 412 * a, 67 * a, 403 * a);
            c.bezierCurveTo(66.5 * a, 434 * a, 66.5 * a, 434 * a, 66 * a, 465 * a);
            c.bezierCurveTo(56 * a, 480 * a, 40 * a, 472 * a, 36 * a, 465 * a);
            c.closePath();
            h(c, f[7], f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(37 * a, 427 * a);
            c.bezierCurveTo(47 * a, 435 * a, 55 * a, 435 * a, 67 * a, 427 * a);
            h(c, void 0, f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(36 * a, 448 * a);
            c.bezierCurveTo(46 * a, 454 * a, 54 * a, 457 * a, 65 * a, 449 * a);
            h(c, void 0, f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(55 * a, 176 * a);
            c.bezierCurveTo(74 * a, 175 * a, 82 * a, 169 * a, 96 * a, 155 * a);
            c.bezierCurveTo(103 * a, 183 * a, 95 * a, 214 * a, 54 * a, 219 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(50 * a, 176 * a);
            c.bezierCurveTo(25 * a, 177 * a, 16 * a, 164 * a, 7 * a, 156 * a);
            c.bezierCurveTo(0 * a, 186 * a, 10 * a, 201 * a, 43 * a, 220 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(59 * a, 67 * a);
            c.bezierCurveTo(47 * a, 97 * a, 18 * a, 117 * a, 11 * a, 110 * a);
            c.bezierCurveTo(11 * a, 115 * a, 15 * a, 122 * a, 23 * a, 124 * a);
            c.bezierCurveTo(46 * a, 118 * a, 52 * a, 113 * a, 62 * a, 86 * a);
            c.closePath();
            h(c, f[7], f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 125 * a);
            c.bezierCurveTo(47 * a, 136 * a, 57 * a, 134 * a, 77 * a, 127 * a);
            c.bezierCurveTo(71 * a, 158 * a, 71 * a, 159 * a, 66 * a, 159 * a);
            c.bezierCurveTo(50.5 * a, 156.5 * a, 50.5 * a, 156.5 * a, 35 * a, 154 * a);
            c.bezierCurveTo(31 * a, 145 * a, 31 * a, 136 * a, 31 * a, 125 * a);
            c.closePath();
            h(c, f[7], f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 171 * a);
            c.bezierCurveTo(32 * a, 221 * a, 43 * a, 233 * a, 70 * a, 247 * a);
            c.bezierCurveTo(75 * a, 234 * a, 75 * a, 230 * a, 72 * a, 221 * a);
            c.bezierCurveTo(48 * a, 206 * a, 54 * a, 188 * a, 50 * a, 176 * a);
            c.closePath();
            h(c, f[7], f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(60 * a, 68 * a);
            c.bezierCurveTo(63 * a, 69 * a, 65 * a, 71 * a, 67 * a, 77 * a);
            c.bezierCurveTo(61 * a, 123 * a, 52 * a, 137 * a, 42 * a, 150 * a);
            c.bezierCurveTo(38 * a, 151 * a, 38 * a, 151 * a, 34 * a, 152 * a);
            c.bezierCurveTo(33 * a, 146.5 * a, 33 * a, 146.5 * a, 32 * a, 141 * a);
            c.bezierCurveTo(49 * a, 118 * a, 63 * a, 87 * a, 59 * a, 68 * a);
            c.closePath();
            h(c, f[7], f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(71 * a, 172 * a);
            c.bezierCurveTo(56 * a, 222 * a, 49 * a, 234 * a, 35 * a, 248 * a);
            c.bezierCurveTo(30 * a, 236 * a, 30 * a, 230 * a, 31 * a, 217 * a);
            c.bezierCurveTo(44 * a, 202 * a, 49 * a, 191 * a, 52 * a, 172 * a);
            c.closePath();
            h(c, f[7], f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 151 * a);
            c.bezierCurveTo(27 * a, 165 * a, 31 * a, 173 * a, 36 * a, 178 * a);
            c.bezierCurveTo(56 * a, 185 * a, 73 * a, 184 * a, 71 * a, 170 * a);
            c.bezierCurveTo(72 * a, 154 * a, 71 * a, 154 * a, 63 * a, 155 * a);
            c.closePath();
            h(c, f[7], f[8], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(53 * a, 113 * a);
            c.bezierCurveTo(65 * a, 140 * a, 75 * a, 166 * a, 52 * a, 169 * a);
            c.bezierCurveTo(29 * a, 168 * a, 41 * a, 143 * a, 53 * a, 112 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            return d;
        };

        function ue(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 81 * a;
            d.height = 626 * a;
            c.translate(20 * a, 20 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(55 * a, 565 * a);
            c.bezierCurveTo(56 * a, 586 * a, 53 * a, 591 * a, 40 * a, 592 * a);
            c.bezierCurveTo(28 * a, 591 * a, 27 * a, 583 * a, 28 * a, 557 * a);
            c.bezierCurveTo(27.5 * a, 346 * a, 27.5 * a, 346 * a, 27 * a, 135 * a);
            c.bezierCurveTo(26 * a, 74 * a, 36 * a, 26 * a, 41 * a, 15 * a);
            c.bezierCurveTo(54 * a, 51 * a, 54 * a, 81 * a, 55 * a, 128 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-20 * a, -20 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(55 * a, 565 * a);
            c.bezierCurveTo(56 * a, 586 * a, 53 * a, 591 * a, 40 * a, 592 * a);
            c.bezierCurveTo(28 * a, 591 * a, 27 * a, 583 * a, 28 * a, 557 * a);
            c.bezierCurveTo(27.5 * a, 346 * a, 27.5 * a, 346 * a, 27 * a, 135 * a);
            c.bezierCurveTo(26 * a, 74 * a, 36 * a, 26 * a, 41 * a, 15 * a);
            c.bezierCurveTo(54 * a, 51 * a, 54 * a, 81 * a, 55 * a, 128 * a);
            c.closePath();
            h(c, f[1], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(27 * a, 129 * a);
            c.bezierCurveTo(32 * a, 135 * a, 48 * a, 136 * a, 53 * a, 129 * a);
            c.bezierCurveTo(56 * a, 97 * a, 53 * a, 82 * a, 52 * a, 64 * a);
            c.bezierCurveTo(49 * a, 33 * a, 44 * a, 27 * a, 41 * a, 21 * a);
            c.bezierCurveTo(31 * a, 40 * a, 28 * a, 84 * a, 27 * a, 127 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(55 * a, 565 * a);
            c.bezierCurveTo(56 * a, 586 * a, 53 * a, 591 * a, 40 * a, 592 * a);
            c.bezierCurveTo(28 * a, 591 * a, 27 * a, 583 * a, 28 * a, 557 * a);
            c.bezierCurveTo(27.5 * a, 346 * a, 27.5 * a, 346 * a, 27 * a, 135 * a);
            c.bezierCurveTo(26 * a, 74 * a, 36 * a, 26 * a, 41 * a, 15 * a);
            c.bezierCurveTo(54 * a, 51 * a, 54 * a, 81 * a, 55 * a, 128 * a);
            c.closePath();
            h(c, void 0, f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(28 * a, 475 * a);
            c.bezierCurveTo(38 * a, 482 * a, 48 * a, 480 * a, 54 * a, 474 * a);
            c.bezierCurveTo(54 * a, 509.5 * a, 54 * a, 509.5 * a, 54 * a, 545 * a);
            c.bezierCurveTo(46 * a, 554 * a, 36 * a, 552 * a, 28 * a, 545 * a);
            c.closePath();
            h(c, f[4], f[5], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(28 * a, 496 * a);
            c.bezierCurveTo(39 * a, 506 * a, 49 * a, 503 * a, 54 * a, 496 * a);
            h(c, void 0, f[5], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(28 * a, 521 * a);
            c.bezierCurveTo(41 * a, 529 * a, 49 * a, 524 * a, 54 * a, 520 * a);
            h(c, void 0, f[5], 8 * a);
            return d;
        };

        function ve(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 100 * a;
            d.height = 648 * a;
            c.translate(20 * a, 20 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(50.5 * a, 349.5 * a);
            B(c, -13.5 * a, -249.5 * a, 27 * a, 499 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(36 * a, 538 * a);
            c.bezierCurveTo(49.5 * a, 538 * a, 49.5 * a, 538 * a, 63 * a, 538 * a);
            c.bezierCurveTo(63.5 * a, 568 * a, 63.5 * a, 568 * a, 64 * a, 598 * a);
            c.bezierCurveTo(50 * a, 598 * a, 50 * a, 598 * a, 36 * a, 598 * a);
            c.bezierCurveTo(36 * a, 568.5 * a, 36 * a, 568.5 * a, 36 * a, 539 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(36 * a, 554 * a);
            c.bezierCurveTo(45 * a, 561 * a, 56 * a, 558 * a, 63 * a, 554 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(32 * a, 569 * a);
            c.bezierCurveTo(44 * a, 576 * a, 58 * a, 574 * a, 68 * a, 569 * a);
            c.bezierCurveTo(68 * a, 584 * a, 68 * a, 584 * a, 68 * a, 599 * a);
            c.bezierCurveTo(68 * a, 608 * a, 65 * a, 618 * a, 49 * a, 617 * a);
            c.bezierCurveTo(34 * a, 617 * a, 32 * a, 610 * a, 32 * a, 598 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(41 * a, 581 * a);
            c.bezierCurveTo(48 * a, 584 * a, 55 * a, 583 * a, 60 * a, 581 * a);
            c.bezierCurveTo(60 * a, 589.5 * a, 60 * a, 589.5 * a, 60 * a, 598 * a);
            c.bezierCurveTo(60 * a, 604 * a, 59 * a, 609 * a, 48 * a, 608 * a);
            c.bezierCurveTo(40 * a, 607 * a, 40 * a, 606 * a, 41 * a, 581 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(31 * a, 106 * a);
            c.bezierCurveTo(31 * a, 124.5 * a, 31 * a, 124.5 * a, 31 * a, 143 * a);
            c.bezierCurveTo(31 * a, 163 * a, 38 * a, 169 * a, 48 * a, 168 * a);
            c.bezierCurveTo(57 * a, 168 * a, 67 * a, 165 * a, 67 * a, 148 * a);
            c.bezierCurveTo(67 * a, 123.5 * a, 67 * a, 123.5 * a, 67 * a, 99 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(49 * a, 27 * a);
            c.bezierCurveTo(64 * a, 62.5 * a, 64 * a, 62.5 * a, 79 * a, 98 * a);
            c.bezierCurveTo(74 * a, 113 * a, 63 * a, 121 * a, 50 * a, 122 * a);
            c.bezierCurveTo(35 * a, 123 * a, 22 * a, 109 * a, 20 * a, 98 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(49 * a, 43 * a);
            c.bezierCurveTo(61 * a, 70 * a, 61 * a, 70 * a, 73 * a, 97 * a);
            c.bezierCurveTo(66 * a, 116 * a, 43 * a, 122 * a, 26 * a, 99 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-20 * a, -20 * a);
            c.globalAlpha = 1;
            c.save();
            c.translate(50.5 * a, 349.5 * a);
            B(c, -13.5 * a, -249.5 * a, 27 * a, 499 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(36 * a, 538 * a);
            c.bezierCurveTo(49.5 * a, 538 * a, 49.5 * a, 538 * a, 63 * a, 538 * a);
            c.bezierCurveTo(63.5 * a, 568 * a, 63.5 * a, 568 * a, 64 * a, 598 * a);
            c.bezierCurveTo(50 * a, 598 * a, 50 * a, 598 * a, 36 * a, 598 * a);
            c.bezierCurveTo(36 * a, 568.5 * a, 36 * a, 568.5 * a, 36 * a, 539 * a);
            c.closePath();
            h(c, f[3], f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(36 * a, 554 * a);
            c.bezierCurveTo(45 * a, 561 * a, 56 * a, 558 * a, 63 * a, 554 * a);
            c.closePath();
            h(c, void 0, f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(32 * a, 569 * a);
            c.bezierCurveTo(44 * a, 576 * a, 58 * a, 574 * a, 68 * a, 569 * a);
            c.bezierCurveTo(68 * a, 584 * a, 68 * a, 584 * a, 68 * a, 599 * a);
            c.bezierCurveTo(68 * a, 608 * a, 65 * a, 618 * a, 49 * a, 617 * a);
            c.bezierCurveTo(34 * a, 617 * a, 32 * a, 610 * a, 32 * a, 598 * a);
            c.closePath();
            h(c, f[5], f[6], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(41 * a, 581 * a);
            c.bezierCurveTo(48 * a, 584 * a, 55 * a, 583 * a, 60 * a, 581 * a);
            c.bezierCurveTo(60 * a, 589.5 * a, 60 * a, 589.5 * a, 60 * a, 598 * a);
            c.bezierCurveTo(60 * a, 604 * a, 59 * a, 609 * a, 48 * a, 608 * a);
            c.bezierCurveTo(40 * a, 607 * a, 40 * a, 606 * a, 41 * a, 581 * a);
            c.closePath();
            h(c, f[7]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(31 * a, 106 * a);
            c.bezierCurveTo(31 * a, 124.5 * a, 31 * a, 124.5 * a, 31 * a, 143 * a);
            c.bezierCurveTo(31 * a, 163 * a, 38 * a, 169 * a, 48 * a, 168 * a);
            c.bezierCurveTo(57 * a, 168 * a, 67 * a, 165 * a, 67 * a, 148 * a);
            c.bezierCurveTo(67 * a, 123.5 * a, 67 * a, 123.5 * a, 67 * a, 99 * a);
            c.closePath();
            h(c, f[5], f[6], 8 * a);
            c.save();
            c.translate(-46 * a, -50 * a);
            c.scale(2, 2);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(51 * a, 80 * a);
            c.bezierCurveTo(51 * a, 89.5 * a, 51 * a, 89.5 * a, 51 * a, 99 * a);
            c.bezierCurveTo(49 * a, 103 * a, 46 * a, 105 * a, 44 * a, 99 * a);
            c.bezierCurveTo(44 * a, 88.5 * a, 44 * a, 88.5 * a, 44 * a, 78 * a);
            c.closePath();
            h(c, f[8]);
            c.restore();
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(49 * a, 27 * a);
            c.bezierCurveTo(64 * a, 62.5 * a, 64 * a, 62.5 * a, 79 * a, 98 * a);
            c.bezierCurveTo(74 * a, 113 * a, 63 * a, 121 * a, 50 * a, 122 * a);
            c.bezierCurveTo(35 * a, 123 * a, 22 * a, 109 * a, 20 * a, 98 * a);
            c.closePath();
            h(c, f[8], f[9], 8 * a);
            c.scale(2, 2);
            c.translate(-23 * a, -20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(57 * a, 69 * a);
            c.bezierCurveTo(50 * a, 76 * a, 43 * a, 75 * a, 38 * a, 69 * a);
            c.bezierCurveTo(43 * a, 57 * a, 43 * a, 57 * a, 48 * a, 45 * a);
            c.closePath();
            h(c, f[10]);
            return d;
        };

        function we(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 88 * a;
            d.height = 647 * a;
            c.translate(20 * a, 20 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(45 * a, 384.5 * a);
            B(c, -15 * a, -216.5 * a, 30 * a, 433 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(27 * a, 572 * a);
            c.bezierCurveTo(44 * a, 580 * a, 55 * a, 576 * a, 62 * a, 572 * a);
            c.bezierCurveTo(65 * a, 585.5 * a, 65 * a, 585.5 * a, 68 * a, 599 * a);
            c.bezierCurveTo(71 * a, 612 * a, 68 * a, 618 * a, 34 * a, 616 * a);
            c.bezierCurveTo(14 * a, 615 * a, 19 * a, 607 * a, 27 * a, 573 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(32 * a, 587 * a);
            c.bezierCurveTo(39 * a, 590 * a, 48 * a, 588 * a, 54 * a, 587 * a);
            c.bezierCurveTo(57 * a, 604 * a, 59 * a, 609 * a, 46 * a, 609 * a);
            c.bezierCurveTo(27 * a, 609 * a, 28 * a, 605 * a, 33 * a, 588 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(31 * a, 113 * a);
            c.bezierCurveTo(27 * a, 139 * a, 27 * a, 139 * a, 23 * a, 165 * a);
            c.bezierCurveTo(18 * a, 187 * a, 39 * a, 195 * a, 57 * a, 186 * a);
            c.bezierCurveTo(68 * a, 180 * a, 65 * a, 171 * a, 62 * a, 153 * a);
            c.bezierCurveTo(58.5 * a, 131 * a, 58.5 * a, 131 * a, 55 * a, 109 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(39 * a, 139 * a);
            c.bezierCurveTo(43 * a, 139 * a, 43 * a, 139 * a, 47 * a, 139 * a);
            c.bezierCurveTo(51 * a, 158 * a, 56 * a, 176 * a, 44 * a, 175 * a);
            c.bezierCurveTo(33 * a, 177 * a, 34 * a, 167 * a, 39 * a, 140 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(44 * a, 29 * a);
            c.bezierCurveTo(57 * a, 63 * a, 57 * a, 63 * a, 70 * a, 97 * a);
            c.bezierCurveTo(60 * a, 111 * a, 60 * a, 111 * a, 50 * a, 125 * a);
            c.bezierCurveTo(45 * a, 128 * a, 41 * a, 128 * a, 35 * a, 124 * a);
            c.bezierCurveTo(26.5 * a, 110 * a, 26.5 * a, 110 * a, 18 * a, 96 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(44 * a, 54 * a);
            c.bezierCurveTo(50 * a, 72 * a, 50 * a, 72 * a, 56 * a, 90 * a);
            c.bezierCurveTo(58 * a, 94 * a, 59 * a, 98 * a, 53 * a, 105 * a);
            c.bezierCurveTo(47 * a, 113 * a, 43 * a, 113 * a, 36 * a, 103 * a);
            c.bezierCurveTo(29 * a, 96 * a, 31 * a, 94 * a, 35 * a, 83 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-20 * a, -20 * a);
            c.globalAlpha = 1;
            c.save();
            c.translate(45 * a, 384.5 * a);
            B(c, -15 * a, -216.5 * a, 30 * a, 433 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(27 * a, 572 * a);
            c.bezierCurveTo(44 * a, 580 * a, 55 * a, 576 * a, 62 * a, 572 * a);
            c.bezierCurveTo(65 * a, 585.5 * a, 65 * a, 585.5 * a, 68 * a, 599 * a);
            c.bezierCurveTo(71 * a, 612 * a, 68 * a, 618 * a, 34 * a, 616 * a);
            c.bezierCurveTo(14 * a, 615 * a, 19 * a, 607 * a, 27 * a, 573 * a);
            c.closePath();
            h(c, f[3], f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(32 * a, 587 * a);
            c.bezierCurveTo(39 * a, 590 * a, 48 * a, 588 * a, 54 * a, 587 * a);
            c.bezierCurveTo(57 * a, 604 * a, 59 * a, 609 * a, 46 * a, 609 * a);
            c.bezierCurveTo(27 * a, 609 * a, 28 * a, 605 * a, 33 * a, 588 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(31 * a, 113 * a);
            c.bezierCurveTo(27 * a, 139 * a, 27 * a, 139 * a, 23 * a, 165 * a);
            c.bezierCurveTo(18 * a, 187 * a, 39 * a, 195 * a, 57 * a, 186 * a);
            c.bezierCurveTo(68 * a, 180 * a, 65 * a, 171 * a, 62 * a, 153 * a);
            c.bezierCurveTo(58.5 * a, 131 * a, 58.5 * a, 131 * a, 55 * a, 109 * a);
            c.closePath();
            h(c, f[3], f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(39 * a, 139 * a);
            c.bezierCurveTo(43 * a, 139 * a, 43 * a, 139 * a, 47 * a, 139 * a);
            c.bezierCurveTo(51 * a, 158 * a, 56 * a, 176 * a, 44 * a, 175 * a);
            c.bezierCurveTo(33 * a, 177 * a, 34 * a, 167 * a, 39 * a, 140 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(44 * a, 29 * a);
            c.bezierCurveTo(57 * a, 63 * a, 57 * a, 63 * a, 70 * a, 97 * a);
            c.bezierCurveTo(60 * a, 111 * a, 60 * a, 111 * a, 50 * a, 125 * a);
            c.bezierCurveTo(45 * a, 128 * a, 41 * a, 128 * a, 35 * a, 124 * a);
            c.bezierCurveTo(26.5 * a, 110 * a, 26.5 * a, 110 * a, 18 * a, 96 * a);
            c.closePath();
            h(c, f[6], f[7], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(44 * a, 54 * a);
            c.bezierCurveTo(50 * a, 72 * a, 50 * a, 72 * a, 56 * a, 90 * a);
            c.bezierCurveTo(58 * a, 94 * a, 59 * a, 98 * a, 53 * a, 105 * a);
            c.bezierCurveTo(47 * a, 113 * a, 43 * a, 113 * a, 36 * a, 103 * a);
            c.bezierCurveTo(29 * a, 96 * a, 31 * a, 94 * a, 35 * a, 83 * a);
            c.closePath();
            h(c, f[8]);
            return d;
        };

        function xe(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 106 * a;
            d.height = 681 * a;
            c.translate(20 * a, 20 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(52.5 * a, 395 * a);
            c.rotate(0);
            B(c, -11.5 * a, -226 * a, 23 * a, 452 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 588 * a);
            c.bezierCurveTo(47 * a, 596 * a, 61 * a, 594 * a, 69 * a, 588 * a);
            c.bezierCurveTo(79 * a, 615 * a, 78 * a, 632 * a, 59 * a, 643 * a);
            c.bezierCurveTo(41 * a, 650 * a, 27 * a, 632 * a, 30 * a, 610 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 135 * a);
            c.bezierCurveTo(61.5 * a, 142 * a, 61.5 * a, 142 * a, 71 * a, 149 * a);
            c.bezierCurveTo(69.5 * a, 166 * a, 69.5 * a, 166 * a, 68 * a, 183 * a);
            c.bezierCurveTo(60.5 * a, 187.5 * a, 60.5 * a, 187.5 * a, 53 * a, 192 * a);
            c.bezierCurveTo(45 * a, 187.5 * a, 45 * a, 187.5 * a, 37 * a, 183 * a);
            c.bezierCurveTo(35.5 * a, 167 * a, 35.5 * a, 167 * a, 34 * a, 151 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(64 * a, 150 * a);
            c.bezierCurveTo(63 * a, 164 * a, 63 * a, 164 * a, 62 * a, 178 * a);
            c.bezierCurveTo(58 * a, 181 * a, 58 * a, 181 * a, 54 * a, 184 * a);
            c.bezierCurveTo(48.5 * a, 181.5 * a, 48.5 * a, 181.5 * a, 43 * a, 179 * a);
            c.bezierCurveTo(42 * a, 164.5 * a, 42 * a, 164.5 * a, 41 * a, 150 * a);
            c.bezierCurveTo(46 * a, 152.5 * a, 46 * a, 152.5 * a, 51 * a, 155 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 39 * a);
            c.bezierCurveTo(65.5 * a, 82 * a, 65.5 * a, 82 * a, 79 * a, 125 * a);
            c.bezierCurveTo(66 * a, 137.5 * a, 66 * a, 137.5 * a, 53 * a, 150 * a);
            c.bezierCurveTo(39 * a, 138 * a, 39 * a, 138 * a, 25 * a, 126 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 64 * a);
            c.bezierCurveTo(60 * a, 92.5 * a, 60 * a, 92.5 * a, 68 * a, 121 * a);
            c.bezierCurveTo(61 * a, 127.5 * a, 61 * a, 127.5 * a, 54 * a, 134 * a);
            c.bezierCurveTo(46.5 * a, 127.5 * a, 46.5 * a, 127.5 * a, 39 * a, 121 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-20 * a, -20 * a);
            c.globalAlpha = 1;
            c.save();
            c.translate(52.5 * a, 395 * a);
            c.rotate(0);
            B(c, -11.5 * a, -226 * a, 23 * a, 452 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 588 * a);
            c.bezierCurveTo(47 * a, 596 * a, 61 * a, 594 * a, 69 * a, 588 * a);
            c.bezierCurveTo(79 * a, 615 * a, 78 * a, 632 * a, 59 * a, 643 * a);
            c.bezierCurveTo(41 * a, 650 * a, 27 * a, 632 * a, 30 * a, 610 * a);
            c.closePath();
            h(c, f[3], f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 135 * a);
            c.bezierCurveTo(61.5 * a, 142 * a, 61.5 * a, 142 * a, 71 * a, 149 * a);
            c.bezierCurveTo(69.5 * a, 166 * a, 69.5 * a, 166 * a, 68 * a, 183 * a);
            c.bezierCurveTo(60.5 * a, 187.5 * a, 60.5 * a, 187.5 * a, 53 * a, 192 * a);
            c.bezierCurveTo(45 * a, 187.5 * a, 45 * a, 187.5 * a, 37 * a, 183 * a);
            c.bezierCurveTo(35.5 * a, 167 * a, 35.5 * a, 167 * a, 34 * a, 151 * a);
            c.closePath();
            h(c, f[3], f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(64 * a, 150 * a);
            c.bezierCurveTo(63 * a, 164 * a, 63 * a, 164 * a, 62 * a, 178 * a);
            c.bezierCurveTo(58 * a, 181 * a, 58 * a, 181 * a, 54 * a, 184 * a);
            c.bezierCurveTo(48.5 * a, 181.5 * a, 48.5 * a, 181.5 * a, 43 * a, 179 * a);
            c.bezierCurveTo(42 * a, 164.5 * a, 42 * a, 164.5 * a, 41 * a, 150 * a);
            c.bezierCurveTo(46 * a, 152.5 * a, 46 * a, 152.5 * a, 51 * a, 155 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 39 * a);
            c.bezierCurveTo(65.5 * a, 82 * a, 65.5 * a, 82 * a, 79 * a, 125 * a);
            c.bezierCurveTo(66 * a, 137.5 * a, 66 * a, 137.5 * a, 53 * a, 150 * a);
            c.bezierCurveTo(39 * a, 138 * a, 39 * a, 138 * a, 25 * a, 126 * a);
            c.closePath();
            h(c, f[6], f[7], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 64 * a);
            c.bezierCurveTo(60 * a, 92.5 * a, 60 * a, 92.5 * a, 68 * a, 121 * a);
            c.bezierCurveTo(61 * a, 127.5 * a, 61 * a, 127.5 * a, 54 * a, 134 * a);
            c.bezierCurveTo(46.5 * a, 127.5 * a, 46.5 * a, 127.5 * a, 39 * a, 121 * a);
            c.closePath();
            h(c, f[8]);
            return d;
        };

        function ye(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 108 * a;
            d.height = 669 * a;
            c.translate(20 * a, 20 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(54 * a, 389.5 * a);
            B(c, -15 * a, -228.5 * a, 30 * a, 457 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 579 * a);
            c.bezierCurveTo(47 * a, 587 * a, 61 * a, 584 * a, 71 * a, 579 * a);
            c.bezierCurveTo(75 * a, 597.5 * a, 75 * a, 597.5 * a, 79 * a, 616 * a);
            c.bezierCurveTo(66.5 * a, 628 * a, 66.5 * a, 628 * a, 54 * a, 640 * a);
            c.bezierCurveTo(41 * a, 628.5 * a, 41 * a, 628.5 * a, 28 * a, 617 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 141 * a);
            c.bezierCurveTo(40 * a, 136 * a, 40 * a, 136 * a, 50 * a, 131 * a);
            c.bezierCurveTo(63 * a, 136 * a, 63 * a, 136 * a, 76 * a, 141 * a);
            c.bezierCurveTo(72.5 * a, 161.5 * a, 72.5 * a, 161.5 * a, 69 * a, 182 * a);
            c.bezierCurveTo(61.5 * a, 186.5 * a, 61.5 * a, 186.5 * a, 54 * a, 191 * a);
            c.bezierCurveTo(45 * a, 186.5 * a, 45 * a, 186.5 * a, 36 * a, 182 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(42 * a, 152 * a);
            c.bezierCurveTo(53 * a, 152 * a, 53 * a, 152 * a, 64 * a, 152 * a);
            c.bezierCurveTo(62 * a, 171 * a, 62 * a, 176 * a, 55 * a, 177 * a);
            c.bezierCurveTo(42 * a, 176 * a, 45 * a, 174 * a, 42 * a, 152 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 28 * a);
            c.bezierCurveTo(67.5 * a, 55 * a, 67.5 * a, 55 * a, 83 * a, 82 * a);
            c.bezierCurveTo(80 * a, 106.5 * a, 80 * a, 106.5 * a, 77 * a, 131 * a);
            c.bezierCurveTo(58 * a, 147 * a, 44 * a, 141 * a, 29 * a, 131 * a);
            c.bezierCurveTo(26.5 * a, 106.5 * a, 26.5 * a, 106.5 * a, 24 * a, 82 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(53 * a, 53 * a);
            c.bezierCurveTo(61 * a, 70 * a, 61 * a, 70 * a, 69 * a, 87 * a);
            c.bezierCurveTo(67 * a, 106 * a, 67 * a, 106 * a, 65 * a, 125 * a);
            c.bezierCurveTo(54 * a, 130 * a, 51 * a, 130 * a, 41 * a, 125 * a);
            c.bezierCurveTo(39 * a, 105 * a, 39 * a, 105 * a, 37 * a, 85 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(-20 * a, -20 * a);
            c.globalAlpha = 1;
            c.save();
            c.translate(54 * a, 389.5 * a);
            c.rotate(0);
            B(c, -15 * a, -228.5 * a, 30 * a, 457 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(35 * a, 579 * a);
            c.bezierCurveTo(47 * a, 587 * a, 61 * a, 584 * a, 71 * a, 579 * a);
            c.bezierCurveTo(75 * a, 597.5 * a, 75 * a, 597.5 * a, 79 * a, 616 * a);
            c.bezierCurveTo(66.5 * a, 628 * a, 66.5 * a, 628 * a, 54 * a, 640 * a);
            c.bezierCurveTo(41 * a, 628.5 * a, 41 * a, 628.5 * a, 28 * a, 617 * a);
            c.closePath();
            h(c, f[3], f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 141 * a);
            c.bezierCurveTo(40 * a, 136 * a, 40 * a, 136 * a, 50 * a, 131 * a);
            c.bezierCurveTo(63 * a, 136 * a, 63 * a, 136 * a, 76 * a, 141 * a);
            c.bezierCurveTo(72.5 * a, 161.5 * a, 72.5 * a, 161.5 * a, 69 * a, 182 * a);
            c.bezierCurveTo(61.5 * a, 186.5 * a, 61.5 * a, 186.5 * a, 54 * a, 191 * a);
            c.bezierCurveTo(45 * a, 186.5 * a, 45 * a, 186.5 * a, 36 * a, 182 * a);
            c.closePath();
            h(c, f[3], f[4], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(42 * a, 152 * a);
            c.bezierCurveTo(53 * a, 152 * a, 53 * a, 152 * a, 64 * a, 152 * a);
            c.bezierCurveTo(62 * a, 171 * a, 62 * a, 176 * a, 55 * a, 177 * a);
            c.bezierCurveTo(42 * a, 176 * a, 45 * a, 174 * a, 42 * a, 152 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 28 * a);
            c.bezierCurveTo(67.5 * a, 55 * a, 67.5 * a, 55 * a, 83 * a, 82 * a);
            c.bezierCurveTo(80 * a, 106.5 * a, 80 * a, 106.5 * a, 77 * a, 131 * a);
            c.bezierCurveTo(58 * a, 147 * a, 44 * a, 141 * a, 29 * a, 131 * a);
            c.bezierCurveTo(26.5 * a, 106.5 * a, 26.5 * a, 106.5 * a, 24 * a, 82 * a);
            c.closePath();
            h(c, f[6], f[7], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(53 * a, 53 * a);
            c.bezierCurveTo(61 * a, 70 * a, 61 * a, 70 * a, 69 * a, 87 * a);
            c.bezierCurveTo(67 * a, 106 * a, 67 * a, 106 * a, 65 * a, 125 * a);
            c.bezierCurveTo(54 * a, 130 * a, 51 * a, 130 * a, 41 * a, 125 * a);
            c.bezierCurveTo(39 * a, 105 * a, 39 * a, 105 * a, 37 * a, 85 * a);
            c.closePath();
            h(c, f[8]);
            return d;
        };

        function ze(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 43 * a;
            d.height = 209 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(21 * a, 102.5 * a);
            B(c, -4 * a, -76.5 * a, 8 * a, 163 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.translate(0, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(20 * a, 10 * a);
            c.bezierCurveTo(25 * a, 25.5 * a, 25 * a, 25.5 * a, 30 * a, 41 * a);
            c.bezierCurveTo(25.5 * a, 38.5 * a, 25.5 * a, 38.5 * a, 21 * a, 36 * a);
            c.bezierCurveTo(16 * a, 38.5 * a, 16 * a, 38.5 * a, 11 * a, 41 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(21 * a, 1 * a);
            c.bezierCurveTo(28 * a, 18 * a, 28 * a, 18 * a, 35 * a, 35 * a);
            c.bezierCurveTo(28.5 * a, 32 * a, 28.5 * a, 32 * a, 22 * a, 29 * a);
            c.bezierCurveTo(14.5 * a, 32.5 * a, 14.5 * a, 32.5 * a, 7 * a, 36 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(14 * a, 146 * a);
            c.bezierCurveTo(21 * a, 146 * a, 21 * a, 146 * a, 28 * a, 146 * a);
            c.bezierCurveTo(27.5 * a, 147.5 * a, 27.5 * a, 147.5 * a, 27 * a, 149 * a);
            c.bezierCurveTo(27 * a, 160 * a, 27 * a, 160 * a, 27 * a, 171 * a);
            c.bezierCurveTo(27.5 * a, 171.5 * a, 27.5 * a, 171.5 * a, 28 * a, 172 * a);
            c.bezierCurveTo(21 * a, 172 * a, 21 * a, 172 * a, 14 * a, 172 * a);
            c.bezierCurveTo(14 * a, 171.5 * a, 14 * a, 171.5 * a, 14 * a, 171 * a);
            c.bezierCurveTo(14.5 * a, 171.5 * a, 14.5 * a, 171.5 * a, 15 * a, 172 * a);
            c.bezierCurveTo(15 * a, 160.5 * a, 15 * a, 160.5 * a, 15 * a, 149 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(21 * a, 6 * a);
            c.bezierCurveTo(26.5 * a, 18.5 * a, 26.5 * a, 18.5 * a, 32 * a, 31 * a);
            c.bezierCurveTo(27 * a, 29 * a, 27 * a, 29 * a, 22 * a, 27 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(0, -20 * a);
            c.globalAlpha = 1;
            c.translate(0, 10 * a);
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(21 * a, 102.5 * a);
            B(c, -4 * a, -76.5 * a, 8 * a, 163 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 4 * a);
            c.translate(0, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(20 * a, 10 * a);
            c.bezierCurveTo(25 * a, 25.5 * a, 25 * a, 25.5 * a, 30 * a, 41 * a);
            c.bezierCurveTo(25.5 * a, 38.5 * a, 25.5 * a, 38.5 * a, 21 * a, 36 * a);
            c.bezierCurveTo(16 * a, 38.5 * a, 16 * a, 38.5 * a, 11 * a, 41 * a);
            c.closePath();
            h(c, f[3], f[4], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(21 * a, 1 * a);
            c.bezierCurveTo(28 * a, 18 * a, 28 * a, 18 * a, 35 * a, 35 * a);
            c.bezierCurveTo(28.5 * a, 32 * a, 28.5 * a, 32 * a, 22 * a, 29 * a);
            c.bezierCurveTo(14.5 * a, 32.5 * a, 14.5 * a, 32.5 * a, 7 * a, 36 * a);
            c.closePath();
            h(c, f[5], f[6], 4 * a);
            c.translate(0, 0 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(14 * a, 146 * a);
            c.bezierCurveTo(21 * a, 146 * a, 21 * a, 146 * a, 28 * a, 146 * a);
            c.bezierCurveTo(27.5 * a, 147.5 * a, 27.5 * a, 147.5 * a, 27 * a, 149 * a);
            c.bezierCurveTo(27 * a, 160 * a, 27 * a, 160 * a, 27 * a, 171 * a);
            c.bezierCurveTo(27.5 * a, 171.5 * a, 27.5 * a, 171.5 * a, 28 * a, 172 * a);
            c.bezierCurveTo(21 * a, 172 * a, 21 * a, 172 * a, 14 * a, 172 * a);
            c.bezierCurveTo(14 * a, 171.5 * a, 14 * a, 171.5 * a, 14 * a, 171 * a);
            c.bezierCurveTo(14.5 * a, 171.5 * a, 14.5 * a, 171.5 * a, 15 * a, 172 * a);
            c.bezierCurveTo(15 * a, 160.5 * a, 15 * a, 160.5 * a, 15 * a, 149 * a);
            c.closePath();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(21 * a, 6 * a);
            c.bezierCurveTo(26.5 * a, 18.5 * a, 26.5 * a, 18.5 * a, 32 * a, 31 * a);
            c.bezierCurveTo(27 * a, 29 * a, 27 * a, 29 * a, 22 * a, 27 * a);
            c.closePath();
            h(c, f[8]);
            return d;
        };

        function Eh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 200 * a;
            e.height = 200 * a;
            d.save();
            d.translate(112 * a, 158 * a);
            B(d, -86.5 * a, -86 * a, 150 * a, 35 * a, 20 * a);
            d.restore();
            h(d, f[0]);
            d.save();
            d.translate(170 * a, 100 * a);
            B(d, -86.5 * a, -86 * a, 35 * a, 150 * a, 20 * a);
            d.restore();
            h(d, f[0]);
            return e;
        };

        function Fh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 118 * a;
            e.height = 129 * a;
            d.save();
            d.translate(90 * a, 90 * a);
            B(d, -86.5 * a, -86 * a, 110 * a, 110 * a, 15 * a);
            d.restore();
            h(d, f[0], f[1], 4);
            d.save();
            B(d, 30 * a, 115 * a, 60 * a, 5 * a, 15 * a);
            d.restore();
            h(d, f[2], f[3], 4);
            d.save();
            B(d, 50 * a, 117 * a, 20 * a, 10 * a, 15 * a);
            d.restore();
            h(d, f[2]);
            return e;
        };

        function Ae(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 165 * a;
            e.height = 123 * a;
            d.save();
            d.translate(81 * a, 65 * a);
            B(d, -78 * a, -54.5 * a, 156 * a, 109 * a, 20 * a);
            d.restore();
            h(d, f[0]);
            d.save();
            d.translate(81 * a, 58 * a);
            B(d, -78 * a, -54.5 * a, 156 * a, 109 * a, 20 * a);
            d.restore();
            h(d, f[1], f[2], 4);
            d.save();
            d.translate(81 * a, 58 * a);
            B(d, -69 * a, -47 * a, 138 * a, 93 * a, 15 * a);
            d.restore();
            h(d, f[3], f[4], 4);
            d.save();
            d.translate(79 * a, 54 * a);
            B(d, -34 * a, -40 * a, 68 * a, 88 * a, 13 * a);
            d.restore();
            h(d, void 0, f[5], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(44 * a, 13 * a);
            d.bezierCurveTo(43.5 * a, 55 * a, 43.5 * a, 55 * a, 43 * a, 101 * a);
            d.closePath();
            h(d, void 0, f[6], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 13 * a);
            d.bezierCurveTo(115 * a, 56 * a, 115 * a, 56 * a, 115 * a, 101 * a);
            d.closePath();
            h(d, void 0, f[6], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(35 * a, 6 * a);
            d.bezierCurveTo(35 * a, 56 * a, 36 * a, 109 * a, 35 * a, 110 * a);
            d.closePath();
            h(d, void 0, f[7], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(123 * a, 6 * a);
            d.bezierCurveTo(123 * a, 56 * a, 123 * a, 56 * a, 123 * a, 110 * a);
            d.closePath();
            h(d, void 0, f[7], 4);
            d.save();
            d.translate(79 * a, 113 * a);
            B(d, -18 * a, -2 * a, 36 * a, 4 * a, 20 * a);
            d.restore();
            h(d, void 0, f[8], 4);
            d.save();
            d.translate(75 * a, 118 * a);
            B(d, -6 * a, -2.5 * a, 20 * a, 5 * a, 20 * a);
            d.restore();
            h(d, f[8]);
            return e;
        };

        function Uc(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 92 * a;
            e.height = 108 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(31 * a, 10 * a);
            d.bezierCurveTo(37 * a, 2 * a, 49 * a, 0 * a, 61 * a, 15 * a);
            d.bezierCurveTo(81 * a, 31 * a, 78 * a, 25 * a, 79 * a, 37 * a);
            d.bezierCurveTo(76 * a, 44 * a, 81 * a, 56 * a, 85 * a, 63 * a);
            d.bezierCurveTo(91 * a, 71 * a, 90 * a, 78 * a, 83 * a, 84 * a);
            d.bezierCurveTo(60 * a, 98 * a, 67 * a, 95 * a, 57 * a, 102 * a);
            d.bezierCurveTo(47 * a, 106 * a, 43 * a, 106 * a, 31 * a, 98 * a);
            d.bezierCurveTo(22 * a, 91 * a, 17 * a, 89 * a, 7 * a, 84 * a);
            d.bezierCurveTo(1 * a, 77 * a, 4 * a, 73 * a, 7 * a, 60 * a);
            d.bezierCurveTo(11 * a, 50 * a, 5 * a, 32 * a, 15 * a, 27 * a);
            d.bezierCurveTo(26 * a, 18 * a, 26 * a, 24 * a, 31 * a, 10 * a);
            d.closePath();
            h(d, f[0], f[1], 4);
            return e;
        };

        function Gh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 60 * a;
            f.height = 60 * a;
            d.translate(-25 * a, -25 * a);
            d.translate(0, 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(24 * a, 50 * a);
            d.bezierCurveTo(32.5 * a, 54.5 * a, 32.5 * a, 54.5 * a, 41 * a, 59 * a);
            d.bezierCurveTo(57 * a, 47 * a, 57 * a, 47 * a, 73 * a, 35 * a);
            d.bezierCurveTo(57 * a, 53 * a, 57 * a, 53 * a, 41 * a, 71 * a);
            d.closePath();
            h(d, e[0]);
            d.translate(0, -5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(24 * a, 50 * a);
            d.bezierCurveTo(32.5 * a, 54.5 * a, 32.5 * a, 54.5 * a, 41 * a, 59 * a);
            d.bezierCurveTo(57 * a, 47 * a, 57 * a, 47 * a, 73 * a, 35 * a);
            d.bezierCurveTo(57 * a, 53 * a, 57 * a, 53 * a, 41 * a, 71 * a);
            d.closePath();
            h(d, e[1]);
            return f;
        };

        function Be(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 151 * a;
            e.height = 80 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 54 * a);
            d.bezierCurveTo(136 * a, 18 * a, 129 * a, 18 * a, 114 * a, 13 * a);
            d.bezierCurveTo(51 * a, 0 * a, 36 * a, 16 * a, 34 * a, 16 * a);
            d.bezierCurveTo(8 * a, 28 * a, 22 * a, 56 * a, 21 * a, 57 * a);
            d.closePath();
            h(d, f[2], f[3], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130 * a, 40 * a);
            d.bezierCurveTo(132 * a, 35 * a, 132 * a, 30 * a, 132 * a, 29 * a);
            d.bezierCurveTo(145 * a, 38 * a, 144 * a, 43 * a, 137 * a, 54 * a);
            d.closePath();
            h(d, f[0], f[1], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(20 * a, 33 * a);
            d.bezierCurveTo(24 * a, 44 * a, 215 * a, 39 * a, 23 * a, 44 * a);
            d.bezierCurveTo(19 * a, 49 * a, 19 * a, 49 * a, 15 * a, 54 * a);
            d.bezierCurveTo(4 * a, 43 * a, 10 * a, 35 * a, 20 * a, 32 * a);
            d.closePath();
            h(d, f[0], f[1], 4);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(18 * a, 52 * a);
            d.bezierCurveTo(24 * a, 31 * a, 34 * a, 25 * a, 75 * a, 23 * a);
            d.bezierCurveTo(130 * a, 24 * a, 129 * a, 32 * a, 134 * a, 51 * a);
            d.bezierCurveTo(138 * a, 70 * a, 126 * a, 72 * a, 90 * a, 73 * a);
            d.bezierCurveTo(18 * a, 72 * a, 15 * a, 68 * a, 18 * a, 54 * a);
            d.closePath();
            h(d, f[0], f[1], 4);
            return e;
        };

        function Ce(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 138 * a;
            d.height = 133 * a;
            c.globalAlpha = e ? 0.3 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(26 * a, 79.640625 * a);
            c.bezierCurveTo(13 * a, 84.640625 * a, 9 * a, 86.640625 * a, 7 * a, 78.640625 * a);
            c.bezierCurveTo(6 * a, 69.640625 * a, 15 * a, 67.640625 * a, 31 * a, 62.640625 * a);
            c.bezierCurveTo(63 * a, 55.640625 * a, 85 * a, 57.640625 * a, 104 * a, 63.640625 * a);
            c.bezierCurveTo(131 * a, 69.640625 * a, 132 * a, 71.640625 * a, 131 * a, 78.640625 * a);
            c.bezierCurveTo(131 * a, 91.640625 * a, 112 * a, 80.640625 * a, 91 * a, 75.640625 * a);
            c.bezierCurveTo(51 * a, 70.640625 * a, 45 * a, 74.640625 * a, 28 * a, 78.640625 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(8 * a, 82.640625 * a);
            c.bezierCurveTo(40 * a, 107.640625 * a, 53 * a, 104.640625 * a, 67 * a, 106.640625 * a);
            c.bezierCurveTo(101 * a, 103.640625 * a, 117 * a, 93.640625 * a, 127 * a, 84.640625 * a);
            c.bezierCurveTo(135 * a, 95.640625 * a, 131 * a, 107.640625 * a, 110 * a, 118.640625 * a);
            c.bezierCurveTo(78 * a, 129.640625 * a, 67 * a, 130.640625 * a, 27 * a, 119.640625 * a);
            c.bezierCurveTo(0 * a, 105.640625 * a, 8 * a, 83.640625 * a, 10 * a, 84.640625 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(8 * a, 73.640625 * a);
            c.bezierCurveTo(7 * a, 23.640625 * a, 33 * a, 19.640625 * a, 71 * a, 17.640625 * a);
            c.bezierCurveTo(129 * a, 19.640625 * a, 130 * a, 45.640625 * a, 130 * a, 76.640625 * a);
            c.bezierCurveTo(90 * a, 63.640625 * a, 85 * a, 63.640625 * a, 73 * a, 63.640625 * a);
            c.bezierCurveTo(38 * a, 63.640625 * a, 33 * a, 66.640625 * a, 8 * a, 73.640625 * a);
            c.closePath();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(72 * a, 28.640625 * a);
            c.bezierCurveTo(51 * a, 25.640625 * a, 56 * a, 7.640625 * a, 70 * a, 5.640625 * a);
            c.bezierCurveTo(94 * a, 7.640625 * a, 87 * a, 29.640625 * a, 72 * a, 28.640625 * a);
            c.closePath();
            h(c, f[3], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(51 * a, 26.640625 * a);
            c.bezierCurveTo(42 * a, 29.640625 * a, 43 * a, 31.640625 * a, 42 * a, 37.640625 * a);
            h(c, void 0, f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(90 * a, 26.640625 * a);
            c.bezierCurveTo(100 * a, 28.640625 * a, 98 * a, 34.640625 * a, 99 * a, 38.640625 * a);
            h(c, void 0, f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(26 * a, 79.640625 * a);
            c.bezierCurveTo(13 * a, 84.640625 * a, 9 * a, 86.640625 * a, 7 * a, 78.640625 * a);
            c.bezierCurveTo(6 * a, 69.640625 * a, 15 * a, 67.640625 * a, 31 * a, 62.640625 * a);
            c.bezierCurveTo(63 * a, 55.640625 * a, 85 * a, 57.640625 * a, 104 * a, 63.640625 * a);
            c.bezierCurveTo(131 * a, 69.640625 * a, 132 * a, 71.640625 * a, 131 * a, 78.640625 * a);
            c.bezierCurveTo(131 * a, 91.640625 * a, 112 * a, 80.640625 * a, 91 * a, 75.640625 * a);
            c.bezierCurveTo(51 * a, 70.640625 * a, 45 * a, 74.640625 * a, 28 * a, 78.640625 * a);
            c.closePath();
            h(c, f[3], f[4], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(8 * a, 82.640625 * a);
            c.bezierCurveTo(40 * a, 107.640625 * a, 53 * a, 104.640625 * a, 67 * a, 106.640625 * a);
            c.bezierCurveTo(101 * a, 103.640625 * a, 117 * a, 93.640625 * a, 127 * a, 84.640625 * a);
            c.bezierCurveTo(135 * a, 95.640625 * a, 131 * a, 107.640625 * a, 110 * a, 118.640625 * a);
            c.bezierCurveTo(78 * a, 129.640625 * a, 67 * a, 130.640625 * a, 27 * a, 119.640625 * a);
            c.bezierCurveTo(0 * a, 105.640625 * a, 8 * a, 83.640625 * a, 10 * a, 84.640625 * a);
            c.closePath();
            h(c, f[3], f[4], 4 * a);
            return d;
        };

        function De(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d"),
                g = 170 * a,
                k = 172 * a;
            d.width = g;
            d.height = k;
            c.translate(g / 2, (k / 2) + (7 * a));
            c.globalAlpha = e ? 0.5 : 0;
            A(c, 0, 0, 60 * a);
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -7 * a);
            c.save();
            for (e = 0; 10 > e; e++) c.rotate(Math.PI / 5), c.save(), c.translate(65 * a, 0), P(c, 3, 20 * a, 4 * a), h(c, f[1], f[2], 4 * a), c.restore();
            c.restore();
            A(c, 0, 0, 60 * a, 0);
            h(c, f[3], f[4], 4 * a);
            A(c, 0, 0, 40 * a);
            h(c, f[5]);
            A(c, 0, 0, 25 * a);
            h(c, f[6], f[7], 8 * a);
            return d;
        };

        function Hh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d"),
                c = 170 * a,
                g = 172 * a;
            f.width = c;
            f.height = g;
            d.translate(c / 2, g / 2);
            d.save();
            for (c = 0; 10 > c; c++) d.rotate(Math.PI / 5), d.save(), d.translate(65 * a, 0), P(d, 3, 18 * a, 4 * a), h(d, e[0]), d.restore();
            d.restore();
            A(d, 0, 0, 40 * a, 0);
            h(d, void 0, e[0], 6 * a);
            A(d, 0, 0, 20 * a, 0);
            h(d, e[0]);
            return f;
        };

        function zc(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 170 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.save();
            c.translate(85 * a, 88 * a);
            c.rotate(1.4);
            P(c, 7, 60 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(85 * a, 80 * a);
            for (e = 0; 10 > e; e++) c.rotate(Math.PI / 5), c.save(), c.translate(65 * a, 0), P(c, 3, 21 * a, 4 * a), h(c, f[1], f[2], 4 * a), c.restore();
            c.save();
            c.translate(0 * a, 0 * a);
            c.rotate(1.4);
            P(c, 7, 60 * a, 10 * a);
            h(c, f[3], f[4], 4 * a);
            c.rotate(0.64);
            P(c, 7, 40 * a, 10 * a);
            h(c, f[5], f[6], 4 * a);
            c.rotate(0.12);
            P(c, 7, 23 * a, 5 * a);
            c.restore();
            h(c, f[7]);
            return d;
        };

        function Ad(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 170 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 3 * a);
            c.save();
            c.translate(85 * a, 95 * a);
            c.rotate(1.4);
            P(c, 7, 60 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(85 * a, 82 * a);
            for (e = 0; 10 > e; e++) c.rotate(Math.PI / 5), c.save(), c.translate(65 * a, 0), P(c, 3, 21 * a, 4 * a), h(c, f[1], f[2], 4 * a), c.restore();
            c.save();
            c.translate(0 * a, 0 * a);
            c.rotate(1);
            P(c, 8, 60 * a, 10 * a);
            h(c, f[3], f[4], 4 * a);
            c.rotate(0.56);
            P(c, 8, 40 * a, 10 * a);
            h(c, f[5], f[6], 4 * a);
            c.rotate(0.28);
            P(c, 8, 28 * a, 8 * a);
            h(c, f[7]);
            c.restore();
            return d;
        };

        function Xf(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 170 * a;
            c.translate(0, 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(85 * a, 95 * a);
            c.rotate(1.4);
            P(c, 7, 60 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(85 * a, 82 * a);
            for (e = 0; 10 > e; e++) c.rotate(Math.PI / 5), c.save(), c.translate(65 * a, 0), P(c, 3, 21 * a, 4 * a), h(c, f[1], f[2], 4 * a), c.restore();
            c.save();
            c.translate(0 * a, 0 * a);
            c.rotate(0.2);
            P(c, 9, 60 * a, 10 * a);
            h(c, f[3], f[4], 4 * a);
            c.rotate(-0.32);
            P(c, 9, 38 * a, 10 * a);
            h(c, f[5], f[6], 4 * a);
            c.rotate(0.68);
            P(c, 9, 20 * a, 8 * a);
            h(c, f[7], f[8], 6 * a);
            c.restore();
            return d;
        };

        function ab(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 69 * a;
            d.height = 120 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.save();
            c.translate(30 * a, 84 * a);
            B(c, -6 * a, -66.5 * a, 8 * a, 100 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.save();
            c.translate(30 * a, 45 * a);
            B(c, -9.5 * a, -6.5 * a, 16 * a, 13 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.save();
            c.translate(30 * a, 17 * a);
            B(c, -7.5 * a, -5.5 * a, 12 * a, 11 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.save();
            c.translate(30 * a, 31 * a);
            B(c, -26 * a, -14.5 * a, 52 * a, 29 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.save();
            c.translate(36 * a, 79.140625 * a);
            B(c, -6 * a, -66.5 * a, 8 * a, 100 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 3 * a);
            c.save();
            c.translate(35 * a, 40.140625 * a);
            B(c, -9.5 * a, -6.5 * a, 16 * a, 13 * a, 10 * a);
            c.restore();
            h(c, f[3], f[4], 3 * a);
            c.save();
            c.translate(35 * a, 12.140625 * a);
            B(c, -7.5 * a, -5.5 * a, 12 * a, 11 * a, 10 * a);
            c.restore();
            h(c, f[3], f[4], 3 * a);
            c.save();
            c.translate(34.5 * a, 26.140625 * a);
            B(c, -26 * a, -14.5 * a, 52 * a, 29 * a, 5 * a);
            c.restore();
            h(c, f[3], f[4], 3 * a);
            return d;
        };

        function Ih(a) {
            var e = document.createElement("canvas"),
                f = e.getContext("2d");
            e.width = 321 * a;
            e.height = 345 * a;
            f.translate(0, 5 * a);
            f.translate(0, 20 * a);
            A(f, 160.5 * a, 159.5 * a, 156.39595138242822 * a);
            h(f, "#322413", "#322413", 4 * a);
            f.translate(0, -20 * a);
            A(f, 160.5 * a, 159.5 * a, 156.39595138242822 * a);
            h(f, "#392C16", "#5E3E1A", 10 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(31.999969482421875 * a, 163.07290649414062 * a);
            f.bezierCurveTo(22.999969482421875 * a, 67.07290649414062 * a, 106 * a, 20.072906494140625 * a, 162 * a, 23.072906494140625 * a);
            f.bezierCurveTo(269.9999694824219 * a, 31.072906494140625 * a, 292.9999694824219 * a, 120.07290649414062 * a, 294.9999694824219 * a, 161.07290649414062 * a);
            f.bezierCurveTo(165.49996948242188 * a, 162.07290649414062 * a, 165.49996948242188 * a, 162.07290649414062 * a, 35.999969482421875 * a, 163.07290649414062 * a);
            f.closePath();
            h(f, "#12432D");
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(32.999969482421875 * a, 165.07290649414062 * a);
            f.bezierCurveTo(16.999969482421875 * a, 221.07290649414062 * a, 85 * a, 289.0729064941406 * a, 156 * a, 294.0729064941406 * a);
            f.bezierCurveTo(263.9999694824219 * a, 293.0729064941406 * a, 295.9999694824219 * a, 199.07290649414062 * a, 294.9999694824219 * a, 159.07290649414062 * a);
            f.closePath();
            h(f, "#3A2A0D");
            A(f, 161 * a, 158.07290649414062 * a, 133.4053971921676 * a);
            h(f, void 0, "#5E3E1A", 10 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(31.999969482421875 * a, 161.62844848632812 * a);
            f.bezierCurveTo(162.49996948242188 * a, 161.62844848632812 * a, 162.49996948242188 * a, 161.62844848632812 * a, 292.9999694824219 * a, 161.62844848632812 * a);
            f.closePath();
            h(f, void 0, "#5E3E1A", 12 * a);
            f.translate(0, 8 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(66 * a, 158.29513549804688 * a);
            f.bezierCurveTo(86 * a, 158.29513549804688 * a, 86 * a, 158.29513549804688 * a, 106 * a, 158.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(57.999969482421875 * a, 117.29513549804688 * a);
            f.bezierCurveTo(85 * a, 128.29513549804688 * a, 85 * a, 128.29513549804688 * a, 113 * a, 139.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(95 * a, 90.29513549804688 * a);
            f.bezierCurveTo(112 * a, 105.79513549804688 * a, 112 * a, 105.79513549804688 * a, 129 * a, 121.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(116 * a, 52.850677490234375 * a);
            f.bezierCurveTo(130 * a, 83.85067749023438 * a, 130 * a, 83.85067749023438 * a, 144 * a, 114.85067749023438 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(159 * a, 61.295135498046875 * a);
            f.bezierCurveTo(160.49996948242188 * a, 92.29513549804688 * a, 160.49996948242188 * a, 92.29513549804688 * a, 160 * a, 123.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(203 * a, 51.295135498046875 * a);
            f.bezierCurveTo(190.49996948242188 * a, 83.29513549804688 * a, 190.49996948242188 * a, 83.29513549804688 * a, 176 * a, 115.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(225 * a, 89.29513549804688 * a);
            f.bezierCurveTo(210.49996948242188 * a, 104.79513549804688 * a, 210.49996948242188 * a, 104.79513549804688 * a, 194 * a, 120.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(266.9999694824219 * a, 112.29513549804688 * a);
            f.bezierCurveTo(233.49996948242188 * a, 127.29513549804688 * a, 233.49996948242188 * a, 127.29513549804688 * a, 199 * a, 142.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(256.9999694824219 * a, 155.29513549804688 * a);
            f.bezierCurveTo(238.49996948242188 * a, 156.29513549804688 * a, 238.49996948242188 * a, 156.29513549804688 * a, 219 * a, 157.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#c7a726", 12 * a);
            f.translate(0, -8 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(66 * a, 158.29513549804688 * a);
            f.bezierCurveTo(86 * a, 158.29513549804688 * a, 86 * a, 158.29513549804688 * a, 106 * a, 158.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(57.999969482421875 * a, 117.29513549804688 * a);
            f.bezierCurveTo(85 * a, 128.29513549804688 * a, 85 * a, 128.29513549804688 * a, 113 * a, 139.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(95 * a, 90.29513549804688 * a);
            f.bezierCurveTo(112 * a, 105.79513549804688 * a, 112 * a, 105.79513549804688 * a, 129 * a, 121.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(116 * a, 52.850677490234375 * a);
            f.bezierCurveTo(130 * a, 83.85067749023438 * a, 130 * a, 83.85067749023438 * a, 144 * a, 114.85067749023438 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(159 * a, 61.295135498046875 * a);
            f.bezierCurveTo(160.49996948242188 * a, 92.29513549804688 * a, 160.49996948242188 * a, 92.29513549804688 * a, 160 * a, 123.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(203 * a, 51.295135498046875 * a);
            f.bezierCurveTo(190.49996948242188 * a, 83.29513549804688 * a, 190.49996948242188 * a, 83.29513549804688 * a, 176 * a, 115.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(225 * a, 89.29513549804688 * a);
            f.bezierCurveTo(210.49996948242188 * a, 104.79513549804688 * a, 210.49996948242188 * a, 104.79513549804688 * a, 194 * a, 120.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(266.9999694824219 * a, 112.29513549804688 * a);
            f.bezierCurveTo(233.49996948242188 * a, 127.29513549804688 * a, 233.49996948242188 * a, 127.29513549804688 * a, 199 * a, 142.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(256.9999694824219 * a, 155.29513549804688 * a);
            f.bezierCurveTo(238.49996948242188 * a, 156.29513549804688 * a, 238.49996948242188 * a, 156.29513549804688 * a, 219 * a, 157.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#EDCE4F", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(94.00003051757812 * a, 164.40341186523438 * a);
            f.bezierCurveTo(162.50003051757812 * a, 164.40341186523438 * a, 230.00003051757812 * a, 165.40341186523438 * a, 231.00003051757812 * a, 164.40341186523438 * a);
            f.bezierCurveTo(214.00003051757812 * a, 267.4034118652344 * a, 92.00003051757812 * a, 243.40341186523438 * a, 93.00003051757812 * a, 165.40341186523438 * a);
            f.closePath();
            h(f, "#704618", "#5D3D1A", 8 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(96 * a, 166 * a);
            f.bezierCurveTo(88 * a, 117 * a, 129 * a, 92 * a, 161 * a, 91 * a);
            f.bezierCurveTo(201 * a, 90 * a, 223 * a, 121 * a, 230 * a, 161 * a);
            f.closePath();
            h(f, "#ECBE35", "#EDCE4F", 8 * a);
            A(f, 160.00003051757812 * a, 166.49432373046875 * a, 28.30194339616981 * a);
            h(f, "#392C16", "#5E3E1A", 10 * a);
            return e;
        };

        function Jh(a) {
            var e = document.createElement("canvas"),
                f = e.getContext("2d");
            e.width = 321 * a;
            e.height = 345 * a;
            f.translate(0, 5 * a);
            f.translate(0, 20 * a);
            A(f, 160.5 * a, 159.5 * a, 156.39595138242822 * a);
            h(f, "#322413", "#322413", 4 * a);
            f.translate(0, -20 * a);
            A(f, 160.5 * a, 159.5 * a, 156.39595138242822 * a);
            h(f, "#392C16", "#5E3E1A", 10 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(31.999969482421875 * a, 163.07290649414062 * a);
            f.bezierCurveTo(22.999969482421875 * a, 67.07290649414062 * a, 106 * a, 20.072906494140625 * a, 162 * a, 23.072906494140625 * a);
            f.bezierCurveTo(269.9999694824219 * a, 31.072906494140625 * a, 292.9999694824219 * a, 120.07290649414062 * a, 294.9999694824219 * a, 161.07290649414062 * a);
            f.bezierCurveTo(165.49996948242188 * a, 162.07290649414062 * a, 165.49996948242188 * a, 162.07290649414062 * a, 35.999969482421875 * a, 163.07290649414062 * a);
            f.closePath();
            h(f, "#3A2A0D");
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(32.999969482421875 * a, 165.07290649414062 * a);
            f.bezierCurveTo(16.999969482421875 * a, 221.07290649414062 * a, 85 * a, 289.0729064941406 * a, 156 * a, 294.0729064941406 * a);
            f.bezierCurveTo(263.9999694824219 * a, 293.0729064941406 * a, 295.9999694824219 * a, 199.07290649414062 * a, 294.9999694824219 * a, 159.07290649414062 * a);
            f.closePath();
            h(f, "#071A1B");
            A(f, 161 * a, 158.07290649414062 * a, 133.4053971921676 * a);
            h(f, void 0, "#5E3E1A", 10 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(31.999969482421875 * a, 161.62844848632812 * a);
            f.bezierCurveTo(162.49996948242188 * a, 161.62844848632812 * a, 162.49996948242188 * a, 161.62844848632812 * a, 292.9999694824219 * a, 161.62844848632812 * a);
            f.closePath();
            h(f, void 0, "#5E3E1A", 12 * a);
            f.translate(0, 8 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(66 * a, 158.29513549804688 * a);
            f.bezierCurveTo(86 * a, 158.29513549804688 * a, 86 * a, 158.29513549804688 * a, 106 * a, 158.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(57.999969482421875 * a, 117.29513549804688 * a);
            f.bezierCurveTo(85 * a, 128.29513549804688 * a, 85 * a, 128.29513549804688 * a, 113 * a, 139.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(95 * a, 90.29513549804688 * a);
            f.bezierCurveTo(112 * a, 105.79513549804688 * a, 112 * a, 105.79513549804688 * a, 129 * a, 121.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(116 * a, 52.850677490234375 * a);
            f.bezierCurveTo(130 * a, 83.85067749023438 * a, 130 * a, 83.85067749023438 * a, 144 * a, 114.85067749023438 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(159 * a, 61.295135498046875 * a);
            f.bezierCurveTo(160.49996948242188 * a, 92.29513549804688 * a, 160.49996948242188 * a, 92.29513549804688 * a, 160 * a, 123.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(203 * a, 51.295135498046875 * a);
            f.bezierCurveTo(190.49996948242188 * a, 83.29513549804688 * a, 190.49996948242188 * a, 83.29513549804688 * a, 176 * a, 115.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(225 * a, 89.29513549804688 * a);
            f.bezierCurveTo(210.49996948242188 * a, 104.79513549804688 * a, 210.49996948242188 * a, 104.79513549804688 * a, 194 * a, 120.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(266.9999694824219 * a, 112.29513549804688 * a);
            f.bezierCurveTo(233.49996948242188 * a, 127.29513549804688 * a, 233.49996948242188 * a, 127.29513549804688 * a, 199 * a, 142.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(256.9999694824219 * a, 155.29513549804688 * a);
            f.bezierCurveTo(238.49996948242188 * a, 156.29513549804688 * a, 238.49996948242188 * a, 156.29513549804688 * a, 219 * a, 157.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#281C08", 12 * a);
            f.translate(0, -8 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(66 * a, 158.29513549804688 * a);
            f.bezierCurveTo(86 * a, 158.29513549804688 * a, 86 * a, 158.29513549804688 * a, 106 * a, 158.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(57.999969482421875 * a, 117.29513549804688 * a);
            f.bezierCurveTo(85 * a, 128.29513549804688 * a, 85 * a, 128.29513549804688 * a, 113 * a, 139.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(95 * a, 90.29513549804688 * a);
            f.bezierCurveTo(112 * a, 105.79513549804688 * a, 112 * a, 105.79513549804688 * a, 129 * a, 121.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(116 * a, 52.850677490234375 * a);
            f.bezierCurveTo(130 * a, 83.85067749023438 * a, 130 * a, 83.85067749023438 * a, 144 * a, 114.85067749023438 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(159 * a, 61.295135498046875 * a);
            f.bezierCurveTo(160.49996948242188 * a, 92.29513549804688 * a, 160.49996948242188 * a, 92.29513549804688 * a, 160 * a, 123.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(203 * a, 51.295135498046875 * a);
            f.bezierCurveTo(190.49996948242188 * a, 83.29513549804688 * a, 190.49996948242188 * a, 83.29513549804688 * a, 176 * a, 115.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(225 * a, 89.29513549804688 * a);
            f.bezierCurveTo(210.49996948242188 * a, 104.79513549804688 * a, 210.49996948242188 * a, 104.79513549804688 * a, 194 * a, 120.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(266.9999694824219 * a, 112.29513549804688 * a);
            f.bezierCurveTo(233.49996948242188 * a, 127.29513549804688 * a, 233.49996948242188 * a, 127.29513549804688 * a, 199 * a, 142.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(256.9999694824219 * a, 155.29513549804688 * a);
            f.bezierCurveTo(238.49996948242188 * a, 156.29513549804688 * a, 238.49996948242188 * a, 156.29513549804688 * a, 219 * a, 157.29513549804688 * a);
            f.closePath();
            h(f, void 0, "#5E3C10", 12 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(96 * a, 166 * a);
            f.bezierCurveTo(88 * a, 117 * a, 129 * a, 92 * a, 161 * a, 91 * a);
            f.bezierCurveTo(201 * a, 90 * a, 223 * a, 121 * a, 230 * a, 161 * a);
            f.closePath();
            h(f, "#704618", "#5D3D1A", 8 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(94.00003051757812 * a, 164.40341186523438 * a);
            f.bezierCurveTo(162.50003051757812 * a, 164.40341186523438 * a, 230.00003051757812 * a, 165.40341186523438 * a, 231.00003051757812 * a, 164.40341186523438 * a);
            f.bezierCurveTo(214.00003051757812 * a, 267.4034118652344 * a, 92.00003051757812 * a, 243.40341186523438 * a, 93.00003051757812 * a, 165.40341186523438 * a);
            f.closePath();
            h(f, "#E1DDD5", "#EAE7E4", 8 * a);
            A(f, 160.00003051757812 * a, 166.49432373046875 * a, 28.30194339616981 * a);
            h(f, "#392C16", "#5E3E1A", 10 * a);
            return e;
        };

        function Kh(a) {
            var e = document.createElement("canvas"),
                f = e.getContext("2d");
            e.width = 321 * a;
            e.height = 345 * a;
            f.translate(0, 5 * a);
            A(f, 161.00003051757812 * a, 165.40341186523438 * a, 20.808652046684813 * a);
            h(f, "#C09D6F", "#A37943", 10 * a);
            f.beginPath();
            f.lineCap = "round";
            f.lineJoin = "round";
            f.moveTo(162.00003051757812 * a, 48.403411865234375 * a);
            f.bezierCurveTo(172.50003051757812 * a, 67.40341186523438 * a, 172.50003051757812 * a, 67.40341186523438 * a, 183.00003051757812 * a, 86.40341186523438 * a);
            f.bezierCurveTo(160.50003051757812 * a, 86.40341186523438 * a, 160.50003051757812 * a, 86.40341186523438 * a, 138.00003051757812 * a, 86.40341186523438 * a);
            f.closePath();
            h(f, "#C09D6F", "#A37943", 10 * a);
            f.save();
            f.translate(161.50003051757812 * a, 117.90341186523438 * a);
            B(f, -5.5 * a, -37.5 * a, 11 * a, 75 * a, 10 * a);
            f.restore();
            h(f, "#C09D6F", "#A37943", 10 * a);
            f.save();
            f.translate(162.00003051757812 * a, 78.90341186523438 * a);
            B(f, -10 * a, -5.5 * a, 20 * a, 11 * a, 1 * a);
            f.restore();
            h(f, "#C09D6F");
            A(f, 161.00003051757812 * a, 163.6761474609375 * a, 17.08800749063506 * a);
            h(f, "#C09D6F");
            return e;
        };

        function Ea(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            (0 == f) ? (d.width = 566 * a, d.height = 429 * a, c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(312.625 * a, 39.046875 * a), c.bezierCurveTo(456.625 * a, 60.046875 * a, 521.625 * a, 134.046875 * a, 528.625 * a, 199.046875 * a), c.bezierCurveTo(540.625 * a, 298.046875 * a, 491.625 * a, 364.046875 * a, 405.625 * a, 394.046875 * a), c.bezierCurveTo(270.625 * a, 429.046875 * a, 182.625 * a, 395.046875 * a, 100.625 * a, 344.046875 * a), c.bezierCurveTo(15.625 * a, 283.046875 * a, 20.625 * a, 195.046875 * a, 33.625 * a, 158.046875 * a), c.bezierCurveTo(56.625 * a, 80.046875 * a, 102.625 * a, 46.046875 * a, 183.625 * a, 33.046875 * a), c.bezierCurveTo(225.625 * a, 25.046875 * a, 270.625 * a, 30.046875 * a, 312.625 * a, 39.046875 * a), c.closePath(), h(c, e[0])) : ((1 == f) ? (d = document.createElement("canvas"), c = d.getContext("2d"), d.width = 511 * a, d.height = 408 * a, c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(141.625 * a, 49.296875 * a), c.bezierCurveTo(225.625 * a, 10.296875 * a, 320.625 * a, 16.296875 * a, 390.625 * a, 39.296875 * a), c.bezierCurveTo(476.625 * a, 71.296875 * a, 483.625 * a, 142.296875 * a, 486.625 * a, 197.296875 * a), c.bezierCurveTo(491.625 * a, 289.296875 * a, 462.625 * a, 317.296875 * a, 417.625 * a, 351.296875 * a), c.bezierCurveTo(367.625 * a, 385.296875 * a, 313.625 * a, 404.296875 * a, 218.625 * a, 395.296875 * a), c.bezierCurveTo(108.625 * a, 381.296875 * a, 81.625 * a, 350.296875 * a, 52.625 * a, 305.296875 * a), c.bezierCurveTo(16.625 * a, 244.296875 * a, 23.625 * a, 171.296875 * a, 37.625 * a, 145.296875 * a), c.bezierCurveTo(65.625 * a, 84.296875 * a, 97.625 * a, 74.296875 * a, 141.625 * a, 49.296875 * a), c.closePath(), h(c, e[0])) : ((2 == f) && (d = document.createElement("canvas"), c = d.getContext("2d"), d.width = 504 * a, d.height = 408 * a, c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(153.625 * a, 46.296875 * a), c.bezierCurveTo(271.625 * a, 17.296875 * a, 345.625 * a, 35.296875 * a, 410.625 * a, 71.296875 * a), c.bezierCurveTo(473.625 * a, 109.296875 * a, 478.625 * a, 167.296875 * a, 473.625 * a, 205.296875 * a), c.bezierCurveTo(462.625 * a, 295.296875 * a, 438.625 * a, 316.296875 * a, 388.625 * a, 345.296875 * a), c.bezierCurveTo(331.625 * a, 374.296875 * a, 273.625 * a, 392.296875 * a, 180.625 * a, 387.296875 * a), c.bezierCurveTo(111.625 * a, 380.296875 * a, 86.625 * a, 360.296875 * a, 51.625 * a, 309.296875 * a), c.bezierCurveTo(23.625 * a, 267.296875 * a, 25.625 * a, 226.296875 * a, 27.625 * a, 175.296875 * a), c.bezierCurveTo(37.625 * a, 99.296875 * a, 88.625 * a, 57.296875 * a, 153.625 * a, 46.296875 * a), c.closePath(), h(c, e[0]))));
            return d;
        };

        function Bd(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 450 * a;
            d.height = 260 * a;
            c.translate(10 * a, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(20 * a, 20 * a);
            B(c, 0, 0, 400 * a, 220 * a, 30 * a);
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-20 * a, -20 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(9 * a, 5 * a);
            c.bezierCurveTo(381 * a, 2 * a, 197 * a, 4.5 * a, 385 * a, 4 * a);
            c.bezierCurveTo(397 * a, 4 * a, 401 * a, 4 * a, 399 * a, 23 * a);
            c.bezierCurveTo(367 * a, 27 * a, 367 * a, 27 * a, 335 * a, 31 * a);
            c.bezierCurveTo(366.5 * a, 33.5 * a, 366.5 * a, 33.5 * a, 398 * a, 36 * a);
            c.bezierCurveTo(398 * a, 41.5 * a, 398 * a, 41.5 * a, 398 * a, 47 * a);
            c.bezierCurveTo(398 * a, 56 * a, 399 * a, 56 * a, 386 * a, 56 * a);
            c.bezierCurveTo(200.5 * a, 56.5 * a, 200.5 * a, 56.5 * a, 15 * a, 57 * a);
            c.bezierCurveTo(2 * a, 55 * a, 4 * a, 52 * a, 4 * a, 43 * a);
            c.bezierCurveTo(4 * a, 30.5 * a, 4 * a, 30.5 * a, 4 * a, 18 * a);
            c.bezierCurveTo(16 * a, 18.5 * a, 16 * a, 18.5 * a, 28 * a, 19 * a);
            c.bezierCurveTo(18.5 * a, 12 * a, 18.5 * a, 12 * a, 9 * a, 5 * a);
            c.closePath();
            h(c, f[2], f[1], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(5 * a, 70 * a);
            c.bezierCurveTo(5 * a, 58 * a, 5 * a, 55 * a, 17 * a, 57 * a);
            c.bezierCurveTo(203 * a, 57 * a, 203 * a, 57 * a, 389 * a, 57 * a);
            c.bezierCurveTo(400 * a, 57 * a, 400 * a, 59 * a, 400 * a, 69 * a);
            c.bezierCurveTo(400.5 * a, 83.5 * a, 400.5 * a, 83.5 * a, 401 * a, 98 * a);
            c.bezierCurveTo(402 * a, 108 * a, 401 * a, 108 * a, 388 * a, 108 * a);
            c.bezierCurveTo(201.5 * a, 108 * a, 201.5 * a, 108 * a, 15 * a, 108 * a);
            c.bezierCurveTo(1 * a, 106 * a, 5 * a, 106 * a, 5 * a, 87 * a);
            c.bezierCurveTo(33 * a, 84.5 * a, 33 * a, 84.5 * a, 61 * a, 82 * a);
            c.bezierCurveTo(33.5 * a, 76.5 * a, 33.5 * a, 76.5 * a, 6 * a, 71 * a);
            c.closePath();
            h(c, f[3], f[1], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(19 * a, 158 * a);
            c.bezierCurveTo(2 * a, 159 * a, 4 * a, 156 * a, 5 * a, 118 * a);
            c.bezierCurveTo(4 * a, 110 * a, 6 * a, 107 * a, 26 * a, 109 * a);
            c.bezierCurveTo(206.5 * a, 109 * a, 206.5 * a, 109 * a, 387 * a, 109 * a);
            c.bezierCurveTo(400 * a, 108 * a, 400 * a, 108 * a, 398 * a, 127 * a);
            c.bezierCurveTo(384.5 * a, 130 * a, 384.5 * a, 130 * a, 371 * a, 133 * a);
            c.bezierCurveTo(385.5 * a, 138 * a, 385.5 * a, 138 * a, 400 * a, 143 * a);
            c.bezierCurveTo(402 * a, 156 * a, 402 * a, 162 * a, 385 * a, 160 * a);
            c.closePath();
            h(c, f[2], f[1], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(4 * a, 183 * a);
            c.bezierCurveTo(1 * a, 163 * a, 4 * a, 158 * a, 28 * a, 161 * a);
            c.bezierCurveTo(207.5 * a, 161 * a, 207.5 * a, 161 * a, 387 * a, 161 * a);
            c.bezierCurveTo(401 * a, 159 * a, 400 * a, 164 * a, 400 * a, 177 * a);
            c.bezierCurveTo(364.5 * a, 184 * a, 364.5 * a, 184 * a, 329 * a, 191 * a);
            c.bezierCurveTo(364.5 * a, 192.5 * a, 364.5 * a, 192.5 * a, 400 * a, 194 * a);
            c.bezierCurveTo(403 * a, 209 * a, 401 * a, 214 * a, 385 * a, 213 * a);
            c.bezierCurveTo(201.5 * a, 213 * a, 201.5 * a, 213 * a, 18 * a, 213 * a);
            c.bezierCurveTo(3 * a, 213 * a, 2 * a, 213 * a, 4 * a, 198 * a);
            c.bezierCurveTo(12.5 * a, 193 * a, 12.5 * a, 193 * a, 21 * a, 188 * a);
            c.closePath();
            h(c, f[3], f[1], 12 * a);
            A(c, 41 * a, 30 * a, 14.7648230602334 * a);
            h(c, f[3], f[1], 12 * a);
            A(c, 369 * a, 30 * a, 15.556349186104045 * a);
            h(c, f[3], f[1], 12 * a);
            A(c, 364 * a, 190 * a, 15.620499351813308 * a);
            h(c, f[3], f[1], 12 * a);
            A(c, 41 * a, 186 * a, 15.556349186104045 * a);
            h(c, f[3], f[1], 12 * a);
            return d;
        };

        function Ee(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 450 * a;
            d.height = 260 * a;
            c.translate(10 * a, 10 * a);
            (1 == f) ? (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(9 * a, 5 * a), c.bezierCurveTo(381 * a, 2 * a, 197 * a, 4.5 * a, 385 * a, 4 * a), c.bezierCurveTo(397 * a, 4 * a, 401 * a, 4 * a, 399 * a, 23 * a), c.bezierCurveTo(367 * a, 27 * a, 367 * a, 27 * a, 335 * a, 31 * a), c.bezierCurveTo(366.5 * a, 33.5 * a, 366.5 * a, 33.5 * a, 398 * a, 36 * a), c.bezierCurveTo(398 * a, 41.5 * a, 398 * a, 41.5 * a, 398 * a, 47 * a), c.bezierCurveTo(398 * a, 56 * a, 399 * a, 56 * a, 386 * a, 56 * a), c.bezierCurveTo(200.5 * a, 56.5 * a, 200.5 * a, 56.5 * a, 15 * a, 57 * a), c.bezierCurveTo(2 * a, 55 * a, 4 * a, 52 * a, 4 * a, 43 * a), c.bezierCurveTo(4 * a, 30.5 * a, 4 * a, 30.5 * a, 4 * a, 18 * a), c.bezierCurveTo(16 * a, 18.5 * a, 16 * a, 18.5 * a, 28 * a, 19 * a), c.bezierCurveTo(18.5 * a, 12 * a, 18.5 * a, 12 * a, 9 * a, 5 * a), c.closePath(), h(c, e[3], e[3], 32 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(5 * a, 70 * a), c.bezierCurveTo(5 * a, 58 * a, 5 * a, 55 * a, 17 * a, 57 * a), c.bezierCurveTo(203 * a, 57 * a, 203 * a, 57 * a, 389 * a, 57 * a), c.bezierCurveTo(400 * a, 57 * a, 400 * a, 59 * a, 400 * a, 69 * a), c.bezierCurveTo(400.5 * a, 83.5 * a, 400.5 * a, 83.5 * a, 401 * a, 98 * a), c.bezierCurveTo(402 * a, 108 * a, 401 * a, 108 * a, 388 * a, 108 * a), c.bezierCurveTo(201.5 * a, 108 * a, 201.5 * a, 108 * a, 15 * a, 108 * a), c.bezierCurveTo(1 * a, 106 * a, 5 * a, 106 * a, 5 * a, 87 * a), c.bezierCurveTo(33 * a, 84.5 * a, 33 * a, 84.5 * a, 61 * a, 82 * a), c.bezierCurveTo(33.5 * a, 76.5 * a, 33.5 * a, 76.5 * a, 6 * a, 71 * a), c.closePath(), h(c, e[3], e[3], 32 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(19 * a, 158 * a), c.bezierCurveTo(2 * a, 159 * a, 4 * a, 156 * a, 5 * a, 118 * a), c.bezierCurveTo(4 * a, 110 * a, 6 * a, 107 * a, 26 * a, 109 * a), c.bezierCurveTo(206.5 * a, 109 * a, 206.5 * a, 109 * a, 387 * a, 109 * a), c.bezierCurveTo(400 * a, 108 * a, 400 * a, 108 * a, 398 * a, 127 * a), c.bezierCurveTo(384.5 * a, 130 * a, 384.5 * a, 130 * a, 371 * a, 133 * a), c.bezierCurveTo(385.5 * a, 138 * a, 385.5 * a, 138 * a, 400 * a, 143 * a), c.bezierCurveTo(402 * a, 156 * a, 402 * a, 162 * a, 385 * a, 160 * a), c.closePath(), h(c, e[3], e[3], 32 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(4 * a, 183 * a), c.bezierCurveTo(1 * a, 163 * a, 4 * a, 158 * a, 28 * a, 161 * a), c.bezierCurveTo(207.5 * a, 161 * a, 207.5 * a, 161 * a, 387 * a, 161 * a), c.bezierCurveTo(401 * a, 159 * a, 400 * a, 164 * a, 400 * a, 177 * a), c.bezierCurveTo(364.5 * a, 184 * a, 364.5 * a, 184 * a, 329 * a, 191 * a), c.bezierCurveTo(364.5 * a, 192.5 * a, 364.5 * a, 192.5 * a, 400 * a, 194 * a), c.bezierCurveTo(403 * a, 209 * a, 401 * a, 214 * a, 385 * a, 213 * a), c.bezierCurveTo(201.5 * a, 213 * a, 201.5 * a, 213 * a, 18 * a, 213 * a), c.bezierCurveTo(3 * a, 213 * a, 2 * a, 213 * a, 4 * a, 198 * a), c.bezierCurveTo(12.5 * a, 193 * a, 12.5 * a, 193 * a, 21 * a, 188 * a), c.closePath(), h(c, e[3], e[3], 32 * a), A(c, 41 * a, 30 * a, 14.7648230602334 * a), h(c, e[3], e[3], 32 * a), A(c, 369 * a, 30 * a, 15.556349186104045 * a), h(c, e[3], e[3], 32 * a), A(c, 364 * a, 190 * a, 15.620499351813308 * a), h(c, e[3], e[3], 32 * a), A(c, 41 * a, 186 * a, 15.556349186104045 * a), h(c, e[3], e[3], 32 * a)) : ((2 == f) && (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(9 * a, 5 * a), c.bezierCurveTo(381 * a, 2 * a, 197 * a, 4.5 * a, 385 * a, 4 * a), c.bezierCurveTo(397 * a, 4 * a, 401 * a, 4 * a, 399 * a, 23 * a), c.bezierCurveTo(367 * a, 27 * a, 367 * a, 27 * a, 335 * a, 31 * a), c.bezierCurveTo(366.5 * a, 33.5 * a, 366.5 * a, 33.5 * a, 398 * a, 36 * a), c.bezierCurveTo(398 * a, 41.5 * a, 398 * a, 41.5 * a, 398 * a, 47 * a), c.bezierCurveTo(398 * a, 56 * a, 399 * a, 56 * a, 386 * a, 56 * a), c.bezierCurveTo(200.5 * a, 56.5 * a, 200.5 * a, 56.5 * a, 15 * a, 57 * a), c.bezierCurveTo(2 * a, 55 * a, 4 * a, 52 * a, 4 * a, 43 * a), c.bezierCurveTo(4 * a, 30.5 * a, 4 * a, 30.5 * a, 4 * a, 18 * a), c.bezierCurveTo(16 * a, 18.5 * a, 16 * a, 18.5 * a, 28 * a, 19 * a), c.bezierCurveTo(18.5 * a, 12 * a, 18.5 * a, 12 * a, 9 * a, 5 * a), c.closePath(), h(c, e[3], e[3], 32 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(5 * a, 70 * a), c.bezierCurveTo(5 * a, 58 * a, 5 * a, 55 * a, 17 * a, 57 * a), c.bezierCurveTo(203 * a, 57 * a, 203 * a, 57 * a, 389 * a, 57 * a), c.bezierCurveTo(400 * a, 57 * a, 400 * a, 59 * a, 400 * a, 69 * a), c.bezierCurveTo(400.5 * a, 83.5 * a, 400.5 * a, 83.5 * a, 401 * a, 98 * a), c.bezierCurveTo(402 * a, 108 * a, 401 * a, 108 * a, 388 * a, 108 * a), c.bezierCurveTo(201.5 * a, 108 * a, 201.5 * a, 108 * a, 15 * a, 108 * a), c.bezierCurveTo(1 * a, 106 * a, 5 * a, 106 * a, 5 * a, 87 * a), c.bezierCurveTo(33 * a, 84.5 * a, 33 * a, 84.5 * a, 61 * a, 82 * a), c.bezierCurveTo(33.5 * a, 76.5 * a, 33.5 * a, 76.5 * a, 6 * a, 71 * a), c.closePath(), h(c, e[3], e[3], 32 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(19 * a, 158 * a), c.bezierCurveTo(2 * a, 159 * a, 4 * a, 156 * a, 5 * a, 118 * a), c.bezierCurveTo(4 * a, 110 * a, 6 * a, 107 * a, 26 * a, 109 * a), c.bezierCurveTo(206.5 * a, 109 * a, 206.5 * a, 109 * a, 387 * a, 109 * a), c.bezierCurveTo(400 * a, 108 * a, 400 * a, 108 * a, 398 * a, 127 * a), c.bezierCurveTo(384.5 * a, 130 * a, 384.5 * a, 130 * a, 371 * a, 133 * a), c.bezierCurveTo(385.5 * a, 138 * a, 385.5 * a, 138 * a, 400 * a, 143 * a), c.bezierCurveTo(402 * a, 156 * a, 402 * a, 162 * a, 385 * a, 160 * a), c.closePath(), h(c, e[3], e[3], 32 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(4 * a, 183 * a), c.bezierCurveTo(1 * a, 163 * a, 4 * a, 158 * a, 28 * a, 161 * a), c.bezierCurveTo(207.5 * a, 161 * a, 207.5 * a, 161 * a, 387 * a, 161 * a), c.bezierCurveTo(401 * a, 159 * a, 400 * a, 164 * a, 400 * a, 177 * a), c.bezierCurveTo(364.5 * a, 184 * a, 364.5 * a, 184 * a, 329 * a, 191 * a), c.bezierCurveTo(364.5 * a, 192.5 * a, 364.5 * a, 192.5 * a, 400 * a, 194 * a), c.bezierCurveTo(403 * a, 209 * a, 401 * a, 214 * a, 385 * a, 213 * a), c.bezierCurveTo(201.5 * a, 213 * a, 201.5 * a, 213 * a, 18 * a, 213 * a), c.bezierCurveTo(3 * a, 213 * a, 2 * a, 213 * a, 4 * a, 198 * a), c.bezierCurveTo(12.5 * a, 193 * a, 12.5 * a, 193 * a, 21 * a, 188 * a), c.closePath(), h(c, e[3], e[3], 32 * a), A(c, 41 * a, 30 * a, 14.7648230602334 * a), h(c, e[3], e[3], 32 * a), A(c, 369 * a, 30 * a, 15.556349186104045 * a), h(c, e[3], e[3], 32 * a), A(c, 364 * a, 190 * a, 15.620499351813308 * a), h(c, e[3], e[3], 32 * a), A(c, 41 * a, 186 * a, 15.556349186104045 * a), h(c, e[3], e[3], 32 * a)));
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(9 * a, 5 * a);
            c.bezierCurveTo(381 * a, 2 * a, 197 * a, 4.5 * a, 385 * a, 4 * a);
            c.bezierCurveTo(397 * a, 4 * a, 401 * a, 4 * a, 399 * a, 23 * a);
            c.bezierCurveTo(367 * a, 27 * a, 367 * a, 27 * a, 335 * a, 31 * a);
            c.bezierCurveTo(366.5 * a, 33.5 * a, 366.5 * a, 33.5 * a, 398 * a, 36 * a);
            c.bezierCurveTo(398 * a, 41.5 * a, 398 * a, 41.5 * a, 398 * a, 47 * a);
            c.bezierCurveTo(398 * a, 56 * a, 399 * a, 56 * a, 386 * a, 56 * a);
            c.bezierCurveTo(200.5 * a, 56.5 * a, 200.5 * a, 56.5 * a, 15 * a, 57 * a);
            c.bezierCurveTo(2 * a, 55 * a, 4 * a, 52 * a, 4 * a, 43 * a);
            c.bezierCurveTo(4 * a, 30.5 * a, 4 * a, 30.5 * a, 4 * a, 18 * a);
            c.bezierCurveTo(16 * a, 18.5 * a, 16 * a, 18.5 * a, 28 * a, 19 * a);
            c.bezierCurveTo(18.5 * a, 12 * a, 18.5 * a, 12 * a, 9 * a, 5 * a);
            c.closePath();
            h(c, e[1], e[0], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(5 * a, 70 * a);
            c.bezierCurveTo(5 * a, 58 * a, 5 * a, 55 * a, 17 * a, 57 * a);
            c.bezierCurveTo(203 * a, 57 * a, 203 * a, 57 * a, 389 * a, 57 * a);
            c.bezierCurveTo(400 * a, 57 * a, 400 * a, 59 * a, 400 * a, 69 * a);
            c.bezierCurveTo(400.5 * a, 83.5 * a, 400.5 * a, 83.5 * a, 401 * a, 98 * a);
            c.bezierCurveTo(402 * a, 108 * a, 401 * a, 108 * a, 388 * a, 108 * a);
            c.bezierCurveTo(201.5 * a, 108 * a, 201.5 * a, 108 * a, 15 * a, 108 * a);
            c.bezierCurveTo(1 * a, 106 * a, 5 * a, 106 * a, 5 * a, 87 * a);
            c.bezierCurveTo(33 * a, 84.5 * a, 33 * a, 84.5 * a, 61 * a, 82 * a);
            c.bezierCurveTo(33.5 * a, 76.5 * a, 33.5 * a, 76.5 * a, 6 * a, 71 * a);
            c.closePath();
            h(c, e[2], e[0], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(19 * a, 158 * a);
            c.bezierCurveTo(2 * a, 159 * a, 4 * a, 156 * a, 5 * a, 118 * a);
            c.bezierCurveTo(4 * a, 110 * a, 6 * a, 107 * a, 26 * a, 109 * a);
            c.bezierCurveTo(206.5 * a, 109 * a, 206.5 * a, 109 * a, 387 * a, 109 * a);
            c.bezierCurveTo(400 * a, 108 * a, 400 * a, 108 * a, 398 * a, 127 * a);
            c.bezierCurveTo(384.5 * a, 130 * a, 384.5 * a, 130 * a, 371 * a, 133 * a);
            c.bezierCurveTo(385.5 * a, 138 * a, 385.5 * a, 138 * a, 400 * a, 143 * a);
            c.bezierCurveTo(402 * a, 156 * a, 402 * a, 162 * a, 385 * a, 160 * a);
            c.closePath();
            h(c, e[1], e[0], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(4 * a, 183 * a);
            c.bezierCurveTo(1 * a, 163 * a, 4 * a, 158 * a, 28 * a, 161 * a);
            c.bezierCurveTo(207.5 * a, 161 * a, 207.5 * a, 161 * a, 387 * a, 161 * a);
            c.bezierCurveTo(401 * a, 159 * a, 400 * a, 164 * a, 400 * a, 177 * a);
            c.bezierCurveTo(364.5 * a, 184 * a, 364.5 * a, 184 * a, 329 * a, 191 * a);
            c.bezierCurveTo(364.5 * a, 192.5 * a, 364.5 * a, 192.5 * a, 400 * a, 194 * a);
            c.bezierCurveTo(403 * a, 209 * a, 401 * a, 214 * a, 385 * a, 213 * a);
            c.bezierCurveTo(201.5 * a, 213 * a, 201.5 * a, 213 * a, 18 * a, 213 * a);
            c.bezierCurveTo(3 * a, 213 * a, 2 * a, 213 * a, 4 * a, 198 * a);
            c.bezierCurveTo(12.5 * a, 193 * a, 12.5 * a, 193 * a, 21 * a, 188 * a);
            c.closePath();
            h(c, e[2], e[0], 12 * a);
            A(c, 41 * a, 30 * a, 14.7648230602334 * a);
            h(c, e[2], e[0], 12 * a);
            A(c, 369 * a, 30 * a, 15.556349186104045 * a);
            h(c, e[2], e[0], 12 * a);
            A(c, 364 * a, 190 * a, 15.620499351813308 * a);
            h(c, e[2], e[0], 12 * a);
            A(c, 41 * a, 186 * a, 15.556349186104045 * a);
            h(c, e[2], e[0], 12 * a);
            return d;
        };

        function Vb(a, e, f, d) {
            e = document.createElement("canvas");
            var c = e.getContext("2d");
            e.width = 450 * a;
            e.height = 260 * a;
            var g = Bd(1 * a, !0, f);
            c.drawImage(g, 0 * a, 0 * a);
            (1 == d) ? (c.translate(100 * a, 0 * a), A(c, 113 * a, 120 * a, 66 * a), h(c, void 0, f[4], 13 * a), g = Qf(0.65 * a, !0, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]), c.rotate(0.7), c.drawImage(g, 133 * a, -64 * a), c.rotate(-0.7), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(70 * a, 70 * a), c.bezierCurveTo(113 * a, 120.5 * a, 113 * a, 120.5 * a, 156 * a, 171 * a), c.closePath(), h(c, void 0, f[4], 13 * a)) : ((2 == d) ? (c.translate(100 * a, 0 * a), A(c, 113 * a, 120 * a, 66 * a), h(c, void 0, f[4], 13 * a), c.translate(30 * a, 40 * a), c.save(), c.translate(83.5 * a, 66.5 * a), B(c, -40.5 * a, -29.5 * a, 81 * a, 59 * a, 15 * a), c.restore(), h(c, "#dff2f7", "#187484", 7 * a), A(c, 22 * a, 82 * a, 12 * a), h(c, "#dff2f7", "#187484", 7 * a), A(c, 145 * a, 82 * a, 12 * a), h(c, "#dff2f7", "#187484", 7 * a), g = Za(0.5 * a, !0, ["#80500b", "#7c4908"]), c.drawImage(g, 10 * a, 85 * a), g = Za(0.5 * a, !0, ["#80500b", "#7c4908"]), c.drawImage(g, 50 * a, 85 * a), g = Za(0.5 * a, !0, ["#80500b", "#7c4908"]), c.drawImage(g, 90 * a, 85 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 90 * a, 105 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 90 * a, 105 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 30 * a, 125 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 50 * a, 115 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 30 * a, 100 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 80 * a, 120 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 110 * a, 125 * a), g = fb(1 * a, !0, ["#3d2a6e", "#8255b5"]), c.drawImage(g, 120 * a, 105 * a)) : ((3 == d) ? (c.translate(100 * a, 0 * a), A(c, 113 * a, 120 * a, 66 * a), h(c, void 0, f[4], 13 * a), c.translate(40 * a, 50 * a), c.save(), c.translate(71 * a, 69 * a), B(c, -30 * a, -42 * a, 60 * a, 84 * a, 10 * a), c.restore(), h(c, void 0, f[5], 4 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(42 * a, 28 * a), c.bezierCurveTo(60 * a, 31 * a, 60 * a, 31 * a, 78 * a, 34 * a), c.bezierCurveTo(82 * a, 34 * a, 84 * a, 37 * a, 83 * a, 45 * a), c.bezierCurveTo(83 * a, 80 * a, 83 * a, 80 * a, 83 * a, 115 * a), c.bezierCurveTo(83 * a, 120 * a, 80 * a, 122 * a, 73 * a, 120 * a), c.bezierCurveTo(42 * a, 111 * a, 43 * a, 109 * a, 41 * a, 102 * a), c.bezierCurveTo(41 * a, 71 * a, 41 * a, 71 * a, 41 * a, 40 * a), c.closePath(), h(c, f[5], f[5], 4 * a), c.translate(-40 * a, -50 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(70 * a, 70 * a), c.bezierCurveTo(113 * a, 120.5 * a, 113 * a, 120.5 * a, 156 * a, 171 * a), c.closePath(), h(c, void 0, f[4], 13 * a)) : ((4 == d) && (c.scale(1, 1), c.translate(70 * a, 50 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(23 * a, 6 * a), c.bezierCurveTo(25.5 * a, 56 * a, 25.5 * a, 56 * a, 28 * a, 106 * a), h(c, void 0, f[5], 14 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(59 * a, 10 * a), c.bezierCurveTo(61 * a, 51.5 * a, 61 * a, 51.5 * a, 63 * a, 93 * a), h(c, void 0, f[5], 14 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(7 * a, 55 * a), c.bezierCurveTo(33.5 * a, 55 * a, 33.5 * a, 55 * a, 60 * a, 55 * a), h(c, void 0, f[5], 14 * a), c.translate(10 * a, 0 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(123 * a, 16 * a), c.bezierCurveTo(103 * a, 16.5 * a, 103 * a, 16.5 * a, 83 * a, 17 * a), c.bezierCurveTo(83.5 * a, 61 * a, 83.5 * a, 61 * a, 84 * a, 105 * a), c.bezierCurveTo(106 * a, 105 * a, 106 * a, 105 * a, 128 * a, 105 * a), h(c, void 0, f[5], 14 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(72 * a, 63 * a), c.bezierCurveTo(88.5 * a, 62.5 * a, 88.5 * a, 62.5 * a, 105 * a, 62 * a), h(c, void 0, f[5], 14 * a), c.translate(10 * a, 10 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(141 * a, 8 * a), c.bezierCurveTo(143 * a, 50 * a, 143 * a, 50 * a, 145 * a, 92 * a), c.bezierCurveTo(169 * a, 88.5 * a, 169 * a, 88.5 * a, 193 * a, 85 * a), h(c, void 0, f[5], 14 * a), c.translate(10 * a, -10 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(205 * a, 124 * a), c.bezierCurveTo(205 * a, 69 * a, 205 * a, 69 * a, 205 * a, 14 * a), c.bezierCurveTo(239 * a, 15 * a, 250 * a, 37 * a, 249 * a, 49 * a), c.bezierCurveTo(251 * a, 65 * a, 242 * a, 76 * a, 206 * a, 75 * a), h(c, void 0, f[5], 14 * a)))));
            return e;
        };

        function Fe(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 345 * a;
            e.height = 250 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105 * a, 58 * a);
            d.bezierCurveTo(100.5 * a, 43 * a, 100.5 * a, 43 * a, 96 * a, 28 * a);
            d.bezierCurveTo(119.5 * a, 33.5 * a, 119.5 * a, 33.5 * a, 143 * a, 39 * a);
            d.bezierCurveTo(170 * a, 37 * a, 177 * a, 37 * a, 188 * a, 40 * a);
            d.bezierCurveTo(213 * a, 33.5 * a, 213 * a, 33.5 * a, 238 * a, 27 * a);
            d.bezierCurveTo(231 * a, 52 * a, 234 * a, 42.5 * a, 230 * a, 58 * a);
            d.closePath();
            h(d, f[1], f[2], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(108 * a, 51 * a);
            d.bezierCurveTo(91 * a, 55 * a, 85 * a, 44 * a, 86 * a, 29 * a);
            d.bezierCurveTo(62 * a, 50 * a, 78 * a, 69 * a, 92 * a, 75 * a);
            d.closePath();
            h(d, f[3], f[4], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(249 * a, 27 * a);
            d.bezierCurveTo(273 * a, 49 * a, 262 * a, 68 * a, 246 * a, 77 * a);
            d.bezierCurveTo(231 * a, 59 * a, 236 * a, 66.5 * a, 226 * a, 56 * a);
            d.bezierCurveTo(243 * a, 53 * a, 252 * a, 43 * a, 249 * a, 28 * a);
            d.closePath();
            h(d, f[3], f[4], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(87 * a, 78 * a);
            d.bezierCurveTo(87 * a, 59 * a, 98 * a, 46 * a, 127 * a, 48 * a);
            d.bezierCurveTo(176 * a, 48.5 * a, 176 * a, 48.5 * a, 225 * a, 49 * a);
            d.bezierCurveTo(243 * a, 49 * a, 253 * a, 59 * a, 253 * a, 76 * a);
            d.bezierCurveTo(211 * a, 85.5 * a, 211 * a, 85.5 * a, 169 * a, 95 * a);
            d.closePath();
            h(d, f[5], f[6], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(56 * a, 105 * a);
            d.bezierCurveTo(56 * a, 92 * a, 59 * a, 86 * a, 65 * a, 73 * a);
            d.bezierCurveTo(62.5 * a, 61.5 * a, 62.5 * a, 61.5 * a, 60 * a, 50 * a);
            d.bezierCurveTo(99.5 * a, 64.5 * a, 99.5 * a, 64.5 * a, 139 * a, 79 * a);
            d.bezierCurveTo(164 * a, 77 * a, 177 * a, 76 * a, 203 * a, 78 * a);
            d.bezierCurveTo(242 * a, 63.5 * a, 242 * a, 63.5 * a, 281 * a, 49 * a);
            d.bezierCurveTo(279 * a, 60.5 * a, 279 * a, 60.5 * a, 277 * a, 72 * a);
            d.bezierCurveTo(286 * a, 88 * a, 286 * a, 96 * a, 287 * a, 104 * a);
            d.bezierCurveTo(228.5 * a, 127 * a, 228.5 * a, 127 * a, 170 * a, 150 * a);
            d.closePath();
            h(d, f[1], f[2], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(48 * a, 130 * a);
            d.bezierCurveTo(61 * a, 155 * a, 63 * a, 165 * a, 56 * a, 171 * a);
            d.bezierCurveTo(48 * a, 177 * a, 40 * a, 171 * a, 38 * a, 178 * a);
            d.bezierCurveTo(33 * a, 180 * a, 37 * a, 188 * a, 47 * a, 208 * a);
            d.bezierCurveTo(52 * a, 221 * a, 55 * a, 222 * a, 75 * a, 229 * a);
            d.bezierCurveTo(91 * a, 213 * a, 98 * a, 212 * a, 112 * a, 219 * a);
            d.bezierCurveTo(167 * a, 225 * a, 187 * a, 224 * a, 222 * a, 220 * a);
            d.bezierCurveTo(244 * a, 214 * a, 247 * a, 213 * a, 263 * a, 229 * a);
            d.bezierCurveTo(295 * a, 220 * a, 291 * a, 215 * a, 301 * a, 194 * a);
            d.bezierCurveTo(308 * a, 178 * a, 309 * a, 176 * a, 302 * a, 173 * a);
            d.bezierCurveTo(290 * a, 177 * a, 289 * a, 177 * a, 283 * a, 169 * a);
            d.bezierCurveTo(279 * a, 163 * a, 279 * a, 161 * a, 290 * a, 130 * a);
            d.bezierCurveTo(270 * a, 127 * a, 270 * a, 127 * a, 250 * a, 124 * a);
            d.bezierCurveTo(209 * a, 137.5 * a, 209 * a, 137.5 * a, 168 * a, 151 * a);
            d.bezierCurveTo(121 * a, 135 * a, 121 * a, 135 * a, 74 * a, 119 * a);
            d.closePath();
            h(d, f[1], f[2], 8 * a);
            d.globalCompositeOperation = "destination-out";
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 158 * a);
            d.bezierCurveTo(152 * a, 193 * a, 158 * a, 205 * a, 140 * a, 203 * a);
            d.bezierCurveTo(99 * a, 195 * a, 96 * a, 189 * a, 86 * a, 173 * a);
            d.bezierCurveTo(80 * a, 159 * a, 88 * a, 145 * a, 104 * a, 141 * a);
            d.closePath();
            h(d, f[7], f[8], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(215 * a, 146 * a);
            d.bezierCurveTo(204 * a, 167 * a, 204 * a, 167 * a, 193 * a, 188 * a);
            d.bezierCurveTo(187 * a, 201 * a, 191 * a, 209 * a, 213 * a, 201 * a);
            d.bezierCurveTo(247 * a, 192 * a, 253 * a, 181 * a, 257 * a, 169 * a);
            d.bezierCurveTo(260 * a, 157 * a, 254 * a, 149 * a, 243 * a, 141 * a);
            d.closePath();
            h(d, f[7], f[8], 8 * a);
            d.globalCompositeOperation = "source-over";
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 158 * a);
            d.bezierCurveTo(152 * a, 193 * a, 158 * a, 205 * a, 140 * a, 203 * a);
            d.bezierCurveTo(99 * a, 195 * a, 96 * a, 189 * a, 86 * a, 173 * a);
            d.bezierCurveTo(80 * a, 159 * a, 88 * a, 145 * a, 104 * a, 141 * a);
            d.closePath();
            h(d, void 0, f[8], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(215 * a, 146 * a);
            d.bezierCurveTo(204 * a, 167 * a, 204 * a, 167 * a, 193 * a, 188 * a);
            d.bezierCurveTo(187 * a, 201 * a, 191 * a, 209 * a, 213 * a, 201 * a);
            d.bezierCurveTo(247 * a, 192 * a, 253 * a, 181 * a, 257 * a, 169 * a);
            d.bezierCurveTo(260 * a, 157 * a, 254 * a, 149 * a, 243 * a, 141 * a);
            d.closePath();
            h(d, void 0, f[8], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(39 * a, 66 * a);
            d.bezierCurveTo(57 * a, 107 * a, 63 * a, 96 * a, 120 * a, 106 * a);
            d.bezierCurveTo(154 * a, 112 * a, 163 * a, 116 * a, 174 * a, 135 * a);
            d.bezierCurveTo(180 * a, 109 * a, 191 * a, 113 * a, 237 * a, 103 * a);
            d.bezierCurveTo(276 * a, 100 * a, 289 * a, 94 * a, 301 * a, 67 * a);
            d.bezierCurveTo(317 * a, 112 * a, 301 * a, 141 * a, 274 * a, 139 * a);
            d.bezierCurveTo(204 * a, 166 * a, 197 * a, 169 * a, 173 * a, 183 * a);
            d.bezierCurveTo(170 * a, 183 * a, 170 * a, 183 * a, 167 * a, 183 * a);
            d.bezierCurveTo(132 * a, 160 * a, 112 * a, 156 * a, 73 * a, 141 * a);
            d.bezierCurveTo(43 * a, 146 * a, 27 * a, 120 * a, 39 * a, 66 * a);
            d.closePath();
            h(d, f[7], f[8], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 185 * a);
            d.bezierCurveTo(115 * a, 200 * a, 118 * a, 206 * a, 124 * a, 212 * a);
            d.bezierCurveTo(133 * a, 223 * a, 132 * a, 231 * a, 121 * a, 230 * a);
            d.bezierCurveTo(108 * a, 226 * a, 108 * a, 215 * a, 107 * a, 209 * a);
            d.bezierCurveTo(106 * a, 201 * a, 110 * a, 196 * a, 114 * a, 185 * a);
            d.closePath();
            h(d, f[3], f[4], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(226 * a, 186 * a);
            d.bezierCurveTo(234 * a, 201 * a, 238 * a, 209 * a, 228 * a, 225 * a);
            d.bezierCurveTo(223 * a, 233 * a, 213 * a, 233 * a, 211 * a, 226 * a);
            d.bezierCurveTo(206 * a, 219 * a, 217 * a, 216 * a, 221 * a, 207 * a);
            d.bezierCurveTo(225 * a, 196 * a, 225 * a, 191 * a, 226 * a, 186 * a);
            d.closePath();
            h(d, f[3], f[4], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(172 * a, 110 * a);
            d.bezierCurveTo(189 * a, 153 * a, 192 * a, 160 * a, 188 * a, 175 * a);
            d.bezierCurveTo(183 * a, 190 * a, 176 * a, 197 * a, 165 * a, 191 * a);
            d.bezierCurveTo(153 * a, 181 * a, 152 * a, 166 * a, 157 * a, 151 * a);
            d.bezierCurveTo(164.5 * a, 131 * a, 164.5 * a, 131 * a, 172 * a, 111 * a);
            d.closePath();
            h(d, f[3], f[4], 8 * a);
            return e;
        };

        function Yf(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 149 * a;
            f.height = 153 * a;
            d.globalAlpha = 0.5;
            A(d, 74.5 * a, 85 * a, 66 * a);
            h(d, e[0]);
            d.globalAlpha = 1;
            A(d, 75.5 * a, 72.5 * a, 67 * a);
            h(d, e[1], e[2], 4 * a);
            A(d, 75.5 * a, 73.5 * a, 54 * a);
            h(d, e[3]);
            d.globalAlpha = 0.5;
            A(d, 74.5 * a, 80.5 * a, 39 * a);
            h(d, e[4]);
            d.globalAlpha = 1;
            A(d, 74.5 * a, 74.5 * a, 37 * a);
            h(d, e[5]);
            return f;
        };

        function Zf(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 173 * a;
            f.height = 178 * a;
            d.globalAlpha = 0.5;
            A(d, 86.5 * a, 98 * a, 80 * a);
            h(d, e[0]);
            d.globalAlpha = 1;
            A(d, 86.5 * a, 89 * a, 81 * a);
            h(d, e[1], e[2], 4 * a);
            A(d, 86.5 * a, 86 * a, 59 * a);
            h(d, e[3], e[4], 4 * a);
            d.globalAlpha = 0.5;
            A(d, 86.5 * a, 95 * a, 34 * a);
            h(d, e[0]);
            d.globalAlpha = 1;
            A(d, 86.5 * a, 89 * a, 34 * a);
            h(d, e[5]);
            return f;
        };

        function $f(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 253 * a;
            f.height = 260 * a;
            d.globalAlpha = 0.5;
            A(d, 126.5 * a, 134 * a, 119 * a);
            h(d, e[0]);
            d.globalAlpha = 1;
            A(d, 126.5 * a, 124 * a, 119 * a);
            h(d, e[1], e[2], 4 * a);
            A(d, 126.5 * a, 127 * a, 100 * a);
            h(d, e[3]);
            d.globalAlpha = 0.5;
            A(d, 126.5 * a, 135 * a, 81 * a);
            h(d, e[0]);
            d.globalAlpha = 1;
            A(d, 126.5 * a, 125 * a, 84 * a);
            h(d, e[4], e[5], 4 * a);
            A(d, 126.5 * a, 125 * a, 61 * a);
            h(d, e[6], e[7], 4 * a);
            d.globalAlpha = 0.5;
            A(d, 126.5 * a, 134 * a, 40 * a);
            h(d, e[8]);
            d.globalAlpha = 1;
            A(d, 126.5 * a, 125 * a, 40 * a);
            h(d, e[9]);
            return f;
        };

        function Gb(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 139 * a;
            d.height = 135 * a;
            c.translate(0, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(32 * a, 77 * a);
            c.bezierCurveTo(6 * a, 41 * a, 6 * a, 33 * a, 12 * a, 27 * a);
            c.bezierCurveTo(27 * a, 6 * a, 28 * a, 6 * a, 37 * a, 6 * a);
            c.bezierCurveTo(62 * a, 3 * a, 64 * a, 5 * a, 67 * a, 13 * a);
            c.bezierCurveTo(80 * a, 36 * a, 73.5 * a, 25 * a, 80 * a, 37 * a);
            c.bezierCurveTo(73.5 * a, 54 * a, 65 * a, 74 * a, 67 * a, 71 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(65 * a, 37 * a);
            c.bezierCurveTo(105 * a, 40 * a, 113 * a, 39 * a, 117 * a, 48 * a);
            c.bezierCurveTo(126 * a, 70 * a, 128 * a, 72 * a, 124 * a, 80 * a);
            c.bezierCurveTo(112 * a, 101 * a, 110 * a, 104 * a, 99 * a, 104 * a);
            c.bezierCurveTo(59 * a, 100 * a, 55 * a, 99 * a, 56 * a, 99 * a);
            c.bezierCurveTo(47.5 * a, 79 * a, 45 * a, 66 * a, 39 * a, 59 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 63 * a);
            c.bezierCurveTo(5 * a, 99 * a, 5 * a, 101 * a, 8 * a, 103 * a);
            c.bezierCurveTo(19 * a, 123 * a, 22 * a, 125 * a, 28 * a, 126 * a);
            c.bezierCurveTo(57 * a, 127 * a, 55 * a, 127 * a, 58 * a, 120 * a);
            c.bezierCurveTo(82 * a, 86 * a, 83 * a, 78 * a, 82 * a, 87 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(0, -10 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(32 * a, 77 * a);
            c.bezierCurveTo(6 * a, 41 * a, 6 * a, 33 * a, 12 * a, 27 * a);
            c.bezierCurveTo(27 * a, 6 * a, 28 * a, 6 * a, 37 * a, 6 * a);
            c.bezierCurveTo(62 * a, 3 * a, 64 * a, 5 * a, 67 * a, 13 * a);
            c.bezierCurveTo(80 * a, 36 * a, 73.5 * a, 25 * a, 80 * a, 37 * a);
            c.bezierCurveTo(73.5 * a, 54 * a, 65 * a, 74 * a, 67 * a, 71 * a);
            c.closePath();
            h(c, f[1]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(65 * a, 37 * a);
            c.bezierCurveTo(105 * a, 40 * a, 113 * a, 39 * a, 117 * a, 48 * a);
            c.bezierCurveTo(126 * a, 70 * a, 128 * a, 72 * a, 124 * a, 80 * a);
            c.bezierCurveTo(112 * a, 101 * a, 110 * a, 104 * a, 99 * a, 104 * a);
            c.bezierCurveTo(59 * a, 100 * a, 55 * a, 99 * a, 56 * a, 99 * a);
            c.bezierCurveTo(47.5 * a, 79 * a, 45 * a, 66 * a, 39 * a, 59 * a);
            c.closePath();
            h(c, f[1]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 63 * a);
            c.bezierCurveTo(5 * a, 99 * a, 5 * a, 101 * a, 8 * a, 103 * a);
            c.bezierCurveTo(19 * a, 123 * a, 22 * a, 125 * a, 28 * a, 126 * a);
            c.bezierCurveTo(57 * a, 127 * a, 55 * a, 127 * a, 58 * a, 120 * a);
            c.bezierCurveTo(82 * a, 86 * a, 83 * a, 78 * a, 82 * a, 87 * a);
            c.closePath();
            h(c, f[1]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80 * a, 38 * a);
            c.bezierCurveTo(72.5 * a, 52 * a, 72.5 * a, 52 * a, 65 * a, 66 * a);
            c.bezierCurveTo(47.5 * a, 37 * a, 47.5 * a, 37 * a, 30 * a, 7 * a);
            c.bezierCurveTo(48 * a, 4 * a, 57 * a, 4 * a, 64 * a, 10 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(65 * a, 65 * a);
            c.bezierCurveTo(125 * a, 73 * a, 95.5 * a, 69 * a, 126 * a, 73 * a);
            c.bezierCurveTo(119 * a, 98 * a, 106 * a, 104 * a, 98 * a, 103 * a);
            c.bezierCurveTo(84.5 * a, 102 * a, 84.5 * a, 102 * a, 71 * a, 101 * a);
            c.bezierCurveTo(64 * a, 86 * a, 64 * a, 86 * a, 57 * a, 70 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(27 * a, 69 * a);
            c.bezierCurveTo(64 * a, 65 * a, 46 * a, 67 * a, 65 * a, 65 * a);
            c.bezierCurveTo(43.5 * a, 94 * a, 43.5 * a, 94 * a, 22 * a, 123 * a);
            c.bezierCurveTo(8 * a, 103 * a, 8 * a, 103 * a, 9 * a, 103 * a);
            c.bezierCurveTo(5 * a, 98 * a, 11 * a, 89 * a, 26 * a, 70 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(26 * a, 69 * a);
            c.bezierCurveTo(65 * a, 60 * a, 45 * a, 65 * a, 64 * a, 60 * a);
            c.bezierCurveTo(63 * a, 65 * a, 63 * a, 65 * a, 62 * a, 70 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80 * a, 38 * a);
            c.bezierCurveTo(68 * a, 70 * a, 75 * a, 53 * a, 70 * a, 68 * a);
            c.bezierCurveTo(65 * a, 67 * a, 65 * a, 67 * a, 60 * a, 65 * a);
            c.closePath();
            h(c, f[2]);
            return d;
        };

        function Cd(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 100 * a;
            f.height = 100 * a;
            d.globalAlpha = 0.5;
            d.fillStyle = e[0];
            d.fillRect(0, 0, f.width, f.height);
            return f;
        };

        function ag(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 120 * a;
            f.height = 300 * a;
            d.translate(-80 * a, -20);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(200.5 * a, 14.953125 * a);
            d.bezierCurveTo(203 * a, 171.953125 * a, 203 * a, 171.953125 * a, 205.5 * a, 328.953125 * a);
            d.bezierCurveTo(188.5 * a, 257.953125 * a, 164.5 * a, 216.953125 * a, 166.5 * a, 176.953125 * a);
            d.bezierCurveTo(168.5 * a, 133.953125 * a, 198.5 * a, 98.953125 * a, 200.5 * a, 14.953125 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function bg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 120 * a;
            f.height = 300 * a;
            d.translate(-200 * a, -40 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(344 * a, 18.40625 * a);
            d.bezierCurveTo(345 * a, 361.40625 * a, 344 * a, 191.40625 * a, 344 * a, 364.40625 * a);
            d.bezierCurveTo(261 * a, 275.40625 * a, 274 * a, 259.40625 * a, 229 * a, 213.40625 * a);
            d.bezierCurveTo(199 * a, 187.40625 * a, 222 * a, 133.40625 * a, 273 * a, 100.40625 * a);
            d.bezierCurveTo(321 * a, 71.40625 * a, 327 * a, 34.40625 * a, 344 * a, 18.40625 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(335 * a, 38.072906494140625 * a);
            d.bezierCurveTo(307 * a, 62.072906494140625 * a, 291 * a, 60.072906494140625 * a, 262 * a, 68.07290649414062 * a);
            d.bezierCurveTo(223 * a, 80.07290649414062 * a, 225 * a, 111.07290649414062 * a, 264 * a, 139.07290649414062 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function cg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 120 * a;
            f.height = 320 * a;
            d.translate(-60 * a, -15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(188.5 * a, 3.953125 * a);
            d.bezierCurveTo(188.5 * a, 171.453125 * a, 188.5 * a, 171.453125 * a, 188.5 * a, 338.953125 * a);
            d.bezierCurveTo(162.5 * a, 268.953125 * a, 145.5 * a, 265.953125 * a, 116.5 * a, 244.953125 * a);
            d.bezierCurveTo(67.5 * a, 204.953125 * a, 87.5 * a, 160.953125 * a, 113.5 * a, 125.953125 * a);
            d.bezierCurveTo(141.5 * a, 90.953125 * a, 176.5 * a, 56.953125 * a, 188.5 * a, 3.953125 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function dg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 120 * a;
            f.height = 330 * a;
            d.translate(-60 * a, -10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(188.5 * a, 7.953125 * a);
            d.bezierCurveTo(188.5 * a, 334.953125 * a, 188.5 * a, 332.953125 * a, 188.5 * a, 339.953125 * a);
            d.bezierCurveTo(166.5 * a, 295.953125 * a, 145.5 * a, 295.953125 * a, 139.5 * a, 282.953125 * a);
            d.bezierCurveTo(124.5 * a, 244.953125 * a, 139.5 * a, 243.953125 * a, 131.5 * a, 212.953125 * a);
            d.bezierCurveTo(118.5 * a, 161.953125 * a, 69.5 * a, 156.953125 * a, 74.5 * a, 92.953125 * a);
            d.bezierCurveTo(85.5 * a, 41.953125 * a, 158.5 * a, 49.953125 * a, 188.5 * a, 7.953125 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function eg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 48 * a;
            f.height = 47 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(7.1875 * a, 25.434661865234375 * a);
            d.bezierCurveTo(11.1875 * a, 13.434661865234375 * a, 18.1875 * a, 8.434661865234375 * a, 32.1875 * a, 10.434661865234375 * a);
            d.bezierCurveTo(45.1875 * a, 14.434661865234375 * a, 41.1875 * a, 24.434661865234375 * a, 36.1875 * a, 30.434661865234375 * a);
            d.bezierCurveTo(22.1875 * a, 42.434661865234375 * a, 2.1875 * a, 41.434661865234375 * a, 7.1875 * a, 25.434661865234375 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function fg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 120 * a;
            f.height = 280 * a;
            d.translate(-100 * a, -20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(228.5 * a, 331.953125 * a);
            d.bezierCurveTo(228.5 * a, 12.953125 * a, 228.5 * a, 171.453125 * a, 228.5 * a, 10.953125 * a);
            d.bezierCurveTo(196.5 * a, 76.953125 * a, 206.5 * a, 78.953125 * a, 191.5 * a, 114.953125 * a);
            d.bezierCurveTo(162.5 * a, 170.953125 * a, 206.5 * a, 220.953125 * a, 210.5 * a, 251.953125 * a);
            d.bezierCurveTo(218.5 * a, 287.953125 * a, 220.5 * a, 291.953125 * a, 228.5 * a, 331.953125 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function gg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 33 * a;
            f.height = 35 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(12.75 * a, 7.1328125 * a);
            d.bezierCurveTo(26.75 * a, 8.1328125 * a, 27.75 * a, 14.1328125 * a, 24.75 * a, 23.1328125 * a);
            d.bezierCurveTo(19.75 * a, 31.1328125 * a, 15.75 * a, 33.1328125 * a, 6.75 * a, 26.1328125 * a);
            d.bezierCurveTo(0.75 * a, 19.1328125 * a, 4.75 * a, 8.1328125 * a, 12.75 * a, 7.1328125 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function gb(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 20 * a;
            f.height = 35 * a;
            B(d, 0, 0, 20, 35, 7);
            h(d, e[0]);
            return f;
        };

        function hg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 161 * a;
            f.height = 190 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 8);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(9 * a, 93 * a);
            d.bezierCurveTo(17 * a, 95 * a, 19 * a, 95 * a, 21 * a, 95 * a);
            d.bezierCurveTo(9 * a, 83 * a, 17 * a, 93 * a, 4 * a, 76 * a);
            d.bezierCurveTo(11 * a, 75 * a, 11 * a, 75 * a, 18 * a, 75 * a);
            d.bezierCurveTo(13 * a, 67 * a, 13 * a, 67 * a, 7 * a, 59 * a);
            d.bezierCurveTo(14 * a, 59 * a, 14 * a, 59 * a, 21 * a, 59 * a);
            d.bezierCurveTo(46 * a, 35 * a, 35 * a, 45 * a, 49 * a, 31 * a);
            d.bezierCurveTo(53 * a, 24 * a, 51 * a, 21 * a, 51 * a, 16 * a);
            d.bezierCurveTo(63 * a, 23 * a, 63 * a, 24 * a, 69 * a, 29 * a);
            d.bezierCurveTo(76 * a, 7 * a, 75 * a, 11 * a, 76 * a, 6 * a);
            d.bezierCurveTo(81 * a, 12 * a, 84 * a, 18 * a, 89 * a, 27 * a);
            d.bezierCurveTo(95 * a, 25 * a, 100 * a, 16 * a, 105 * a, 14 * a);
            d.bezierCurveTo(103 * a, 25 * a, 111 * a, 33 * a, 110 * a, 34 * a);
            d.bezierCurveTo(123 * a, 48 * a, 123 * a, 48 * a, 136 * a, 62 * a);
            d.bezierCurveTo(142 * a, 60 * a, 147 * a, 59 * a, 155 * a, 58 * a);
            d.bezierCurveTo(147 * a, 65 * a, 147 * a, 65 * a, 139 * a, 73 * a);
            d.bezierCurveTo(145 * a, 73 * a, 145 * a, 73 * a, 151 * a, 73 * a);
            d.bezierCurveTo(145 * a, 80 * a, 145 * a, 80 * a, 138 * a, 87 * a);
            d.bezierCurveTo(144 * a, 88 * a, 144 * a, 88 * a, 150 * a, 89 * a);
            d.bezierCurveTo(125 * a, 103 * a, 125 * a, 125 * a, 113 * a, 141 * a);
            d.bezierCurveTo(92 * a, 178 * a, 85 * a, 177 * a, 76 * a, 178 * a);
            d.bezierCurveTo(64 * a, 179 * a, 51 * a, 164 * a, 35 * a, 131 * a);
            d.bezierCurveTo(18 * a, 95 * a, 13 * a, 99 * a, 8 * a, 93 * a);
            d.closePath();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.translate(0, -8);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(9 * a, 93 * a);
            d.bezierCurveTo(17 * a, 95 * a, 19 * a, 95 * a, 21 * a, 95 * a);
            d.bezierCurveTo(9 * a, 83 * a, 17 * a, 93 * a, 4 * a, 76 * a);
            d.bezierCurveTo(11 * a, 75 * a, 11 * a, 75 * a, 18 * a, 75 * a);
            d.bezierCurveTo(13 * a, 67 * a, 13 * a, 67 * a, 7 * a, 59 * a);
            d.bezierCurveTo(14 * a, 59 * a, 14 * a, 59 * a, 21 * a, 59 * a);
            d.bezierCurveTo(46 * a, 35 * a, 35 * a, 45 * a, 49 * a, 31 * a);
            d.bezierCurveTo(53 * a, 24 * a, 51 * a, 21 * a, 51 * a, 16 * a);
            d.bezierCurveTo(63 * a, 23 * a, 63 * a, 24 * a, 69 * a, 29 * a);
            d.bezierCurveTo(76 * a, 7 * a, 75 * a, 11 * a, 76 * a, 6 * a);
            d.bezierCurveTo(81 * a, 12 * a, 84 * a, 18 * a, 89 * a, 27 * a);
            d.bezierCurveTo(95 * a, 25 * a, 100 * a, 16 * a, 105 * a, 14 * a);
            d.bezierCurveTo(103 * a, 25 * a, 111 * a, 33 * a, 110 * a, 34 * a);
            d.bezierCurveTo(123 * a, 48 * a, 123 * a, 48 * a, 136 * a, 62 * a);
            d.bezierCurveTo(142 * a, 60 * a, 147 * a, 59 * a, 155 * a, 58 * a);
            d.bezierCurveTo(147 * a, 65 * a, 147 * a, 65 * a, 139 * a, 73 * a);
            d.bezierCurveTo(145 * a, 73 * a, 145 * a, 73 * a, 151 * a, 73 * a);
            d.bezierCurveTo(145 * a, 80 * a, 145 * a, 80 * a, 138 * a, 87 * a);
            d.bezierCurveTo(144 * a, 88 * a, 144 * a, 88 * a, 150 * a, 89 * a);
            d.bezierCurveTo(125 * a, 103 * a, 125 * a, 125 * a, 113 * a, 141 * a);
            d.bezierCurveTo(92 * a, 178 * a, 85 * a, 177 * a, 76 * a, 178 * a);
            d.bezierCurveTo(64 * a, 179 * a, 51 * a, 164 * a, 35 * a, 131 * a);
            d.bezierCurveTo(18 * a, 95 * a, 13 * a, 99 * a, 8 * a, 93 * a);
            d.closePath();
            h(d, e[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(28 * a, 63 * a);
            d.bezierCurveTo(23 * a, 54 * a, 24 * a, 47 * a, 26 * a, 37 * a);
            d.bezierCurveTo(28 * a, 29 * a, 31 * a, 31 * a, 41 * a, 35 * a);
            d.bezierCurveTo(52 * a, 45 * a, 55 * a, 51 * a, 57 * a, 53 * a);
            d.bezierCurveTo(50 * a, 50 * a, 44 * a, 47 * a, 43 * a, 48 * a);
            d.bezierCurveTo(43 * a, 52 * a, 43 * a, 52 * a, 42 * a, 57 * a);
            d.bezierCurveTo(38 * a, 54 * a, 38 * a, 54 * a, 33 * a, 51 * a);
            d.bezierCurveTo(34 * a, 56 * a, 34 * a, 56 * a, 34 * a, 61 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(99 * a, 55 * a);
            d.bezierCurveTo(107 * a, 43 * a, 113 * a, 39 * a, 121 * a, 34 * a);
            d.bezierCurveTo(130 * a, 29 * a, 130 * a, 34 * a, 130 * a, 42 * a);
            d.bezierCurveTo(131 * a, 57 * a, 128 * a, 61 * a, 129 * a, 63 * a);
            d.bezierCurveTo(124 * a, 62 * a, 124 * a, 62 * a, 119 * a, 61 * a);
            d.bezierCurveTo(119 * a, 56 * a, 120 * a, 61 * a, 118 * a, 52 * a);
            d.bezierCurveTo(115 * a, 55 * a, 111 * a, 59 * a, 111 * a, 58 * a);
            d.bezierCurveTo(110 * a, 54 * a, 109 * a, 57 * a, 109 * a, 51 * a);
            d.closePath();
            h(d, e[3]);
            A(d, 103 * a, 110 * a, 11 * a);
            h(d, e[4]);
            A(d, 55 * a, 111 * a, 11 * a);
            h(d, e[4]);
            A(d, 99 * a, 107 * a, 5 * a);
            h(d, e[1]);
            A(d, 51 * a, 108 * a, 5 * a);
            h(d, e[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(31 * a, 121 * a);
            d.bezierCurveTo(45 * a, 128 * a, 51 * a, 133 * a, 53 * a, 141 * a);
            d.bezierCurveTo(59 * a, 161 * a, 70 * a, 173 * a, 80 * a, 169 * a);
            d.bezierCurveTo(89 * a, 172 * a, 99 * a, 149 * a, 107 * a, 133 * a);
            d.bezierCurveTo(114 * a, 122 * a, 119 * a, 123 * a, 124 * a, 119 * a);
            d.bezierCurveTo(109 * a, 148 * a, 117 * a, 133 * a, 109 * a, 147 * a);
            d.bezierCurveTo(87 * a, 180 * a, 84 * a, 179 * a, 76 * a, 178 * a);
            d.bezierCurveTo(49 * a, 173 * a, 44 * a, 149 * a, 31 * a, 121 * a);
            d.closePath();
            h(d, e[5]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.translate(-2, 0);
            d.moveTo(71 * a, 162 * a);
            d.bezierCurveTo(80 * a, 155 * a, 85 * a, 159 * a, 89 * a, 164 * a);
            d.bezierCurveTo(90 * a, 171 * a, 86 * a, 173 * a, 79 * a, 173 * a);
            d.bezierCurveTo(67 * a, 172 * a, 67 * a, 168 * a, 71 * a, 162 * a);
            d.closePath();
            h(d, e[3]);
            d.translate(2, 0);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(9 * a, 93 * a);
            d.bezierCurveTo(17 * a, 95 * a, 19 * a, 95 * a, 21 * a, 95 * a);
            d.bezierCurveTo(9 * a, 83 * a, 17 * a, 93 * a, 4 * a, 76 * a);
            d.bezierCurveTo(11 * a, 75 * a, 11 * a, 75 * a, 18 * a, 75 * a);
            d.bezierCurveTo(13 * a, 67 * a, 13 * a, 67 * a, 7 * a, 59 * a);
            d.bezierCurveTo(14 * a, 59 * a, 14 * a, 59 * a, 21 * a, 59 * a);
            d.bezierCurveTo(46 * a, 35 * a, 35 * a, 45 * a, 49 * a, 31 * a);
            d.bezierCurveTo(53 * a, 24 * a, 51 * a, 21 * a, 51 * a, 16 * a);
            d.bezierCurveTo(63 * a, 23 * a, 63 * a, 24 * a, 69 * a, 29 * a);
            d.bezierCurveTo(76 * a, 7 * a, 75 * a, 11 * a, 76 * a, 6 * a);
            d.bezierCurveTo(81 * a, 12 * a, 84 * a, 18 * a, 89 * a, 27 * a);
            d.bezierCurveTo(95 * a, 25 * a, 100 * a, 16 * a, 105 * a, 14 * a);
            d.bezierCurveTo(103 * a, 25 * a, 111 * a, 33 * a, 110 * a, 34 * a);
            d.bezierCurveTo(123 * a, 48 * a, 123 * a, 48 * a, 136 * a, 62 * a);
            d.bezierCurveTo(142 * a, 60 * a, 147 * a, 59 * a, 155 * a, 58 * a);
            d.bezierCurveTo(147 * a, 65 * a, 147 * a, 65 * a, 139 * a, 73 * a);
            d.bezierCurveTo(145 * a, 73 * a, 145 * a, 73 * a, 151 * a, 73 * a);
            d.bezierCurveTo(145 * a, 80 * a, 145 * a, 80 * a, 138 * a, 87 * a);
            d.bezierCurveTo(144 * a, 88 * a, 144 * a, 88 * a, 150 * a, 89 * a);
            d.bezierCurveTo(125 * a, 103 * a, 125 * a, 125 * a, 113 * a, 141 * a);
            d.bezierCurveTo(92 * a, 178 * a, 85 * a, 177 * a, 76 * a, 178 * a);
            d.bezierCurveTo(64 * a, 179 * a, 51 * a, 164 * a, 35 * a, 131 * a);
            d.bezierCurveTo(18 * a, 95 * a, 13 * a, 99 * a, 8 * a, 93 * a);
            d.closePath();
            h(d, void 0, e[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(25 * a, 63 * a);
            d.bezierCurveTo(16 * a, 58 * a, 17 * a, 51 * a, 17 * a, 33 * a);
            d.bezierCurveTo(19 * a, 12 * a, 21 * a, 12 * a, 32 * a, 17 * a);
            d.bezierCurveTo(63 * a, 31 * a, 66 * a, 45 * a, 66 * a, 54 * a);
            h(d, e[1], e[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(91 * a, 53 * a);
            d.bezierCurveTo(91 * a, 40 * a, 98 * a, 33 * a, 121 * a, 20 * a);
            d.bezierCurveTo(137 * a, 12 * a, 137 * a, 16 * a, 139 * a, 27 * a);
            d.bezierCurveTo(141 * a, 49 * a, 140 * a, 57 * a, 134 * a, 64 * a);
            h(d, e[1], e[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(31 * a, 63 * a);
            d.bezierCurveTo(23 * a, 54 * a, 24 * a, 47 * a, 26 * a, 37 * a);
            d.bezierCurveTo(28 * a, 29 * a, 31 * a, 31 * a, 41 * a, 35 * a);
            d.bezierCurveTo(52 * a, 45 * a, 55 * a, 51 * a, 57 * a, 53 * a);
            d.bezierCurveTo(50 * a, 50 * a, 44 * a, 47 * a, 43 * a, 48 * a);
            d.bezierCurveTo(43 * a, 52 * a, 43 * a, 52 * a, 42 * a, 57 * a);
            d.bezierCurveTo(38 * a, 54 * a, 38 * a, 54 * a, 33 * a, 51 * a);
            d.bezierCurveTo(34 * a, 56 * a, 34 * a, 56 * a, 34 * a, 61 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(99 * a, 55 * a);
            d.bezierCurveTo(107 * a, 43 * a, 113 * a, 39 * a, 121 * a, 34 * a);
            d.bezierCurveTo(130 * a, 29 * a, 130 * a, 34 * a, 130 * a, 42 * a);
            d.bezierCurveTo(131 * a, 57 * a, 128 * a, 61 * a, 129 * a, 63 * a);
            d.bezierCurveTo(124 * a, 62 * a, 124 * a, 62 * a, 119 * a, 61 * a);
            d.bezierCurveTo(119 * a, 56 * a, 120 * a, 61 * a, 118 * a, 52 * a);
            d.bezierCurveTo(115 * a, 55 * a, 111 * a, 59 * a, 111 * a, 58 * a);
            d.bezierCurveTo(110 * a, 54 * a, 109 * a, 57 * a, 109 * a, 51 * a);
            d.closePath();
            h(d, e[3]);
            return f;
        };

        function Lh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 161 * a;
            f.height = 190 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(9 * a, 93 * a);
            d.bezierCurveTo(17 * a, 95 * a, 19 * a, 95 * a, 21 * a, 95 * a);
            d.bezierCurveTo(9 * a, 83 * a, 17 * a, 93 * a, 4 * a, 76 * a);
            d.bezierCurveTo(11 * a, 75 * a, 11 * a, 75 * a, 18 * a, 75 * a);
            d.bezierCurveTo(13 * a, 67 * a, 13 * a, 67 * a, 7 * a, 59 * a);
            d.bezierCurveTo(14 * a, 59 * a, 14 * a, 59 * a, 21 * a, 59 * a);
            d.bezierCurveTo(46 * a, 35 * a, 35 * a, 45 * a, 49 * a, 31 * a);
            d.bezierCurveTo(53 * a, 24 * a, 51 * a, 21 * a, 51 * a, 16 * a);
            d.bezierCurveTo(63 * a, 23 * a, 63 * a, 24 * a, 69 * a, 29 * a);
            d.bezierCurveTo(76 * a, 7 * a, 75 * a, 11 * a, 76 * a, 6 * a);
            d.bezierCurveTo(81 * a, 12 * a, 84 * a, 18 * a, 89 * a, 27 * a);
            d.bezierCurveTo(95 * a, 25 * a, 100 * a, 16 * a, 105 * a, 14 * a);
            d.bezierCurveTo(103 * a, 25 * a, 111 * a, 33 * a, 110 * a, 34 * a);
            d.bezierCurveTo(123 * a, 48 * a, 123 * a, 48 * a, 136 * a, 62 * a);
            d.bezierCurveTo(142 * a, 60 * a, 147 * a, 59 * a, 155 * a, 58 * a);
            d.bezierCurveTo(147 * a, 65 * a, 147 * a, 65 * a, 139 * a, 73 * a);
            d.bezierCurveTo(145 * a, 73 * a, 145 * a, 73 * a, 151 * a, 73 * a);
            d.bezierCurveTo(145 * a, 80 * a, 145 * a, 80 * a, 138 * a, 87 * a);
            d.bezierCurveTo(144 * a, 88 * a, 144 * a, 88 * a, 150 * a, 89 * a);
            d.bezierCurveTo(125 * a, 103 * a, 125 * a, 125 * a, 113 * a, 141 * a);
            d.bezierCurveTo(92 * a, 178 * a, 85 * a, 177 * a, 76 * a, 178 * a);
            d.bezierCurveTo(64 * a, 179 * a, 51 * a, 164 * a, 35 * a, 131 * a);
            d.bezierCurveTo(18 * a, 95 * a, 13 * a, 99 * a, 8 * a, 93 * a);
            d.closePath();
            h(d, e, e, 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(25 * a, 63 * a);
            d.bezierCurveTo(16 * a, 58 * a, 17 * a, 51 * a, 17 * a, 33 * a);
            d.bezierCurveTo(19 * a, 12 * a, 21 * a, 12 * a, 32 * a, 17 * a);
            d.bezierCurveTo(63 * a, 31 * a, 66 * a, 45 * a, 66 * a, 54 * a);
            h(d, e, e, 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(91 * a, 53 * a);
            d.bezierCurveTo(91 * a, 40 * a, 98 * a, 33 * a, 121 * a, 20 * a);
            d.bezierCurveTo(137 * a, 12 * a, 137 * a, 16 * a, 139 * a, 27 * a);
            d.bezierCurveTo(141 * a, 49 * a, 140 * a, 57 * a, 134 * a, 64 * a);
            h(d, e, e, 4 * a);
            return f;
        };

        function ig(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 147 * a;
            f.height = 172 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(8 * a, 50 * a);
            d.bezierCurveTo(15 * a, 16 * a, 49 * a, 6 * a, 67 * a, 6 * a);
            d.bezierCurveTo(121 * a, 3 * a, 128 * a, 32 * a, 135 * a, 48 * a);
            d.bezierCurveTo(146 * a, 96 * a, 124 * a, 131 * a, 96 * a, 135 * a);
            d.bezierCurveTo(96 * a, 158 * a, 79 * a, 156 * a, 75 * a, 156 * a);
            d.bezierCurveTo(50 * a, 154 * a, 53 * a, 150 * a, 52 * a, 135 * a);
            d.bezierCurveTo(2 * a, 127 * a, 3 * a, 87 * a, 8 * a, 50 * a);
            d.closePath();
            h(d, e[0]);
            d.translate(0, -8 * a);
            d.globalAlpha = 1;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(8 * a, 50 * a);
            d.bezierCurveTo(15 * a, 16 * a, 49 * a, 6 * a, 67 * a, 6 * a);
            d.bezierCurveTo(121 * a, 3 * a, 128 * a, 32 * a, 135 * a, 48 * a);
            d.bezierCurveTo(146 * a, 96 * a, 124 * a, 131 * a, 96 * a, 135 * a);
            d.bezierCurveTo(96 * a, 158 * a, 79 * a, 156 * a, 75 * a, 156 * a);
            d.bezierCurveTo(50 * a, 154 * a, 53 * a, 150 * a, 52 * a, 135 * a);
            d.bezierCurveTo(2 * a, 127 * a, 3 * a, 87 * a, 8 * a, 50 * a);
            d.closePath();
            h(d, e[1], e[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(14 * a, 57 * a);
            d.bezierCurveTo(2 * a, 50 * a, 5 * a, 22 * a, 24 * a, 22 * a);
            d.bezierCurveTo(41 * a, 21 * a, 54 * a, 32 * a, 55 * a, 48 * a);
            h(d, e[1], e[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(93 * a, 47 * a);
            d.bezierCurveTo(94 * a, 24 * a, 116 * a, 21 * a, 120 * a, 20 * a);
            d.bezierCurveTo(144 * a, 17 * a, 146 * a, 52 * a, 133 * a, 58 * a);
            h(d, e[1], e[2], 4 * a);
            A(d, 51 * a, 91 * a, 9 * a);
            h(d, e[3]);
            A(d, 95 * a, 91 * a, 9 * a);
            h(d, e[3]);
            A(d, 91 * a, 89 * a, 4 * a);
            h(d, e[4]);
            A(d, 47 * a, 89 * a, 4 * a);
            h(d, e[4]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(54 * a, 133 * a);
            d.bezierCurveTo(56 * a, 108 * a, 64 * a, 99 * a, 73 * a, 98 * a);
            d.bezierCurveTo(86 * a, 97 * a, 91 * a, 119 * a, 93 * a, 133 * a);
            d.bezierCurveTo(94 * a, 155 * a, 90 * a, 150 * a, 74 * a, 155 * a);
            d.bezierCurveTo(50 * a, 152 * a, 55 * a, 145 * a, 54 * a, 134 * a);
            d.closePath();
            h(d, e[5]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(65.25 * a, 135 * a);
            d.bezierCurveTo(75.25 * a, 128 * a, 83.25 * a, 133 * a, 83.25 * a, 138 * a);
            d.bezierCurveTo(88.25 * a, 148 * a, 61.25 * a, 149 * a, 64.25 * a, 137 * a);
            d.closePath();
            h(d, e[6]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(74 * a, 145 * a);
            d.bezierCurveTo(74 * a, 148 * a, 74 * a, 148 * a, 74 * a, 151 * a);
            d.closePath();
            h(d, void 0, e[6], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(19 * a, 58 * a);
            d.bezierCurveTo(10 * a, 38 * a, 18 * a, 33 * a, 28 * a, 34 * a);
            d.bezierCurveTo(41 * a, 39 * a, 45 * a, 45 * a, 50 * a, 51 * a);
            d.closePath();
            h(d, e[6]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(100 * a, 51 * a);
            d.bezierCurveTo(106 * a, 36 * a, 119 * a, 31 * a, 128 * a, 36 * a);
            d.bezierCurveTo(137 * a, 49 * a, 128 * a, 58 * a, 128 * a, 60 * a);
            d.closePath();
            h(d, e[6]);
            return f;
        };

        function Mh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 147 * a;
            f.height = 172 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(8 * a, 50 * a);
            d.bezierCurveTo(15 * a, 16 * a, 49 * a, 6 * a, 67 * a, 6 * a);
            d.bezierCurveTo(121 * a, 3 * a, 128 * a, 32 * a, 135 * a, 48 * a);
            d.bezierCurveTo(146 * a, 96 * a, 124 * a, 131 * a, 96 * a, 135 * a);
            d.bezierCurveTo(96 * a, 158 * a, 79 * a, 156 * a, 75 * a, 156 * a);
            d.bezierCurveTo(50 * a, 154 * a, 53 * a, 150 * a, 52 * a, 135 * a);
            d.bezierCurveTo(2 * a, 127 * a, 3 * a, 87 * a, 8 * a, 50 * a);
            d.closePath();
            h(d, e, e, 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(14 * a, 57 * a);
            d.bezierCurveTo(2 * a, 50 * a, 5 * a, 22 * a, 24 * a, 22 * a);
            d.bezierCurveTo(41 * a, 21 * a, 54 * a, 32 * a, 55 * a, 48 * a);
            h(d, e, e, 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(93 * a, 47 * a);
            d.bezierCurveTo(94 * a, 24 * a, 116 * a, 21 * a, 120 * a, 20 * a);
            d.bezierCurveTo(144 * a, 17 * a, 146 * a, 52 * a, 133 * a, 58 * a);
            h(d, e, e, 4 * a);
            return f;
        };

        function jg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 271 * a;
            f.height = 366 * a;
            d.globalAlpha = 0.5;
            d.translate(0, 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 99 * a);
            d.bezierCurveTo(186 * a, 123 * a, 199 * a, 152 * a, 209 * a, 169 * a);
            d.bezierCurveTo(228 * a, 205 * a, 224 * a, 245 * a, 190 * a, 276 * a);
            d.bezierCurveTo(161 * a, 296 * a, 99 * a, 292 * a, 79 * a, 274 * a);
            d.bezierCurveTo(49 * a, 253 * a, 47 * a, 214 * a, 50 * a, 197 * a);
            d.bezierCurveTo(61 * a, 143 * a, 102 * a, 113 * a, 131 * a, 99 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(73 * a, 270 * a);
            d.bezierCurveTo(79 * a, 280 * a, 77 * a, 280 * a, 78 * a, 287 * a);
            d.bezierCurveTo(78 * a, 290 * a, 83 * a, 291 * a, 82 * a, 299 * a);
            d.bezierCurveTo(81 * a, 301 * a, 87 * a, 301 * a, 92 * a, 314 * a);
            d.bezierCurveTo(94 * a, 319 * a, 100 * a, 321 * a, 107 * a, 320 * a);
            d.bezierCurveTo(111 * a, 323 * a, 114 * a, 324 * a, 119 * a, 320 * a);
            d.bezierCurveTo(137 * a, 321 * a, 146 * a, 323 * a, 139 * a, 320 * a);
            d.bezierCurveTo(141 * a, 324 * a, 150 * a, 324 * a, 153 * a, 320 * a);
            d.bezierCurveTo(168 * a, 319 * a, 171 * a, 316 * a, 173 * a, 307 * a);
            d.bezierCurveTo(180 * a, 305 * a, 180 * a, 301 * a, 178 * a, 296 * a);
            d.bezierCurveTo(183 * a, 296 * a, 185 * a, 289 * a, 188 * a, 279 * a);
            d.bezierCurveTo(171 * a, 286 * a, 149 * a, 290 * a, 132 * a, 289 * a);
            d.bezierCurveTo(101 * a, 290 * a, 86 * a, 280 * a, 74 * a, 271 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(76 * a, 252 * a);
            d.bezierCurveTo(85 * a, 294 * a, 96 * a, 314 * a, 103 * a, 314 * a);
            d.bezierCurveTo(106 * a, 316 * a, 151 * a, 314 * a, 156 * a, 314 * a);
            d.bezierCurveTo(169 * a, 317 * a, 182 * a, 285 * a, 191 * a, 256 * a);
            d.bezierCurveTo(134.5 * a, 254 * a, 134.5 * a, 254 * a, 78 * a, 252 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(84 * a, 257 * a);
            d.bezierCurveTo(122 * a, 273 * a, 146 * a, 268 * a, 179 * a, 261 * a);
            d.bezierCurveTo(190 * a, 258 * a, 187 * a, 266 * a, 178 * a, 272 * a);
            d.bezierCurveTo(160 * a, 284 * a, 123 * a, 282 * a, 100 * a, 277 * a);
            d.bezierCurveTo(73 * a, 260 * a, 79 * a, 257 * a, 84 * a, 257 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(125 * a, 65 * a);
            d.bezierCurveTo(133 * a, 45 * a, 136 * a, 42 * a, 141 * a, 55 * a);
            d.bezierCurveTo(151 * a, 96 * a, 164 * a, 117 * a, 175 * a, 134 * a);
            d.bezierCurveTo(203 * a, 181 * a, 207 * a, 182 * a, 208 * a, 215 * a);
            d.bezierCurveTo(206 * a, 240 * a, 205 * a, 246 * a, 184 * a, 258 * a);
            d.bezierCurveTo(161 * a, 267 * a, 131 * a, 272 * a, 86 * a, 258 * a);
            d.bezierCurveTo(67 * a, 252 * a, 68 * a, 239 * a, 64 * a, 216 * a);
            d.bezierCurveTo(62 * a, 194 * a, 72 * a, 169 * a, 92 * a, 142 * a);
            d.bezierCurveTo(106 * a, 121 * a, 114 * a, 101 * a, 125 * a, 65 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 37 * a);
            d.bezierCurveTo(116 * a, 28 * a, 119 * a, 27 * a, 126 * a, 37 * a);
            d.bezierCurveTo(134 * a, 48 * a, 134 * a, 49 * a, 132 * a, 59 * a);
            d.bezierCurveTo(131 * a, 67 * a, 127 * a, 65 * a, 120 * a, 56 * a);
            d.bezierCurveTo(114 * a, 49 * a, 113 * a, 43 * a, 115 * a, 38 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(146 * a, 34 * a);
            d.bezierCurveTo(152 * a, 28 * a, 155 * a, 27 * a, 157 * a, 39 * a);
            d.bezierCurveTo(157 * a, 45 * a, 157 * a, 49 * a, 150 * a, 56 * a);
            d.bezierCurveTo(141 * a, 66 * a, 138 * a, 66 * a, 138 * a, 57 * a);
            d.bezierCurveTo(137 * a, 50 * a, 137 * a, 47 * a, 141 * a, 42 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(143 * a, 69 * a);
            d.bezierCurveTo(148 * a, 56 * a, 156 * a, 50 * a, 158 * a, 58 * a);
            d.bezierCurveTo(159 * a, 64 * a, 160 * a, 67 * a, 153 * a, 77 * a);
            d.bezierCurveTo(148 * a, 83 * a, 145 * a, 84 * a, 143 * a, 77 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(149 * a, 92 * a);
            d.bezierCurveTo(149 * a, 89 * a, 151 * a, 84 * a, 156 * a, 79 * a);
            d.bezierCurveTo(161 * a, 73 * a, 163 * a, 78 * a, 162 * a, 86 * a);
            d.bezierCurveTo(161 * a, 91 * a, 155 * a, 99 * a, 152 * a, 98 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(111 * a, 61 * a);
            d.bezierCurveTo(114 * a, 51 * a, 117 * a, 51 * a, 124 * a, 64 * a);
            d.bezierCurveTo(128 * a, 68 * a, 128 * a, 76 * a, 126 * a, 79 * a);
            d.bezierCurveTo(123 * a, 84 * a, 122 * a, 82 * a, 115 * a, 74 * a);
            d.bezierCurveTo(112 * a, 67 * a, 115 * a, 74 * a, 115 * a, 74 * a);
            d.bezierCurveTo(111 * a, 68 * a, 111 * a, 66 * a, 111 * a, 62 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107 * a, 81 * a);
            d.bezierCurveTo(108 * a, 74 * a, 112 * a, 73 * a, 118 * a, 84 * a);
            d.bezierCurveTo(122 * a, 88 * a, 122 * a, 93 * a, 121 * a, 98 * a);
            d.bezierCurveTo(114 * a, 98 * a, 113 * a, 98 * a, 109 * a, 90 * a);
            d.bezierCurveTo(107 * a, 87 * a, 106 * a, 85 * a, 107 * a, 82 * a);
            d.closePath();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.translate(0, -10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 99 * a);
            d.bezierCurveTo(186 * a, 123 * a, 199 * a, 152 * a, 209 * a, 169 * a);
            d.bezierCurveTo(228 * a, 205 * a, 224 * a, 245 * a, 190 * a, 276 * a);
            d.bezierCurveTo(161 * a, 296 * a, 99 * a, 292 * a, 79 * a, 274 * a);
            d.bezierCurveTo(49 * a, 253 * a, 47 * a, 214 * a, 50 * a, 197 * a);
            d.bezierCurveTo(61 * a, 143 * a, 102 * a, 113 * a, 131 * a, 99 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(73 * a, 270 * a);
            d.bezierCurveTo(79 * a, 280 * a, 77 * a, 280 * a, 78 * a, 287 * a);
            d.bezierCurveTo(78 * a, 290 * a, 83 * a, 291 * a, 82 * a, 299 * a);
            d.bezierCurveTo(81 * a, 301 * a, 87 * a, 301 * a, 92 * a, 314 * a);
            d.bezierCurveTo(94 * a, 319 * a, 100 * a, 321 * a, 107 * a, 320 * a);
            d.bezierCurveTo(111 * a, 323 * a, 114 * a, 324 * a, 119 * a, 320 * a);
            d.bezierCurveTo(137 * a, 321 * a, 146 * a, 323 * a, 139 * a, 320 * a);
            d.bezierCurveTo(141 * a, 324 * a, 150 * a, 324 * a, 153 * a, 320 * a);
            d.bezierCurveTo(168 * a, 319 * a, 171 * a, 316 * a, 173 * a, 307 * a);
            d.bezierCurveTo(180 * a, 305 * a, 180 * a, 301 * a, 178 * a, 296 * a);
            d.bezierCurveTo(183 * a, 296 * a, 185 * a, 289 * a, 188 * a, 279 * a);
            d.bezierCurveTo(171 * a, 286 * a, 149 * a, 290 * a, 132 * a, 289 * a);
            d.bezierCurveTo(101 * a, 290 * a, 86 * a, 280 * a, 74 * a, 271 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(76 * a, 252 * a);
            d.bezierCurveTo(85 * a, 294 * a, 96 * a, 314 * a, 103 * a, 314 * a);
            d.bezierCurveTo(106 * a, 316 * a, 151 * a, 314 * a, 156 * a, 314 * a);
            d.bezierCurveTo(169 * a, 317 * a, 182 * a, 285 * a, 191 * a, 256 * a);
            d.bezierCurveTo(134.5 * a, 254 * a, 134.5 * a, 254 * a, 78 * a, 252 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(84 * a, 257 * a);
            d.bezierCurveTo(122 * a, 273 * a, 146 * a, 268 * a, 179 * a, 261 * a);
            d.bezierCurveTo(190 * a, 258 * a, 187 * a, 266 * a, 178 * a, 272 * a);
            d.bezierCurveTo(160 * a, 284 * a, 123 * a, 282 * a, 100 * a, 277 * a);
            d.bezierCurveTo(73 * a, 260 * a, 79 * a, 257 * a, 84 * a, 257 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(125 * a, 65 * a);
            d.bezierCurveTo(133 * a, 45 * a, 136 * a, 42 * a, 141 * a, 55 * a);
            d.bezierCurveTo(151 * a, 96 * a, 164 * a, 117 * a, 175 * a, 134 * a);
            d.bezierCurveTo(203 * a, 181 * a, 207 * a, 182 * a, 208 * a, 215 * a);
            d.bezierCurveTo(206 * a, 240 * a, 205 * a, 246 * a, 184 * a, 258 * a);
            d.bezierCurveTo(161 * a, 267 * a, 131 * a, 272 * a, 86 * a, 258 * a);
            d.bezierCurveTo(67 * a, 252 * a, 68 * a, 239 * a, 64 * a, 216 * a);
            d.bezierCurveTo(62 * a, 194 * a, 72 * a, 169 * a, 92 * a, 142 * a);
            d.bezierCurveTo(106 * a, 121 * a, 114 * a, 101 * a, 125 * a, 65 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 37 * a);
            d.bezierCurveTo(116 * a, 28 * a, 119 * a, 27 * a, 126 * a, 37 * a);
            d.bezierCurveTo(134 * a, 48 * a, 134 * a, 49 * a, 132 * a, 59 * a);
            d.bezierCurveTo(131 * a, 67 * a, 127 * a, 65 * a, 120 * a, 56 * a);
            d.bezierCurveTo(114 * a, 49 * a, 113 * a, 43 * a, 115 * a, 38 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(146 * a, 34 * a);
            d.bezierCurveTo(152 * a, 28 * a, 155 * a, 27 * a, 157 * a, 39 * a);
            d.bezierCurveTo(157 * a, 45 * a, 157 * a, 49 * a, 150 * a, 56 * a);
            d.bezierCurveTo(141 * a, 66 * a, 138 * a, 66 * a, 138 * a, 57 * a);
            d.bezierCurveTo(137 * a, 50 * a, 137 * a, 47 * a, 141 * a, 42 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(143 * a, 69 * a);
            d.bezierCurveTo(148 * a, 56 * a, 156 * a, 50 * a, 158 * a, 58 * a);
            d.bezierCurveTo(159 * a, 64 * a, 160 * a, 67 * a, 153 * a, 77 * a);
            d.bezierCurveTo(148 * a, 83 * a, 145 * a, 84 * a, 143 * a, 77 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(149 * a, 92 * a);
            d.bezierCurveTo(149 * a, 89 * a, 151 * a, 84 * a, 156 * a, 79 * a);
            d.bezierCurveTo(161 * a, 73 * a, 163 * a, 78 * a, 162 * a, 86 * a);
            d.bezierCurveTo(161 * a, 91 * a, 155 * a, 99 * a, 152 * a, 98 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(111 * a, 61 * a);
            d.bezierCurveTo(114 * a, 51 * a, 117 * a, 51 * a, 124 * a, 64 * a);
            d.bezierCurveTo(128 * a, 68 * a, 128 * a, 76 * a, 126 * a, 79 * a);
            d.bezierCurveTo(123 * a, 84 * a, 122 * a, 82 * a, 115 * a, 74 * a);
            d.bezierCurveTo(112 * a, 67 * a, 115 * a, 74 * a, 115 * a, 74 * a);
            d.bezierCurveTo(111 * a, 68 * a, 111 * a, 66 * a, 111 * a, 62 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107 * a, 81 * a);
            d.bezierCurveTo(108 * a, 74 * a, 112 * a, 73 * a, 118 * a, 84 * a);
            d.bezierCurveTo(122 * a, 88 * a, 122 * a, 93 * a, 121 * a, 98 * a);
            d.bezierCurveTo(114 * a, 98 * a, 113 * a, 98 * a, 109 * a, 90 * a);
            d.bezierCurveTo(107 * a, 87 * a, 106 * a, 85 * a, 107 * a, 82 * a);
            d.closePath();
            h(d, e[3], e[3], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 99 * a);
            d.bezierCurveTo(186 * a, 123 * a, 199 * a, 152 * a, 209 * a, 169 * a);
            d.bezierCurveTo(228 * a, 205 * a, 224 * a, 245 * a, 190 * a, 276 * a);
            d.bezierCurveTo(161 * a, 296 * a, 99 * a, 292 * a, 79 * a, 274 * a);
            d.bezierCurveTo(49 * a, 253 * a, 47 * a, 214 * a, 50 * a, 197 * a);
            d.bezierCurveTo(61 * a, 143 * a, 102 * a, 113 * a, 131 * a, 99 * a);
            d.closePath();
            h(d, e[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(73 * a, 270 * a);
            d.bezierCurveTo(79 * a, 280 * a, 77 * a, 280 * a, 78 * a, 287 * a);
            d.bezierCurveTo(78 * a, 290 * a, 83 * a, 291 * a, 82 * a, 299 * a);
            d.bezierCurveTo(81 * a, 301 * a, 87 * a, 301 * a, 92 * a, 314 * a);
            d.bezierCurveTo(94 * a, 319 * a, 100 * a, 321 * a, 107 * a, 320 * a);
            d.bezierCurveTo(111 * a, 323 * a, 114 * a, 324 * a, 119 * a, 320 * a);
            d.bezierCurveTo(137 * a, 321 * a, 146 * a, 323 * a, 139 * a, 320 * a);
            d.bezierCurveTo(141 * a, 324 * a, 150 * a, 324 * a, 153 * a, 320 * a);
            d.bezierCurveTo(168 * a, 319 * a, 171 * a, 316 * a, 173 * a, 307 * a);
            d.bezierCurveTo(180 * a, 305 * a, 180 * a, 301 * a, 178 * a, 296 * a);
            d.bezierCurveTo(183 * a, 296 * a, 185 * a, 289 * a, 188 * a, 279 * a);
            d.bezierCurveTo(171 * a, 286 * a, 149 * a, 290 * a, 132 * a, 289 * a);
            d.bezierCurveTo(101 * a, 290 * a, 86 * a, 280 * a, 74 * a, 271 * a);
            d.closePath();
            h(d, e[5]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(76 * a, 252 * a);
            d.bezierCurveTo(85 * a, 294 * a, 96 * a, 314 * a, 103 * a, 314 * a);
            d.bezierCurveTo(106 * a, 316 * a, 151 * a, 314 * a, 156 * a, 314 * a);
            d.bezierCurveTo(169 * a, 317 * a, 182 * a, 285 * a, 191 * a, 256 * a);
            d.bezierCurveTo(134.5 * a, 254 * a, 134.5 * a, 254 * a, 78 * a, 252 * a);
            d.closePath();
            h(d, e[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(84 * a, 257 * a);
            d.bezierCurveTo(122 * a, 273 * a, 146 * a, 268 * a, 179 * a, 261 * a);
            d.bezierCurveTo(190 * a, 258 * a, 187 * a, 266 * a, 178 * a, 272 * a);
            d.bezierCurveTo(160 * a, 284 * a, 123 * a, 282 * a, 100 * a, 277 * a);
            d.bezierCurveTo(73 * a, 260 * a, 79 * a, 257 * a, 84 * a, 257 * a);
            d.closePath();
            h(d, e[1]);
            A(d, 102 * a, 269 * a, 11 * a);
            h(d, e[3]);
            A(d, 98 * a, 266 * a, 5 * a);
            h(d, e[6]);
            A(d, 168 * a, 269 * a, 11 * a);
            h(d, e[3]);
            A(d, 164 * a, 266 * a, 5 * a);
            h(d, e[6]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(125 * a, 65 * a);
            d.bezierCurveTo(133 * a, 45 * a, 136 * a, 42 * a, 141 * a, 55 * a);
            d.bezierCurveTo(151 * a, 96 * a, 164 * a, 117 * a, 175 * a, 134 * a);
            d.bezierCurveTo(203 * a, 181 * a, 207 * a, 182 * a, 208 * a, 215 * a);
            d.bezierCurveTo(206 * a, 240 * a, 205 * a, 246 * a, 184 * a, 258 * a);
            d.bezierCurveTo(161 * a, 267 * a, 131 * a, 272 * a, 86 * a, 258 * a);
            d.bezierCurveTo(67 * a, 252 * a, 68 * a, 239 * a, 64 * a, 216 * a);
            d.bezierCurveTo(62 * a, 194 * a, 72 * a, 169 * a, 92 * a, 142 * a);
            d.bezierCurveTo(106 * a, 121 * a, 114 * a, 101 * a, 125 * a, 65 * a);
            d.closePath();
            h(d, e[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 235 * a);
            d.bezierCurveTo(118 * a, 258 * a, 137 * a, 268 * a, 148 * a, 246 * a);
            d.bezierCurveTo(156 * a, 228 * a, 152 * a, 169 * a, 150 * a, 140 * a);
            d.bezierCurveTo(147 * a, 87 * a, 143 * a, 69 * a, 142 * a, 60 * a);
            d.bezierCurveTo(136 * a, 44 * a, 132 * a, 43 * a, 127 * a, 62 * a);
            d.bezierCurveTo(119 * a, 116 * a, 119 * a, 140 * a, 116 * a, 166 * a);
            d.bezierCurveTo(113 * a, 202 * a, 113 * a, 223 * a, 115 * a, 233 * a);
            d.closePath();
            h(d, e[4]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(132 * a, 219 * a);
            d.bezierCurveTo(140 * a, 229 * a, 142 * a, 231 * a, 145 * a, 237 * a);
            d.bezierCurveTo(145 * a, 245 * a, 139 * a, 249 * a, 133 * a, 249 * a);
            d.bezierCurveTo(123 * a, 248 * a, 123 * a, 243 * a, 121 * a, 239 * a);
            d.bezierCurveTo(126 * a, 227 * a, 129 * a, 223 * a, 132 * a, 219 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 179 * a);
            d.bezierCurveTo(140 * a, 188.5 * a, 140 * a, 188.5 * a, 147 * a, 198 * a);
            d.bezierCurveTo(148 * a, 209 * a, 142 * a, 214 * a, 133 * a, 214 * a);
            d.bezierCurveTo(121 * a, 211 * a, 121 * a, 207 * a, 120 * a, 200 * a);
            d.bezierCurveTo(126.5 * a, 189.5 * a, 126.5 * a, 189.5 * a, 133 * a, 179 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 143 * a);
            d.bezierCurveTo(139 * a, 151.5 * a, 139 * a, 151.5 * a, 145 * a, 160 * a);
            d.bezierCurveTo(143 * a, 167 * a, 140 * a, 170 * a, 134 * a, 170 * a);
            d.bezierCurveTo(128 * a, 169 * a, 124 * a, 167 * a, 123 * a, 161 * a);
            d.bezierCurveTo(128 * a, 152 * a, 128 * a, 152 * a, 133 * a, 143 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 115 * a);
            d.bezierCurveTo(137.5 * a, 121.5 * a, 137.5 * a, 121.5 * a, 142 * a, 128 * a);
            d.bezierCurveTo(141 * a, 133 * a, 138 * a, 135 * a, 133 * a, 135 * a);
            d.bezierCurveTo(129 * a, 135 * a, 125 * a, 132 * a, 125 * a, 129 * a);
            d.bezierCurveTo(129 * a, 122 * a, 129 * a, 122 * a, 133 * a, 115 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 94 * a);
            d.bezierCurveTo(136.5 * a, 98.5 * a, 136.5 * a, 98.5 * a, 140 * a, 103 * a);
            d.bezierCurveTo(139 * a, 109 * a, 137 * a, 109 * a, 133 * a, 110 * a);
            d.bezierCurveTo(127 * a, 108 * a, 129 * a, 107 * a, 127 * a, 105 * a);
            d.bezierCurveTo(130 * a, 99.5 * a, 130 * a, 99.5 * a, 133 * a, 94 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(130 * a, 279 * a);
            d.bezierCurveTo(136.5 * a, 287.5 * a, 136.5 * a, 287.5 * a, 143 * a, 296 * a);
            d.bezierCurveTo(143 * a, 302 * a, 139 * a, 309 * a, 131 * a, 308 * a);
            d.bezierCurveTo(123 * a, 306 * a, 121 * a, 303 * a, 120 * a, 297 * a);
            d.bezierCurveTo(125.5 * a, 288.5 * a, 125.5 * a, 288.5 * a, 131 * a, 280 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(147 * a, 303 * a);
            d.bezierCurveTo(151 * a, 311 * a, 151 * a, 319 * a, 147 * a, 321 * a);
            d.bezierCurveTo(138 * a, 320 * a, 145 * a, 308 * a, 147 * a, 303 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 303 * a);
            d.bezierCurveTo(115 * a, 312 * a, 118 * a, 319 * a, 115 * a, 319 * a);
            d.bezierCurveTo(112 * a, 324 * a, 109 * a, 318 * a, 109 * a, 314 * a);
            d.bezierCurveTo(109 * a, 308 * a, 112 * a, 303 * a, 115 * a, 303 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(89 * a, 280 * a);
            d.bezierCurveTo(83 * a, 279 * a, 80 * a, 281 * a, 81 * a, 286 * a);
            d.bezierCurveTo(83 * a, 290 * a, 84 * a, 290 * a, 87 * a, 286 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(94 * a, 290 * a);
            d.bezierCurveTo(93 * a, 294 * a, 90 * a, 303 * a, 86 * a, 298 * a);
            d.bezierCurveTo(84 * a, 295 * a, 84 * a, 291 * a, 89 * a, 291 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(163 * a, 295 * a);
            d.bezierCurveTo(175 * a, 294 * a, 176 * a, 296 * a, 175 * a, 301 * a);
            d.bezierCurveTo(174 * a, 305 * a, 171 * a, 305 * a, 166 * a, 300 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(172 * a, 286 * a);
            d.bezierCurveTo(180 * a, 285 * a, 181 * a, 285 * a, 180 * a, 291 * a);
            d.bezierCurveTo(176 * a, 295 * a, 174 * a, 294 * a, 172 * a, 286 * a);
            d.closePath();
            h(d, e[8]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 37 * a);
            d.bezierCurveTo(116 * a, 28 * a, 119 * a, 27 * a, 126 * a, 37 * a);
            d.bezierCurveTo(134 * a, 48 * a, 134 * a, 49 * a, 132 * a, 59 * a);
            d.bezierCurveTo(131 * a, 67 * a, 127 * a, 65 * a, 120 * a, 56 * a);
            d.bezierCurveTo(114 * a, 49 * a, 113 * a, 43 * a, 115 * a, 38 * a);
            d.closePath();
            h(d, e[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(146 * a, 34 * a);
            d.bezierCurveTo(152 * a, 28 * a, 155 * a, 27 * a, 157 * a, 39 * a);
            d.bezierCurveTo(157 * a, 45 * a, 157 * a, 49 * a, 150 * a, 56 * a);
            d.bezierCurveTo(141 * a, 66 * a, 138 * a, 66 * a, 138 * a, 57 * a);
            d.bezierCurveTo(137 * a, 50 * a, 137 * a, 47 * a, 141 * a, 42 * a);
            d.closePath();
            h(d, e[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(143 * a, 69 * a);
            d.bezierCurveTo(148 * a, 56 * a, 156 * a, 50 * a, 158 * a, 58 * a);
            d.bezierCurveTo(159 * a, 64 * a, 160 * a, 67 * a, 153 * a, 77 * a);
            d.bezierCurveTo(148 * a, 83 * a, 145 * a, 84 * a, 143 * a, 77 * a);
            d.closePath();
            h(d, e[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(149 * a, 92 * a);
            d.bezierCurveTo(149 * a, 89 * a, 151 * a, 84 * a, 156 * a, 79 * a);
            d.bezierCurveTo(161 * a, 73 * a, 163 * a, 78 * a, 162 * a, 86 * a);
            d.bezierCurveTo(161 * a, 91 * a, 155 * a, 99 * a, 152 * a, 98 * a);
            d.closePath();
            h(d, e[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(111 * a, 61 * a);
            d.bezierCurveTo(114 * a, 51 * a, 117 * a, 51 * a, 124 * a, 64 * a);
            d.bezierCurveTo(128 * a, 68 * a, 128 * a, 76 * a, 126 * a, 79 * a);
            d.bezierCurveTo(123 * a, 84 * a, 122 * a, 82 * a, 115 * a, 74 * a);
            d.bezierCurveTo(112 * a, 67 * a, 115 * a, 74 * a, 115 * a, 74 * a);
            d.bezierCurveTo(111 * a, 68 * a, 111 * a, 66 * a, 111 * a, 62 * a);
            d.closePath();
            h(d, e[7]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107 * a, 81 * a);
            d.bezierCurveTo(108 * a, 74 * a, 112 * a, 73 * a, 118 * a, 84 * a);
            d.bezierCurveTo(122 * a, 88 * a, 122 * a, 93 * a, 121 * a, 98 * a);
            d.bezierCurveTo(114 * a, 98 * a, 113 * a, 98 * a, 109 * a, 90 * a);
            d.bezierCurveTo(107 * a, 87 * a, 106 * a, 85 * a, 107 * a, 82 * a);
            d.closePath();
            h(d, e[7]);
            return f;
        };

        function Nh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 271 * a;
            f.height = 366 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(133 * a, 99 * a);
            d.bezierCurveTo(186 * a, 123 * a, 199 * a, 152 * a, 209 * a, 169 * a);
            d.bezierCurveTo(228 * a, 205 * a, 224 * a, 245 * a, 190 * a, 276 * a);
            d.bezierCurveTo(161 * a, 296 * a, 99 * a, 292 * a, 79 * a, 274 * a);
            d.bezierCurveTo(49 * a, 253 * a, 47 * a, 214 * a, 50 * a, 197 * a);
            d.bezierCurveTo(61 * a, 143 * a, 102 * a, 113 * a, 131 * a, 99 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(73 * a, 270 * a);
            d.bezierCurveTo(79 * a, 280 * a, 77 * a, 280 * a, 78 * a, 287 * a);
            d.bezierCurveTo(78 * a, 290 * a, 83 * a, 291 * a, 82 * a, 299 * a);
            d.bezierCurveTo(81 * a, 301 * a, 87 * a, 301 * a, 92 * a, 314 * a);
            d.bezierCurveTo(94 * a, 319 * a, 100 * a, 321 * a, 107 * a, 320 * a);
            d.bezierCurveTo(111 * a, 323 * a, 114 * a, 324 * a, 119 * a, 320 * a);
            d.bezierCurveTo(137 * a, 321 * a, 146 * a, 323 * a, 139 * a, 320 * a);
            d.bezierCurveTo(141 * a, 324 * a, 150 * a, 324 * a, 153 * a, 320 * a);
            d.bezierCurveTo(168 * a, 319 * a, 171 * a, 316 * a, 173 * a, 307 * a);
            d.bezierCurveTo(180 * a, 305 * a, 180 * a, 301 * a, 178 * a, 296 * a);
            d.bezierCurveTo(183 * a, 296 * a, 185 * a, 289 * a, 188 * a, 279 * a);
            d.bezierCurveTo(171 * a, 286 * a, 149 * a, 290 * a, 132 * a, 289 * a);
            d.bezierCurveTo(101 * a, 290 * a, 86 * a, 280 * a, 74 * a, 271 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(76 * a, 252 * a);
            d.bezierCurveTo(85 * a, 294 * a, 96 * a, 314 * a, 103 * a, 314 * a);
            d.bezierCurveTo(106 * a, 316 * a, 151 * a, 314 * a, 156 * a, 314 * a);
            d.bezierCurveTo(169 * a, 317 * a, 182 * a, 285 * a, 191 * a, 256 * a);
            d.bezierCurveTo(134.5 * a, 254 * a, 134.5 * a, 254 * a, 78 * a, 252 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(84 * a, 257 * a);
            d.bezierCurveTo(122 * a, 273 * a, 146 * a, 268 * a, 179 * a, 261 * a);
            d.bezierCurveTo(190 * a, 258 * a, 187 * a, 266 * a, 178 * a, 272 * a);
            d.bezierCurveTo(160 * a, 284 * a, 123 * a, 282 * a, 100 * a, 277 * a);
            d.bezierCurveTo(73 * a, 260 * a, 79 * a, 257 * a, 84 * a, 257 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(125 * a, 65 * a);
            d.bezierCurveTo(133 * a, 45 * a, 136 * a, 42 * a, 141 * a, 55 * a);
            d.bezierCurveTo(151 * a, 96 * a, 164 * a, 117 * a, 175 * a, 134 * a);
            d.bezierCurveTo(203 * a, 181 * a, 207 * a, 182 * a, 208 * a, 215 * a);
            d.bezierCurveTo(206 * a, 240 * a, 205 * a, 246 * a, 184 * a, 258 * a);
            d.bezierCurveTo(161 * a, 267 * a, 131 * a, 272 * a, 86 * a, 258 * a);
            d.bezierCurveTo(67 * a, 252 * a, 68 * a, 239 * a, 64 * a, 216 * a);
            d.bezierCurveTo(62 * a, 194 * a, 72 * a, 169 * a, 92 * a, 142 * a);
            d.bezierCurveTo(106 * a, 121 * a, 114 * a, 101 * a, 125 * a, 65 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115 * a, 37 * a);
            d.bezierCurveTo(116 * a, 28 * a, 119 * a, 27 * a, 126 * a, 37 * a);
            d.bezierCurveTo(134 * a, 48 * a, 134 * a, 49 * a, 132 * a, 59 * a);
            d.bezierCurveTo(131 * a, 67 * a, 127 * a, 65 * a, 120 * a, 56 * a);
            d.bezierCurveTo(114 * a, 49 * a, 113 * a, 43 * a, 115 * a, 38 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(146 * a, 34 * a);
            d.bezierCurveTo(152 * a, 28 * a, 155 * a, 27 * a, 157 * a, 39 * a);
            d.bezierCurveTo(157 * a, 45 * a, 157 * a, 49 * a, 150 * a, 56 * a);
            d.bezierCurveTo(141 * a, 66 * a, 138 * a, 66 * a, 138 * a, 57 * a);
            d.bezierCurveTo(137 * a, 50 * a, 137 * a, 47 * a, 141 * a, 42 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(143 * a, 69 * a);
            d.bezierCurveTo(148 * a, 56 * a, 156 * a, 50 * a, 158 * a, 58 * a);
            d.bezierCurveTo(159 * a, 64 * a, 160 * a, 67 * a, 153 * a, 77 * a);
            d.bezierCurveTo(148 * a, 83 * a, 145 * a, 84 * a, 143 * a, 77 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(149 * a, 92 * a);
            d.bezierCurveTo(149 * a, 89 * a, 151 * a, 84 * a, 156 * a, 79 * a);
            d.bezierCurveTo(161 * a, 73 * a, 163 * a, 78 * a, 162 * a, 86 * a);
            d.bezierCurveTo(161 * a, 91 * a, 155 * a, 99 * a, 152 * a, 98 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(111 * a, 61 * a);
            d.bezierCurveTo(114 * a, 51 * a, 117 * a, 51 * a, 124 * a, 64 * a);
            d.bezierCurveTo(128 * a, 68 * a, 128 * a, 76 * a, 126 * a, 79 * a);
            d.bezierCurveTo(123 * a, 84 * a, 122 * a, 82 * a, 115 * a, 74 * a);
            d.bezierCurveTo(112 * a, 67 * a, 115 * a, 74 * a, 115 * a, 74 * a);
            d.bezierCurveTo(111 * a, 68 * a, 111 * a, 66 * a, 111 * a, 62 * a);
            d.closePath();
            h(d, e[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107 * a, 81 * a);
            d.bezierCurveTo(108 * a, 74 * a, 112 * a, 73 * a, 118 * a, 84 * a);
            d.bezierCurveTo(122 * a, 88 * a, 122 * a, 93 * a, 121 * a, 98 * a);
            d.bezierCurveTo(114 * a, 98 * a, 113 * a, 98 * a, 109 * a, 90 * a);
            d.bezierCurveTo(107 * a, 87 * a, 106 * a, 85 * a, 107 * a, 82 * a);
            d.closePath();
            h(d, e[0]);
            return f;
        };

        function kg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 85 * a;
            f.height = 145 * a;
            d.translate(-20 * a, -95 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(50 * a, 105 * a);
            d.bezierCurveTo(52 * a, 119 * a, 64 * a, 137 * a, 71 * a, 146 * a);
            d.bezierCurveTo(71 * a, 161 * a, 74 * a, 169 * a, 79 * a, 179 * a);
            d.bezierCurveTo(68 * a, 192 * a, 70 * a, 204 * a, 69 * a, 216 * a);
            d.bezierCurveTo(50 * a, 189.5 * a, 50 * a, 189.5 * a, 31 * a, 163 * a);
            d.closePath();
            h(d, e[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(44 * a, 106 * a);
            d.bezierCurveTo(49 * a, 90 * a, 58 * a, 104 * a, 51 * a, 121 * a);
            d.bezierCurveTo(45 * a, 143 * a, 41 * a, 151 * a, 37 * a, 162 * a);
            d.bezierCurveTo(48 * a, 180 * a, 58 * a, 188 * a, 76 * a, 205 * a);
            d.bezierCurveTo(104 * a, 209 * a, 105 * a, 229 * a, 92 * a, 235 * a);
            d.bezierCurveTo(76 * a, 239 * a, 75 * a, 232 * a, 56 * a, 213 * a);
            d.bezierCurveTo(31 * a, 187 * a, 28 * a, 176 * a, 23 * a, 162 * a);
            d.bezierCurveTo(38 * a, 131 * a, 40 * a, 120 * a, 44 * a, 106 * a);
            d.closePath();
            h(d, e[2], e[3], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(30 * a, 159 * a);
            d.bezierCurveTo(46 * a, 157 * a, 59 * a, 152 * a, 68 * a, 148 * a);
            d.bezierCurveTo(63 * a, 155 * a, 52 * a, 160 * a, 44 * a, 164 * a);
            d.bezierCurveTo(59 * a, 169 * a, 66 * a, 174 * a, 75 * a, 178 * a);
            d.bezierCurveTo(58 * a, 178 * a, 49 * a, 175 * a, 37 * a, 174 * a);
            d.closePath();
            h(d, e[2]);
            return f;
        };

        function Oh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 85 * a;
            f.height = 145 * a;
            d.translate(-20 * a, -95 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(50 * a, 105 * a);
            d.bezierCurveTo(52 * a, 119 * a, 64 * a, 137 * a, 71 * a, 146 * a);
            d.bezierCurveTo(71 * a, 161 * a, 74 * a, 169 * a, 79 * a, 179 * a);
            d.bezierCurveTo(68 * a, 192 * a, 70 * a, 204 * a, 69 * a, 216 * a);
            d.bezierCurveTo(50 * a, 189.5 * a, 50 * a, 189.5 * a, 31 * a, 163 * a);
            d.closePath();
            h(d, e);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(44 * a, 106 * a);
            d.bezierCurveTo(49 * a, 90 * a, 58 * a, 104 * a, 51 * a, 121 * a);
            d.bezierCurveTo(45 * a, 143 * a, 41 * a, 151 * a, 37 * a, 162 * a);
            d.bezierCurveTo(48 * a, 180 * a, 58 * a, 188 * a, 76 * a, 205 * a);
            d.bezierCurveTo(104 * a, 209 * a, 105 * a, 229 * a, 92 * a, 235 * a);
            d.bezierCurveTo(76 * a, 239 * a, 75 * a, 232 * a, 56 * a, 213 * a);
            d.bezierCurveTo(31 * a, 187 * a, 28 * a, 176 * a, 23 * a, 162 * a);
            d.bezierCurveTo(38 * a, 131 * a, 40 * a, 120 * a, 44 * a, 106 * a);
            d.closePath();
            h(d, e, e, 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(30 * a, 159 * a);
            d.bezierCurveTo(46 * a, 157 * a, 59 * a, 152 * a, 68 * a, 148 * a);
            d.bezierCurveTo(63 * a, 155 * a, 52 * a, 160 * a, 44 * a, 164 * a);
            d.bezierCurveTo(59 * a, 169 * a, 66 * a, 174 * a, 75 * a, 178 * a);
            d.bezierCurveTo(58 * a, 178 * a, 49 * a, 175 * a, 37 * a, 174 * a);
            d.closePath();
            h(d, e);
            return f;
        };

        function lg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 85 * a;
            f.height = 145 * a;
            d.translate(-165 * a, -95 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(217 * a, 103 * a);
            d.bezierCurveTo(209 * a, 129 * a, 203 * a, 137 * a, 195 * a, 146 * a);
            d.bezierCurveTo(195 * a, 159 * a, 194 * a, 167 * a, 189 * a, 178 * a);
            d.bezierCurveTo(193 * a, 186 * a, 196 * a, 195 * a, 198 * a, 216 * a);
            d.bezierCurveTo(217.5 * a, 189.5 * a, 217.5 * a, 189.5 * a, 237 * a, 163 * a);
            d.closePath();
            h(d, e[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(231 * a, 163 * a);
            d.bezierCurveTo(221 * a, 139 * a, 218 * a, 128 * a, 215 * a, 114 * a);
            d.bezierCurveTo(213 * a, 102 * a, 220 * a, 92 * a, 222 * a, 107 * a);
            d.bezierCurveTo(224 * a, 118 * a, 233 * a, 138 * a, 244 * a, 161 * a);
            d.bezierCurveTo(235 * a, 188 * a, 224 * a, 198 * a, 204 * a, 221 * a);
            d.bezierCurveTo(190 * a, 233 * a, 190 * a, 235 * a, 180 * a, 235 * a);
            d.bezierCurveTo(167 * a, 235 * a, 164 * a, 216 * a, 175 * a, 211 * a);
            d.bezierCurveTo(176 * a, 208 * a, 181 * a, 207 * a, 191 * a, 205 * a);
            d.bezierCurveTo(213 * a, 186 * a, 218 * a, 180 * a, 230 * a, 163 * a);
            d.closePath();
            h(d, e[2], e[3], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(234 * a, 154 * a);
            d.bezierCurveTo(227 * a, 156 * a, 222 * a, 156 * a, 199 * a, 148 * a);
            d.bezierCurveTo(201 * a, 151 * a, 216 * a, 159 * a, 224 * a, 162 * a);
            d.bezierCurveTo(209 * a, 169.5 * a, 209 * a, 169.5 * a, 194 * a, 177 * a);
            d.bezierCurveTo(213.5 * a, 175 * a, 213.5 * a, 175 * a, 233 * a, 173 * a);
            d.closePath();
            h(d, e[2]);
            return f;
        };

        function Ph(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 85 * a;
            f.height = 145 * a;
            d.translate(-165 * a, -95 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(217 * a, 103 * a);
            d.bezierCurveTo(209 * a, 129 * a, 203 * a, 137 * a, 195 * a, 146 * a);
            d.bezierCurveTo(195 * a, 159 * a, 194 * a, 167 * a, 189 * a, 178 * a);
            d.bezierCurveTo(193 * a, 186 * a, 196 * a, 195 * a, 198 * a, 216 * a);
            d.bezierCurveTo(217.5 * a, 189.5 * a, 217.5 * a, 189.5 * a, 237 * a, 163 * a);
            d.closePath();
            h(d, e);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(231 * a, 163 * a);
            d.bezierCurveTo(221 * a, 139 * a, 218 * a, 128 * a, 215 * a, 114 * a);
            d.bezierCurveTo(213 * a, 102 * a, 220 * a, 92 * a, 222 * a, 107 * a);
            d.bezierCurveTo(224 * a, 118 * a, 233 * a, 138 * a, 244 * a, 161 * a);
            d.bezierCurveTo(235 * a, 188 * a, 224 * a, 198 * a, 204 * a, 221 * a);
            d.bezierCurveTo(190 * a, 233 * a, 190 * a, 235 * a, 180 * a, 235 * a);
            d.bezierCurveTo(167 * a, 235 * a, 164 * a, 216 * a, 175 * a, 211 * a);
            d.bezierCurveTo(176 * a, 208 * a, 181 * a, 207 * a, 191 * a, 205 * a);
            d.bezierCurveTo(213 * a, 186 * a, 218 * a, 180 * a, 230 * a, 163 * a);
            d.closePath();
            h(d, e, e, 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(234 * a, 154 * a);
            d.bezierCurveTo(227 * a, 156 * a, 222 * a, 156 * a, 199 * a, 148 * a);
            d.bezierCurveTo(201 * a, 151 * a, 216 * a, 159 * a, 224 * a, 162 * a);
            d.bezierCurveTo(209 * a, 169.5 * a, 209 * a, 169.5 * a, 194 * a, 177 * a);
            d.bezierCurveTo(213.5 * a, 175 * a, 213.5 * a, 175 * a, 233 * a, 173 * a);
            d.closePath();
            h(d, e);
            return f;
        };

        function Ge(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 187 * a;
            d.height = 119 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(0, 3);
            c.moveTo(53 * a, 45 * a);
            c.bezierCurveTo(3 * a, 60 * a, 11 * a, 72 * a, 19 * a, 81 * a);
            c.bezierCurveTo(28 * a, 82 * a, 24 * a, 81 * a, 29 * a, 82 * a);
            c.bezierCurveTo(26 * a, 87 * a, 28 * a, 84 * a, 28 * a, 87 * a);
            c.bezierCurveTo(63 * a, 101 * a, 92 * a, 100 * a, 138 * a, 93 * a);
            c.bezierCurveTo(172 * a, 87 * a, 180 * a, 72 * a, 168 * a, 62 * a);
            c.bezierCurveTo(154 * a, 51 * a, 150 * a, 50 * a, 148 * a, 49 * a);
            c.bezierCurveTo(132 * a, 42 * a, 90 * a, 40 * a, 55 * a, 45 * a);
            c.closePath();
            h(c, f[5]);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(0, -3);
            c.moveTo(53 * a, 45 * a);
            c.bezierCurveTo(3 * a, 60 * a, 11 * a, 72 * a, 19 * a, 81 * a);
            c.bezierCurveTo(28 * a, 82 * a, 24 * a, 81 * a, 29 * a, 82 * a);
            c.bezierCurveTo(26 * a, 87 * a, 28 * a, 84 * a, 28 * a, 87 * a);
            c.bezierCurveTo(63 * a, 101 * a, 92 * a, 100 * a, 138 * a, 93 * a);
            c.bezierCurveTo(172 * a, 87 * a, 180 * a, 72 * a, 168 * a, 62 * a);
            c.bezierCurveTo(154 * a, 51 * a, 150 * a, 50 * a, 148 * a, 49 * a);
            c.bezierCurveTo(132 * a, 42 * a, 90 * a, 40 * a, 55 * a, 45 * a);
            c.closePath();
            h(c, f[0], f[1], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(151 * a, 60 * a);
            c.bezierCurveTo(140 * a, 36 * a, 137 * a, 32 * a, 124 * a, 29 * a);
            c.bezierCurveTo(98 * a, 22 * a, 80 * a, 24 * a, 62 * a, 28 * a);
            c.bezierCurveTo(42 * a, 35 * a, 38 * a, 46 * a, 34 * a, 58 * a);
            c.bezierCurveTo(53 * a, 74 * a, 76 * a, 76 * a, 91 * a, 78 * a);
            c.closePath();
            h(c, f[0], f[1], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(37 * a, 53 * a);
            c.bezierCurveTo(30 * a, 56 * a, 29 * a, 67 * a, 30 * a, 68 * a);
            c.bezierCurveTo(94 * a, 108 * a, 150 * a, 76 * a, 155 * a, 70 * a);
            c.bezierCurveTo(154 * a, 60 * a, 151 * a, 54 * a, 149 * a, 53 * a);
            c.bezierCurveTo(101 * a, 74 * a, 66 * a, 66 * a, 37 * a, 53 * a);
            c.closePath();
            h(c, f[2], f[3], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(100 * a, 36 * a);
            c.bezierCurveTo(92 * a, 25 * a, 86 * a, 28 * a, 82 * a, 34 * a);
            c.bezierCurveTo(88 * a, 40 * a, 93 * a, 40 * a, 98 * a, 36 * a);
            c.closePath();
            h(c, f[0], f[1], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80 * a, 43 * a);
            c.bezierCurveTo(69 * a, 46 * a, 67 * a, 52 * a, 69 * a, 58 * a);
            h(c, void 0, f[1], 4 * a);
            A(c, 58 * a, 50 * a, 5 * a);
            h(c, f[4]);
            A(c, 43 * a, 65 * a, 5 * a);
            h(c, f[4]);
            A(c, 58 * a, 73 * a, 5 * a);
            h(c, f[4]);
            A(c, 58 * a, 50 * a, 2 * a);
            h(c, f[5]);
            A(c, 43 * a, 65 * a, 2 * a);
            h(c, f[5]);
            A(c, 58 * a, 73 * a, 2 * a);
            h(c, f[5]);
            return d;
        };

        function He(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 180 * a;
            d.height = 120 * a;
            c.translate(-65 * a, -35 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.save();
            c.translate(150.5 * a, 63.84375 * a);
            B(c, -67 * a, -16.5 * a, 134 * a, 33 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80.5 * a, 75.34375 * a);
            c.bezierCurveTo(83 * a, 106.34375 * a, 83 * a, 106.34375 * a, 85.5 * a, 137.34375 * a);
            c.bezierCurveTo(93 * a, 135.84375 * a, 93 * a, 135.84375 * a, 100.5 * a, 134.34375 * a);
            c.bezierCurveTo(99.5 * a, 100.84375 * a, 99.5 * a, 100.84375 * a, 98.5 * a, 67.34375 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(206.5 * a, 71.34375 * a);
            c.bezierCurveTo(203.5 * a, 104.34375 * a, 203.5 * a, 104.34375 * a, 200.5 * a, 137.34375 * a);
            c.bezierCurveTo(208.5 * a, 137.34375 * a, 208.5 * a, 137.34375 * a, 216.5 * a, 137.34375 * a);
            c.bezierCurveTo(219 * a, 102.84375 * a, 219 * a, 102.84375 * a, 221.5 * a, 68.34375 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(136.5 * a, 75.34375 * a);
            c.bezierCurveTo(139 * a, 94.34375 * a, 139 * a, 94.34375 * a, 141.5 * a, 113.34375 * a);
            c.bezierCurveTo(149.5 * a, 115.34375 * a, 149.5 * a, 115.34375 * a, 157.5 * a, 117.34375 * a);
            c.bezierCurveTo(162 * a, 97.34375 * a, 162 * a, 97.34375 * a, 166.5 * a, 77.34375 * a);
            c.closePath();
            h(c, f[0]);
            c.save();
            c.translate(152.5 * a, 80.84375 * a);
            c.rotate(3.12);
            B(c, -73 * a, -20.5 * a, 146 * a, 41 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.save();
            c.translate(150.5 * a, 63.84375 * a);
            B(c, -67 * a, -16.5 * a, 134 * a, 33 * a, 5 * a);
            c.restore();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80.5 * a, 75.34375 * a);
            c.bezierCurveTo(83 * a, 106.34375 * a, 83 * a, 106.34375 * a, 85.5 * a, 137.34375 * a);
            c.bezierCurveTo(93 * a, 135.84375 * a, 93 * a, 135.84375 * a, 100.5 * a, 134.34375 * a);
            c.bezierCurveTo(99.5 * a, 100.84375 * a, 99.5 * a, 100.84375 * a, 98.5 * a, 67.34375 * a);
            c.closePath();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(206.5 * a, 71.34375 * a);
            c.bezierCurveTo(203.5 * a, 104.34375 * a, 203.5 * a, 104.34375 * a, 200.5 * a, 137.34375 * a);
            c.bezierCurveTo(208.5 * a, 137.34375 * a, 208.5 * a, 137.34375 * a, 216.5 * a, 137.34375 * a);
            c.bezierCurveTo(219 * a, 102.84375 * a, 219 * a, 102.84375 * a, 221.5 * a, 68.34375 * a);
            c.closePath();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(136.5 * a, 75.34375 * a);
            c.bezierCurveTo(139 * a, 94.34375 * a, 139 * a, 94.34375 * a, 141.5 * a, 113.34375 * a);
            c.bezierCurveTo(149.5 * a, 115.34375 * a, 149.5 * a, 115.34375 * a, 157.5 * a, 117.34375 * a);
            c.bezierCurveTo(162 * a, 97.34375 * a, 162 * a, 97.34375 * a, 166.5 * a, 77.34375 * a);
            c.closePath();
            h(c, f[1], f[2], 4 * a);
            c.save();
            c.translate(152.5 * a, 80.84375 * a);
            c.rotate(3.12);
            B(c, -73 * a, -20.5 * a, 146 * a, 41 * a, 5 * a);
            c.restore();
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(83.5 * a, 73.34375 * a);
            c.bezierCurveTo(93.5 * a, 70.34375 * a, 105.5 * a, 70.34375 * a, 124.5 * a, 72.34375 * a);
            c.bezierCurveTo(132.5 * a, 78.34375 * a, 162.5 * a, 80.34375 * a, 176.5 * a, 76.34375 * a);
            c.bezierCurveTo(194.5 * a, 69.34375 * a, 192.5 * a, 68.34375 * a, 199.5 * a, 63.34375 * a);
            c.bezierCurveTo(204.5 * a, 63.34375 * a, 204.5 * a, 63.34375 * a, 209.5 * a, 63.34375 * a);
            c.bezierCurveTo(153.5 * a, 82.34375 * a, 157.5 * a, 85.34375 * a, 209.5 * a, 63.34375 * a);
            c.bezierCurveTo(194.5 * a, 88.34375 * a, 162.5 * a, 87.34375 * a, 149.5 * a, 88.34375 * a);
            c.bezierCurveTo(129.5 * a, 81.34375 * a, 103.5 * a, 75.34375 * a, 83.5 * a, 82.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(137.5 * a, 65.34375 * a);
            c.bezierCurveTo(150.5 * a, 76.34375 * a, 170.5 * a, 71.34375 * a, 174.5 * a, 65.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(221.5 * a, 85.34375 * a);
            c.bezierCurveTo(211.5 * a, 79.34375 * a, 191.5 * a, 88.34375 * a, 181.5 * a, 96.34375 * a);
            c.bezierCurveTo(201.5 * a, 96.34375 * a, 201.5 * a, 96.34375 * a, 221.5 * a, 96.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(84.5 * a, 89.34375 * a);
            c.bezierCurveTo(102.5 * a, 87.34375 * a, 112.5 * a, 88.34375 * a, 119.5 * a, 97.34375 * a);
            c.bezierCurveTo(102 * a, 98.34375 * a, 102 * a, 98.34375 * a, 84.5 * a, 99.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(208.5 * a, 104.34375 * a);
            c.bezierCurveTo(208.5 * a, 110.34375 * a, 208.5 * a, 110.34375 * a, 208.5 * a, 116.34375 * a);
            c.bezierCurveTo(211.5 * a, 110.34375 * a, 211.5 * a, 110.34375 * a, 214.5 * a, 104.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(87.5 * a, 117.34375 * a);
            c.bezierCurveTo(92 * a, 118.84375 * a, 92 * a, 118.84375 * a, 96.5 * a, 120.34375 * a);
            c.bezierCurveTo(93 * a, 123.84375 * a, 93 * a, 123.84375 * a, 89.5 * a, 127.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(107.5 * a, 51.34375 * a);
            c.bezierCurveTo(122.5 * a, 54.34375 * a, 122.5 * a, 54.34375 * a, 137.5 * a, 57.34375 * a);
            c.bezierCurveTo(118 * a, 57.34375 * a, 118 * a, 57.34375 * a, 98.5 * a, 57.34375 * a);
            c.bezierCurveTo(94.5 * a, 54.84375 * a, 94.5 * a, 54.84375 * a, 90.5 * a, 52.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(170.5 * a, 52.34375 * a);
            c.bezierCurveTo(179.5 * a, 51.84375 * a, 179.5 * a, 51.84375 * a, 188.5 * a, 51.34375 * a);
            c.bezierCurveTo(187.5 * a, 53.84375 * a, 187.5 * a, 53.84375 * a, 186.5 * a, 56.34375 * a);
            c.bezierCurveTo(177 * a, 56.34375 * a, 177 * a, 56.34375 * a, 167.5 * a, 56.34375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80.5 * a, 69.34375 * a);
            c.bezierCurveTo(86.5 * a, 70.34375 * a, 86.5 * a, 70.34375 * a, 92.5 * a, 71.34375 * a);
            c.bezierCurveTo(86 * a, 73.34375 * a, 86 * a, 73.34375 * a, 79.5 * a, 75.34375 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(222.5 * a, 75.34375 * a);
            c.bezierCurveTo(214.5 * a, 76.34375 * a, 214.5 * a, 76.34375 * a, 206.5 * a, 77.34375 * a);
            c.bezierCurveTo(216.5 * a, 79.34375 * a, 216.5 * a, 79.34375 * a, 226.5 * a, 81.34375 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(116.5 * a, 100.34375 * a);
            c.bezierCurveTo(128 * a, 97.34375 * a, 128 * a, 97.34375 * a, 139.5 * a, 94.34375 * a);
            c.bezierCurveTo(140 * a, 96.84375 * a, 140 * a, 96.84375 * a, 140.5 * a, 99.34375 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(112.5 * a, 48.34375 * a);
            c.bezierCurveTo(115.5 * a, 50.84375 * a, 115.5 * a, 50.84375 * a, 118.5 * a, 53.34375 * a);
            c.bezierCurveTo(131 * a, 50.84375 * a, 131 * a, 50.84375 * a, 143.5 * a, 48.34375 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(216.5 * a, 109.34375 * a);
            c.bezierCurveTo(213 * a, 114.84375 * a, 213 * a, 114.84375 * a, 209.5 * a, 120.34375 * a);
            c.bezierCurveTo(212 * a, 118.84375 * a, 212 * a, 118.84375 * a, 214.5 * a, 117.34375 * a);
            c.closePath();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(86.5 * a, 133.34375 * a);
            c.bezierCurveTo(89 * a, 127.34375 * a, 89 * a, 127.34375 * a, 91.5 * a, 121.34375 * a);
            c.bezierCurveTo(92.5 * a, 127.34375 * a, 92.5 * a, 127.34375 * a, 93.5 * a, 133.34375 * a);
            c.closePath();
            h(c, f[2]);
            return d;
        };

        function Dd(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 175 * a;
            d.height = 106 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(28 * a, 67 * a);
            c.bezierCurveTo(55 * a, 80 * a, 126 * a, 74 * a, 144 * a, 68 * a);
            c.bezierCurveTo(144.5 * a, 75 * a, 144.5 * a, 75 * a, 145 * a, 82 * a);
            c.bezierCurveTo(114 * a, 94 * a, 47 * a, 91 * a, 28 * a, 82 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(145 * a, 75 * a);
            c.bezierCurveTo(143 * a, 51 * a, 133 * a, 29 * a, 100 * a, 27 * a);
            c.bezierCurveTo(52 * a, 21 * a, 37 * a, 37 * a, 31 * a, 54 * a);
            c.bezierCurveTo(23 * a, 78 * a, 28 * a, 77 * a, 36 * a, 79 * a);
            c.bezierCurveTo(80 * a, 87 * a, 120 * a, 81 * a, 145 * a, 76 * a);
            c.closePath();
            h(c, f[1]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(38 * a, 46 * a);
            c.bezierCurveTo(52 * a, 37 * a, 69 * a, 36 * a, 85 * a, 36 * a);
            c.bezierCurveTo(118 * a, 38 * a, 129 * a, 42 * a, 137 * a, 48 * a);
            c.bezierCurveTo(135 * a, 45 * a, 135 * a, 45 * a, 133 * a, 42 * a);
            c.bezierCurveTo(124 * a, 32 * a, 116 * a, 28 * a, 88 * a, 25 * a);
            c.bezierCurveTo(47 * a, 28 * a, 40 * a, 32 * a, 36 * a, 44 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(145 * a, 75 * a);
            c.bezierCurveTo(143 * a, 51 * a, 133 * a, 29 * a, 100 * a, 27 * a);
            c.bezierCurveTo(52 * a, 21 * a, 37 * a, 37 * a, 31 * a, 54 * a);
            c.bezierCurveTo(23 * a, 78 * a, 28 * a, 77 * a, 36 * a, 79 * a);
            c.bezierCurveTo(80 * a, 87 * a, 120 * a, 81 * a, 145 * a, 76 * a);
            c.closePath();
            h(c, void 0, f[2], 4 * a);
            c.translate(0, -3 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(28 * a, 67 * a);
            c.bezierCurveTo(55 * a, 80 * a, 126 * a, 74 * a, 144 * a, 68 * a);
            c.bezierCurveTo(144.5 * a, 75 * a, 144.5 * a, 75 * a, 145 * a, 82 * a);
            c.bezierCurveTo(114 * a, 94 * a, 47 * a, 91 * a, 28 * a, 82 * a);
            c.closePath();
            h(c, f[10], f[10], 4 * a);
            c.translate(0, 3 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(131 * a, 43 * a);
            c.bezierCurveTo(145 * a, 40 * a, 148 * a, 32 * a, 147 * a, 17 * a);
            c.bezierCurveTo(166 * a, 39 * a, 155 * a, 62 * a, 140 * a, 67 * a);
            c.bezierCurveTo(128 * a, 65 * a, 128 * a, 52 * a, 131 * a, 45 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(41 * a, 43 * a);
            c.bezierCurveTo(30 * a, 42 * a, 24 * a, 33 * a, 25 * a, 17 * a);
            c.bezierCurveTo(7 * a, 34 * a, 17 * a, 63 * a, 33 * a, 66 * a);
            c.bezierCurveTo(45 * a, 59 * a, 44 * a, 53 * a, 42 * a, 44 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(24 * a, 19 * a);
            c.bezierCurveTo(24 * a, 35 * a, 35 * a, 42 * a, 42 * a, 44 * a);
            c.bezierCurveTo(43 * a, 51 * a, 43 * a, 48 * a, 43 * a, 56 * a);
            c.bezierCurveTo(25 * a, 47 * a, 17 * a, 36 * a, 23 * a, 20 * a);
            c.closePath();
            h(c, f[6]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(148 * a, 18 * a);
            c.bezierCurveTo(159 * a, 44 * a, 139 * a, 52 * a, 130 * a, 55 * a);
            c.bezierCurveTo(129 * a, 48 * a, 129 * a, 46 * a, 131 * a, 43 * a);
            c.bezierCurveTo(144 * a, 37 * a, 148 * a, 35 * a, 147 * a, 18 * a);
            c.closePath();
            h(c, f[6]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(131 * a, 43 * a);
            c.bezierCurveTo(145 * a, 40 * a, 148 * a, 32 * a, 147 * a, 17 * a);
            c.bezierCurveTo(166 * a, 39 * a, 155 * a, 62 * a, 140 * a, 67 * a);
            c.bezierCurveTo(128 * a, 65 * a, 128 * a, 52 * a, 131 * a, 45 * a);
            c.closePath();
            h(c, void 0, f[4], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(41 * a, 43 * a);
            c.bezierCurveTo(30 * a, 42 * a, 24 * a, 33 * a, 25 * a, 17 * a);
            c.bezierCurveTo(7 * a, 34 * a, 17 * a, 63 * a, 33 * a, 66 * a);
            c.bezierCurveTo(45 * a, 59 * a, 44 * a, 53 * a, 42 * a, 44 * a);
            c.closePath();
            h(c, void 0, f[4], 4 * a);
            c.save();
            c.translate(87 * a, 34.5 * a);
            c.rotate(0);
            B(c, -8 * a, -10.5 * a, 16 * a, 21 * a, 10 * a);
            c.restore();
            h(c, f[7], f[2], 4 * a);
            c.save();
            c.translate(87 * a, 57 * a);
            c.rotate(0);
            B(c, -8 * a, -23 * a, 16 * a, 46 * a, 10 * a);
            c.restore();
            h(c, f[8], f[2], 4 * a);
            A(c, 87 * a, 39 * a, 4.123105625617661 * a);
            h(c, f[9], f[2], 4 * a);
            A(c, 87 * a, 60 * a, 4.242640687119285 * a);
            h(c, f[9], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(28 * a, 67 * a);
            c.bezierCurveTo(55 * a, 80 * a, 126 * a, 74 * a, 144 * a, 68 * a);
            c.bezierCurveTo(144.5 * a, 75 * a, 144.5 * a, 75 * a, 145 * a, 82 * a);
            c.bezierCurveTo(114 * a, 94 * a, 47 * a, 91 * a, 28 * a, 82 * a);
            c.closePath();
            h(c, f[8], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(27 * a, 69 * a);
            c.bezierCurveTo(13 * a, 77 * a, 16 * a, 74 * a, 27 * a, 80 * a);
            c.closePath();
            h(c, f[9], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(145 * a, 70 * a);
            c.bezierCurveTo(149.5 * a, 72 * a, 149.5 * a, 72 * a, 154 * a, 74 * a);
            c.bezierCurveTo(150 * a, 77 * a, 150 * a, 77 * a, 146 * a, 80 * a);
            c.closePath();
            h(c, f[9], f[2], 4 * a);
            A(c, 50 * a, 80 * a, 5 * a);
            h(c, f[9], f[2], 4 * a);
            A(c, 86.01141357421875 * a, 81.76705932617188 * a, 5 * a);
            h(c, f[9], f[2], 4 * a);
            A(c, 119.01141357421875 * a, 80.13069152832031 * a, 5 * a);
            h(c, f[9], f[2], 4 * a);
            return d;
        };

        function Ie(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 142 * a;
            e.height = 118 * a;
            d.save();
            d.translate(70.16665649414062 * a, 38.20831298828125 * a);
            B(d, -58.5 * a, -27.5 * a, 117 * a, 55 * a, 20 * a);
            d.restore();
            h(d, f[0], f[1], 4 * a);
            d.save();
            d.translate(70 * a, 42.70831298828125 * a);
            B(d, -61 * a, -20 * a, 122 * a, 40 * a, 20 * a);
            d.restore();
            h(d, f[2], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(123 * a, 70.375 * a);
            d.bezierCurveTo(115 * a, 99.375 * a, 119 * a, 85.375 * a, 115 * a, 100.375 * a);
            d.bezierCurveTo(112 * a, 116.375 * a, 117 * a, 109.375 * a, 131 * a, 100.375 * a);
            d.bezierCurveTo(131 * a, 83.375 * a, 131 * a, 83.375 * a, 131 * a, 66.375 * a);
            d.closePath();
            h(d, f[2], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(11 * a, 68.375 * a);
            d.bezierCurveTo(11.166656494140625 * a, 84.375 * a, 9 * a, 99.375 * a, 10 * a, 100.375 * a);
            d.bezierCurveTo(35 * a, 113.375 * a, 27 * a, 110.375 * a, 25 * a, 95.375 * a);
            d.bezierCurveTo(16 * a, 68.375 * a, 17 * a, 69.375 * a, 17 * a, 68.375 * a);
            d.closePath();
            h(d, f[2], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(46 * a, 32.375 * a);
            d.bezierCurveTo(43 * a, 8.375 * a, 45 * a, 7.375 * a, 56 * a, 6.375 * a);
            d.bezierCurveTo(105 * a, 4.375 * a, 102 * a, 6.375 * a, 97 * a, 32.375 * a);
            d.bezierCurveTo(138 * a, 43.375 * a, 133 * a, 45.375 * a, 133 * a, 58.375 * a);
            d.bezierCurveTo(133 * a, 85.375 * a, 125 * a, 74.375 * a, 111 * a, 70.375 * a);
            d.bezierCurveTo(70 * a, 69.875 * a, 29 * a, 69.375 * a, 29 * a, 69.375 * a);
            d.bezierCurveTo(7 * a, 84.375 * a, 7 * a, 70.375 * a, 7 * a, 59.375 * a);
            d.bezierCurveTo(6 * a, 28.375 * a, 32 * a, 39.375 * a, 44 * a, 32.375 * a);
            d.closePath();
            h(d, f[2], f[1], 4 * a);
            A(d, 71 * a, 44.375 * a, 16.55294535724685 * a);
            h(d, f[2], f[1], 4 * a);
            A(d, 71 * a, 43.70831298828125 * a, 8.94427190999916 * a);
            h(d, f[2], f[1], 4 * a);
            return e;
        };

        function Je(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 142 * a;
            e.height = 118 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(111 * a, 27.3671875 * a);
            d.bezierCurveTo(128 * a, 9.3671875 * a, 125 * a, 13.3671875 * a, 126 * a, 21.3671875 * a);
            d.bezierCurveTo(126 * a, 33.3671875 * a, 119 * a, 43.3671875 * a, 118 * a, 42.3671875 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(31 * a, 23.3671875 * a);
            d.bezierCurveTo(17 * a, 15.3671875 * a, 16 * a, 14.3671875 * a, 17 * a, 20.3671875 * a);
            d.bezierCurveTo(22 * a, 33.3671875 * a, 20 * a, 27.3671875 * a, 24 * a, 34.3671875 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.save();
            d.translate(70.5 * a, 34.8671875 * a);
            d.rotate(0);
            B(d, -49.5 * a, -21.5 * a, 99 * a, 43 * a, 15 * a);
            d.restore();
            h(d, f[0], f[1], 4 * a);
            d.save();
            d.translate(71 * a, 40.8671875 * a);
            d.rotate(0);
            B(d, -49 * a, -12.5 * a, 98 * a, 25 * a, 15 * a);
            d.restore();
            h(d, f[2], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(19.800003051757812 * a, 75.95625305175781 * a);
            d.bezierCurveTo(19.300003051757812 * a, 82.95625305175781 * a, 19.300003051757812 * a, 82.95625305175781 * a, 18.800003051757812 * a, 89.95625305175781 * a);
            d.bezierCurveTo(38.80000305175781 * a, 115.95625305175781 * a, 37.80000305175781 * a, 104.95625305175781 * a, 31.800003051757812 * a, 91.95625305175781 * a);
            d.closePath();
            h(d, f[2], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(119.80000305175781 * a, 75.95625305175781 * a);
            d.bezierCurveTo(120.80000305175781 * a, 82.95625305175781 * a, 120.80000305175781 * a, 82.95625305175781 * a, 121.80000305175781 * a, 89.95625305175781 * a);
            d.bezierCurveTo(101.80000305175781 * a, 111.95625305175781 * a, 99.80000305175781 * a, 111.95625305175781 * a, 112.80000305175781 * a, 81.95625305175781 * a);
            d.closePath();
            h(d, f[2], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17.800003051757812 * a, 49.15625 * a);
            d.bezierCurveTo(17.800003051757812 * a, 64.15625 * a, 17.800003051757812 * a, 64.15625 * a, 17.800003051757812 * a, 79.15625 * a);
            d.bezierCurveTo(23.300003051757812 * a, 85.15625 * a, 23.300003051757812 * a, 85.15625 * a, 28.800003051757812 * a, 91.15625 * a);
            d.bezierCurveTo(36.80000305175781 * a, 96.15625 * a, 32.80000305175781 * a, 91.15625 * a, 28.800003051757812 * a, 77.15625 * a);
            d.bezierCurveTo(33.80000305175781 * a, 65.15625 * a, 33.80000305175781 * a, 65.15625 * a, 38.80000305175781 * a, 53.15625 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(123.80000305175781 * a, 53.95625305175781 * a);
            d.bezierCurveTo(121.80000305175781 * a, 77.95625305175781 * a, 121.80000305175781 * a, 74.95625305175781 * a, 121.80000305175781 * a, 78.95625305175781 * a);
            d.bezierCurveTo(115.80000305175781 * a, 84.95625305175781 * a, 115.80000305175781 * a, 84.95625305175781 * a, 109.80000305175781 * a, 90.95625305175781 * a);
            d.bezierCurveTo(102.80000305175781 * a, 93.95625305175781 * a, 105.80000305175781 * a, 86.95625305175781 * a, 110.80000305175781 * a, 76.95625305175781 * a);
            d.bezierCurveTo(107.30000305175781 * a, 65.45625305175781 * a, 103.80000305175781 * a, 53.95625305175781 * a, 103.80000305175781 * a, 53.95625305175781 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(18 * a, 56.3671875 * a);
            d.bezierCurveTo(70 * a, 56.8671875 * a, 70 * a, 56.8671875 * a, 122 * a, 57.3671875 * a);
            d.bezierCurveTo(137 * a, 20.3671875 * a, 137 * a, 16.3671875 * a, 126 * a, 22.3671875 * a);
            d.bezierCurveTo(115.5 * a, 34.3671875 * a, 115.5 * a, 34.3671875 * a, 105 * a, 46.3671875 * a);
            d.bezierCurveTo(70.5 * a, 46.3671875 * a, 70.5 * a, 46.3671875 * a, 36 * a, 46.3671875 * a);
            d.bezierCurveTo(4 * a, 14.3671875 * a, 7 * a, 18.3671875 * a, 8 * a, 27.3671875 * a);
            d.bezierCurveTo(12.5 * a, 41.8671875 * a, 12.5 * a, 41.8671875 * a, 17 * a, 56.3671875 * a);
            d.closePath();
            h(d, f[3], f[4], 4 * a);
            d.save();
            d.translate(68.30000305175781 * a, 41.45625305175781 * a);
            d.rotate(0.76);
            B(d, -20.5 * a, -20.5 * a, 41 * a, 41 * a, 10 * a);
            d.restore();
            h(d, void 0, f[5], 4 * a);
            d.save();
            d.translate(68.80000305175781 * a, 44.45625305175781 * a);
            d.rotate(0.76);
            B(d, -21 * a, -20.5 * a, 42 * a, 41 * a, 10 * a);
            d.restore();
            h(d, f[3], f[4], 4 * a);
            d.save();
            d.translate(69.80000305175781 * a, 44.556243896484375 * a);
            d.rotate(0.76);
            B(d, -10 * a, -10 * a, 20 * a, 20 * a, 5 * a);
            d.restore();
            h(d, f[6], f[7], 4 * a);
            return e;
        };

        function Ke(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 145 * a;
            e.height = 120 * a;
            d.beginPath();
            d.scale(0.6, 0.6);
            d.lineCap = "round";
            d.lineJoin = "round";
            d.translate(18 * a, -8 * a);
            d.moveTo(101 * a, 72 * a);
            d.bezierCurveTo(144 * a, 69 * a, 149 * a, 58 * a, 162 * a, 49 * a);
            d.bezierCurveTo(174 * a, 31 * a, 173 * a, 38 * a, 172 * a, 45 * a);
            d.bezierCurveTo(168 * a, 73 * a, 158 * a, 75 * a, 152 * a, 78 * a);
            d.bezierCurveTo(106 * a, 89 * a, 107 * a, 91 * a, 107 * a, 94 * a);
            d.bezierCurveTo(107 * a, 100 * a, 107 * a, 107 * a, 107 * a, 107 * a);
            d.bezierCurveTo(99 * a, 112 * a, 98 * a, 110 * a, 93 * a, 107 * a);
            d.bezierCurveTo(94 * a, 107 * a, 93 * a, 107 * a, 93 * a, 107 * a);
            d.bezierCurveTo(93 * a, 100 * a, 93 * a, 100 * a, 92 * a, 94 * a);
            d.bezierCurveTo(92 * a, 89 * a, 90 * a, 90 * a, 73 * a, 86 * a);
            d.bezierCurveTo(45 * a, 81 * a, 40 * a, 77 * a, 35 * a, 68 * a);
            d.bezierCurveTo(23 * a, 36 * a, 28 * a, 34 * a, 36 * a, 46 * a);
            d.bezierCurveTo(45 * a, 58 * a, 83 * a, 72 * a, 98 * a, 72 * a);
            d.closePath();
            h(d, f[4], f[5], 4 * a);
            d.beginPath();
            d.scale(1.1, 1.1);
            d.lineCap = "round";
            d.lineJoin = "round";
            d.translate(-9 * a, 4 * a);
            d.moveTo(101 * a, 72 * a);
            d.bezierCurveTo(144 * a, 69 * a, 149 * a, 58 * a, 162 * a, 49 * a);
            d.bezierCurveTo(174 * a, 31 * a, 173 * a, 38 * a, 172 * a, 45 * a);
            d.bezierCurveTo(168 * a, 73 * a, 158 * a, 75 * a, 152 * a, 78 * a);
            d.bezierCurveTo(106 * a, 89 * a, 107 * a, 91 * a, 107 * a, 94 * a);
            d.bezierCurveTo(107 * a, 100 * a, 107 * a, 107 * a, 107 * a, 107 * a);
            d.bezierCurveTo(99 * a, 112 * a, 98 * a, 110 * a, 93 * a, 107 * a);
            d.bezierCurveTo(94 * a, 107 * a, 93 * a, 107 * a, 93 * a, 107 * a);
            d.bezierCurveTo(93 * a, 100 * a, 93 * a, 100 * a, 92 * a, 94 * a);
            d.bezierCurveTo(92 * a, 89 * a, 90 * a, 90 * a, 73 * a, 86 * a);
            d.bezierCurveTo(45 * a, 81 * a, 40 * a, 77 * a, 35 * a, 68 * a);
            d.bezierCurveTo(23 * a, 36 * a, 28 * a, 34 * a, 36 * a, 46 * a);
            d.bezierCurveTo(45 * a, 58 * a, 83 * a, 72 * a, 98 * a, 72 * a);
            d.closePath();
            h(d, f[4], f[5], 4 * a);
            d.scale(1.1, 1.1);
            d.translate(-9 * a, 4 * a);
            d.save();
            d.translate(100 * a, 73.06874084472656 * a);
            d.rotate(0);
            B(d, -61 * a, -38.5 * a, 122 * a, 40 * a, 20 * a);
            d.restore();
            h(d, f[1], f[2], 4 * a);
            d.save();
            d.translate(100 * a, 71.36874389648438 * a);
            d.rotate(0);
            B(d, -60.5 * a, -18 * a, 121 * a, 30 * a, 20 * a);
            d.restore();
            h(d, f[3], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(144 * a, 80 * a);
            d.bezierCurveTo(152 * a, 100 * a, 152 * a, 101 * a, 153 * a, 102 * a);
            d.bezierCurveTo(159 * a, 100 * a, 159 * a, 100 * a, 160 * a, 100 * a);
            d.bezierCurveTo(161 * a, 84 * a, 161 * a, 84 * a, 162 * a, 68 * a);
            d.closePath();
            h(d, f[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(57 * a, 75 * a);
            d.bezierCurveTo(48 * a, 101 * a, 53 * a, 89 * a, 48 * a, 102 * a);
            d.bezierCurveTo(44 * a, 100 * a, 44 * a, 100 * a, 39 * a, 97 * a);
            d.bezierCurveTo(39 * a, 83 * a, 39 * a, 83 * a, 39 * a, 69 * a);
            d.closePath();
            h(d, f[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(101 * a, 72 * a);
            d.bezierCurveTo(144 * a, 69 * a, 149 * a, 58 * a, 162 * a, 49 * a);
            d.bezierCurveTo(174 * a, 31 * a, 173 * a, 38 * a, 172 * a, 45 * a);
            d.bezierCurveTo(168 * a, 73 * a, 158 * a, 75 * a, 152 * a, 78 * a);
            d.bezierCurveTo(106 * a, 89 * a, 107 * a, 91 * a, 107 * a, 94 * a);
            d.bezierCurveTo(107 * a, 100 * a, 107 * a, 107 * a, 107 * a, 107 * a);
            d.bezierCurveTo(99 * a, 112 * a, 98 * a, 110 * a, 93 * a, 107 * a);
            d.bezierCurveTo(94 * a, 107 * a, 93 * a, 107 * a, 93 * a, 107 * a);
            d.bezierCurveTo(93 * a, 100 * a, 93 * a, 100 * a, 92 * a, 94 * a);
            d.bezierCurveTo(92 * a, 89 * a, 90 * a, 90 * a, 73 * a, 86 * a);
            d.bezierCurveTo(45 * a, 81 * a, 40 * a, 77 * a, 35 * a, 68 * a);
            d.bezierCurveTo(23 * a, 36 * a, 28 * a, 34 * a, 36 * a, 46 * a);
            d.bezierCurveTo(45 * a, 58 * a, 83 * a, 72 * a, 98 * a, 72 * a);
            d.closePath();
            h(d, f[4], f[5], 4 * a);
            d.translate(0, 0);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115.5 * a, 116.07290649414062 * a);
            d.bezierCurveTo(159.5 * a, 99.07290649414062 * a, 159.5 * a, 98.07290649414062 * a, 159.5 * a, 98.07290649414062 * a);
            d.bezierCurveTo(155.5 * a, 116.07290649414062 * a, 159.5 * a, 116.07290649414062 * a, 159.5 * a, 118.07290649414062 * a);
            d.bezierCurveTo(147.5 * a, 130.07290649414062 * a, 136.5 * a, 132.07290649414062 * a, 115.5 * a, 138.07290649414062 * a);
            d.closePath();
            h(d, f[3], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(39.5 * a, 96.07290649414062 * a);
            d.bezierCurveTo(85.5 * a, 114.07290649414062 * a, 62.5 * a, 105.57290649414062 * a, 85.5 * a, 115.07290649414062 * a);
            d.bezierCurveTo(85.5 * a, 125.57290649414062 * a, 85.5 * a, 125.57290649414062 * a, 85.5 * a, 136.07290649414062 * a);
            d.bezierCurveTo(51.5 * a, 129.07290649414062 * a, 51.5 * a, 125.07290649414062 * a, 41.5 * a, 118.07290649414062 * a);
            d.bezierCurveTo(44.5 * a, 106.07290649414062 * a, 42.5 * a, 103.07290649414062 * a, 40.5 * a, 96.07290649414062 * a);
            d.closePath();
            h(d, f[3], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(86 * a, 80 * a);
            d.bezierCurveTo(97 * a, 88 * a, 106 * a, 84 * a, 112 * a, 80 * a);
            d.bezierCurveTo(112 * a, 62 * a, 106 * a, 59 * a, 99 * a, 54 * a);
            d.bezierCurveTo(86 * a, 62 * a, 86 * a, 73 * a, 86 * a, 80 * a);
            d.closePath();
            h(d, f[3], f[2], 4 * a);
            d.scale(0.5, 0.5);
            d.translate(100 * a, 71 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(86 * a, 80 * a);
            d.bezierCurveTo(97 * a, 88 * a, 106 * a, 84 * a, 112 * a, 80 * a);
            d.bezierCurveTo(112 * a, 62 * a, 106 * a, 59 * a, 99 * a, 54 * a);
            d.bezierCurveTo(86 * a, 62 * a, 86 * a, 73 * a, 86 * a, 80 * a);
            d.closePath();
            h(d, f[6], f[2], 4 * a);
            return e;
        };

        function Qh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 400 * a;
            e.height = 400 * a;
            d.save();
            d.translate(204 * a, 195.0833282470703 * a);
            d.rotate(10.16);
            B(d, -97.5 * a, -134.5 * a, 195 * a, 269 * a, 10 * a);
            d.restore();
            h(d, f[0], f[1], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(58.5 * a, 226.5833282470703 * a);
            d.bezierCurveTo(120.5 * a, 281.5833282470703 * a, 120.5 * a, 281.5833282470703 * a, 182.5 * a, 336.5833282470703 * a);
            d.bezierCurveTo(263 * a, 248.5833282470703 * a, 263 * a, 248.5833282470703 * a, 343.5 * a, 160.5833282470703 * a);
            d.bezierCurveTo(280.5 * a, 104.58332824707031 * a, 280.5 * a, 104.58332824707031 * a, 217.5 * a, 48.58332824707031 * a);
            d.closePath();
            h(d, f[2], f[3], 4 * a);
            d.save();
            d.translate(197 * a, 169.0833282470703 * a);
            d.rotate(10.16);
            B(d, -93.5 * a, -126.5 * a, 187 * a, 253 * a, 10 * a);
            d.restore();
            h(d, f[4], f[1], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(226.5 * a, 24.583328247070312 * a);
            d.bezierCurveTo(58.5 * a, 207.5833282470703 * a, 143 * a, 116.58332824707031 * a, 59.5 * a, 208.5833282470703 * a);
            d.closePath();
            h(d, void 0, f[1], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(46.133331298828125 * a, 202.64999389648438 * a);
            d.bezierCurveTo(46.133331298828125 * a, 215.64999389648438 * a, 46.133331298828125 * a, 215.64999389648438 * a, 46.133331298828125 * a, 228.64999389648438 * a);
            d.closePath();
            h(d, f[4], f[1], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(55.133331298828125 * a, 211.64999389648438 * a);
            d.bezierCurveTo(55.133331298828125 * a, 225.14999389648438 * a, 55.133331298828125 * a, 225.14999389648438 * a, 55.133331298828125 * a, 238.64999389648438 * a);
            d.bezierCurveTo(50.133331298828125 * a, 235.64999389648438 * a, 50.133331298828125 * a, 235.64999389648438 * a, 45.133331298828125 * a, 232.64999389648438 * a);
            d.bezierCurveTo(45.133331298828125 * a, 216.64999389648438 * a, 45.133331298828125 * a, 216.64999389648438 * a, 45.133331298828125 * a, 200.64999389648438 * a);
            d.closePath();
            h(d, f[4], f[1], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(46.133331298828125 * a, 198.39999389648438 * a);
            d.bezierCurveTo(46.133331298828125 * a, 199.89999389648438 * a, 46.133331298828125 * a, 199.89999389648438 * a, 46.133331298828125 * a, 201.39999389648438 * a);
            d.closePath();
            h(d, f[4], f[1], 8 * a);
            d.save();
            d.translate(249.63333129882812 * a, 120.89999389648438 * a);
            d.rotate(7.04);
            B(d, -58.5 * a, -32 * a, 117 * a, 64 * a, 10 * a);
            d.restore();
            h(d, f[5]);
            return e;
        };

        function Rh(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 170 * a;
            d.height = 170 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(-10 * a, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(72.5 * a, 4.109375 * a);
            c.bezierCurveTo(117 * a, 9.609375 * a, 117 * a, 9.609375 * a, 161.5 * a, 15.109375 * a);
            c.bezierCurveTo(134.5 * a, 106.109375 * a, 110.5 * a, 130.109375 * a, 63.5 * a, 145.109375 * a);
            c.bezierCurveTo(33.5 * a, 120.609375 * a, 33.5 * a, 120.609375 * a, 3.5 * a, 96.109375 * a);
            c.bezierCurveTo(82.5 * a, 75.109375 * a, 69.5 * a, 29.109375 * a, 71.5 * a, 6.109375 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(10 * a, -10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(72.5 * a, 4.109375 * a);
            c.bezierCurveTo(117 * a, 9.609375 * a, 117 * a, 9.609375 * a, 161.5 * a, 15.109375 * a);
            c.bezierCurveTo(134.5 * a, 106.109375 * a, 110.5 * a, 130.109375 * a, 63.5 * a, 145.109375 * a);
            c.bezierCurveTo(33.5 * a, 120.609375 * a, 33.5 * a, 120.609375 * a, 3.5 * a, 96.109375 * a);
            c.bezierCurveTo(82.5 * a, 75.109375 * a, 69.5 * a, 29.109375 * a, 71.5 * a, 6.109375 * a);
            c.closePath();
            h(c, f[1], f[2], 10 * a);
            return d;
        };

        function Ac(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 47 * a;
            e.height = 60 * a;
            e = document.createElement("canvas");
            d = e.getContext("2d");
            e.width = 47 * a;
            e.height = 60 * a;
            A(d, 23.5 * a, 20.734375 * a, 15.132745950421556 * a);
            h(d, void 0, f[2], 4 * a);
            A(d, 23.5 * a, 20.734375 * a, 18.601075237738275 * a);
            h(d, void 0, f[1], 4 * a);
            A(d, 23.5 * a, 20.734375 * a, 11.40175425099138 * a);
            h(d, void 0, f[1], 4 * a);
            d.save();
            d.translate(23 * a, 38.734375 * a);
            d.rotate(0);
            B(d, -21.5 * a, -19 * a, 43 * a, 38 * a, 10 * a);
            d.restore();
            h(d, f[2], f[1], 4 * a);
            d.save();
            d.translate(23.5 * a, 43.734375 * a);
            d.rotate(0.5235987755982988);
            P(d, 3, 8.06225774829855 * a, 0 * a);
            d.restore();
            h(d, f[3]);
            A(d, 23.5 * a, 35.734375 * a, 7.0710678118654755 * a);
            h(d, f[3]);
            return e;
        };

        function Ed(a, e, f, d) {
            var c = document.createElement("canvas"),
                g = c.getContext("2d");
            c.width = 501 * a;
            c.height = 564 * a;
            g.scale(0.5, 0.5);
            g.translate(240 * a, 255 * a);
            g.rotate(d);
            g.globalAlpha = e ? 0.5 : 0.2;
            A(g, 174 * a, 87.984375 * a, 20.8806130178211 * a);
            h(g, f[0], f[0], 8 * a);
            A(g, 174 * a, 87.984375 * a, 12.165525060596439 * a);
            h(g, f[0], f[0], 8 * a);
            A(g, 174 * a, 87.484375 * a, 6 * a);
            h(g, f[0]);
            A(g, 30 * a, 87.984375 * a, 20.8806130178211 * a);
            h(g, f[0], f[0], 4 * a);
            A(g, 30 * a, 87.984375 * a, 12.165525060596439 * a);
            h(g, f[0], f[0], 4 * a);
            A(g, 30 * a, 87.484375 * a, 6 * a);
            h(g, f[0]);
            A(g, 100 * a, 30 * a, 20.8806130178211 * a);
            h(g, f[0], f[0], 4 * a);
            A(g, 100 * a, 30 * a, 12.165525060596439 * a);
            h(g, f[0], f[0], 4 * a);
            A(g, 100 * a, 30 * a, 6 * a);
            h(g, f[0]);
            A(g, 100 * a, 130 * a, 20.8806130178211 * a);
            h(g, f[0], f[0], 4 * a);
            A(g, 100 * a, 130 * a, 12.165525060596439 * a);
            h(g, f[0], f[0], 4 * a);
            A(g, 100 * a, 130 * a, 6 * a);
            h(g, f[0]);
            g.save();
            g.translate(102 * a, 81.984375 * a);
            g.rotate(0);
            B(g, -74 * a, -57 * a, 148 * a, 114 * a, 23 * a);
            g.restore();
            h(g, f[0], f[0], 4 * a);
            g.save();
            g.translate(101 * a, 64.984375 * a);
            g.rotate(0);
            B(g, -33 * a, -10 * a, 66 * a, 20 * a, 15 * a);
            g.restore();
            h(g, f[0], f[0], 4 * a);
            g.save();
            g.translate(102 * a, 63.484375 * a);
            g.rotate(0);
            B(g, -9 * a, -27.5 * a, 18 * a, 55 * a, 15 * a);
            g.restore();
            g.translate(5, -5);
            g.globalAlpha = 1;
            A(g, 174 * a, 87.984375 * a, 20.8806130178211 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 174 * a, 87.984375 * a, 12.165525060596439 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 174 * a, 87.484375 * a, 6 * a);
            h(g, f[2]);
            A(g, 30 * a, 87.984375 * a, 20.8806130178211 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 30 * a, 87.984375 * a, 12.165525060596439 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 30 * a, 87.484375 * a, 6 * a);
            h(g, f[2]);
            A(g, 102 * a, 30 * a, 20.8806130178211 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 102 * a, 30 * a, 12.165525060596439 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 102 * a, 30 * a, 6 * a);
            h(g, f[1]);
            A(g, 102 * a, 130 * a, 20.8806130178211 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 102 * a, 130 * a, 12.165525060596439 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 102 * a, 130 * a, 6 * a);
            h(g, f[1]);
            g.save();
            g.translate(102 * a, 81.984375 * a);
            B(g, -74 * a, -57 * a, 148 * a, 114 * a, 23 * a);
            g.restore();
            h(g, f[1], f[3], 8 * a);
            g.save();
            g.translate(101 * a, 64.984375 * a);
            B(g, -33 * a, -10 * a, 66 * a, 20 * a, 15 * a);
            g.restore();
            h(g, f[2], f[1], 8 * a);
            g.save();
            g.translate(102 * a, 63.484375 * a);
            B(g, -9 * a, -27.5 * a, 18 * a, 55 * a, 15 * a);
            g.restore();
            h(g, f[2], f[1], 8 * a);
            A(g, 135 * a, 107.36605834960938 * a, 21.095023109728988 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 135 * a, 107.36605834960938 * a, 13 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 135 * a, 107.36605834960938 * a, 6.082762530298219 * a);
            h(g, f[2]);
            A(g, 70 * a, 107.36605834960938 * a, 21.095023109728988 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 70 * a, 107.36605834960938 * a, 13 * a);
            h(g, f[1], f[3], 8 * a);
            A(g, 70 * a, 107.36605834960938 * a, 6.082762530298219 * a);
            h(g, f[2]);
            return c;
        };

        function Vc(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 95 * a;
            d.height = 85 * a;
            (0 == f) ? (c.translate(7 * a, 15 * a), c.scale(0.9, 0.9), c.save(), B(c, 0 * a, 5 * a, 90 * a, 60 * a, 10), h(c, e[0]), c.globalCompositeOperation = "destination-out", A(c, 25 * a, 40 * a, 10 * a), c.fill(), A(c, 65 * a, 40 * a, 10 * a), c.fill(), c.restore(), c.save(), B(c, 0, 0, 90 * a, 60 * a, 10 * a), h(c, e[1]), c.globalCompositeOperation = "destination-out", A(c, 25 * a, 40 * a, 10 * a), c.fill(), A(c, 65 * a, 40 * a, 10 * a), c.fill(), c.restore()) : ((1 == f) && (c.scale(0.8, 0.8), c.translate(15 * a, 33 * a), c.save(), c.scale(0.56, 0.56), c.translate(-39 * a, -60 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(32.5 * a, 50.642852783203125 * a), c.bezierCurveTo(83 * a, 69.64285278320312 * a, 83 * a, 69.64285278320312 * a, 133.5 * a, 88.64285278320312 * a), c.bezierCurveTo(93 * a, 92.64285278320312 * a, 93 * a, 92.64285278320312 * a, 52.5 * a, 96.64285278320312 * a), c.bezierCurveTo(30.5 * a, 100.64285278320312 * a, 36.5 * a, 94.64285278320312 * a, 32.5 * a, 84.64285278320312 * a), c.bezierCurveTo(21.5 * a, 45.642852783203125 * a, 24.5 * a, 48.642852783203125 * a, 31.5 * a, 50.642852783203125 * a), c.closePath(), h(c, e[1]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(116.5 * a, 85.64285278320312 * a), c.bezierCurveTo(160.5 * a, 67.14285278320312 * a, 160.5 * a, 67.14285278320312 * a, 204.5 * a, 48.642852783203125 * a), c.bezierCurveTo(220.5 * a, 42.642852783203125 * a, 208.5 * a, 68.64285278320312 * a, 205.5 * a, 85.64285278320312 * a), c.bezierCurveTo(202.5 * a, 98.64285278320312 * a, 199.5 * a, 98.64285278320312 * a, 188.5 * a, 100.64285278320312 * a), c.closePath(), h(c, e[1]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(166.5 * a, 68.64285278320312 * a), c.bezierCurveTo(147.5 * a, 72.64285278320312 * a, 145.5 * a, 73.64285278320312 * a, 142.5 * a, 62.642852783203125 * a), c.bezierCurveTo(121.5 * a, 12.642852783203125 * a, 122.5 * a, 5.642852783203125 * a, 117.5 * a, 15.642852783203125 * a), c.bezierCurveTo(105.5 * a, 40.642852783203125 * a, 105.5 * a, 40.642852783203125 * a, 93.5 * a, 65.64285278320312 * a), c.bezierCurveTo(89.5 * a, 74.64285278320312 * a, 84.5 * a, 72.64285278320312 * a, 73.5 * a, 74.64285278320312 * a), c.bezierCurveTo(98 * a, 87.64285278320312 * a, 98 * a, 87.64285278320312 * a, 122.5 * a, 100.64285278320312 * a), c.closePath(), h(c, e[1]), c.restore(), c.save(), B(c, 0, 15 * a, 90 * a, 50 * a, 10 * a), h(c, e[0]), B(c, 0, 10 * a, 90 * a, 50 * a, 10 * a), h(c, e[1]), c.globalCompositeOperation = "destination-out", A(c, 25 * a, 40 * a, 10 * a), c.fill(), A(c, 65 * a, 40 * a, 10 * a), c.fill(), c.restore()));
            return d;
        };

        function nb(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 120 * a;
            d.height = 100 * a;
            B(c, 10 * a, 10 * a, 95 * a, 80 * a, 10 * a);
            h(c, e[2]);
            B(c, 10 * a, 5 * a, 95 * a, 80 * a, 10 * a);
            h(c, e[3], e[4], 4 * a);
            (0 == f) ? (e = Vc(0.75 * a, e, 0), c.drawImage(e, 22 * a, 18 * a)) : ((1 == f) && (e = Vc(0.75 * a, e, 1), c.drawImage(e, 22 * a, 18 * a)));
            return d;
        };

        function mg(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 185 * a;
            d.height = 164 * a;
            c.translate(0, 0);
            var g;
            g = document.createElement("canvas");
            var k = g.getContext("2d");
            g.width = 201 * a;
            g.height = 164 * a;
            k.translate(0, 5 * a);
            k.globalAlpha = e ? 0.5 : 1;
            A(k, 100.5 * a, 82 * a, 74.92746655359852 * a);
            h(k, f[0], f[0], 4 * a);
            A(k, 100.5 * a, 82 * a, 65.9417374971317 * a);
            h(k, f[0], f[0], 4 * a);
            k.translate(0, -5);
            k.globalAlpha = 1;
            A(k, 100.5 * a, 82 * a, 74.92746655359852 * a);
            h(k, f[1], f[3], 4 * a);
            A(k, 100.5 * a, 82 * a, 65.9417374971317 * a);
            h(k, f[1], f[2], 4 * a);
            A(k, 100.5 * a, 82 * a, 35.9417374971317 * a);
            h(k, f[1], f[2], 20 * a);
            A(k, 100.5 * a, 82 * a, 15.9417374971317 * a);
            h(k, f[1], f[2], 6 * a);
            c.drawImage(g, -10 * a, 0 * a);
            g = Ed(a, e, f, 0);
            c.drawImage(g, -83 * a, -40 * a);
            g = Ed(a, e, f, Math.PI / 1.4);
            c.drawImage(g, -15 * a, -88 * a);
            g = Ed(a, e, f, Math.PI / -1.4);
            c.drawImage(g, 15 * a, -8 * a);
            return d;
        };

        function Bc(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 450 * a;
            e.height = 790 * a;
            d.translate(5 * a, 5 * a);
            d.globalAlpha = 0;
            A(d, 178.5 * a, 172.828125 * a, 150 * a);
            h(d, void 0, f[0], 65 * a);
            A(d, 178.5 * a, 172.828125 * a, 150 * a);
            h(d, void 0, f[0], 55 * a);
            d.closePath();
            d.save();
            d.translate(177 * a, 512.328125 * a);
            B(d, -25 * a, -202.5 * a, 65 * a, 405 * a, 25 * a);
            d.restore();
            h(d, f[0]);
            d.save();
            d.translate(136 * a, 581.828125 * a);
            B(d, -39 * a, -23 * a, 78 * a, 46 * a, 25 * a);
            d.restore();
            h(d, f[0]);
            d.save();
            d.translate(135.5 * a, 663.828125 * a);
            B(d, -39.5 * a, -22 * a, 79 * a, 44 * a, 25 * a);
            d.restore();
            h(d, f[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(114 * a, 594.828125 * a);
            d.bezierCurveTo(175 * a, 596.828125 * a, 163 * a, 596.828125 * a, 172 * a, 594.828125 * a);
            d.bezierCurveTo(171.5 * a, 633.828125 * a, 171.5 * a, 633.828125 * a, 171 * a, 672.828125 * a);
            d.bezierCurveTo(110 * a, 673.828125 * a, 140.5 * a, 673.328125 * a, 110 * a, 673.828125 * a);
            d.bezierCurveTo(110.5 * a, 661.828125 * a, 110.5 * a, 661.828125 * a, 111 * a, 649.828125 * a);
            d.bezierCurveTo(157 * a, 633.828125 * a, 134 * a, 607.828125 * a, 114 * a, 594.828125 * a);
            d.closePath();
            h(d, f[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.translate(0, 5 * a);
            d.moveTo(140 * a, 294.828125 * a);
            d.bezierCurveTo(212 * a, 295.828125 * a, 176.5 * a, 295.328125 * a, 213 * a, 295.828125 * a);
            d.bezierCurveTo(201.5 * a, 325.328125 * a, 201.5 * a, 325.328125 * a, 190 * a, 354.828125 * a);
            d.bezierCurveTo(175.5 * a, 355.828125 * a, 175.5 * a, 355.828125 * a, 161 * a, 356.828125 * a);
            d.bezierCurveTo(154.5 * a, 328.828125 * a, 154.5 * a, 328.828125 * a, 148 * a, 300.828125 * a);
            d.closePath();
            h(d, f[0]);
            d.translate(3, -5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(159 * a, 679.828125 * a);
            d.bezierCurveTo(180 * a, 665.828125 * a, 155 * a, 675.828125 * a, 151 * a, 671.828125 * a);
            d.bezierCurveTo(154.5 * a, 685.328125 * a, 154.5 * a, 685.328125 * a, 158 * a, 698.828125 * a);
            d.bezierCurveTo(171 * a, 699.828125 * a, 171 * a, 699.828125 * a, 184 * a, 700.828125 * a);
            d.closePath();
            h(d, f[0]);
            d.save();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(157 * a, 548.828125 * a);
            d.bezierCurveTo(157 * a, 561.828125 * a, 157 * a, 561.828125 * a, 157 * a, 574.828125 * a);
            d.bezierCurveTo(132.5 * a, 580.828125 * a, 132.5 * a, 580.828125 * a, 108 * a, 586.828125 * a);
            d.bezierCurveTo(112 * a, 599.828125 * a, 111 * a, 593.828125 * a, 112 * a, 599.828125 * a);
            d.bezierCurveTo(159 * a, 603.828125 * a, 126.5 * a, 601.328125 * a, 141 * a, 602.828125 * a);
            d.bezierCurveTo(145 * a, 641.828125 * a, 143.5 * a, 623.828125 * a, 146 * a, 644.828125 * a);
            d.bezierCurveTo(129.5 * a, 645.328125 * a, 129.5 * a, 645.328125 * a, 113 * a, 645.828125 * a);
            d.bezierCurveTo(107.5 * a, 652.828125 * a, 107.5 * a, 652.828125 * a, 102 * a, 659.828125 * a);
            d.bezierCurveTo(104 * a, 669.328125 * a, 104 * a, 669.328125 * a, 106 * a, 678.828125 * a);
            d.bezierCurveTo(145 * a, 679.328125 * a, 145 * a, 679.328125 * a, 184 * a, 679.828125 * a);
            d.bezierCurveTo(185 * a, 615.828125 * a, 185 * a, 615.828125 * a, 186 * a, 551.828125 * a);
            d.bezierCurveTo(172.5 * a, 551.328125 * a, 172.5 * a, 551.328125 * a, 159 * a, 550.828125 * a);
            d.closePath();
            h(d, f[0], f[0], 7 * a);
            d.restore();
            d.globalAlpha = 1;
            d.translate(15 * a, 35 * a);
            A(d, 178.5 * a, 172.828125 * a, 150 * a);
            h(d, void 0, f[2], 95 * a);
            A(d, 178.5 * a, 172.828125 * a, 150 * a);
            h(d, void 0, f[1], 55 * a);
            d.closePath();
            d.save();
            d.translate(177 * a, 512.328125 * a);
            B(d, -25 * a, -202.5 * a, 65 * a, 405 * a, 25 * a);
            d.restore();
            h(d, f[1], f[2], 20 * a);
            d.save();
            d.translate(136 * a, 581.828125 * a);
            B(d, -39 * a, -23 * a, 78 * a, 46 * a, 25 * a);
            d.restore();
            h(d, f[1], f[2], 20 * a);
            d.save();
            d.translate(135.5 * a, 663.828125 * a);
            B(d, -39.5 * a, -22 * a, 79 * a, 44 * a, 25 * a);
            d.restore();
            h(d, f[1], f[2], 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(114 * a, 594.828125 * a);
            d.bezierCurveTo(175 * a, 596.828125 * a, 163 * a, 596.828125 * a, 172 * a, 594.828125 * a);
            d.bezierCurveTo(171.5 * a, 633.828125 * a, 171.5 * a, 633.828125 * a, 171 * a, 672.828125 * a);
            d.bezierCurveTo(110 * a, 673.828125 * a, 140.5 * a, 673.328125 * a, 110 * a, 673.828125 * a);
            d.bezierCurveTo(110.5 * a, 661.828125 * a, 110.5 * a, 661.828125 * a, 111 * a, 649.828125 * a);
            d.bezierCurveTo(157 * a, 633.828125 * a, 134 * a, 607.828125 * a, 114 * a, 594.828125 * a);
            d.closePath();
            h(d, f[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.translate(0, 5 * a);
            d.moveTo(123 * a, 294.828125 * a);
            d.bezierCurveTo(212 * a, 295.828125 * a, 190.5 * a, 295.328125 * a, 250 * a, 295.828125 * a);
            d.bezierCurveTo(231.5 * a, 325.328125 * a, 231.5 * a, 325.328125 * a, 220 * a, 354.828125 * a);
            d.bezierCurveTo(175.5 * a, 355.828125 * a, 175.5 * a, 355.828125 * a, 140 * a, 356.828125 * a);
            d.bezierCurveTo(123.5 * a, 328.828125 * a, 123.5 * a, 328.828125 * a, 123 * a, 294.828125 * a);
            d.closePath();
            h(d, f[1]);
            d.translate(0, -5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(159 * a, 679.828125 * a);
            d.bezierCurveTo(180 * a, 665.828125 * a, 155 * a, 675.828125 * a, 151 * a, 671.828125 * a);
            d.bezierCurveTo(154.5 * a, 685.328125 * a, 154.5 * a, 685.328125 * a, 158 * a, 698.828125 * a);
            d.bezierCurveTo(171 * a, 699.828125 * a, 171 * a, 699.828125 * a, 184 * a, 700.828125 * a);
            d.closePath();
            h(d, f[1]);
            d.save();
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(157 * a, 548.828125 * a);
            d.bezierCurveTo(157 * a, 561.828125 * a, 157 * a, 561.828125 * a, 157 * a, 574.828125 * a);
            d.bezierCurveTo(132.5 * a, 580.828125 * a, 132.5 * a, 580.828125 * a, 108 * a, 586.828125 * a);
            d.bezierCurveTo(112 * a, 599.828125 * a, 111 * a, 593.828125 * a, 112 * a, 599.828125 * a);
            d.bezierCurveTo(159 * a, 603.828125 * a, 126.5 * a, 601.328125 * a, 141 * a, 602.828125 * a);
            d.bezierCurveTo(145 * a, 641.828125 * a, 143.5 * a, 623.828125 * a, 146 * a, 644.828125 * a);
            d.bezierCurveTo(129.5 * a, 645.328125 * a, 129.5 * a, 645.328125 * a, 113 * a, 645.828125 * a);
            d.bezierCurveTo(107.5 * a, 652.828125 * a, 107.5 * a, 652.828125 * a, 102 * a, 659.828125 * a);
            d.bezierCurveTo(104 * a, 669.328125 * a, 104 * a, 669.328125 * a, 106 * a, 678.828125 * a);
            d.bezierCurveTo(145 * a, 679.328125 * a, 145 * a, 679.328125 * a, 184 * a, 679.828125 * a);
            d.bezierCurveTo(185 * a, 615.828125 * a, 185 * a, 615.828125 * a, 186 * a, 551.828125 * a);
            d.bezierCurveTo(172.5 * a, 551.328125 * a, 172.5 * a, 551.328125 * a, 159 * a, 550.828125 * a);
            d.closePath();
            h(d, f[1], f[1], 7 * a);
            d.restore();
            return e;
        };

        function Le(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 202 * a;
            e.height = 202 * a;
            d.translate(2 * a, 1 * a);
            d.globalAlpha = 0.3;
            A(d, 98 * a, 99 * a, 100 * a);
            h(d, f[0]);
            d.globalAlpha = 0.5;
            A(d, 98 * a, 99 * a, 90 * a);
            h(d, f[1]);
            return e;
        };

        function Me(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 89 * a;
            e.height = 89 * a;
            d.save();
            d.translate(44.5 * a, 44.5 * a);
            P(d, 6, 40 * a, 10 * a);
            d.restore();
            h(d, f[0], f[1], 5 * a);
            d.save();
            d.translate(44.5 * a, 44.5 * a);
            P(d, 6, 25.11521001172521 * a, 10 * a);
            d.restore();
            h(d, f[2], f[3], 5 * a);
            return e;
        };

        function Ne(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 88 * a;
            e.height = 88 * a;
            d.save();
            d.translate(44 * a, 44 * a);
            d.rotate(0.52);
            P(d, 6, 43 * a, 10 * a);
            d.restore();
            h(d, f[0], f[1], 3 * a);
            return e;
        };

        function Oe(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 202 * a;
            d.height = 202 * a;
            c.translate(2 * a, 1 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.save();
            c.translate(98 * a, 41.15177917480469 * a);
            c.rotate(0.8);
            B(c, -16 * a, -16.5 * a, 32 * a, 33 * a, 7 * a);
            c.restore();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(98 * a, 22.5089111328125 * a);
            c.bezierCurveTo(97.5 * a, 41.5089111328125 * a, 97.5 * a, 41.5089111328125 * a, 97 * a, 60.5089111328125 * a);
            h(c, f[2]);
            c.save();
            c.translate(147.5 * a, 69.5089111328125 * a);
            c.rotate(0.2);
            B(c, -15.5 * a, -16 * a, 31 * a, 32 * a, 7 * a);
            c.restore();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(163 * a, 59.50892639160156 * a);
            c.bezierCurveTo(147 * a, 69.50892639160156 * a, 127 * a, 82.50892639160156 * a, 131 * a, 79.50892639160156 * a);
            h(c, f[2]);
            c.save();
            c.translate(143.5 * a, 128.2946319580078 * a);
            c.rotate(1.24);
            B(c, -16.5 * a, -17.5 * a, 33 * a, 35 * a, 7 * a);
            c.restore();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(162 * a, 135.93748474121094 * a);
            c.bezierCurveTo(143.5 * a, 128.43748474121094 * a, 129 * a, 120.93748474121094 * a, 125 * a, 120.93748474121094 * a);
            h(c, f[2]);
            c.save();
            c.translate(99 * a, 156.08035278320312 * a);
            c.rotate(0.84);
            B(c, -18 * a, -18 * a, 36 * a, 36 * a, 7 * a);
            c.restore();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(98 * a, 136.08035278320312 * a);
            c.bezierCurveTo(98 * a, 156.08035278320312 * a, 98 * a, 156.08035278320312 * a, 98 * a, 176.08035278320312 * a);
            h(c, f[2]);
            c.save();
            c.translate(54 * a, 72.22320556640625 * a);
            c.rotate(1.32);
            B(c, -18 * a, -19 * a, 36 * a, 38 * a, 7 * a);
            c.restore();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(34 * a, 60.79463195800781 * a);
            c.bezierCurveTo(53.5 * a, 72.29463195800781 * a, 69 * a, 79.79463195800781 * a, 73 * a, 83.79463195800781 * a);
            h(c, f[2]);
            c.save();
            c.translate(49 * a, 127.29463195800781 * a);
            c.rotate(1.76);
            B(c, -20 * a, -17.5 * a, 40 * a, 35 * a, 7 * a);
            c.restore();
            h(c, f[2]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 141.7946319580078 * a);
            c.bezierCurveTo(47 * a, 130.2946319580078 * a, 64 * a, 119.79463195800781 * a, 64 * a, 118.79463195800781 * a);
            h(c, f[2]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.save();
            c.translate(98 * a, 41.15177917480469 * a);
            c.rotate(0.8);
            B(c, -16 * a, -16.5 * a, 32 * a, 33 * a, 7 * a);
            c.restore();
            h(c, f[3], f[4], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(98 * a, 22.5089111328125 * a);
            c.bezierCurveTo(97.5 * a, 41.5089111328125 * a, 97.5 * a, 41.5089111328125 * a, 97 * a, 60.5089111328125 * a);
            h(c, void 0, f[4], 5 * a);
            c.save();
            c.translate(147.5 * a, 69.5089111328125 * a);
            c.rotate(0.2);
            B(c, -15.5 * a, -16 * a, 31 * a, 32 * a, 7 * a);
            c.restore();
            h(c, f[3], f[4], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(163 * a, 59.50892639160156 * a);
            c.bezierCurveTo(147 * a, 69.50892639160156 * a, 127 * a, 82.50892639160156 * a, 131 * a, 79.50892639160156 * a);
            h(c, void 0, f[4], 5 * a);
            c.save();
            c.translate(143.5 * a, 128.2946319580078 * a);
            c.rotate(1.24);
            B(c, -16.5 * a, -17.5 * a, 33 * a, 35 * a, 7 * a);
            c.restore();
            h(c, f[3], f[4], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(162 * a, 135.93748474121094 * a);
            c.bezierCurveTo(143.5 * a, 128.43748474121094 * a, 129 * a, 120.93748474121094 * a, 125 * a, 120.93748474121094 * a);
            h(c, void 0, f[4], 5 * a);
            c.save();
            c.translate(99 * a, 156.08035278320312 * a);
            c.rotate(0.84);
            B(c, -18 * a, -18 * a, 36 * a, 36 * a, 7 * a);
            c.restore();
            h(c, f[3], f[4], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(98 * a, 136.08035278320312 * a);
            c.bezierCurveTo(98 * a, 156.08035278320312 * a, 98 * a, 156.08035278320312 * a, 98 * a, 176.08035278320312 * a);
            h(c, void 0, f[4], 5 * a);
            c.save();
            c.translate(54 * a, 72.22320556640625 * a);
            c.rotate(1.32);
            B(c, -18 * a, -19 * a, 36 * a, 38 * a, 7 * a);
            c.restore();
            h(c, f[3], f[4], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(34 * a, 60.79463195800781 * a);
            c.bezierCurveTo(53.5 * a, 72.29463195800781 * a, 69 * a, 79.79463195800781 * a, 73 * a, 83.79463195800781 * a);
            h(c, void 0, f[4], 5 * a);
            c.save();
            c.translate(49 * a, 127.29463195800781 * a);
            c.rotate(1.76);
            B(c, -20 * a, -17.5 * a, 40 * a, 35 * a, 7 * a);
            c.restore();
            h(c, f[3], f[4], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(30 * a, 141.7946319580078 * a);
            c.bezierCurveTo(47 * a, 130.2946319580078 * a, 64 * a, 119.79463195800781 * a, 64 * a, 118.79463195800781 * a);
            h(c, void 0, f[4], 5 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.save();
            c.translate(98 * a, 99 * a);
            P(c, 6, 70.28669492273468 * a, 10 * a);
            c.restore();
            h(c, f[2]);
            c.save();
            c.translate(98 * a, 99 * a);
            P(c, 6, 56.455940020351264 * a, 10 * a);
            c.restore();
            h(c, f[2]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.save();
            c.translate(98 * a, 99 * a);
            P(c, 6, 70.28669492273468 * a, 10 * a);
            c.restore();
            h(c, f[5], f[6], 5 * a);
            c.save();
            c.translate(98 * a, 99 * a);
            P(c, 6, 56.455940020351264 * a, 10 * a);
            c.restore();
            h(c, f[7], f[8], 7 * a);
            return d;
        };

        function Fd(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 161 * a;
            e.height = 184 * a;
            d.translate(0, 10 * a);
            d.globalAlpha = 1;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105.5 * a, 34.609375 * a);
            d.bezierCurveTo(48.5 * a, 7.609375 * a, 11.5 * a, 58.609375 * a, 20.5 * a, 97.609375 * a);
            d.bezierCurveTo(44.5 * a, 161.609375 * a, 70.5 * a, 171.609375 * a, 88.5 * a, 156.609375 * a);
            d.bezierCurveTo(120.5 * a, 129.609375 * a, 123.5 * a, 105.609375 * a, 128.5 * a, 83.609375 * a);
            d.bezierCurveTo(137.5 * a, 79.609375 * a, 141.5 * a, 79.609375 * a, 146.5 * a, 81.609375 * a);
            d.bezierCurveTo(153.5 * a, 70.609375 * a, 151.5 * a, 65.609375 * a, 148.5 * a, 61.609375 * a);
            d.bezierCurveTo(134.5 * a, 60.609375 * a, 131.5 * a, 63.609375 * a, 127.5 * a, 66.609375 * a);
            d.bezierCurveTo(127.5 * a, 55.609375 * a, 125.5 * a, 54.609375 * a, 120.5 * a, 51.609375 * a);
            d.bezierCurveTo(128.5 * a, 42.609375 * a, 136.5 * a, 38.609375 * a, 147.5 * a, 39.609375 * a);
            d.bezierCurveTo(152.5 * a, 23.609375 * a, 147.5 * a, 21.609375 * a, 140.5 * a, 17.609375 * a);
            d.bezierCurveTo(120.5 * a, 17.609375 * a, 114.5 * a, 27.609375 * a, 106.5 * a, 35.609375 * a);
            d.closePath();
            h(d, f[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(45.5 * a, 144.609375 * a);
            d.bezierCurveTo(35.5 * a, 155.609375 * a, 37 * a, 152.109375 * a, 28.5 * a, 159.609375 * a);
            d.bezierCurveTo(16.5 * a, 154.609375 * a, 16.5 * a, 151.609375 * a, 17.5 * a, 141.609375 * a);
            d.bezierCurveTo(25.5 * a, 134.109375 * a, 25.5 * a, 134.109375 * a, 33.5 * a, 126.609375 * a);
            h(d, f[0]);
            d.translate(0, -10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(45.5 * a, 144.609375 * a);
            d.bezierCurveTo(35.5 * a, 155.609375 * a, 37 * a, 152.109375 * a, 28.5 * a, 159.609375 * a);
            d.bezierCurveTo(16.5 * a, 154.609375 * a, 16.5 * a, 151.609375 * a, 17.5 * a, 141.609375 * a);
            d.bezierCurveTo(25.5 * a, 134.109375 * a, 25.5 * a, 134.109375 * a, 33.5 * a, 126.609375 * a);
            h(d, f[1], f[2], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(105.5 * a, 34.609375 * a);
            d.bezierCurveTo(48.5 * a, 7.609375 * a, 11.5 * a, 58.609375 * a, 20.5 * a, 97.609375 * a);
            d.bezierCurveTo(44.5 * a, 161.609375 * a, 70.5 * a, 171.609375 * a, 88.5 * a, 156.609375 * a);
            d.bezierCurveTo(120.5 * a, 129.609375 * a, 123.5 * a, 105.609375 * a, 128.5 * a, 83.609375 * a);
            d.bezierCurveTo(137.5 * a, 79.609375 * a, 141.5 * a, 79.609375 * a, 146.5 * a, 81.609375 * a);
            d.bezierCurveTo(153.5 * a, 70.609375 * a, 151.5 * a, 65.609375 * a, 148.5 * a, 61.609375 * a);
            d.bezierCurveTo(134.5 * a, 60.609375 * a, 131.5 * a, 63.609375 * a, 127.5 * a, 66.609375 * a);
            d.bezierCurveTo(127.5 * a, 55.609375 * a, 125.5 * a, 54.609375 * a, 120.5 * a, 51.609375 * a);
            d.bezierCurveTo(128.5 * a, 42.609375 * a, 136.5 * a, 38.609375 * a, 147.5 * a, 39.609375 * a);
            d.bezierCurveTo(152.5 * a, 23.609375 * a, 147.5 * a, 21.609375 * a, 140.5 * a, 17.609375 * a);
            d.bezierCurveTo(120.5 * a, 17.609375 * a, 114.5 * a, 27.609375 * a, 106.5 * a, 35.609375 * a);
            d.closePath();
            h(d, f[1], f[2], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(104.5 * a, 35.609375 * a);
            d.bezierCurveTo(71.5 * a, 36.609375 * a, 57.5 * a, 52.609375 * a, 58.5 * a, 81.609375 * a);
            d.bezierCurveTo(59.5 * a, 103.609375 * a, 66.5 * a, 107.609375 * a, 66.5 * a, 116.609375 * a);
            d.bezierCurveTo(67.5 * a, 128.609375 * a, 65.5 * a, 131.609375 * a, 63.5 * a, 137.609375 * a);
            h(d, void 0, f[2], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(59.5 * a, 72.609375 * a);
            d.bezierCurveTo(38.5 * a, 80.609375 * a, 43.5 * a, 81.609375 * a, 37.5 * a, 89.609375 * a);
            h(d, void 0, f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(60.5 * a, 85.609375 * a);
            d.bezierCurveTo(75.5 * a, 91.609375 * a, 76.5 * a, 96.609375 * a, 81.5 * a, 104.609375 * a);
            h(d, void 0, f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(68.5 * a, 122.609375 * a);
            d.bezierCurveTo(79.5 * a, 130.609375 * a, 74.5 * a, 128.609375 * a, 80.5 * a, 134.609375 * a);
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(142.5 * a, 18.609375 * a);
            d.bezierCurveTo(151.5 * a, 28.609375 * a, 151.5 * a, 32.609375 * a, 146.5 * a, 40.609375 * a);
            d.bezierCurveTo(137.5 * a, 26.609375 * a, 138.5 * a, 24.609375 * a, 142.5 * a, 19.609375 * a);
            d.closePath();
            h(d, f[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(146.5 * a, 61.50892639160156 * a);
            d.bezierCurveTo(157.5 * a, 69.50892639160156 * a, 150.5 * a, 79.50892639160156 * a, 145.5 * a, 81.50892639160156 * a);
            d.bezierCurveTo(140.5 * a, 65.50892639160156 * a, 144.5 * a, 64.50892639160156 * a, 146.5 * a, 62.50892639160156 * a);
            d.closePath();
            h(d, f[3]);
            return e;
        };

        function Pe(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 104 * a;
            e.height = 117 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(4 * a, 90 * a);
            d.bezierCurveTo(20 * a, 99.5 * a, 20 * a, 99.5 * a, 36 * a, 109 * a);
            d.bezierCurveTo(67 * a, 92 * a, 67 * a, 92 * a, 98 * a, 75 * a);
            d.bezierCurveTo(91 * a, 27 * a, 91 * a, 27 * a, 91 * a, 28 * a);
            d.bezierCurveTo(72.5 * a, 16 * a, 72.5 * a, 16 * a, 54 * a, 4 * a);
            d.bezierCurveTo(33.5 * a, 10 * a, 33.5 * a, 10 * a, 13 * a, 16 * a);
            d.closePath();
            h(d, f[0]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(6 * a, 76 * a);
            d.bezierCurveTo(13.5 * a, 51.5 * a, 13.5 * a, 51.5 * a, 21 * a, 27 * a);
            d.bezierCurveTo(37.5 * a, 17 * a, 37.5 * a, 17 * a, 54 * a, 7 * a);
            d.bezierCurveTo(33.5 * a, 12.5 * a, 33.5 * a, 12.5 * a, 13 * a, 18 * a);
            d.closePath();
            h(d, f[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(24 * a, 62 * a);
            d.bezierCurveTo(28.5 * a, 53 * a, 28.5 * a, 53 * a, 33 * a, 44 * a);
            d.bezierCurveTo(41.5 * a, 41 * a, 41.5 * a, 41 * a, 50 * a, 38 * a);
            d.bezierCurveTo(52.5 * a, 35 * a, 52.5 * a, 35 * a, 55 * a, 32 * a);
            d.bezierCurveTo(52 * a, 30 * a, 52 * a, 30 * a, 49 * a, 28 * a);
            d.bezierCurveTo(38 * a, 31.5 * a, 38 * a, 31.5 * a, 27 * a, 35 * a);
            d.closePath();
            h(d, f[1]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(36 * a, 107 * a);
            d.bezierCurveTo(66 * a, 90.5 * a, 66 * a, 90.5 * a, 96 * a, 74 * a);
            d.bezierCurveTo(93 * a, 52.5 * a, 93 * a, 52.5 * a, 90 * a, 31 * a);
            d.bezierCurveTo(87 * a, 48 * a, 87 * a, 48 * a, 84 * a, 65 * a);
            d.closePath();
            h(d, f[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(1 * a, 89 * a);
            d.bezierCurveTo(18 * a, 100 * a, 34 * a, 110 * a, 35 * a, 111 * a);
            d.bezierCurveTo(67 * a, 93 * a, 67 * a, 93 * a, 99 * a, 75 * a);
            d.bezierCurveTo(100 * a, 78.5 * a, 100 * a, 78.5 * a, 101 * a, 82 * a);
            d.bezierCurveTo(68 * a, 99 * a, 68 * a, 99 * a, 35 * a, 116 * a);
            d.bezierCurveTo(18 * a, 106.5 * a, 18 * a, 106.5 * a, 1 * a, 97 * a);
            d.closePath();
            h(d, f[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(36 * a, 107 * a);
            d.bezierCurveTo(66.5 * a, 91.5 * a, 66.5 * a, 91.5 * a, 97 * a, 76 * a);
            d.bezierCurveTo(94.5 * a, 52 * a, 94.5 * a, 52 * a, 92 * a, 28 * a);
            d.bezierCurveTo(73 * a, 15.5 * a, 73 * a, 15.5 * a, 54 * a, 3 * a);
            d.bezierCurveTo(33 * a, 9.5 * a, 33 * a, 9.5 * a, 12 * a, 16 * a);
            d.bezierCurveTo(8 * a, 53 * a, 8 * a, 53 * a, 4 * a, 90 * a);
            d.bezierCurveTo(18.5 * a, 99 * a, 18.5 * a, 99 * a, 33 * a, 108 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(22 * a, 71 * a);
            d.bezierCurveTo(30 * a, 76.5 * a, 30 * a, 76.5 * a, 38 * a, 82 * a);
            d.bezierCurveTo(53 * a, 72 * a, 53 * a, 72 * a, 68 * a, 62 * a);
            d.bezierCurveTo(68 * a, 52 * a, 68 * a, 52 * a, 68 * a, 42 * a);
            d.bezierCurveTo(59.5 * a, 35.5 * a, 59.5 * a, 35.5 * a, 51 * a, 29 * a);
            d.bezierCurveTo(39.5 * a, 32 * a, 39.5 * a, 32 * a, 28 * a, 35 * a);
            d.bezierCurveTo(25 * a, 52 * a, 25 * a, 52 * a, 22 * a, 69 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(5 * a, 89 * a);
            d.bezierCurveTo(20 * a, 73 * a, 12.5 * a, 80.5 * a, 20 * a, 72 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(35 * a, 102 * a);
            d.bezierCurveTo(36 * a, 92.5 * a, 36 * a, 92.5 * a, 37 * a, 83 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(68 * a, 62 * a);
            d.bezierCurveTo(81 * a, 67.5 * a, 81 * a, 67.5 * a, 94 * a, 73 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(70 * a, 41 * a);
            d.bezierCurveTo(80 * a, 35.5 * a, 80 * a, 35.5 * a, 90 * a, 30 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(28 * a, 33 * a);
            d.bezierCurveTo(21.5 * a, 26.5 * a, 21.5 * a, 26.5 * a, 15 * a, 20 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(51 * a, 28 * a);
            d.bezierCurveTo(53 * a, 17 * a, 53 * a, 17 * a, 55 * a, 6 * a);
            d.closePath();
            h(d, void 0, f[4], 6 * a);
            return e;
        };

        function Qe(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 105 * a;
            d.height = 144 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(-5 * a, 0 * a);
            c.save();
            c.translate(52.5 * a, 91.5 * a);
            B(c, -4.5 * a, -39 * a, 9 * a, 78 * a, 5 * a);
            c.restore();
            h(c, f[0], f[0], 3 * a);
            c.save();
            c.translate(53 * a, 36 * a);
            B(c, -29 * a, -17.5 * a, 58 * a, 35 * a, 5 * a);
            c.restore();
            h(c, f[0], f[0], 4 * a);
            c.save();
            c.translate(53.5 * a, 35.5 * a);
            B(c, -26.5 * a, -15 * a, 53 * a, 30 * a, 5 * a);
            c.restore();
            h(c, f[0], f[0], 4 * a);
            c.translate(5 * a, 0 * a);
            c.globalAlpha = 1;
            c.save();
            c.translate(52.5 * a, 91.5 * a);
            B(c, -4.5 * a, -39 * a, 9 * a, 78 * a, 5 * a);
            c.restore();
            h(c, f[1], f[2], 3 * a);
            c.save();
            c.translate(53 * a, 36 * a);
            B(c, -29 * a, -17.5 * a, 58 * a, 35 * a, 5 * a);
            c.restore();
            h(c, f[3], f[4], 4 * a);
            c.save();
            c.translate(53.5 * a, 35.5 * a);
            B(c, -26.5 * a, -15 * a, 53 * a, 30 * a, 5 * a);
            c.restore();
            h(c, f[5], f[6], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(49 * a, 60.5 * a);
            c.bezierCurveTo(44 * a, 56.5 * a, 44 * a, 56.5 * a, 39 * a, 52.5 * a);
            c.bezierCurveTo(39 * a, 46.5 * a, 39 * a, 46.5 * a, 39 * a, 40.5 * a);
            c.bezierCurveTo(44 * a, 44 * a, 44 * a, 44 * a, 49 * a, 47.5 * a);
            c.bezierCurveTo(49 * a, 54 * a, 49 * a, 54 * a, 49 * a, 60.5 * a);
            c.closePath();
            h(c, f[7], f[6], 3 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(66 * a, 40.5 * a);
            c.bezierCurveTo(66 * a, 46.5 * a, 66 * a, 46.5 * a, 66 * a, 52.5 * a);
            c.bezierCurveTo(60.5 * a, 56.5 * a, 60.5 * a, 56.5 * a, 55 * a, 60.5 * a);
            c.bezierCurveTo(56 * a, 53 * a, 56 * a, 53 * a, 57 * a, 45.5 * a);
            c.bezierCurveTo(61.5 * a, 43 * a, 61.5 * a, 43 * a, 66 * a, 40.5 * a);
            c.closePath();
            h(c, f[7], f[6], 3 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 33.5 * a);
            c.bezierCurveTo(55.5 * a, 41 * a, 55.5 * a, 41 * a, 59 * a, 48.5 * a);
            c.bezierCurveTo(56 * a, 58 * a, 56 * a, 58 * a, 53 * a, 67.5 * a);
            c.bezierCurveTo(49 * a, 58 * a, 49 * a, 58 * a, 45 * a, 48.5 * a);
            c.bezierCurveTo(48.5 * a, 41 * a, 48.5 * a, 41 * a, 52 * a, 33.5 * a);
            c.closePath();
            h(c, f[9], f[8], 3 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(52 * a, 47.5 * a);
            c.bezierCurveTo(54.5 * a, 50.5 * a, 54.5 * a, 50.5 * a, 57 * a, 53.5 * a);
            c.bezierCurveTo(55 * a, 60 * a, 55 * a, 60 * a, 53 * a, 66.5 * a);
            c.bezierCurveTo(50.5 * a, 61 * a, 50.5 * a, 61 * a, 48 * a, 55.5 * a);
            c.bezierCurveTo(50 * a, 52 * a, 50 * a, 52 * a, 52 * a, 48.5 * a);
            c.closePath();
            h(c, f[11], f[10], 3 * a);
            return d;
        };

        function Wc(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 46 * a;
            d.height = 140 * a;
            c.scale(-1 * a, 1 * a);
            c.translate(-50 * a, 40 * a);
            c.translate(-20 * a, 0);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(10 * a, 0);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(22.599990844726562 * a, 85.94999694824219 * a);
            c.bezierCurveTo(17.599990844726562 * a, 83.94999694824219 * a, 17.599990844726562 * a, 83.94999694824219 * a, 12.599990844726562 * a, 81.94999694824219 * a);
            c.bezierCurveTo(19.599990844726562 * a, 73.94999694824219 * a, 2.5999908447265625 * a, 22.949996948242188 * a, 33.59999084472656 * a, 7.9499969482421875 * a);
            c.bezierCurveTo(27.599990844726562 * a, 28.949996948242188 * a, 33.59999084472656 * a, 26.949996948242188 * a, 35.59999084472656 * a, 32.94999694824219 * a);
            c.bezierCurveTo(25.599990844726562 * a, 59.94999694824219 * a, 26.599990844726562 * a, 69.94999694824219 * a, 29.599990844726562 * a, 82.94999694824219 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(-1 * a, 0);
            c.moveTo(17.599990844726562 * a, 89.75 * a);
            c.bezierCurveTo(24.599990844726562 * a, 99.75 * a, 24.599990844726562 * a, 101.75 * a, 20.599990844726562 * a, 111.75 * a);
            c.bezierCurveTo(28.599990844726562 * a, 110.75 * a, 26.599990844726562 * a, 112.75 * a, 28.599990844726562 * a, 111.75 * a);
            c.bezierCurveTo(30.599990844726562 * a, 96.75 * a, 32.59999084472656 * a, 96.75 * a, 30.599990844726562 * a, 87.75 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(1 * a, 0);
            c.moveTo(7.5999908447265625 * a, 86.34999084472656 * a);
            c.bezierCurveTo(12.599990844726562 * a, 85.34999084472656 * a, 14.599990844726562 * a, 84.34999084472656 * a, 13.599990844726562 * a, 84.34999084472656 * a);
            c.bezierCurveTo(21.599990844726562 * a, 83.34999084472656 * a, 21.599990844726562 * a, 83.34999084472656 * a, 29.599990844726562 * a, 82.34999084472656 * a);
            c.bezierCurveTo(33.59999084472656 * a, 85.84999084472656 * a, 33.59999084472656 * a, 85.84999084472656 * a, 37.59999084472656 * a, 89.34999084472656 * a);
            c.bezierCurveTo(34.09999084472656 * a, 91.84999084472656 * a, 34.09999084472656 * a, 91.84999084472656 * a, 30.599990844726562 * a, 94.34999084472656 * a);
            c.bezierCurveTo(21.099990844726562 * a, 93.34999084472656 * a, 21.099990844726562 * a, 93.34999084472656 * a, 11.599990844726562 * a, 92.34999084472656 * a);
            c.closePath();
            h(c, f[0]);
            c.save();
            c.translate(23.599990844726562 * a, 110.94999694824219 * a);
            c.rotate(0);
            B(c, -7 * a, -4 * a, 14 * a, 8 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.translate(0 * a, 0);
            c.globalAlpha = 1;
            c.translate(10 * a, 0);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(22.599990844726562 * a, 85.94999694824219 * a);
            c.bezierCurveTo(17.599990844726562 * a, 83.94999694824219 * a, 17.599990844726562 * a, 83.94999694824219 * a, 12.599990844726562 * a, 81.94999694824219 * a);
            c.bezierCurveTo(19.599990844726562 * a, 73.94999694824219 * a, 2.5999908447265625 * a, 22.949996948242188 * a, 33.59999084472656 * a, 7.9499969482421875 * a);
            c.bezierCurveTo(27.599990844726562 * a, 28.949996948242188 * a, 33.59999084472656 * a, 26.949996948242188 * a, 35.59999084472656 * a, 32.94999694824219 * a);
            c.bezierCurveTo(25.599990844726562 * a, 59.94999694824219 * a, 26.599990844726562 * a, 69.94999694824219 * a, 29.599990844726562 * a, 82.94999694824219 * a);
            c.closePath();
            h(c, f[3], f[4], 3 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(-1 * a, 0);
            c.moveTo(17.599990844726562 * a, 89.75 * a);
            c.bezierCurveTo(24.599990844726562 * a, 99.75 * a, 24.599990844726562 * a, 101.75 * a, 20.599990844726562 * a, 111.75 * a);
            c.bezierCurveTo(28.599990844726562 * a, 110.75 * a, 26.599990844726562 * a, 112.75 * a, 28.599990844726562 * a, 111.75 * a);
            c.bezierCurveTo(30.599990844726562 * a, 96.75 * a, 32.59999084472656 * a, 96.75 * a, 30.599990844726562 * a, 87.75 * a);
            c.closePath();
            h(c, f[1], f[2], 3 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(1 * a, 0);
            c.moveTo(7.5999908447265625 * a, 86.34999084472656 * a);
            c.bezierCurveTo(12.599990844726562 * a, 85.34999084472656 * a, 14.599990844726562 * a, 84.34999084472656 * a, 13.599990844726562 * a, 84.34999084472656 * a);
            c.bezierCurveTo(21.599990844726562 * a, 83.34999084472656 * a, 21.599990844726562 * a, 83.34999084472656 * a, 29.599990844726562 * a, 82.34999084472656 * a);
            c.bezierCurveTo(33.59999084472656 * a, 85.84999084472656 * a, 33.59999084472656 * a, 85.84999084472656 * a, 37.59999084472656 * a, 89.34999084472656 * a);
            c.bezierCurveTo(34.09999084472656 * a, 91.84999084472656 * a, 34.09999084472656 * a, 91.84999084472656 * a, 30.599990844726562 * a, 94.34999084472656 * a);
            c.bezierCurveTo(21.099990844726562 * a, 93.34999084472656 * a, 21.099990844726562 * a, 93.34999084472656 * a, 11.599990844726562 * a, 92.34999084472656 * a);
            c.closePath();
            h(c, f[1], f[2], 3 * a);
            c.save();
            c.translate(23.599990844726562 * a, 110.94999694824219 * a);
            c.rotate(0);
            B(c, -7 * a, -4 * a, 14 * a, 8 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 3 * a);
            return d;
        };

        function Re(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 120 * a;
            f.height = 140 * a;
            f.width = 130 * a;
            f.height = 120 * a;
            B(d, 10 * a, 12 * a, 110 * a, 90 * a, 10 * a);
            h(d, e[0]);
            B(d, 10 * a, 5 * a, 110 * a, 90 * a, 10 * a);
            h(d, e[1], e[2], 4 * a);
            var c = V(-Math.PI / 5, Ba(0.5 * a, !0, "rgba(255, 255, 255, 0);rgba(255, 255, 255, 0);rgba(255, 255, 255, 0);#FFF;#FFF;#FFF;#FFF".split(";")));
            d.drawImage(c, 12 * a, 18 * a);
            c = V(Math.PI / 4, ab(0.55 * a, !0, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
            d.drawImage(c, 36 * a, 16 * a);
            return f;
        };

        function ng(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 137 * a;
            e.height = 129 * a;
            d.globalAlpha = 0.5;
            A(d, 69 * a, 64 * a, 48.16637831516918 * a);
            h(d, f[1]);
            d.globalAlpha = 0.7;
            A(d, 69 * a, 64 * a, 38.23105625617661 * a);
            h(d, f[2]);
            d.globalAlpha = 0.7;
            A(d, 69 * a, 64 * a, 32.01562118716424 * a);
            h(d, f[2], f[3], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(72 * a, 41 * a);
            d.bezierCurveTo(52 * a, 41 * a, 48 * a, 50 * a, 45 * a, 58 * a);
            d.bezierCurveTo(43 * a, 67 * a, 45 * a, 68 * a, 46 * a, 72 * a);
            d.bezierCurveTo(52 * a, 53 * a, 60 * a, 48 * a, 72 * a, 42 * a);
            d.closePath();
            h(d, f[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(93 * a, 62 * a);
            d.bezierCurveTo(95 * a, 72 * a, 90 * a, 81 * a, 81 * a, 87 * a);
            d.bezierCurveTo(74 * a, 91 * a, 69 * a, 89 * a, 64 * a, 88 * a);
            d.bezierCurveTo(77 * a, 83 * a, 84 * a, 82 * a, 92 * a, 62 * a);
            d.closePath();
            h(d, f[3]);
            return e;
        };

        function og(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 137 * a;
            e.height = 129 * a;
            d.globalAlpha = 0.4;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.000030517578125 * a, 41.17047119140625 * a);
            d.bezierCurveTo(45.000030517578125 * a, 38.17047119140625 * a, 49.000030517578125 * a, 37.17047119140625 * a, 62.000030517578125 * a, 38.17047119140625 * a);
            d.bezierCurveTo(78.00003051757812 * a, 38.17047119140625 * a, 78.00003051757812 * a, 38.17047119140625 * a, 94.00003051757812 * a, 38.17047119140625 * a);
            d.bezierCurveTo(100.00003051757812 * a, 38.17047119140625 * a, 102.00003051757812 * a, 38.17047119140625 * a, 101.00003051757812 * a, 47.17047119140625 * a);
            d.bezierCurveTo(101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 80.17047119140625 * a);
            d.bezierCurveTo(102.00003051757812 * a, 84.17047119140625 * a, 100.00003051757812 * a, 86.17047119140625 * a, 95.00003051757812 * a, 88.17047119140625 * a);
            d.bezierCurveTo(84.00003051757812 * a, 94.17047119140625 * a, 89.00003051757812 * a, 94.17047119140625 * a, 79.00003051757812 * a, 94.17047119140625 * a);
            d.bezierCurveTo(59.500030517578125 * a, 94.17047119140625 * a, 59.500030517578125 * a, 94.17047119140625 * a, 40.000030517578125 * a, 94.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 86.17047119140625 * a);
            d.bezierCurveTo(34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 53.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 47.17047119140625 * a, 34.000030517578125 * a, 47.17047119140625 * a, 40.000030517578125 * a, 42.17047119140625 * a);
            d.closePath();
            h(d, void 0, f[2], 40 * a);
            d.globalAlpha = 0.4;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.000030517578125 * a, 41.17047119140625 * a);
            d.bezierCurveTo(45.000030517578125 * a, 38.17047119140625 * a, 49.000030517578125 * a, 37.17047119140625 * a, 62.000030517578125 * a, 38.17047119140625 * a);
            d.bezierCurveTo(78.00003051757812 * a, 38.17047119140625 * a, 78.00003051757812 * a, 38.17047119140625 * a, 94.00003051757812 * a, 38.17047119140625 * a);
            d.bezierCurveTo(100.00003051757812 * a, 38.17047119140625 * a, 102.00003051757812 * a, 38.17047119140625 * a, 101.00003051757812 * a, 47.17047119140625 * a);
            d.bezierCurveTo(101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 80.17047119140625 * a);
            d.bezierCurveTo(102.00003051757812 * a, 84.17047119140625 * a, 100.00003051757812 * a, 86.17047119140625 * a, 95.00003051757812 * a, 88.17047119140625 * a);
            d.bezierCurveTo(84.00003051757812 * a, 94.17047119140625 * a, 89.00003051757812 * a, 94.17047119140625 * a, 79.00003051757812 * a, 94.17047119140625 * a);
            d.bezierCurveTo(59.500030517578125 * a, 94.17047119140625 * a, 59.500030517578125 * a, 94.17047119140625 * a, 40.000030517578125 * a, 94.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 86.17047119140625 * a);
            d.bezierCurveTo(34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 53.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 47.17047119140625 * a, 34.000030517578125 * a, 47.17047119140625 * a, 40.000030517578125 * a, 42.17047119140625 * a);
            d.closePath();
            h(d, void 0, f[1], 20 * a);
            d.globalAlpha = 0.8;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.000030517578125 * a, 41.17047119140625 * a);
            d.bezierCurveTo(45.000030517578125 * a, 38.17047119140625 * a, 49.000030517578125 * a, 37.17047119140625 * a, 62.000030517578125 * a, 38.17047119140625 * a);
            d.bezierCurveTo(78.00003051757812 * a, 38.17047119140625 * a, 78.00003051757812 * a, 38.17047119140625 * a, 94.00003051757812 * a, 38.17047119140625 * a);
            d.bezierCurveTo(100.00003051757812 * a, 38.17047119140625 * a, 102.00003051757812 * a, 38.17047119140625 * a, 101.00003051757812 * a, 47.17047119140625 * a);
            d.bezierCurveTo(101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 80.17047119140625 * a);
            d.bezierCurveTo(102.00003051757812 * a, 84.17047119140625 * a, 100.00003051757812 * a, 86.17047119140625 * a, 95.00003051757812 * a, 88.17047119140625 * a);
            d.bezierCurveTo(84.00003051757812 * a, 94.17047119140625 * a, 89.00003051757812 * a, 94.17047119140625 * a, 79.00003051757812 * a, 94.17047119140625 * a);
            d.bezierCurveTo(59.500030517578125 * a, 94.17047119140625 * a, 59.500030517578125 * a, 94.17047119140625 * a, 40.000030517578125 * a, 94.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 86.17047119140625 * a);
            d.bezierCurveTo(34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 53.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 47.17047119140625 * a, 34.000030517578125 * a, 47.17047119140625 * a, 40.000030517578125 * a, 42.17047119140625 * a);
            d.closePath();
            h(d, f[0], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(51.000030517578125 * a, 37.9886474609375 * a);
            d.bezierCurveTo(51.000030517578125 * a, 61.9886474609375 * a, 51.000030517578125 * a, 61.9886474609375 * a, 51.000030517578125 * a, 85.9886474609375 * a);
            d.bezierCurveTo(75.50003051757812 * a, 85.9886474609375 * a, 75.50003051757812 * a, 85.9886474609375 * a, 100.00003051757812 * a, 85.9886474609375 * a);
            d.bezierCurveTo(100.00003051757812 * a, 61.9886474609375 * a, 100.00003051757812 * a, 61.9886474609375 * a, 100.00003051757812 * a, 37.9886474609375 * a);
            d.bezierCurveTo(76.00003051757812 * a, 37.9886474609375 * a, 76.00003051757812 * a, 37.9886474609375 * a, 52.000030517578125 * a, 37.9886474609375 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(99.00003051757812 * a, 38.9886474609375 * a);
            d.bezierCurveTo(93.50003051757812 * a, 44.9886474609375 * a, 93.50003051757812 * a, 44.9886474609375 * a, 88.00003051757812 * a, 50.9886474609375 * a);
            d.bezierCurveTo(88.00003051757812 * a, 72.4886474609375 * a, 88.00003051757812 * a, 72.4886474609375 * a, 88.00003051757812 * a, 93.9886474609375 * a);
            d.bezierCurveTo(94.00003051757812 * a, 90.4886474609375 * a, 94.00003051757812 * a, 90.4886474609375 * a, 100.00003051757812 * a, 86.9886474609375 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(87.00003051757812 * a, 49.625 * a);
            d.bezierCurveTo(61.000030517578125 * a, 49.625 * a, 61.000030517578125 * a, 49.625 * a, 35.000030517578125 * a, 49.625 * a);
            d.bezierCurveTo(35.000030517578125 * a, 70.625 * a, 35.000030517578125 * a, 70.625 * a, 35.000030517578125 * a, 91.625 * a);
            d.bezierCurveTo(60.500030517578125 * a, 91.625 * a, 60.500030517578125 * a, 91.625 * a, 86.00003051757812 * a, 91.625 * a);
            d.bezierCurveTo(86.50003051757812 * a, 70.625 * a, 86.50003051757812 * a, 70.625 * a, 87.00003051757812 * a, 49.625 * a);
            d.closePath();
            h(d, f[1], f[3], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(47.000030517578125 * a, 36.625 * a);
            d.bezierCurveTo(73.00003051757812 * a, 37.125 * a, 73.00003051757812 * a, 37.125 * a, 99.00003051757812 * a, 37.625 * a);
            d.bezierCurveTo(93.50003051757812 * a, 44.125 * a, 93.50003051757812 * a, 44.125 * a, 88.00003051757812 * a, 50.625 * a);
            d.bezierCurveTo(60.500030517578125 * a, 50.125 * a, 60.500030517578125 * a, 50.125 * a, 33.000030517578125 * a, 49.625 * a);
            d.closePath();
            h(d, f[1], f[3], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(53.000030517578125 * a, 52.625 * a);
            d.bezierCurveTo(40.000030517578125 * a, 54.625 * a, 39.000030517578125 * a, 59.625 * a, 40.000030517578125 * a, 67.625 * a);
            d.bezierCurveTo(45.000030517578125 * a, 59.625 * a, 48.000030517578125 * a, 58.625 * a, 54.000030517578125 * a, 53.625 * a);
            d.closePath();
            h(d, f[3]);
            d.globalAlpha = 1;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.000030517578125 * a, 41.17047119140625 * a);
            d.bezierCurveTo(45.000030517578125 * a, 38.17047119140625 * a, 49.000030517578125 * a, 37.17047119140625 * a, 62.000030517578125 * a, 38.17047119140625 * a);
            d.bezierCurveTo(78.00003051757812 * a, 38.17047119140625 * a, 78.00003051757812 * a, 38.17047119140625 * a, 94.00003051757812 * a, 38.17047119140625 * a);
            d.bezierCurveTo(100.00003051757812 * a, 38.17047119140625 * a, 102.00003051757812 * a, 38.17047119140625 * a, 101.00003051757812 * a, 47.17047119140625 * a);
            d.bezierCurveTo(101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 63.67047119140625 * a, 101.00003051757812 * a, 80.17047119140625 * a);
            d.bezierCurveTo(102.00003051757812 * a, 84.17047119140625 * a, 100.00003051757812 * a, 86.17047119140625 * a, 95.00003051757812 * a, 88.17047119140625 * a);
            d.bezierCurveTo(84.00003051757812 * a, 94.17047119140625 * a, 89.00003051757812 * a, 94.17047119140625 * a, 79.00003051757812 * a, 94.17047119140625 * a);
            d.bezierCurveTo(59.500030517578125 * a, 94.17047119140625 * a, 59.500030517578125 * a, 94.17047119140625 * a, 40.000030517578125 * a, 94.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 94.17047119140625 * a, 34.000030517578125 * a, 86.17047119140625 * a);
            d.bezierCurveTo(34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 69.67047119140625 * a, 34.000030517578125 * a, 53.17047119140625 * a);
            d.bezierCurveTo(33.000030517578125 * a, 47.17047119140625 * a, 34.000030517578125 * a, 47.17047119140625 * a, 40.000030517578125 * a, 42.17047119140625 * a);
            d.closePath();
            h(d, void 0, f[3], 4 * a);
            return e;
        };

        function pg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 376 * a;
            f.height = 371 * a;
            d.globalAlpha = 0.5;
            d.translate(5 * a, 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(191.633544921875 * a, 123.98580932617188 * a);
            d.bezierCurveTo(215.633544921875 * a, 85.98580932617188 * a, 187.633544921875 * a, 71.98580932617188 * a, 202.633544921875 * a, 19.985809326171875 * a);
            d.bezierCurveTo(231.633544921875 * a, 68.98580932617188 * a, 253.633544921875 * a, 71.98580932617188 * a, 256.633544921875 * a, 93.98580932617188 * a);
            d.bezierCurveTo(306.633544921875 * a, 64.98580932617188 * a, 319.633544921875 * a, 61.985809326171875 * a, 350.633544921875 * a, 58.985809326171875 * a);
            d.bezierCurveTo(280.633544921875 * a, 86.98580932617188 * a, 281.633544921875 * a, 106.98580932617188 * a, 268.633544921875 * a, 130.98580932617188 * a);
            d.bezierCurveTo(295.633544921875 * a, 158.98580932617188 * a, 328.633544921875 * a, 155.98580932617188 * a, 353.633544921875 * a, 90.98580932617188 * a);
            d.bezierCurveTo(371.633544921875 * a, 158.98580932617188 * a, 337.633544921875 * a, 210.98580932617188 * a, 286.633544921875 * a, 209.98580932617188 * a);
            d.bezierCurveTo(323.633544921875 * a, 230.98580932617188 * a, 317.633544921875 * a, 274.9858093261719 * a, 356.633544921875 * a, 305.9858093261719 * a);
            d.bezierCurveTo(288.633544921875 * a, 297.9858093261719 * a, 288.633544921875 * a, 265.9858093261719 * a, 275.633544921875 * a, 266.9858093261719 * a);
            d.bezierCurveTo(280.633544921875 * a, 294.9858093261719 * a, 315.633544921875 * a, 306.9858093261719 * a, 336.633544921875 * a, 316.9858093261719 * a);
            d.bezierCurveTo(295.633544921875 * a, 318.9858093261719 * a, 264.633544921875 * a, 302.9858093261719 * a, 254.633544921875 * a, 289.9858093261719 * a);
            d.bezierCurveTo(252.633544921875 * a, 301.9858093261719 * a, 224.633544921875 * a, 315.9858093261719 * a, 201.633544921875 * a, 356.9858093261719 * a);
            d.bezierCurveTo(195.633544921875 * a, 313.9858093261719 * a, 195.633544921875 * a, 308.9858093261719 * a, 196.633544921875 * a, 307.9858093261719 * a);
            d.bezierCurveTo(197.633544921875 * a, 289.9858093261719 * a, 207.633544921875 * a, 283.9858093261719 * a, 195.633544921875 * a, 258.9858093261719 * a);
            d.bezierCurveTo(182.633544921875 * a, 282.9858093261719 * a, 190.633544921875 * a, 287.9858093261719 * a, 193.633544921875 * a, 297.9858093261719 * a);
            d.bezierCurveTo(195.633544921875 * a, 306.9858093261719 * a, 191.633544921875 * a, 334.9858093261719 * a, 187.633544921875 * a, 354.9858093261719 * a);
            d.bezierCurveTo(165.633544921875 * a, 320.9858093261719 * a, 138.633544921875 * a, 307.9858093261719 * a, 135.633544921875 * a, 288.9858093261719 * a);
            d.bezierCurveTo(110.633544921875 * a, 318.9858093261719 * a, 68.633544921875 * a, 323.9858093261719 * a, 49.633544921875 * a, 320.9858093261719 * a);
            d.bezierCurveTo(88.633544921875 * a, 308.9858093261719 * a, 108.633544921875 * a, 284.9858093261719 * a, 118.633544921875 * a, 258.9858093261719 * a);
            d.bezierCurveTo(86.633544921875 * a, 264.9858093261719 * a, 75.633544921875 * a, 310.9858093261719 * a, 19.633544921875 * a, 304.9858093261719 * a);
            d.bezierCurveTo(54.633544921875 * a, 276.9858093261719 * a, 59.633544921875 * a, 214.98580932617188 * a, 105.633544921875 * a, 205.98580932617188 * a);
            d.bezierCurveTo(14.633544921875 * a, 201.98580932617188 * a, 24.633544921875 * a, 141.98580932617188 * a, 25.633544921875 * a, 82.98580932617188 * a);
            d.bezierCurveTo(49.633544921875 * a, 168.98580932617188 * a, 87.633544921875 * a, 141.98580932617188 * a, 112.633544921875 * a, 123.98580932617188 * a);
            d.bezierCurveTo(95.633544921875 * a, 75.98580932617188 * a, 70.633544921875 * a, 68.98580932617188 * a, 35.633544921875 * a, 50.985809326171875 * a);
            d.bezierCurveTo(70.633544921875 * a, 53.985809326171875 * a, 102.633544921875 * a, 65.98580932617188 * a, 125.633544921875 * a, 84.98580932617188 * a);
            d.bezierCurveTo(133.633544921875 * a, 69.98580932617188 * a, 166.633544921875 * a, 42.985809326171875 * a, 176.633544921875 * a, 21.985809326171875 * a);
            d.bezierCurveTo(185.633544921875 * a, 49.985809326171875 * a, 168.633544921875 * a, 95.98580932617188 * a, 191.633544921875 * a, 121.98580932617188 * a);
            d.closePath();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.translate(-4 * a, -5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(191.633544921875 * a, 123.98580932617188 * a);
            d.bezierCurveTo(215.633544921875 * a, 85.98580932617188 * a, 187.633544921875 * a, 71.98580932617188 * a, 202.633544921875 * a, 19.985809326171875 * a);
            d.bezierCurveTo(231.633544921875 * a, 68.98580932617188 * a, 253.633544921875 * a, 71.98580932617188 * a, 256.633544921875 * a, 93.98580932617188 * a);
            d.bezierCurveTo(306.633544921875 * a, 64.98580932617188 * a, 319.633544921875 * a, 61.985809326171875 * a, 350.633544921875 * a, 58.985809326171875 * a);
            d.bezierCurveTo(280.633544921875 * a, 86.98580932617188 * a, 281.633544921875 * a, 106.98580932617188 * a, 268.633544921875 * a, 130.98580932617188 * a);
            d.bezierCurveTo(295.633544921875 * a, 158.98580932617188 * a, 328.633544921875 * a, 155.98580932617188 * a, 353.633544921875 * a, 90.98580932617188 * a);
            d.bezierCurveTo(371.633544921875 * a, 158.98580932617188 * a, 337.633544921875 * a, 210.98580932617188 * a, 286.633544921875 * a, 209.98580932617188 * a);
            d.bezierCurveTo(323.633544921875 * a, 230.98580932617188 * a, 317.633544921875 * a, 274.9858093261719 * a, 356.633544921875 * a, 305.9858093261719 * a);
            d.bezierCurveTo(288.633544921875 * a, 297.9858093261719 * a, 288.633544921875 * a, 265.9858093261719 * a, 275.633544921875 * a, 266.9858093261719 * a);
            d.bezierCurveTo(280.633544921875 * a, 294.9858093261719 * a, 315.633544921875 * a, 306.9858093261719 * a, 336.633544921875 * a, 316.9858093261719 * a);
            d.bezierCurveTo(295.633544921875 * a, 318.9858093261719 * a, 264.633544921875 * a, 302.9858093261719 * a, 254.633544921875 * a, 289.9858093261719 * a);
            d.bezierCurveTo(252.633544921875 * a, 301.9858093261719 * a, 224.633544921875 * a, 315.9858093261719 * a, 201.633544921875 * a, 356.9858093261719 * a);
            d.bezierCurveTo(195.633544921875 * a, 313.9858093261719 * a, 195.633544921875 * a, 308.9858093261719 * a, 196.633544921875 * a, 307.9858093261719 * a);
            d.bezierCurveTo(197.633544921875 * a, 289.9858093261719 * a, 207.633544921875 * a, 283.9858093261719 * a, 195.633544921875 * a, 258.9858093261719 * a);
            d.bezierCurveTo(182.633544921875 * a, 282.9858093261719 * a, 190.633544921875 * a, 287.9858093261719 * a, 193.633544921875 * a, 297.9858093261719 * a);
            d.bezierCurveTo(195.633544921875 * a, 306.9858093261719 * a, 191.633544921875 * a, 334.9858093261719 * a, 187.633544921875 * a, 354.9858093261719 * a);
            d.bezierCurveTo(165.633544921875 * a, 320.9858093261719 * a, 138.633544921875 * a, 307.9858093261719 * a, 135.633544921875 * a, 288.9858093261719 * a);
            d.bezierCurveTo(110.633544921875 * a, 318.9858093261719 * a, 68.633544921875 * a, 323.9858093261719 * a, 49.633544921875 * a, 320.9858093261719 * a);
            d.bezierCurveTo(88.633544921875 * a, 308.9858093261719 * a, 108.633544921875 * a, 284.9858093261719 * a, 118.633544921875 * a, 258.9858093261719 * a);
            d.bezierCurveTo(86.633544921875 * a, 264.9858093261719 * a, 75.633544921875 * a, 310.9858093261719 * a, 19.633544921875 * a, 304.9858093261719 * a);
            d.bezierCurveTo(54.633544921875 * a, 276.9858093261719 * a, 59.633544921875 * a, 214.98580932617188 * a, 105.633544921875 * a, 205.98580932617188 * a);
            d.bezierCurveTo(14.633544921875 * a, 201.98580932617188 * a, 24.633544921875 * a, 141.98580932617188 * a, 25.633544921875 * a, 82.98580932617188 * a);
            d.bezierCurveTo(49.633544921875 * a, 168.98580932617188 * a, 87.633544921875 * a, 141.98580932617188 * a, 112.633544921875 * a, 123.98580932617188 * a);
            d.bezierCurveTo(95.633544921875 * a, 75.98580932617188 * a, 70.633544921875 * a, 68.98580932617188 * a, 35.633544921875 * a, 50.985809326171875 * a);
            d.bezierCurveTo(70.633544921875 * a, 53.985809326171875 * a, 102.633544921875 * a, 65.98580932617188 * a, 125.633544921875 * a, 84.98580932617188 * a);
            d.bezierCurveTo(133.633544921875 * a, 69.98580932617188 * a, 166.633544921875 * a, 42.985809326171875 * a, 176.633544921875 * a, 21.985809326171875 * a);
            d.bezierCurveTo(185.633544921875 * a, 49.985809326171875 * a, 168.633544921875 * a, 95.98580932617188 * a, 191.633544921875 * a, 121.98580932617188 * a);
            d.closePath();
            h(d, void 0, e[1], 12 * a);
            d.translate(-1 * a, 0 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(270.633544921875 * a, 88.98580932617188 * a);
            d.bezierCurveTo(296.633544921875 * a, 65.98580932617188 * a, 318.633544921875 * a, 62.985809326171875 * a, 348.633544921875 * a, 57.985809326171875 * a);
            d.bezierCurveTo(309.633544921875 * a, 76.98580932617188 * a, 291.633544921875 * a, 88.98580932617188 * a, 280.633544921875 * a, 99.98580932617188 * a);
            d.closePath();
            h(d, e[4], e[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(275.633544921875 * a, 281.9858093261719 * a);
            d.bezierCurveTo(303.633544921875 * a, 308.9858093261719 * a, 321.633544921875 * a, 308.9858093261719 * a, 335.633544921875 * a, 315.9858093261719 * a);
            d.bezierCurveTo(305.633544921875 * a, 320.9858093261719 * a, 278.633544921875 * a, 307.9858093261719 * a, 264.633544921875 * a, 293.9858093261719 * a);
            d.closePath();
            h(d, e[4], e[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(124.633544921875 * a, 291.9858093261719 * a);
            d.bezierCurveTo(106.633544921875 * a, 316.9858093261719 * a, 72.633544921875 * a, 325.9858093261719 * a, 53.633544921875 * a, 319.9858093261719 * a);
            d.bezierCurveTo(83.633544921875 * a, 308.9858093261719 * a, 97.633544921875 * a, 298.9858093261719 * a, 112.633544921875 * a, 284.9858093261719 * a);
            d.closePath();
            h(d, e[4], e[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(113.633544921875 * a, 80.98580932617188 * a);
            d.bezierCurveTo(91.633544921875 * a, 54.985809326171875 * a, 72.633544921875 * a, 56.985809326171875 * a, 36.633544921875 * a, 49.985809326171875 * a);
            d.bezierCurveTo(87.633544921875 * a, 72.98580932617188 * a, 95.633544921875 * a, 82.98580932617188 * a, 106.633544921875 * a, 96.98580932617188 * a);
            d.closePath();
            h(d, e[4], e[5], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(202.633544921875 * a, 20.985809326171875 * a);
            d.bezierCurveTo(219.633544921875 * a, 49.985809326171875 * a, 259.633544921875 * a, 80.98580932617188 * a, 255.633544921875 * a, 92.98580932617188 * a);
            d.bezierCurveTo(268.633544921875 * a, 86.98580932617188 * a, 265.633544921875 * a, 87.98580932617188 * a, 275.633544921875 * a, 82.98580932617188 * a);
            d.bezierCurveTo(283.633544921875 * a, 87.98580932617188 * a, 283.633544921875 * a, 87.98580932617188 * a, 291.633544921875 * a, 92.98580932617188 * a);
            d.bezierCurveTo(269.633544921875 * a, 116.98580932617188 * a, 270.633544921875 * a, 124.98580932617188 * a, 267.633544921875 * a, 130.98580932617188 * a);
            d.bezierCurveTo(307.633544921875 * a, 168.98580932617188 * a, 339.633544921875 * a, 132.98580932617188 * a, 352.633544921875 * a, 93.98580932617188 * a);
            d.bezierCurveTo(366.633544921875 * a, 145.98580932617188 * a, 345.633544921875 * a, 207.98580932617188 * a, 286.633544921875 * a, 208.98580932617188 * a);
            d.bezierCurveTo(315.633544921875 * a, 223.98580932617188 * a, 327.633544921875 * a, 287.9858093261719 * a, 355.633544921875 * a, 305.9858093261719 * a);
            d.bezierCurveTo(293.633544921875 * a, 298.9858093261719 * a, 293.633544921875 * a, 275.9858093261719 * a, 276.633544921875 * a, 266.9858093261719 * a);
            d.bezierCurveTo(274.633544921875 * a, 282.9858093261719 * a, 287.633544921875 * a, 288.9858093261719 * a, 295.633544921875 * a, 296.9858093261719 * a);
            d.bezierCurveTo(287.133544921875 * a, 302.4858093261719 * a, 287.133544921875 * a, 302.4858093261719 * a, 278.633544921875 * a, 307.9858093261719 * a);
            d.bezierCurveTo(261.633544921875 * a, 297.9858093261719 * a, 258.633544921875 * a, 293.9858093261719 * a, 255.633544921875 * a, 290.9858093261719 * a);
            d.bezierCurveTo(249.633544921875 * a, 301.9858093261719 * a, 225.633544921875 * a, 320.9858093261719 * a, 202.633544921875 * a, 354.9858093261719 * a);
            d.bezierCurveTo(195.633544921875 * a, 318.9858093261719 * a, 196.633544921875 * a, 306.9858093261719 * a, 198.633544921875 * a, 300.9858093261719 * a);
            d.bezierCurveTo(209.633544921875 * a, 268.9858093261719 * a, 199.633544921875 * a, 266.9858093261719 * a, 195.633544921875 * a, 256.9858093261719 * a);
            d.bezierCurveTo(183.633544921875 * a, 274.9858093261719 * a, 182.633544921875 * a, 281.9858093261719 * a, 192.633544921875 * a, 305.9858093261719 * a);
            d.bezierCurveTo(194.633544921875 * a, 317.9858093261719 * a, 191.633544921875 * a, 336.9858093261719 * a, 186.633544921875 * a, 351.9858093261719 * a);
            d.bezierCurveTo(166.633544921875 * a, 318.9858093261719 * a, 141.633544921875 * a, 303.9858093261719 * a, 136.633544921875 * a, 286.9858093261719 * a);
            d.bezierCurveTo(122.633544921875 * a, 303.9858093261719 * a, 115.633544921875 * a, 305.9858093261719 * a, 109.633544921875 * a, 306.9858093261719 * a);
            d.bezierCurveTo(101.133544921875 * a, 301.9858093261719 * a, 94.633544921875 * a, 297.9858093261719 * a, 92.633544921875 * a, 296.9858093261719 * a);
            d.bezierCurveTo(116.633544921875 * a, 277.9858093261719 * a, 116.633544921875 * a, 266.9858093261719 * a, 119.633544921875 * a, 257.9858093261719 * a);
            d.bezierCurveTo(107.633544921875 * a, 257.9858093261719 * a, 65.633544921875 * a, 308.9858093261719 * a, 24.633544921875 * a, 303.9858093261719 * a);
            d.bezierCurveTo(51.633544921875 * a, 275.9858093261719 * a, 64.633544921875 * a, 220.98580932617188 * a, 108.633544921875 * a, 205.98580932617188 * a);
            d.bezierCurveTo(14.633544921875 * a, 198.98580932617188 * a, 26.633544921875 * a, 142.98580932617188 * a, 25.633544921875 * a, 86.98580932617188 * a);
            d.bezierCurveTo(41.633544921875 * a, 155.98580932617188 * a, 81.633544921875 * a, 148.98580932617188 * a, 113.633544921875 * a, 124.98580932617188 * a);
            d.bezierCurveTo(102.633544921875 * a, 93.98580932617188 * a, 95.633544921875 * a, 88.98580932617188 * a, 89.633544921875 * a, 81.98580932617188 * a);
            d.bezierCurveTo(97.633544921875 * a, 76.48580932617188 * a, 97.633544921875 * a, 76.48580932617188 * a, 105.633544921875 * a, 70.98580932617188 * a);
            d.bezierCurveTo(120.633544921875 * a, 78.98580932617188 * a, 121.633544921875 * a, 81.98580932617188 * a, 124.633544921875 * a, 86.98580932617188 * a);
            d.bezierCurveTo(132.633544921875 * a, 71.98580932617188 * a, 160.633544921875 * a, 56.985809326171875 * a, 175.633544921875 * a, 23.985809326171875 * a);
            d.bezierCurveTo(182.633544921875 * a, 53.985809326171875 * a, 170.633544921875 * a, 102.98580932617188 * a, 191.633544921875 * a, 125.98580932617188 * a);
            d.bezierCurveTo(214.633544921875 * a, 89.98580932617188 * a, 192.633544921875 * a, 58.985809326171875 * a, 202.633544921875 * a, 20.985809326171875 * a);
            d.closePath();
            h(d, e[2], e[3], 5 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(203.633544921875 * a, 21.985809326171875 * a);
            d.bezierCurveTo(223.633544921875 * a, 63.985809326171875 * a, 227.633544921875 * a, 72.98580932617188 * a, 235.633544921875 * a, 98.98580932617188 * a);
            d.bezierCurveTo(241.633544921875 * a, 123.98580932617188 * a, 225.633544921875 * a, 138.98580932617188 * a, 196.633544921875 * a, 122.98580932617188 * a);
            d.bezierCurveTo(213.633544921875 * a, 93.98580932617188 * a, 199.633544921875 * a, 49.985809326171875 * a, 203.633544921875 * a, 26.985809326171875 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(175.633544921875 * a, 25.985809326171875 * a);
            d.bezierCurveTo(176.633544921875 * a, 51.985809326171875 * a, 171.633544921875 * a, 88.98580932617188 * a, 186.633544921875 * a, 121.98580932617188 * a);
            d.bezierCurveTo(156.633544921875 * a, 144.98580932617188 * a, 139.633544921875 * a, 120.98580932617188 * a, 147.633544921875 * a, 97.98580932617188 * a);
            d.bezierCurveTo(152.633544921875 * a, 77.98580932617188 * a, 162.633544921875 * a, 60.985809326171875 * a, 176.633544921875 * a, 25.985809326171875 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(26.633544921875 * a, 96.98580932617188 * a);
            d.bezierCurveTo(38.633544921875 * a, 151.98580932617188 * a, 61.633544921875 * a, 161.98580932617188 * a, 88.633544921875 * a, 168.98580932617188 * a);
            d.bezierCurveTo(117.633544921875 * a, 177.98580932617188 * a, 113.633544921875 * a, 185.98580932617188 * a, 106.633544921875 * a, 204.98580932617188 * a);
            d.bezierCurveTo(32.633544921875 * a, 204.98580932617188 * a, 25.633544921875 * a, 149.98580932617188 * a, 25.633544921875 * a, 97.98580932617188 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(351.633544921875 * a, 99.98580932617188 * a);
            d.bezierCurveTo(365.633544921875 * a, 161.98580932617188 * a, 333.633544921875 * a, 203.98580932617188 * a, 287.633544921875 * a, 207.98580932617188 * a);
            d.bezierCurveTo(255.633544921875 * a, 208.98580932617188 * a, 266.633544921875 * a, 174.98580932617188 * a, 285.633544921875 * a, 176.98580932617188 * a);
            d.bezierCurveTo(313.633544921875 * a, 178.98580932617188 * a, 348.633544921875 * a, 135.98580932617188 * a, 353.633544921875 * a, 99.98580932617188 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(350.633544921875 * a, 302.9858093261719 * a);
            d.bezierCurveTo(310.633544921875 * a, 280.9858093261719 * a, 314.633544921875 * a, 244.98580932617188 * a, 292.633544921875 * a, 230.98580932617188 * a);
            d.bezierCurveTo(272.633544921875 * a, 215.98580932617188 * a, 263.633544921875 * a, 222.98580932617188 * a, 256.633544921875 * a, 236.98580932617188 * a);
            d.bezierCurveTo(251.633544921875 * a, 249.98580932617188 * a, 264.633544921875 * a, 255.98580932617188 * a, 279.633544921875 * a, 268.9858093261719 * a);
            d.bezierCurveTo(306.633544921875 * a, 295.9858093261719 * a, 325.633544921875 * a, 299.9858093261719 * a, 349.633544921875 * a, 302.9858093261719 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(95.633544921875 * a, 224.98580932617188 * a);
            d.bezierCurveTo(64.633544921875 * a, 245.98580932617188 * a, 62.633544921875 * a, 280.9858093261719 * a, 32.633544921875 * a, 303.9858093261719 * a);
            d.bezierCurveTo(59.633544921875 * a, 301.9858093261719 * a, 102.633544921875 * a, 260.9858093261719 * a, 116.633544921875 * a, 255.98580932617188 * a);
            d.bezierCurveTo(139.633544921875 * a, 229.98580932617188 * a, 108.633544921875 * a, 209.98580932617188 * a, 97.633544921875 * a, 224.98580932617188 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(195.633544921875 * a, 253.98580932617188 * a);
            d.bezierCurveTo(209.633544921875 * a, 282.9858093261719 * a, 205.633544921875 * a, 278.9858093261719 * a, 199.633544921875 * a, 307.9858093261719 * a);
            d.bezierCurveTo(198.633544921875 * a, 332.9858093261719 * a, 201.633544921875 * a, 340.9858093261719 * a, 202.633544921875 * a, 348.9858093261719 * a);
            d.bezierCurveTo(215.633544921875 * a, 313.9858093261719 * a, 226.633544921875 * a, 291.9858093261719 * a, 235.633544921875 * a, 270.9858093261719 * a);
            d.bezierCurveTo(243.633544921875 * a, 247.98580932617188 * a, 219.633544921875 * a, 235.98580932617188 * a, 196.633544921875 * a, 252.98580932617188 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(195.633544921875 * a, 251.98580932617188 * a);
            d.bezierCurveTo(176.633544921875 * a, 275.9858093261719 * a, 182.633544921875 * a, 285.9858093261719 * a, 191.633544921875 * a, 308.9858093261719 * a);
            d.bezierCurveTo(194.633544921875 * a, 318.9858093261719 * a, 190.633544921875 * a, 334.9858093261719 * a, 186.633544921875 * a, 348.9858093261719 * a);
            d.bezierCurveTo(175.633544921875 * a, 307.9858093261719 * a, 157.633544921875 * a, 291.9858093261719 * a, 155.633544921875 * a, 272.9858093261719 * a);
            d.bezierCurveTo(150.633544921875 * a, 243.98580932617188 * a, 170.633544921875 * a, 236.98580932617188 * a, 195.633544921875 * a, 251.98580932617188 * a);
            d.closePath();
            h(d, e[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(316 * a, 186.8020782470703 * a);
            d.bezierCurveTo(315 * a, 173.8020782470703 * a, 298 * a, 177.8020782470703 * a, 293 * a, 183.8020782470703 * a);
            d.bezierCurveTo(285 * a, 195.8020782470703 * a, 314 * a, 197.8020782470703 * a, 315 * a, 187.8020782470703 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(340 * a, 157.8020782470703 * a);
            d.bezierCurveTo(327 * a, 153.8020782470703 * a, 321 * a, 168.8020782470703 * a, 330 * a, 174.8020782470703 * a);
            d.bezierCurveTo(341 * a, 178.8020782470703 * a, 347 * a, 161.8020782470703 * a, 341 * a, 157.8020782470703 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(349 * a, 136.8020782470703 * a);
            d.bezierCurveTo(343 * a, 135.8020782470703 * a, 342 * a, 139.8020782470703 * a, 341 * a, 147.8020782470703 * a);
            d.bezierCurveTo(343 * a, 155.8020782470703 * a, 353 * a, 143.8020782470703 * a, 349 * a, 137.8020782470703 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(278.75 * a, 246.4375 * a);
            d.bezierCurveTo(288.75 * a, 242.4375 * a, 301.75 * a, 248.4375 * a, 298.75 * a, 262.4375 * a);
            d.bezierCurveTo(293.75 * a, 271.4375 * a, 287.75 * a, 271.4375 * a, 278.75 * a, 262.4375 * a);
            d.bezierCurveTo(271.75 * a, 255.4375 * a, 274.75 * a, 250.4375 * a, 277.75 * a, 247.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(310.75 * a, 277.4375 * a);
            d.bezierCurveTo(319.75 * a, 280.4375 * a, 322.75 * a, 283.4375 * a, 321.75 * a, 289.4375 * a);
            d.bezierCurveTo(319.75 * a, 295.4375 * a, 313.75 * a, 291.4375 * a, 308.75 * a, 288.4375 * a);
            d.bezierCurveTo(301.75 * a, 281.4375 * a, 306.75 * a, 277.4375 * a, 309.75 * a, 277.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(217.75 * a, 257.4375 * a);
            d.bezierCurveTo(227.75 * a, 269.4375 * a, 220.75 * a, 281.4375 * a, 212.75 * a, 280.4375 * a);
            d.bezierCurveTo(206.75 * a, 279.4375 * a, 206.75 * a, 269.4375 * a, 204.75 * a, 260.4375 * a);
            d.bezierCurveTo(204.75 * a, 254.4375 * a, 211.75 * a, 253.4375 * a, 216.75 * a, 256.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(211.75 * a, 289.4375 * a);
            d.bezierCurveTo(219.75 * a, 292.4375 * a, 213.75 * a, 306.4375 * a, 206.75 * a, 307.4375 * a);
            d.bezierCurveTo(199.75 * a, 303.4375 * a, 209.75 * a, 287.4375 * a, 210.75 * a, 289.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(171.75 * a, 256.4375 * a);
            d.bezierCurveTo(162.75 * a, 273.4375 * a, 166.75 * a, 278.4375 * a, 175.75 * a, 280.4375 * a);
            d.bezierCurveTo(183.75 * a, 278.4375 * a, 185.75 * a, 257.4375 * a, 182.75 * a, 255.4375 * a);
            d.bezierCurveTo(176.75 * a, 251.4375 * a, 172.75 * a, 253.4375 * a, 172.75 * a, 256.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(175.75 * a, 289.9375 * a);
            d.bezierCurveTo(183.75 * a, 287.9375 * a, 186.75 * a, 301.9375 * a, 182.75 * a, 305.9375 * a);
            d.bezierCurveTo(176.75 * a, 307.9375 * a, 171.75 * a, 292.9375 * a, 174.75 * a, 290.9375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(205.75 * a, 314.4375 * a);
            d.bezierCurveTo(209.75 * a, 316.4375 * a, 210.75 * a, 320.4375 * a, 206.75 * a, 323.4375 * a);
            d.bezierCurveTo(201.75 * a, 324.4375 * a, 201.75 * a, 314.4375 * a, 204.75 * a, 314.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(186.75 * a, 313.4375 * a);
            d.bezierCurveTo(181.75 * a, 315.4375 * a, 180.75 * a, 321.4375 * a, 185.75 * a, 326.4375 * a);
            d.bezierCurveTo(190.75 * a, 327.4375 * a, 190.75 * a, 313.4375 * a, 187.75 * a, 314.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(103.75 * a, 244.4375 * a);
            d.bezierCurveTo(96.75 * a, 239.4375 * a, 83.75 * a, 240.4375 * a, 81.75 * a, 255.4375 * a);
            d.bezierCurveTo(80.75 * a, 264.4375 * a, 89.75 * a, 269.4375 * a, 99.75 * a, 260.4375 * a);
            d.bezierCurveTo(106.75 * a, 254.4375 * a, 106.75 * a, 250.4375 * a, 104.75 * a, 245.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(86.75 * a, 182.4375 * a);
            d.bezierCurveTo(82.75 * a, 170.4375 * a, 66.75 * a, 169.4375 * a, 61.75 * a, 181.4375 * a);
            d.bezierCurveTo(58.75 * a, 187.4375 * a, 68.75 * a, 194.4375 * a, 75.75 * a, 192.4375 * a);
            d.bezierCurveTo(83.75 * a, 192.4375 * a, 86.75 * a, 187.4375 * a, 86.75 * a, 183.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(44.75 * a, 152.4375 * a);
            d.bezierCurveTo(55.75 * a, 159.4375 * a, 54.75 * a, 170.4375 * a, 46.75 * a, 171.4375 * a);
            d.bezierCurveTo(39.75 * a, 170.4375 * a, 34.75 * a, 151.4375 * a, 43.75 * a, 152.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(31.75 * a, 130.4375 * a);
            d.bezierCurveTo(35.75 * a, 132.4375 * a, 35.75 * a, 131.4375 * a, 37.75 * a, 137.4375 * a);
            d.bezierCurveTo(36.75 * a, 144.4375 * a, 36.75 * a, 145.4375 * a, 33.75 * a, 144.4375 * a);
            d.bezierCurveTo(26.75 * a, 137.4375 * a, 29.75 * a, 131.4375 * a, 31.75 * a, 130.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(69.75 * a, 274.4375 * a);
            d.bezierCurveTo(62.75 * a, 272.4375 * a, 59.75 * a, 277.4375 * a, 57.75 * a, 284.4375 * a);
            d.bezierCurveTo(56.75 * a, 290.4375 * a, 63.75 * a, 289.4375 * a, 71.75 * a, 282.4375 * a);
            d.bezierCurveTo(75.75 * a, 277.4375 * a, 72.75 * a, 275.4375 * a, 69.75 * a, 274.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(165.75 * a, 95.4375 * a);
            d.bezierCurveTo(177.75 * a, 97.4375 * a, 182.75 * a, 115.4375 * a, 173.75 * a, 121.4375 * a);
            d.bezierCurveTo(164.75 * a, 126.4375 * a, 149.75 * a, 102.4375 * a, 164.75 * a, 96.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(216.75 * a, 94.4375 * a);
            d.bezierCurveTo(227.75 * a, 99.4375 * a, 223.75 * a, 122.4375 * a, 210.75 * a, 119.4375 * a);
            d.bezierCurveTo(203.75 * a, 115.4375 * a, 207.75 * a, 93.4375 * a, 216.75 * a, 94.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(211.75 * a, 68.4375 * a);
            d.bezierCurveTo(218.75 * a, 69.4375 * a, 220.75 * a, 77.4375 * a, 216.75 * a, 83.4375 * a);
            d.bezierCurveTo(208.75 * a, 89.4375 * a, 205.75 * a, 68.4375 * a, 210.75 * a, 68.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(169.75 * a, 71.4375 * a);
            d.bezierCurveTo(162.75 * a, 72.4375 * a, 159.75 * a, 83.4375 * a, 167.75 * a, 88.4375 * a);
            d.bezierCurveTo(174.75 * a, 90.4375 * a, 174.75 * a, 72.4375 * a, 170.75 * a, 71.4375 * a);
            d.closePath();
            h(d, e[6], e[7], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(193.75 * a, 160.4375 * a);
            d.bezierCurveTo(215.75 * a, 168.4375 * a, 224.75 * a, 180.4375 * a, 229.75 * a, 193.4375 * a);
            d.bezierCurveTo(223.75 * a, 211.4375 * a, 205.75 * a, 225.4375 * a, 193.75 * a, 229.4375 * a);
            d.bezierCurveTo(167.75 * a, 217.4375 * a, 161.75 * a, 205.4375 * a, 156.75 * a, 192.4375 * a);
            d.bezierCurveTo(164.75 * a, 175.4375 * a, 176.75 * a, 166.4375 * a, 192.75 * a, 160.4375 * a);
            d.closePath();
            h(d, e[8], e[9], 3 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(189.1999969482422 * a, 182.61249923706055 * a);
            d.bezierCurveTo(190.1999969482422 * a, 184.11249923706055 * a, 190.1999969482422 * a, 184.11249923706055 * a, 191.1999969482422 * a, 185.61249923706055 * a);
            d.bezierCurveTo(192.1999969482422 * a, 180.61249923706055 * a, 192.1999969482422 * a, 180.61249923706055 * a, 193.1999969482422 * a, 175.61249923706055 * a);
            d.bezierCurveTo(195.6999969482422 * a, 177.11249923706055 * a, 195.6999969482422 * a, 177.11249923706055 * a, 198.1999969482422 * a, 178.61249923706055 * a);
            d.bezierCurveTo(198.1999969482422 * a, 181.11249923706055 * a, 198.1999969482422 * a, 181.11249923706055 * a, 198.1999969482422 * a, 183.61249923706055 * a);
            d.bezierCurveTo(201.6999969482422 * a, 181.11249923706055 * a, 201.6999969482422 * a, 181.11249923706055 * a, 205.1999969482422 * a, 178.61249923706055 * a);
            d.bezierCurveTo(206.6999969482422 * a, 180.61249923706055 * a, 206.6999969482422 * a, 180.61249923706055 * a, 208.1999969482422 * a, 182.61249923706055 * a);
            d.bezierCurveTo(206.1999969482422 * a, 185.61249923706055 * a, 206.1999969482422 * a, 185.61249923706055 * a, 204.1999969482422 * a, 188.61249923706055 * a);
            d.bezierCurveTo(208.6999969482422 * a, 188.61249923706055 * a, 208.6999969482422 * a, 188.61249923706055 * a, 213.1999969482422 * a, 188.61249923706055 * a);
            d.bezierCurveTo(213.1999969482422 * a, 191.11249923706055 * a, 213.1999969482422 * a, 191.11249923706055 * a, 213.1999969482422 * a, 193.61249923706055 * a);
            d.bezierCurveTo(209.6999969482422 * a, 194.61249923706055 * a, 209.6999969482422 * a, 194.61249923706055 * a, 206.1999969482422 * a, 195.61249923706055 * a);
            d.bezierCurveTo(210.1999969482422 * a, 198.61249923706055 * a, 210.1999969482422 * a, 198.61249923706055 * a, 214.1999969482422 * a, 201.61249923706055 * a);
            d.bezierCurveTo(212.1999969482422 * a, 203.61249923706055 * a, 212.1999969482422 * a, 203.61249923706055 * a, 210.1999969482422 * a, 205.61249923706055 * a);
            d.bezierCurveTo(207.1999969482422 * a, 204.11249923706055 * a, 207.1999969482422 * a, 204.11249923706055 * a, 204.1999969482422 * a, 202.61249923706055 * a);
            d.bezierCurveTo(205.6999969482422 * a, 207.61249923706055 * a, 205.6999969482422 * a, 207.61249923706055 * a, 207.1999969482422 * a, 212.61249923706055 * a);
            d.bezierCurveTo(204.6999969482422 * a, 213.61249923706055 * a, 204.6999969482422 * a, 213.61249923706055 * a, 202.1999969482422 * a, 214.61249923706055 * a);
            d.bezierCurveTo(200.1999969482422 * a, 210.61249923706055 * a, 200.1999969482422 * a, 210.61249923706055 * a, 198.1999969482422 * a, 206.61249923706055 * a);
            d.bezierCurveTo(196.6999969482422 * a, 211.61249923706055 * a, 196.6999969482422 * a, 211.61249923706055 * a, 195.1999969482422 * a, 216.61249923706055 * a);
            d.bezierCurveTo(192.6999969482422 * a, 216.11249923706055 * a, 192.6999969482422 * a, 216.11249923706055 * a, 190.1999969482422 * a, 215.61249923706055 * a);
            d.bezierCurveTo(190.1999969482422 * a, 211.61249923706055 * a, 190.1999969482422 * a, 211.61249923706055 * a, 190.1999969482422 * a, 207.61249923706055 * a);
            d.bezierCurveTo(186.1999969482422 * a, 210.61249923706055 * a, 186.1999969482422 * a, 210.61249923706055 * a, 182.1999969482422 * a, 213.61249923706055 * a);
            d.bezierCurveTo(181.1999969482422 * a, 211.11249923706055 * a, 181.1999969482422 * a, 211.11249923706055 * a, 180.1999969482422 * a, 208.61249923706055 * a);
            d.bezierCurveTo(183.1999969482422 * a, 205.61249923706055 * a, 183.1999969482422 * a, 205.61249923706055 * a, 186.1999969482422 * a, 202.61249923706055 * a);
            d.bezierCurveTo(180.6999969482422 * a, 203.11249923706055 * a, 180.6999969482422 * a, 203.11249923706055 * a, 175.1999969482422 * a, 203.61249923706055 * a);
            d.bezierCurveTo(174.6999969482422 * a, 200.11249923706055 * a, 174.6999969482422 * a, 200.11249923706055 * a, 174.1999969482422 * a, 196.61249923706055 * a);
            d.bezierCurveTo(177.1999969482422 * a, 195.61249923706055 * a, 177.1999969482422 * a, 195.61249923706055 * a, 180.1999969482422 * a, 194.61249923706055 * a);
            d.bezierCurveTo(177.1999969482422 * a, 191.61249923706055 * a, 177.1999969482422 * a, 191.61249923706055 * a, 174.1999969482422 * a, 188.61249923706055 * a);
            d.bezierCurveTo(175.6999969482422 * a, 187.11249923706055 * a, 175.6999969482422 * a, 187.11249923706055 * a, 177.1999969482422 * a, 185.61249923706055 * a);
            d.bezierCurveTo(180.6999969482422 * a, 187.11249923706055 * a, 180.6999969482422 * a, 187.11249923706055 * a, 184.1999969482422 * a, 188.61249923706055 * a);
            d.bezierCurveTo(182.6999969482422 * a, 183.61249923706055 * a, 182.6999969482422 * a, 183.61249923706055 * a, 181.1999969482422 * a, 178.61249923706055 * a);
            d.bezierCurveTo(183.1999969482422 * a, 177.11249923706055 * a, 183.1999969482422 * a, 177.11249923706055 * a, 185.1999969482422 * a, 175.61249923706055 * a);
            d.closePath();
            h(d, e[10]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(185.1999969482422 * a, 173.8125 * a);
            d.bezierCurveTo(187.1999969482422 * a, 179.3125 * a, 187.1999969482422 * a, 179.3125 * a, 189.1999969482422 * a, 184.8125 * a);
            d.bezierCurveTo(184.1999969482422 * a, 181.8125 * a, 184.1999969482422 * a, 181.8125 * a, 179.1999969482422 * a, 178.8125 * a);
            d.bezierCurveTo(181.1999969482422 * a, 175.8125 * a, 182.1999969482422 * a, 174.8125 * a, 185.1999969482422 * a, 173.8125 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(192.1999969482422 * a, 173.61249542236328 * a);
            d.bezierCurveTo(194.1999969482422 * a, 172.61249542236328 * a, 196.1999969482422 * a, 171.61249542236328 * a, 199.1999969482422 * a, 173.61249542236328 * a);
            d.bezierCurveTo(197.6999969482422 * a, 179.61249542236328 * a, 197.6999969482422 * a, 179.61249542236328 * a, 196.1999969482422 * a, 185.61249542236328 * a);
            d.bezierCurveTo(194.1999969482422 * a, 179.61249542236328 * a, 194.1999969482422 * a, 179.61249542236328 * a, 192.1999969482422 * a, 173.61249542236328 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(205.1999969482422 * a, 176.2125015258789 * a);
            d.bezierCurveTo(210.1999969482422 * a, 178.2125015258789 * a, 211.1999969482422 * a, 179.2125015258789 * a, 211.1999969482422 * a, 181.2125015258789 * a);
            d.bezierCurveTo(206.6999969482422 * a, 184.7125015258789 * a, 206.6999969482422 * a, 184.7125015258789 * a, 202.1999969482422 * a, 188.2125015258789 * a);
            d.bezierCurveTo(203.6999969482422 * a, 182.2125015258789 * a, 203.6999969482422 * a, 182.2125015258789 * a, 205.1999969482422 * a, 176.2125015258789 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.1999969482422 * a, 187.21249985694885 * a);
            d.bezierCurveTo(216.1999969482422 * a, 191.21249985694885 * a, 216.1999969482422 * a, 192.21249985694885 * a, 215.1999969482422 * a, 195.21249985694885 * a);
            d.bezierCurveTo(206.1999969482422 * a, 194.21249985694885 * a, 205.1999969482422 * a, 194.21249985694885 * a, 205.1999969482422 * a, 194.21249985694885 * a);
            d.bezierCurveTo(209.6999969482422 * a, 190.71249985694885 * a, 209.6999969482422 * a, 190.71249985694885 * a, 214.1999969482422 * a, 187.21249985694885 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(204.1999969482422 * a, 201.8125 * a);
            d.bezierCurveTo(209.1999969482422 * a, 201.3125 * a, 209.1999969482422 * a, 201.3125 * a, 214.1999969482422 * a, 200.8125 * a);
            d.bezierCurveTo(215.1999969482422 * a, 204.8125 * a, 214.1999969482422 * a, 205.8125 * a, 213.1999969482422 * a, 208.8125 * a);
            d.bezierCurveTo(208.6999969482422 * a, 205.3125 * a, 208.6999969482422 * a, 205.3125 * a, 204.1999969482422 * a, 201.8125 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(199.1999969482422 * a, 205.61249923706055 * a);
            d.bezierCurveTo(207.1999969482422 * a, 212.61249923706055 * a, 203.6999969482422 * a, 209.11249923706055 * a, 208.1999969482422 * a, 212.61249923706055 * a);
            d.bezierCurveTo(206.1999969482422 * a, 215.61249923706055 * a, 204.1999969482422 * a, 217.61249923706055 * a, 203.1999969482422 * a, 216.61249923706055 * a);
            d.bezierCurveTo(201.1999969482422 * a, 211.11249923706055 * a, 201.1999969482422 * a, 211.11249923706055 * a, 199.1999969482422 * a, 205.61249923706055 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(191.1999969482422 * a, 207.01250076293945 * a);
            d.bezierCurveTo(194.1999969482422 * a, 213.01250076293945 * a, 194.1999969482422 * a, 216.01250076293945 * a, 196.1999969482422 * a, 218.01250076293945 * a);
            d.bezierCurveTo(193.1999969482422 * a, 220.01250076293945 * a, 190.1999969482422 * a, 220.01250076293945 * a, 188.1999969482422 * a, 218.01250076293945 * a);
            d.bezierCurveTo(189.6999969482422 * a, 213.01250076293945 * a, 189.6999969482422 * a, 213.01250076293945 * a, 191.1999969482422 * a, 208.01250076293945 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(186.1999969482422 * a, 203.21249961853027 * a);
            d.bezierCurveTo(184.1999969482422 * a, 209.21249961853027 * a, 184.1999969482422 * a, 209.21249961853027 * a, 182.1999969482422 * a, 215.21249961853027 * a);
            d.bezierCurveTo(177.1999969482422 * a, 212.21249961853027 * a, 176.1999969482422 * a, 211.21249961853027 * a, 177.1999969482422 * a, 210.21249961853027 * a);
            d.bezierCurveTo(181.6999969482422 * a, 206.71249961853027 * a, 181.6999969482422 * a, 206.71249961853027 * a, 186.1999969482422 * a, 203.21249961853027 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(183.1999969482422 * a, 196.8125 * a);
            d.bezierCurveTo(177.1999969482422 * a, 196.3125 * a, 177.1999969482422 * a, 196.3125 * a, 171.1999969482422 * a, 195.8125 * a);
            d.bezierCurveTo(171.1999969482422 * a, 199.8125 * a, 171.1999969482422 * a, 202.8125 * a, 174.1999969482422 * a, 204.8125 * a);
            d.bezierCurveTo(178.6999969482422 * a, 200.8125 * a, 178.6999969482422 * a, 200.8125 * a, 183.1999969482422 * a, 196.8125 * a);
            d.closePath();
            h(d, e[11]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(185.1999969482422 * a, 190.21249771118164 * a);
            d.bezierCurveTo(179.6999969482422 * a, 186.71249771118164 * a, 179.6999969482422 * a, 186.71249771118164 * a, 174.1999969482422 * a, 183.21249771118164 * a);
            d.bezierCurveTo(172.1999969482422 * a, 186.21249771118164 * a, 172.1999969482422 * a, 187.21249771118164 * a, 172.1999969482422 * a, 190.21249771118164 * a);
            d.bezierCurveTo(178.1999969482422 * a, 190.21249771118164 * a, 178.1999969482422 * a, 190.21249771118164 * a, 184.1999969482422 * a, 190.21249771118164 * a);
            d.closePath();
            h(d, e[11]);
            A(d, 126.19999694824219 * a, 169.8125 * a, 8.94427190999916 * a);
            h(d, e[12]);
            A(d, 123.19999694824219 * a, 164.8125 * a, 2.8284271247461903 * a);
            h(d, e[13]);
            A(d, 253.1999969482422 * a, 169.8125 * a, 8.94427190999916 * a);
            h(d, e[12]);
            A(d, 255.1999969482422 * a, 164.8125 * a, 2.23606797749979 * a);
            h(d, e[13]);
            return f;
        };

        function qg(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 400 * a;
            e.height = 400 * a;
            d.globalAlpha = 1;
            d.translate(20 * a, 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(36.5 * a, 278.0625 * a);
            d.bezierCurveTo(67.5 * a, 316.0625 * a, 134.5 * a, 334.0625 * a, 199.5 * a, 319.0625 * a);
            d.bezierCurveTo(254.5 * a, 304.0625 * a, 346.5 * a, 270.0625 * a, 348.5 * a, 237.0625 * a);
            d.bezierCurveTo(359.5 * a, 206.0625 * a, 318.5 * a, 129.0625 * a, 262.5 * a, 122.0625 * a);
            d.bezierCurveTo(213.5 * a, 115.0625 * a, 166.5 * a, 133.0625 * a, 104.5 * a, 166.0625 * a);
            d.bezierCurveTo(54.5 * a, 194.0625 * a, 23.5 * a, 241.0625 * a, 36.5 * a, 277.0625 * a);
            d.closePath();
            h(d, f[0]);
            d.translate(-20 * a, -20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(36.5 * a, 278.0625 * a);
            d.bezierCurveTo(67.5 * a, 316.0625 * a, 134.5 * a, 334.0625 * a, 199.5 * a, 319.0625 * a);
            d.bezierCurveTo(254.5 * a, 304.0625 * a, 346.5 * a, 270.0625 * a, 348.5 * a, 237.0625 * a);
            d.bezierCurveTo(359.5 * a, 206.0625 * a, 318.5 * a, 129.0625 * a, 262.5 * a, 122.0625 * a);
            d.bezierCurveTo(213.5 * a, 115.0625 * a, 166.5 * a, 133.0625 * a, 104.5 * a, 166.0625 * a);
            d.bezierCurveTo(54.5 * a, 194.0625 * a, 23.5 * a, 241.0625 * a, 36.5 * a, 277.0625 * a);
            d.closePath();
            h(d, f[1], f[2], 19 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(214.5 * a, 124.0625 * a);
            d.bezierCurveTo(242.5 * a, 125.0625 * a, 272.5 * a, 159.0625 * a, 283.5 * a, 184.0625 * a);
            d.bezierCurveTo(277.5 * a, 161.0625 * a, 233.5 * a, 128.0625 * a, 219.5 * a, 122.0625 * a);
            d.closePath();
            h(d, void 0, f[2], 19 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(157.5 * a, 145.0625 * a);
            d.bezierCurveTo(176.5 * a, 148.0625 * a, 205.5 * a, 176.0625 * a, 212.5 * a, 197.0625 * a);
            d.bezierCurveTo(205.5 * a, 178.0625 * a, 177.5 * a, 152.0625 * a, 156.5 * a, 142.0625 * a);
            d.closePath();
            h(d, void 0, f[2], 19 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(103.5 * a, 169.0625 * a);
            d.bezierCurveTo(160.5 * a, 166.0625 * a, 228.5 * a, 312.0625 * a, 162.5 * a, 323.0625 * a);
            d.bezierCurveTo(128.5 * a, 330.0625 * a, 45.5 * a, 312.0625 * a, 34.5 * a, 268.0625 * a);
            d.bezierCurveTo(30.5 * a, 238.0625 * a, 44.5 * a, 222.0625 * a, 52.5 * a, 211.0625 * a);
            d.bezierCurveTo(82.5 * a, 174.0625 * a, 104.5 * a, 166.0625 * a, 119.5 * a, 172.0625 * a);
            d.closePath();
            h(d, f[3], f[2], 19 * a);
            A(d, 92.5 * a, 216.0625 * a, 13.892443989449804 * a);
            h(d, f[4]);
            A(d, 68.5 * a, 227.0625 * a, 8.06225774829855 * a);
            h(d, f[4]);
            A(d, 85.5 * a, 240.0625 * a, 6.708203932499369 * a);
            h(d, f[4]);
            A(d, 147.5 * a, 294.0625 * a, 17.46424919657298 * a);
            h(d, f[4]);
            A(d, 166.5 * a, 273.0625 * a, 6.708203932499369 * a);
            h(d, f[4]);
            A(d, 114.5 * a, 294.0625 * a, 12.36931687685298 * a);
            h(d, f[4]);
            A(d, 123.5 * a, 220.0625 * a, 5.830951894845301 * a);
            h(d, f[4]);
            A(d, 114.5 * a, 259.0625 * a, 4.123105625617661 * a);
            h(d, f[4]);
            A(d, 63.5 * a, 265.0625 * a, 5.385164807134504 * a);
            h(d, f[4]);
            A(d, 148.5 * a, 235.0625 * a, 4.47213595499958 * a);
            h(d, f[4]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(194.5 * a, 313.0625 * a);
            d.bezierCurveTo(222.5 * a, 306.0625 * a, 319.5 * a, 271.0625 * a, 337.5 * a, 241.0625 * a);
            d.bezierCurveTo(274.5 * a, 270.0625 * a, 216.5 * a, 288.0625 * a, 199.5 * a, 287.0625 * a);
            d.bezierCurveTo(198.5 * a, 302.0625 * a, 195.5 * a, 311.0625 * a, 193.5 * a, 312.0625 * a);
            d.closePath();
            h(d, f[5]);
            return e;
        };

        function Sh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 376 * a;
            f.height = 371 * a;
            d.globalAlpha = 1;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(191.633544921875 * a, 123.98580932617188 * a);
            d.bezierCurveTo(215.633544921875 * a, 85.98580932617188 * a, 187.633544921875 * a, 71.98580932617188 * a, 202.633544921875 * a, 19.985809326171875 * a);
            d.bezierCurveTo(231.633544921875 * a, 68.98580932617188 * a, 253.633544921875 * a, 71.98580932617188 * a, 256.633544921875 * a, 93.98580932617188 * a);
            d.bezierCurveTo(306.633544921875 * a, 64.98580932617188 * a, 319.633544921875 * a, 61.985809326171875 * a, 350.633544921875 * a, 58.985809326171875 * a);
            d.bezierCurveTo(280.633544921875 * a, 86.98580932617188 * a, 281.633544921875 * a, 106.98580932617188 * a, 268.633544921875 * a, 130.98580932617188 * a);
            d.bezierCurveTo(295.633544921875 * a, 158.98580932617188 * a, 328.633544921875 * a, 155.98580932617188 * a, 353.633544921875 * a, 90.98580932617188 * a);
            d.bezierCurveTo(371.633544921875 * a, 158.98580932617188 * a, 337.633544921875 * a, 210.98580932617188 * a, 286.633544921875 * a, 209.98580932617188 * a);
            d.bezierCurveTo(323.633544921875 * a, 230.98580932617188 * a, 317.633544921875 * a, 274.9858093261719 * a, 356.633544921875 * a, 305.9858093261719 * a);
            d.bezierCurveTo(288.633544921875 * a, 297.9858093261719 * a, 288.633544921875 * a, 265.9858093261719 * a, 275.633544921875 * a, 266.9858093261719 * a);
            d.bezierCurveTo(280.633544921875 * a, 294.9858093261719 * a, 315.633544921875 * a, 306.9858093261719 * a, 336.633544921875 * a, 316.9858093261719 * a);
            d.bezierCurveTo(295.633544921875 * a, 318.9858093261719 * a, 264.633544921875 * a, 302.9858093261719 * a, 254.633544921875 * a, 289.9858093261719 * a);
            d.bezierCurveTo(252.633544921875 * a, 301.9858093261719 * a, 224.633544921875 * a, 315.9858093261719 * a, 201.633544921875 * a, 356.9858093261719 * a);
            d.bezierCurveTo(195.633544921875 * a, 313.9858093261719 * a, 195.633544921875 * a, 308.9858093261719 * a, 196.633544921875 * a, 307.9858093261719 * a);
            d.bezierCurveTo(197.633544921875 * a, 289.9858093261719 * a, 207.633544921875 * a, 283.9858093261719 * a, 195.633544921875 * a, 258.9858093261719 * a);
            d.bezierCurveTo(182.633544921875 * a, 282.9858093261719 * a, 190.633544921875 * a, 287.9858093261719 * a, 193.633544921875 * a, 297.9858093261719 * a);
            d.bezierCurveTo(195.633544921875 * a, 306.9858093261719 * a, 191.633544921875 * a, 334.9858093261719 * a, 187.633544921875 * a, 354.9858093261719 * a);
            d.bezierCurveTo(165.633544921875 * a, 320.9858093261719 * a, 138.633544921875 * a, 307.9858093261719 * a, 135.633544921875 * a, 288.9858093261719 * a);
            d.bezierCurveTo(110.633544921875 * a, 318.9858093261719 * a, 68.633544921875 * a, 323.9858093261719 * a, 49.633544921875 * a, 320.9858093261719 * a);
            d.bezierCurveTo(88.633544921875 * a, 308.9858093261719 * a, 108.633544921875 * a, 284.9858093261719 * a, 118.633544921875 * a, 258.9858093261719 * a);
            d.bezierCurveTo(86.633544921875 * a, 264.9858093261719 * a, 75.633544921875 * a, 310.9858093261719 * a, 19.633544921875 * a, 304.9858093261719 * a);
            d.bezierCurveTo(54.633544921875 * a, 276.9858093261719 * a, 59.633544921875 * a, 214.98580932617188 * a, 105.633544921875 * a, 205.98580932617188 * a);
            d.bezierCurveTo(14.633544921875 * a, 201.98580932617188 * a, 24.633544921875 * a, 141.98580932617188 * a, 25.633544921875 * a, 82.98580932617188 * a);
            d.bezierCurveTo(49.633544921875 * a, 168.98580932617188 * a, 87.633544921875 * a, 141.98580932617188 * a, 112.633544921875 * a, 123.98580932617188 * a);
            d.bezierCurveTo(95.633544921875 * a, 75.98580932617188 * a, 70.633544921875 * a, 68.98580932617188 * a, 35.633544921875 * a, 50.985809326171875 * a);
            d.bezierCurveTo(70.633544921875 * a, 53.985809326171875 * a, 102.633544921875 * a, 65.98580932617188 * a, 125.633544921875 * a, 84.98580932617188 * a);
            d.bezierCurveTo(133.633544921875 * a, 69.98580932617188 * a, 166.633544921875 * a, 42.985809326171875 * a, 176.633544921875 * a, 21.985809326171875 * a);
            d.bezierCurveTo(185.633544921875 * a, 49.985809326171875 * a, 168.633544921875 * a, 95.98580932617188 * a, 191.633544921875 * a, 121.98580932617188 * a);
            d.closePath();
            h(d, e[0], e[0], 12 * a);
            return f;
        };

        function rg(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 440 * a;
            d.height = 388 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            A(c, 220 * a, 201 * a, 170.41713528867922 * a);
            h(c, f[0], f[0], 6 * a);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            A(c, 220 * a, 201 * a, 170.41713528867922 * a);
            h(c, f[1], f[2], 6 * a);
            A(c, 220 * a, 201 * a, 130 * a);
            h(c, f[11], f[2], 6 * a);
            A(c, 222 * a, 199 * a, 120.74767078498864 * a);
            h(c, void 0, f[3], 40 * a);
            A(c, 220 * a, 200 * a, 95.44108130150245 * a);
            h(c, void 0, f[2], 15 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            A(c, 63 * a, 136 * a, 49.193495504995376 * a);
            h(c, f[0], f[0], 4 * a);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            A(c, 63 * a, 136 * a, 49.193495504995376 * a);
            h(c, f[8], f[2], 4 * a);
            A(c, 63 * a, 137 * a, 25.632011235952593 * a);
            h(c, f[7], f[2], 4 * a);
            return d;
        };

        function Se(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 440 * a;
            d.height = 388 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            A(c, 220 * a, 201 * a, 170.41713528867922 * a);
            h(c, f[0], f[0], 6 * a);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            A(c, 220 * a, 201 * a, 170.41713528867922 * a);
            h(c, f[1], f[2], 6 * a);
            A(c, 220 * a, 201 * a, 130 * a);
            h(c, f[11], f[2], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(218 * a, 97 * a);
            c.bezierCurveTo(219 * a, 163 * a, 201 * a, 176 * a, 191 * a, 175 * a);
            c.bezierCurveTo(176 * a, 177 * a, 168 * a, 167 * a, 160 * a, 115 * a);
            c.closePath();
            h(c, f[5], f[6], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(224 * a, 181 * a);
            c.bezierCurveTo(225 * a, 138 * a, 246 * a, 115 * a, 263 * a, 137 * a);
            c.bezierCurveTo(282 * a, 174 * a, 279 * a, 217 * a, 265 * a, 243 * a);
            c.bezierCurveTo(253 * a, 264 * a, 240 * a, 256 * a, 233 * a, 238 * a);
            c.bezierCurveTo(221 * a, 212 * a, 225 * a, 198 * a, 224 * a, 184 * a);
            c.closePath();
            h(c, f[5], f[6], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(169 * a, 289 * a);
            c.bezierCurveTo(161 * a, 234 * a, 168 * a, 197 * a, 187 * a, 195 * a);
            c.bezierCurveTo(219 * a, 189 * a, 222 * a, 256 * a, 216 * a, 307 * a);
            c.closePath();
            h(c, f[5], f[6], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(143 * a, 146 * a);
            c.bezierCurveTo(161 * a, 199 * a, 151 * a, 245 * a, 138 * a, 266 * a);
            c.bezierCurveTo(120.5 * a, 239.5 * a, 120.5 * a, 239.5 * a, 103 * a, 213 * a);
            c.closePath();
            h(c, f[5], f[6], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(283 * a, 135 * a);
            c.bezierCurveTo(277 * a, 176 * a, 298 * a, 194 * a, 315 * a, 205 * a);
            c.bezierCurveTo(323.5 * a, 175 * a, 323.5 * a, 175 * a, 332 * a, 145 * a);
            c.closePath();
            h(c, f[5], f[6], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(318 * a, 223 * a);
            c.bezierCurveTo(290 * a, 195 * a, 271 * a, 256 * a, 283 * a, 281 * a);
            c.bezierCurveTo(303.5 * a, 267 * a, 303.5 * a, 267 * a, 324 * a, 253 * a);
            c.closePath();
            h(c, f[5], f[6], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(142 * a, 223 * a);
            c.bezierCurveTo(128 * a, 213 * a, 123 * a, 214 * a, 111 * a, 223 * a);
            c.closePath();
            h(c, f[10], f[10], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(251 * a, 133 * a);
            c.bezierCurveTo(269 * a, 188 * a, 262 * a, 229 * a, 251 * a, 253 * a);
            c.bezierCurveTo(288 * a, 224 * a, 273 * a, 139 * a, 252 * a, 133 * a);
            c.closePath();
            h(c, f[10], f[10], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(203 * a, 102 * a);
            c.bezierCurveTo(204 * a, 136 * a, 200 * a, 159 * a, 189 * a, 174 * a);
            c.bezierCurveTo(223 * a, 164 * a, 219 * a, 87 * a, 205 * a, 83 * a);
            c.closePath();
            h(c, f[10], f[10], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(196 * a, 324 * a);
            c.bezierCurveTo(209 * a, 239 * a, 200 * a, 219 * a, 192 * a, 196 * a);
            c.bezierCurveTo(229 * a, 216 * a, 219 * a, 316 * a, 198 * a, 325 * a);
            c.closePath();
            h(c, f[10], f[10], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(266 * a, 166 * a);
            c.bezierCurveTo(249 * a, 154 * a, 243 * a, 161 * a, 233 * a, 167 * a);
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(269 * a, 192 * a);
            c.bezierCurveTo(256 * a, 183 * a, 241 * a, 186 * a, 233 * a, 192 * a);
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(263 * a, 217 * a);
            c.bezierCurveTo(251 * a, 211 * a, 242 * a, 213 * a, 236 * a, 218 * a);
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(204 * a, 141 * a);
            c.bezierCurveTo(191 * a, 131 * a, 187 * a, 133 * a, 176 * a, 141 * a);
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(207 * a, 230 * a);
            c.bezierCurveTo(193 * a, 222 * a, 185 * a, 224 * a, 177 * a, 231 * a);
            h(c, void 0, f[6], 6 * a);
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(210 * a, 258 * a);
            c.bezierCurveTo(196 * a, 247 * a, 191 * a, 250 * a, 177 * a, 259 * a);
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(145 * a, 196 * a);
            c.bezierCurveTo(130 * a, 186 * a, 124 * a, 187 * a, 114 * a, 195 * a);
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(218 * a, 97 * a);
            c.bezierCurveTo(219 * a, 163 * a, 201 * a, 176 * a, 191 * a, 175 * a);
            c.bezierCurveTo(176 * a, 177 * a, 168 * a, 167 * a, 160 * a, 115 * a);
            c.closePath();
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(224 * a, 181 * a);
            c.bezierCurveTo(225 * a, 138 * a, 246 * a, 115 * a, 263 * a, 137 * a);
            c.bezierCurveTo(282 * a, 174 * a, 279 * a, 217 * a, 265 * a, 243 * a);
            c.bezierCurveTo(253 * a, 264 * a, 240 * a, 256 * a, 233 * a, 238 * a);
            c.bezierCurveTo(221 * a, 212 * a, 225 * a, 198 * a, 224 * a, 184 * a);
            c.closePath();
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(169 * a, 289 * a);
            c.bezierCurveTo(161 * a, 234 * a, 168 * a, 197 * a, 187 * a, 195 * a);
            c.bezierCurveTo(219 * a, 189 * a, 222 * a, 256 * a, 216 * a, 307 * a);
            c.closePath();
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(143 * a, 146 * a);
            c.bezierCurveTo(161 * a, 199 * a, 151 * a, 245 * a, 138 * a, 266 * a);
            c.bezierCurveTo(120.5 * a, 239.5 * a, 120.5 * a, 239.5 * a, 103 * a, 213 * a);
            c.closePath();
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(283 * a, 135 * a);
            c.bezierCurveTo(277 * a, 176 * a, 298 * a, 194 * a, 315 * a, 205 * a);
            c.bezierCurveTo(323.5 * a, 175 * a, 323.5 * a, 175 * a, 332 * a, 145 * a);
            c.closePath();
            h(c, void 0, f[6], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(318 * a, 223 * a);
            c.bezierCurveTo(290 * a, 195 * a, 271 * a, 256 * a, 283 * a, 281 * a);
            c.bezierCurveTo(303.5 * a, 267 * a, 303.5 * a, 267 * a, 324 * a, 253 * a);
            c.closePath();
            h(c, void 0, f[6], 6 * a);
            A(c, 222 * a, 199 * a, 120.74767078498864 * a);
            h(c, void 0, f[3], 40 * a);
            A(c, 220 * a, 200 * a, 95.44108130150245 * a);
            h(c, void 0, f[2], 15 * a);
            A(c, 220 * a, 201 * a, 85 * a);
            h(c, void 0, f[4], 10 * a);
            c.globalAlpha = 0.5;
            A(c, 220 * a, 201 * a, 82 * a);
            h(c, f[9]);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            A(c, 63 * a, 136 * a, 49.193495504995376 * a);
            h(c, f[0], f[0], 4 * a);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            A(c, 63 * a, 136 * a, 49.193495504995376 * a);
            h(c, f[8], f[2], 4 * a);
            A(c, 63 * a, 137 * a, 25.632011235952593 * a);
            h(c, f[7], f[2], 4 * a);
            return d;
        };

        function Te(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 110 * a;
            f.height = 110 * a;
            d.globalAlpha = 0.2;
            A(d, 55 * a, 55 * a, 55 * a);
            h(d, e[0]);
            return f;
        };

        function Ue(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 102 * a;
            d.height = 102 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(3, 3);
            B(c, 24 * a, 26 * a, 70 * a, 9 * a, 10 * a);
            h(c, f[0]);
            B(c, 26 * a, 70 * a, 70 * a, 9 * a, 10 * a);
            h(c, f[0]);
            B(c, 5 * a, 3 * a, 22 * a, 94 * a, 5 * a);
            h(c, f[0]);
            B(c, 40 * a, 3 * a, 22 * a, 94 * a, 5 * a);
            h(c, f[0]);
            B(c, 75 * a, 3 * a, 22 * a, 94 * a, 5 * a);
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-3, -3);
            B(c, 24 * a, 26 * a, 70 * a, 9 * a, 10 * a);
            h(c, f[1]);
            B(c, 26 * a, 70 * a, 70 * a, 9 * a, 10 * a);
            h(c, f[1]);
            B(c, 5 * a, 3 * a, 22 * a, 94 * a, 5 * a);
            h(c, f[2], f[3], 4 * a);
            B(c, 40 * a, 3 * a, 22 * a, 94 * a, 5 * a);
            h(c, f[2], f[3], 4 * a);
            B(c, 75 * a, 3 * a, 22 * a, 94 * a, 5 * a);
            h(c, f[2], f[3], 4 * a);
            return d;
        };

        function Xc(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 496 * a;
            d.height = 520 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(19.000030517578125 * a, 256.67613983154297 * a);
            c.bezierCurveTo(1.000030517578125 * a, 332.67613983154297 * a, 23.000030517578125 * a, 404.67613983154297 * a, 95.00003051757812 * a, 463.67613983154297 * a);
            c.bezierCurveTo(128.00003051757812 * a, 491.67613983154297 * a, 165.00003051757812 * a, 507.67613983154297 * a, 194.00003051757812 * a, 512.676139831543 * a);
            c.bezierCurveTo(280.0000305175781 * a, 517.676139831543 * a, 291.0000305175781 * a, 516.676139831543 * a, 342.0000305175781 * a, 497.67613983154297 * a);
            c.bezierCurveTo(425.0000305175781 * a, 454.67613983154297 * a, 469.0000305175781 * a, 392.67613983154297 * a, 468.0000305175781 * a, 300.67613983154297 * a);
            c.bezierCurveTo(408.5000305175781 * a, 365.17613983154297 * a, 408.5000305175781 * a, 365.17613983154297 * a, 349.0000305175781 * a, 429.67613983154297 * a);
            c.bezierCurveTo(256.0000305175781 * a, 473.67613983154297 * a, 167.00003051757812 * a, 459.67613983154297 * a, 78.00003051757812 * a, 384.67613983154297 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            A(c, 247.01138305664062 * a, 249.3125 * a, 161.4465855941215 * a);
            h(c, f[5], void 0, 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(65.00003051757812 * a, 263.4034118652344 * a);
            c.bezierCurveTo(109.00003051757812 * a, 160.40341186523438 * a, 185.00003051757812 * a, 128.40341186523438 * a, 222.00003051757812 * a, 124.40341186523438 * a);
            c.bezierCurveTo(277.0000305175781 * a, 116.40341186523438 * a, 339.0000305175781 * a, 134.40341186523438 * a, 379.0000305175781 * a, 195.40341186523438 * a);
            c.bezierCurveTo(409.0000305175781 * a, 242.40341186523438 * a, 416.0000305175781 * a, 256.4034118652344 * a, 428.0000305175781 * a, 304.4034118652344 * a);
            c.bezierCurveTo(457.0000305175781 * a, 203.40341186523438 * a, 449.0000305175781 * a, 183.40341186523438 * a, 438.0000305175781 * a, 162.40341186523438 * a);
            c.bezierCurveTo(381.0000305175781 * a, 73.40341186523438 * a, 360.0000305175781 * a, 66.40341186523438 * a, 257.0000305175781 * a, 46.403411865234375 * a);
            c.bezierCurveTo(191.00003051757812 * a, 45.403411865234375 * a, 142.00003051757812 * a, 65.40341186523438 * a, 101.00003051757812 * a, 115.40341186523438 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            var g = document.createElement("canvas"),
                k = g.getContext("2d");
            g.width = 496 * a;
            g.height = 520 * a;
            k.globalAlpha = 1;
            k.translate(0, -10 * a);
            A(k, 247.01138305664062 * a, 250.13068389892578 * a, 232.81967270830015 * a);
            h(k, f[1], f[2], 14 * a);
            k.globalCompositeOperation = "destination-out";
            A(k, 247.01138305664062 * a, 249.3125 * a, 161.4465855941215 * a);
            h(k, f[0], f[0], 14 * a);
            k.globalCompositeOperation = "source-over";
            c.drawImage(g, 0, 0);
            c.translate(0, -10 * a);
            A(c, 247.01138305664062 * a, 249.3125 * a, 161.4465855941215 * a);
            h(c, void 0, f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(325.0113830566406 * a, 13.767059326171875 * a);
            c.bezierCurveTo(349.5113830566406 * a, 25.767059326171875 * a, 349.5113830566406 * a, 25.767059326171875 * a, 374.0113830566406 * a, 37.767059326171875 * a);
            c.bezierCurveTo(384.0113830566406 * a, 44.767059326171875 * a, 383.0113830566406 * a, 50.767059326171875 * a, 368.0113830566406 * a, 68.76705932617188 * a);
            c.bezierCurveTo(352.5113830566406 * a, 91.26705932617188 * a, 352.5113830566406 * a, 91.26705932617188 * a, 337.0113830566406 * a, 113.76705932617188 * a);
            c.bezierCurveTo(328.0113830566406 * a, 119.76705932617188 * a, 328.0113830566406 * a, 121.76705932617188 * a, 312.0113830566406 * a, 112.76705932617188 * a);
            c.bezierCurveTo(303.0113830566406 * a, 108.26705932617188 * a, 303.0113830566406 * a, 108.26705932617188 * a, 294.0113830566406 * a, 103.76705932617188 * a);
            c.bezierCurveTo(287.0113830566406 * a, 99.76705932617188 * a, 293.0113830566406 * a, 84.76705932617188 * a, 297.0113830566406 * a, 67.76705932617188 * a);
            c.bezierCurveTo(302.0113830566406 * a, 47.767059326171875 * a, 302.0113830566406 * a, 47.767059326171875 * a, 307.0113830566406 * a, 27.767059326171875 * a);
            c.bezierCurveTo(310.0113830566406 * a, 15.767059326171875 * a, 317.0113830566406 * a, 12.767059326171875 * a, 323.0113830566406 * a, 13.767059326171875 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(325.0113830566406 * a, 13.767059326171875 * a);
            c.bezierCurveTo(349.5113830566406 * a, 25.767059326171875 * a, 349.5113830566406 * a, 25.767059326171875 * a, 374.0113830566406 * a, 37.767059326171875 * a);
            c.bezierCurveTo(384.0113830566406 * a, 44.767059326171875 * a, 383.0113830566406 * a, 50.767059326171875 * a, 368.0113830566406 * a, 68.76705932617188 * a);
            c.bezierCurveTo(352.5113830566406 * a, 91.26705932617188 * a, 352.5113830566406 * a, 91.26705932617188 * a, 337.0113830566406 * a, 113.76705932617188 * a);
            c.bezierCurveTo(328.0113830566406 * a, 119.76705932617188 * a, 328.0113830566406 * a, 121.76705932617188 * a, 312.0113830566406 * a, 112.76705932617188 * a);
            c.bezierCurveTo(303.0113830566406 * a, 108.26705932617188 * a, 303.0113830566406 * a, 108.26705932617188 * a, 294.0113830566406 * a, 103.76705932617188 * a);
            c.bezierCurveTo(287.0113830566406 * a, 99.76705932617188 * a, 293.0113830566406 * a, 84.76705932617188 * a, 297.0113830566406 * a, 67.76705932617188 * a);
            c.bezierCurveTo(302.0113830566406 * a, 47.767059326171875 * a, 302.0113830566406 * a, 47.767059326171875 * a, 307.0113830566406 * a, 27.767059326171875 * a);
            c.bezierCurveTo(310.0113830566406 * a, 15.767059326171875 * a, 317.0113830566406 * a, 12.767059326171875 * a, 323.0113830566406 * a, 13.767059326171875 * a);
            c.closePath();
            h(c, f[3], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(403.0113830566406 * a, 89.76705932617188 * a);
            c.bezierCurveTo(413.0113830566406 * a, 76.76705932617188 * a, 418.0113830566406 * a, 79.76705932617188 * a, 428.0113830566406 * a, 92.76705932617188 * a);
            c.bezierCurveTo(435.0113830566406 * a, 99.76705932617188 * a, 435.0113830566406 * a, 99.76705932617188 * a, 442.0113830566406 * a, 106.76705932617188 * a);
            c.bezierCurveTo(450.0113830566406 * a, 116.76705932617188 * a, 445.0113830566406 * a, 119.76705932617188 * a, 433.0113830566406 * a, 128.76705932617188 * a);
            c.bezierCurveTo(408.0113830566406 * a, 146.26705932617188 * a, 408.0113830566406 * a, 146.26705932617188 * a, 383.0113830566406 * a, 163.76705932617188 * a);
            c.bezierCurveTo(376.0113830566406 * a, 166.76705932617188 * a, 377.0113830566406 * a, 165.76705932617188 * a, 368.0113830566406 * a, 156.76705932617188 * a);
            c.bezierCurveTo(359.0113830566406 * a, 144.76705932617188 * a, 359.0113830566406 * a, 142.76705932617188 * a, 367.0113830566406 * a, 133.76705932617188 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(403.0113830566406 * a, 89.76705932617188 * a);
            c.bezierCurveTo(413.0113830566406 * a, 76.76705932617188 * a, 418.0113830566406 * a, 79.76705932617188 * a, 428.0113830566406 * a, 92.76705932617188 * a);
            c.bezierCurveTo(435.0113830566406 * a, 99.76705932617188 * a, 435.0113830566406 * a, 99.76705932617188 * a, 442.0113830566406 * a, 106.76705932617188 * a);
            c.bezierCurveTo(450.0113830566406 * a, 116.76705932617188 * a, 445.0113830566406 * a, 119.76705932617188 * a, 433.0113830566406 * a, 128.76705932617188 * a);
            c.bezierCurveTo(408.0113830566406 * a, 146.26705932617188 * a, 408.0113830566406 * a, 146.26705932617188 * a, 383.0113830566406 * a, 163.76705932617188 * a);
            c.bezierCurveTo(376.0113830566406 * a, 166.76705932617188 * a, 377.0113830566406 * a, 165.76705932617188 * a, 368.0113830566406 * a, 156.76705932617188 * a);
            c.bezierCurveTo(359.0113830566406 * a, 144.76705932617188 * a, 359.0113830566406 * a, 142.76705932617188 * a, 367.0113830566406 * a, 133.76705932617188 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(228.01138305664062 * a, 1.767059326171875 * a);
            c.bezierCurveTo(246.51138305664062 * a, 3.267059326171875 * a, 246.51138305664062 * a, 3.267059326171875 * a, 265.0113830566406 * a, 4.767059326171875 * a);
            c.bezierCurveTo(273.0113830566406 * a, 5.767059326171875 * a, 275.0113830566406 * a, 11.767059326171875 * a, 270.0113830566406 * a, 27.767059326171875 * a);
            c.bezierCurveTo(264.0113830566406 * a, 54.267059326171875 * a, 264.0113830566406 * a, 54.267059326171875 * a, 258.0113830566406 * a, 80.76705932617188 * a);
            c.bezierCurveTo(256.0113830566406 * a, 92.76705932617188 * a, 256.0113830566406 * a, 94.76705932617188 * a, 242.01138305664062 * a, 93.76705932617188 * a);
            c.bezierCurveTo(226.01138305664062 * a, 95.76705932617188 * a, 225.01138305664062 * a, 91.76705932617188 * a, 225.01138305664062 * a, 80.76705932617188 * a);
            c.bezierCurveTo(223.51138305664062 * a, 50.267059326171875 * a, 223.51138305664062 * a, 50.267059326171875 * a, 222.01138305664062 * a, 19.767059326171875 * a);
            c.bezierCurveTo(219.01138305664062 * a, 8.767059326171875 * a, 224.01138305664062 * a, 4.767059326171875 * a, 227.01138305664062 * a, 2.767059326171875 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(228.01138305664062 * a, 1.767059326171875 * a);
            c.bezierCurveTo(246.51138305664062 * a, 3.267059326171875 * a, 246.51138305664062 * a, 3.267059326171875 * a, 265.0113830566406 * a, 4.767059326171875 * a);
            c.bezierCurveTo(273.0113830566406 * a, 5.767059326171875 * a, 275.0113830566406 * a, 11.767059326171875 * a, 270.0113830566406 * a, 27.767059326171875 * a);
            c.bezierCurveTo(264.0113830566406 * a, 54.267059326171875 * a, 264.0113830566406 * a, 54.267059326171875 * a, 258.0113830566406 * a, 80.76705932617188 * a);
            c.bezierCurveTo(256.0113830566406 * a, 92.76705932617188 * a, 256.0113830566406 * a, 94.76705932617188 * a, 242.01138305664062 * a, 93.76705932617188 * a);
            c.bezierCurveTo(226.01138305664062 * a, 95.76705932617188 * a, 225.01138305664062 * a, 91.76705932617188 * a, 225.01138305664062 * a, 80.76705932617188 * a);
            c.bezierCurveTo(223.51138305664062 * a, 50.267059326171875 * a, 223.51138305664062 * a, 50.267059326171875 * a, 222.01138305664062 * a, 19.767059326171875 * a);
            c.bezierCurveTo(219.01138305664062 * a, 8.767059326171875 * a, 224.01138305664062 * a, 4.767059326171875 * a, 227.01138305664062 * a, 2.767059326171875 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(142.01138305664062 * a, 25.767059326171875 * a);
            c.bezierCurveTo(158.51138305664062 * a, 19.767059326171875 * a, 158.51138305664062 * a, 19.767059326171875 * a, 175.01138305664062 * a, 13.767059326171875 * a);
            c.bezierCurveTo(188.01138305664062 * a, 11.767059326171875 * a, 188.01138305664062 * a, 16.767059326171875 * a, 191.01138305664062 * a, 29.767059326171875 * a);
            c.bezierCurveTo(197.01138305664062 * a, 60.267059326171875 * a, 197.01138305664062 * a, 60.267059326171875 * a, 203.01138305664062 * a, 90.76705932617188 * a);
            c.bezierCurveTo(206.01138305664062 * a, 102.76705932617188 * a, 196.01138305664062 * a, 99.76705932617188 * a, 181.01138305664062 * a, 105.76705932617188 * a);
            c.bezierCurveTo(175.01138305664062 * a, 108.76705932617188 * a, 172.01138305664062 * a, 104.76705932617188 * a, 164.01138305664062 * a, 84.76705932617188 * a);
            c.bezierCurveTo(152.51138305664062 * a, 63.267059326171875 * a, 152.51138305664062 * a, 63.267059326171875 * a, 141.01138305664062 * a, 41.767059326171875 * a);
            c.bezierCurveTo(138.01138305664062 * a, 35.767059326171875 * a, 138.01138305664062 * a, 29.767059326171875 * a, 141.01138305664062 * a, 27.767059326171875 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(142.01138305664062 * a, 25.767059326171875 * a);
            c.bezierCurveTo(158.51138305664062 * a, 19.767059326171875 * a, 158.51138305664062 * a, 19.767059326171875 * a, 175.01138305664062 * a, 13.767059326171875 * a);
            c.bezierCurveTo(188.01138305664062 * a, 11.767059326171875 * a, 188.01138305664062 * a, 16.767059326171875 * a, 191.01138305664062 * a, 29.767059326171875 * a);
            c.bezierCurveTo(197.01138305664062 * a, 60.267059326171875 * a, 197.01138305664062 * a, 60.267059326171875 * a, 203.01138305664062 * a, 90.76705932617188 * a);
            c.bezierCurveTo(206.01138305664062 * a, 102.76705932617188 * a, 196.01138305664062 * a, 99.76705932617188 * a, 181.01138305664062 * a, 105.76705932617188 * a);
            c.bezierCurveTo(175.01138305664062 * a, 108.76705932617188 * a, 172.01138305664062 * a, 104.76705932617188 * a, 164.01138305664062 * a, 84.76705932617188 * a);
            c.bezierCurveTo(152.51138305664062 * a, 63.267059326171875 * a, 152.51138305664062 * a, 63.267059326171875 * a, 141.01138305664062 * a, 41.767059326171875 * a);
            c.bezierCurveTo(138.01138305664062 * a, 35.767059326171875 * a, 138.01138305664062 * a, 29.767059326171875 * a, 141.01138305664062 * a, 27.767059326171875 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(70.01138305664062 * a, 76.76705932617188 * a);
            c.bezierCurveTo(83.01138305664062 * a, 64.26705932617188 * a, 83.01138305664062 * a, 64.26705932617188 * a, 96.01138305664062 * a, 51.767059326171875 * a);
            c.bezierCurveTo(104.01138305664062 * a, 44.767059326171875 * a, 110.01138305664062 * a, 51.767059326171875 * a, 119.01138305664062 * a, 66.76705932617188 * a);
            c.bezierCurveTo(135.01138305664062 * a, 88.26705932617188 * a, 135.01138305664062 * a, 88.26705932617188 * a, 151.01138305664062 * a, 109.76705932617188 * a);
            c.bezierCurveTo(157.01138305664062 * a, 119.76705932617188 * a, 153.01138305664062 * a, 122.76705932617188 * a, 147.01138305664062 * a, 129.76705932617188 * a);
            c.bezierCurveTo(138.01138305664062 * a, 140.76705932617188 * a, 136.01138305664062 * a, 140.76705932617188 * a, 122.01138305664062 * a, 127.76705932617188 * a);
            c.bezierCurveTo(99.51138305664062 * a, 110.26705932617188 * a, 99.51138305664062 * a, 110.26705932617188 * a, 77.01138305664062 * a, 92.76705932617188 * a);
            c.bezierCurveTo(66.01138305664062 * a, 83.76705932617188 * a, 66.01138305664062 * a, 82.76705932617188 * a, 69.01138305664062 * a, 78.76705932617188 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(70.01138305664062 * a, 76.76705932617188 * a);
            c.bezierCurveTo(83.01138305664062 * a, 64.26705932617188 * a, 83.01138305664062 * a, 64.26705932617188 * a, 96.01138305664062 * a, 51.767059326171875 * a);
            c.bezierCurveTo(104.01138305664062 * a, 44.767059326171875 * a, 110.01138305664062 * a, 51.767059326171875 * a, 119.01138305664062 * a, 66.76705932617188 * a);
            c.bezierCurveTo(135.01138305664062 * a, 88.26705932617188 * a, 135.01138305664062 * a, 88.26705932617188 * a, 151.01138305664062 * a, 109.76705932617188 * a);
            c.bezierCurveTo(157.01138305664062 * a, 119.76705932617188 * a, 153.01138305664062 * a, 122.76705932617188 * a, 147.01138305664062 * a, 129.76705932617188 * a);
            c.bezierCurveTo(138.01138305664062 * a, 140.76705932617188 * a, 136.01138305664062 * a, 140.76705932617188 * a, 122.01138305664062 * a, 127.76705932617188 * a);
            c.bezierCurveTo(99.51138305664062 * a, 110.26705932617188 * a, 99.51138305664062 * a, 110.26705932617188 * a, 77.01138305664062 * a, 92.76705932617188 * a);
            c.bezierCurveTo(66.01138305664062 * a, 83.76705932617188 * a, 66.01138305664062 * a, 82.76705932617188 * a, 69.01138305664062 * a, 78.76705932617188 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(33.011383056640625 * a, 126.76705932617188 * a);
            c.bezierCurveTo(22.011383056640625 * a, 149.76705932617188 * a, 22.011383056640625 * a, 149.76705932617188 * a, 11.011383056640625 * a, 172.76705932617188 * a);
            c.bezierCurveTo(7.011383056640625 * a, 184.76705932617188 * a, 11.011383056640625 * a, 189.76705932617188 * a, 36.011383056640625 * a, 195.76705932617188 * a);
            c.bezierCurveTo(61.011383056640625 * a, 202.26705932617188 * a, 61.011383056640625 * a, 202.26705932617188 * a, 86.01138305664062 * a, 208.76705932617188 * a);
            c.bezierCurveTo(100.01138305664062 * a, 214.76705932617188 * a, 102.01138305664062 * a, 203.76705932617188 * a, 109.01138305664062 * a, 189.76705932617188 * a);
            c.bezierCurveTo(117.01138305664062 * a, 171.76705932617188 * a, 116.01138305664062 * a, 166.76705932617188 * a, 97.01138305664062 * a, 156.76705932617188 * a);
            c.bezierCurveTo(74.01138305664062 * a, 140.76705932617188 * a, 74.01138305664062 * a, 140.76705932617188 * a, 51.011383056640625 * a, 124.76705932617188 * a);
            c.bezierCurveTo(42.011383056640625 * a, 118.76705932617188 * a, 37.011383056640625 * a, 119.76705932617188 * a, 33.011383056640625 * a, 126.76705932617188 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(33.011383056640625 * a, 126.76705932617188 * a);
            c.bezierCurveTo(22.011383056640625 * a, 149.76705932617188 * a, 22.011383056640625 * a, 149.76705932617188 * a, 11.011383056640625 * a, 172.76705932617188 * a);
            c.bezierCurveTo(7.011383056640625 * a, 184.76705932617188 * a, 11.011383056640625 * a, 189.76705932617188 * a, 36.011383056640625 * a, 195.76705932617188 * a);
            c.bezierCurveTo(61.011383056640625 * a, 202.26705932617188 * a, 61.011383056640625 * a, 202.26705932617188 * a, 86.01138305664062 * a, 208.76705932617188 * a);
            c.bezierCurveTo(100.01138305664062 * a, 214.76705932617188 * a, 102.01138305664062 * a, 203.76705932617188 * a, 109.01138305664062 * a, 189.76705932617188 * a);
            c.bezierCurveTo(117.01138305664062 * a, 171.76705932617188 * a, 116.01138305664062 * a, 166.76705932617188 * a, 97.01138305664062 * a, 156.76705932617188 * a);
            c.bezierCurveTo(74.01138305664062 * a, 140.76705932617188 * a, 74.01138305664062 * a, 140.76705932617188 * a, 51.011383056640625 * a, 124.76705932617188 * a);
            c.bezierCurveTo(42.011383056640625 * a, 118.76705932617188 * a, 37.011383056640625 * a, 119.76705932617188 * a, 33.011383056640625 * a, 126.76705932617188 * a);
            c.closePath();
            h(c, f[3], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(13.011383056640625 * a, 229.76705932617188 * a);
            c.bezierCurveTo(45.511383056640625 * a, 233.76705932617188 * a, 45.511383056640625 * a, 233.76705932617188 * a, 78.01138305664062 * a, 237.76705932617188 * a);
            c.bezierCurveTo(92.01138305664062 * a, 239.76705932617188 * a, 92.01138305664062 * a, 246.76705932617188 * a, 91.01138305664062 * a, 257.7670593261719 * a);
            c.bezierCurveTo(92.01138305664062 * a, 275.7670593261719 * a, 91.01138305664062 * a, 274.7670593261719 * a, 68.01138305664062 * a, 276.7670593261719 * a);
            c.bezierCurveTo(42.511383056640625 * a, 279.7670593261719 * a, 42.511383056640625 * a, 279.7670593261719 * a, 17.011383056640625 * a, 282.7670593261719 * a);
            c.bezierCurveTo(2.011383056640625 * a, 282.7670593261719 * a, 3.011383056640625 * a, 276.7670593261719 * a, 2.011383056640625 * a, 260.7670593261719 * a);
            c.bezierCurveTo(2.011383056640625 * a, 231.76705932617188 * a, 4.011383056640625 * a, 232.76705932617188 * a, 11.011383056640625 * a, 230.76705932617188 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(13.011383056640625 * a, 229.76705932617188 * a);
            c.bezierCurveTo(45.511383056640625 * a, 233.76705932617188 * a, 45.511383056640625 * a, 233.76705932617188 * a, 78.01138305664062 * a, 237.76705932617188 * a);
            c.bezierCurveTo(92.01138305664062 * a, 239.76705932617188 * a, 92.01138305664062 * a, 246.76705932617188 * a, 91.01138305664062 * a, 257.7670593261719 * a);
            c.bezierCurveTo(92.01138305664062 * a, 275.7670593261719 * a, 91.01138305664062 * a, 274.7670593261719 * a, 68.01138305664062 * a, 276.7670593261719 * a);
            c.bezierCurveTo(42.511383056640625 * a, 279.7670593261719 * a, 42.511383056640625 * a, 279.7670593261719 * a, 17.011383056640625 * a, 282.7670593261719 * a);
            c.bezierCurveTo(2.011383056640625 * a, 282.7670593261719 * a, 3.011383056640625 * a, 276.7670593261719 * a, 2.011383056640625 * a, 260.7670593261719 * a);
            c.bezierCurveTo(2.011383056640625 * a, 231.76705932617188 * a, 4.011383056640625 * a, 232.76705932617188 * a, 11.011383056640625 * a, 230.76705932617188 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(97.01138305664062 * a, 329.7670593261719 * a);
            c.bezierCurveTo(68.51138305664062 * a, 343.7670593261719 * a, 68.51138305664062 * a, 343.7670593261719 * a, 40.011383056640625 * a, 357.7670593261719 * a);
            c.bezierCurveTo(29.011383056640625 * a, 360.7670593261719 * a, 27.011383056640625 * a, 361.7670593261719 * a, 20.011383056640625 * a, 346.7670593261719 * a);
            c.bezierCurveTo(16.511383056640625 * a, 336.2670593261719 * a, 16.511383056640625 * a, 336.2670593261719 * a, 13.011383056640625 * a, 325.7670593261719 * a);
            c.bezierCurveTo(10.011383056640625 * a, 307.7670593261719 * a, 18.011383056640625 * a, 312.7670593261719 * a, 34.011383056640625 * a, 306.7670593261719 * a);
            c.bezierCurveTo(59.511383056640625 * a, 302.2670593261719 * a, 59.511383056640625 * a, 302.2670593261719 * a, 85.01138305664062 * a, 297.7670593261719 * a);
            c.bezierCurveTo(97.01138305664062 * a, 294.7670593261719 * a, 100.01138305664062 * a, 297.7670593261719 * a, 100.01138305664062 * a, 307.7670593261719 * a);
            c.bezierCurveTo(105.01138305664062 * a, 326.7670593261719 * a, 103.01138305664062 * a, 325.7670593261719 * a, 97.01138305664062 * a, 329.7670593261719 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(97.01138305664062 * a, 329.7670593261719 * a);
            c.bezierCurveTo(68.51138305664062 * a, 343.7670593261719 * a, 68.51138305664062 * a, 343.7670593261719 * a, 40.011383056640625 * a, 357.7670593261719 * a);
            c.bezierCurveTo(29.011383056640625 * a, 360.7670593261719 * a, 27.011383056640625 * a, 361.7670593261719 * a, 20.011383056640625 * a, 346.7670593261719 * a);
            c.bezierCurveTo(16.511383056640625 * a, 336.2670593261719 * a, 16.511383056640625 * a, 336.2670593261719 * a, 13.011383056640625 * a, 325.7670593261719 * a);
            c.bezierCurveTo(10.011383056640625 * a, 307.7670593261719 * a, 18.011383056640625 * a, 312.7670593261719 * a, 34.011383056640625 * a, 306.7670593261719 * a);
            c.bezierCurveTo(59.511383056640625 * a, 302.2670593261719 * a, 59.511383056640625 * a, 302.2670593261719 * a, 85.01138305664062 * a, 297.7670593261719 * a);
            c.bezierCurveTo(97.01138305664062 * a, 294.7670593261719 * a, 100.01138305664062 * a, 297.7670593261719 * a, 100.01138305664062 * a, 307.7670593261719 * a);
            c.bezierCurveTo(105.01138305664062 * a, 326.7670593261719 * a, 103.01138305664062 * a, 325.7670593261719 * a, 97.01138305664062 * a, 329.7670593261719 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(394.0113830566406 * a, 181.76705932617188 * a);
            c.bezierCurveTo(426.5113830566406 * a, 166.76705932617188 * a, 426.5113830566406 * a, 166.76705932617188 * a, 459.0113830566406 * a, 151.76705932617188 * a);
            c.bezierCurveTo(469.0113830566406 * a, 152.76705932617188 * a, 469.0113830566406 * a, 155.76705932617188 * a, 472.0113830566406 * a, 165.76705932617188 * a);
            c.bezierCurveTo(476.0113830566406 * a, 177.26705932617188 * a, 476.0113830566406 * a, 177.26705932617188 * a, 480.0113830566406 * a, 188.76705932617188 * a);
            c.bezierCurveTo(483.0113830566406 * a, 199.76705932617188 * a, 480.0113830566406 * a, 200.76705932617188 * a, 460.0113830566406 * a, 205.76705932617188 * a);
            c.bezierCurveTo(433.5113830566406 * a, 210.26705932617188 * a, 433.5113830566406 * a, 210.26705932617188 * a, 407.0113830566406 * a, 214.76705932617188 * a);
            c.bezierCurveTo(395.0113830566406 * a, 218.76705932617188 * a, 397.0113830566406 * a, 211.76705932617188 * a, 393.0113830566406 * a, 202.76705932617188 * a);
            c.bezierCurveTo(387.0113830566406 * a, 188.76705932617188 * a, 387.0113830566406 * a, 187.76705932617188 * a, 394.0113830566406 * a, 181.76705932617188 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(394.0113830566406 * a, 181.76705932617188 * a);
            c.bezierCurveTo(426.5113830566406 * a, 166.76705932617188 * a, 426.5113830566406 * a, 166.76705932617188 * a, 459.0113830566406 * a, 151.76705932617188 * a);
            c.bezierCurveTo(469.0113830566406 * a, 152.76705932617188 * a, 469.0113830566406 * a, 155.76705932617188 * a, 472.0113830566406 * a, 165.76705932617188 * a);
            c.bezierCurveTo(476.0113830566406 * a, 177.26705932617188 * a, 476.0113830566406 * a, 177.26705932617188 * a, 480.0113830566406 * a, 188.76705932617188 * a);
            c.bezierCurveTo(483.0113830566406 * a, 199.76705932617188 * a, 480.0113830566406 * a, 200.76705932617188 * a, 460.0113830566406 * a, 205.76705932617188 * a);
            c.bezierCurveTo(433.5113830566406 * a, 210.26705932617188 * a, 433.5113830566406 * a, 210.26705932617188 * a, 407.0113830566406 * a, 214.76705932617188 * a);
            c.bezierCurveTo(395.0113830566406 * a, 218.76705932617188 * a, 397.0113830566406 * a, 211.76705932617188 * a, 393.0113830566406 * a, 202.76705932617188 * a);
            c.bezierCurveTo(387.0113830566406 * a, 188.76705932617188 * a, 387.0113830566406 * a, 187.76705932617188 * a, 394.0113830566406 * a, 181.76705932617188 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(411.0113830566406 * a, 234.76705932617188 * a);
            c.bezierCurveTo(446.0113830566406 * a, 233.26705932617188 * a, 446.0113830566406 * a, 233.26705932617188 * a, 481.0113830566406 * a, 231.76705932617188 * a);
            c.bezierCurveTo(491.0113830566406 * a, 232.76705932617188 * a, 493.0113830566406 * a, 239.76705932617188 * a, 491.0113830566406 * a, 251.76705932617188 * a);
            c.bezierCurveTo(490.0113830566406 * a, 263.7670593261719 * a, 490.0113830566406 * a, 263.7670593261719 * a, 489.0113830566406 * a, 275.7670593261719 * a);
            c.bezierCurveTo(487.0113830566406 * a, 283.7670593261719 * a, 483.0113830566406 * a, 284.7670593261719 * a, 464.0113830566406 * a, 280.7670593261719 * a);
            c.bezierCurveTo(437.0113830566406 * a, 273.7670593261719 * a, 437.0113830566406 * a, 273.7670593261719 * a, 410.0113830566406 * a, 266.7670593261719 * a);
            c.bezierCurveTo(400.0113830566406 * a, 261.7670593261719 * a, 401.0113830566406 * a, 259.7670593261719 * a, 402.0113830566406 * a, 249.76705932617188 * a);
            c.bezierCurveTo(401.0113830566406 * a, 237.76705932617188 * a, 403.0113830566406 * a, 235.76705932617188 * a, 408.0113830566406 * a, 234.76705932617188 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(411.0113830566406 * a, 234.76705932617188 * a);
            c.bezierCurveTo(446.0113830566406 * a, 233.26705932617188 * a, 446.0113830566406 * a, 233.26705932617188 * a, 481.0113830566406 * a, 231.76705932617188 * a);
            c.bezierCurveTo(491.0113830566406 * a, 232.76705932617188 * a, 493.0113830566406 * a, 239.76705932617188 * a, 491.0113830566406 * a, 251.76705932617188 * a);
            c.bezierCurveTo(490.0113830566406 * a, 263.7670593261719 * a, 490.0113830566406 * a, 263.7670593261719 * a, 489.0113830566406 * a, 275.7670593261719 * a);
            c.bezierCurveTo(487.0113830566406 * a, 283.7670593261719 * a, 483.0113830566406 * a, 284.7670593261719 * a, 464.0113830566406 * a, 280.7670593261719 * a);
            c.bezierCurveTo(437.0113830566406 * a, 273.7670593261719 * a, 437.0113830566406 * a, 273.7670593261719 * a, 410.0113830566406 * a, 266.7670593261719 * a);
            c.bezierCurveTo(400.0113830566406 * a, 261.7670593261719 * a, 401.0113830566406 * a, 259.7670593261719 * a, 402.0113830566406 * a, 249.76705932617188 * a);
            c.bezierCurveTo(401.0113830566406 * a, 237.76705932617188 * a, 403.0113830566406 * a, 235.76705932617188 * a, 408.0113830566406 * a, 234.76705932617188 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(400.0113830566406 * a, 290.7670593261719 * a);
            c.bezierCurveTo(437.0113830566406 * a, 301.2670593261719 * a, 437.0113830566406 * a, 301.2670593261719 * a, 474.0113830566406 * a, 311.7670593261719 * a);
            c.bezierCurveTo(484.0113830566406 * a, 319.7670593261719 * a, 481.0113830566406 * a, 322.7670593261719 * a, 474.0113830566406 * a, 335.7670593261719 * a);
            c.bezierCurveTo(465.5113830566406 * a, 354.7670593261719 * a, 465.5113830566406 * a, 354.7670593261719 * a, 457.0113830566406 * a, 373.7670593261719 * a);
            c.bezierCurveTo(449.0113830566406 * a, 386.7670593261719 * a, 444.0113830566406 * a, 384.7670593261719 * a, 427.0113830566406 * a, 370.7670593261719 * a);
            c.bezierCurveTo(403.0113830566406 * a, 354.7670593261719 * a, 403.0113830566406 * a, 354.7670593261719 * a, 379.0113830566406 * a, 338.7670593261719 * a);
            c.bezierCurveTo(371.0113830566406 * a, 327.7670593261719 * a, 373.0113830566406 * a, 323.7670593261719 * a, 377.0113830566406 * a, 313.7670593261719 * a);
            c.bezierCurveTo(386.0113830566406 * a, 292.7670593261719 * a, 393.0113830566406 * a, 288.7670593261719 * a, 398.0113830566406 * a, 291.7670593261719 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(400.0113830566406 * a, 290.7670593261719 * a);
            c.bezierCurveTo(437.0113830566406 * a, 301.2670593261719 * a, 437.0113830566406 * a, 301.2670593261719 * a, 474.0113830566406 * a, 311.7670593261719 * a);
            c.bezierCurveTo(484.0113830566406 * a, 319.7670593261719 * a, 481.0113830566406 * a, 322.7670593261719 * a, 474.0113830566406 * a, 335.7670593261719 * a);
            c.bezierCurveTo(465.5113830566406 * a, 354.7670593261719 * a, 465.5113830566406 * a, 354.7670593261719 * a, 457.0113830566406 * a, 373.7670593261719 * a);
            c.bezierCurveTo(449.0113830566406 * a, 386.7670593261719 * a, 444.0113830566406 * a, 384.7670593261719 * a, 427.0113830566406 * a, 370.7670593261719 * a);
            c.bezierCurveTo(403.0113830566406 * a, 354.7670593261719 * a, 403.0113830566406 * a, 354.7670593261719 * a, 379.0113830566406 * a, 338.7670593261719 * a);
            c.bezierCurveTo(371.0113830566406 * a, 327.7670593261719 * a, 373.0113830566406 * a, 323.7670593261719 * a, 377.0113830566406 * a, 313.7670593261719 * a);
            c.bezierCurveTo(386.0113830566406 * a, 292.7670593261719 * a, 393.0113830566406 * a, 288.7670593261719 * a, 398.0113830566406 * a, 291.7670593261719 * a);
            c.closePath();
            h(c, f[3], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(366.0113830566406 * a, 361.2216033935547 * a);
            c.bezierCurveTo(393.0113830566406 * a, 383.2216033935547 * a, 393.0113830566406 * a, 383.2216033935547 * a, 420.0113830566406 * a, 405.2216033935547 * a);
            c.bezierCurveTo(427.0113830566406 * a, 414.2216033935547 * a, 425.0113830566406 * a, 417.2216033935547 * a, 413.0113830566406 * a, 428.2216033935547 * a);
            c.bezierCurveTo(405.5113830566406 * a, 435.2216033935547 * a, 405.5113830566406 * a, 435.2216033935547 * a, 398.0113830566406 * a, 442.2216033935547 * a);
            c.bezierCurveTo(388.0113830566406 * a, 451.2216033935547 * a, 385.0113830566406 * a, 445.2216033935547 * a, 373.0113830566406 * a, 428.2216033935547 * a);
            c.bezierCurveTo(358.5113830566406 * a, 408.2216033935547 * a, 358.5113830566406 * a, 408.2216033935547 * a, 344.0113830566406 * a, 388.2216033935547 * a);
            c.bezierCurveTo(337.0113830566406 * a, 378.2216033935547 * a, 342.0113830566406 * a, 377.2216033935547 * a, 347.0113830566406 * a, 371.2216033935547 * a);
            c.bezierCurveTo(359.0113830566406 * a, 359.2216033935547 * a, 361.0113830566406 * a, 358.2216033935547 * a, 364.0113830566406 * a, 361.2216033935547 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(366.0113830566406 * a, 361.2216033935547 * a);
            c.bezierCurveTo(393.0113830566406 * a, 383.2216033935547 * a, 393.0113830566406 * a, 383.2216033935547 * a, 420.0113830566406 * a, 405.2216033935547 * a);
            c.bezierCurveTo(427.0113830566406 * a, 414.2216033935547 * a, 425.0113830566406 * a, 417.2216033935547 * a, 413.0113830566406 * a, 428.2216033935547 * a);
            c.bezierCurveTo(405.5113830566406 * a, 435.2216033935547 * a, 405.5113830566406 * a, 435.2216033935547 * a, 398.0113830566406 * a, 442.2216033935547 * a);
            c.bezierCurveTo(388.0113830566406 * a, 451.2216033935547 * a, 385.0113830566406 * a, 445.2216033935547 * a, 373.0113830566406 * a, 428.2216033935547 * a);
            c.bezierCurveTo(358.5113830566406 * a, 408.2216033935547 * a, 358.5113830566406 * a, 408.2216033935547 * a, 344.0113830566406 * a, 388.2216033935547 * a);
            c.bezierCurveTo(337.0113830566406 * a, 378.2216033935547 * a, 342.0113830566406 * a, 377.2216033935547 * a, 347.0113830566406 * a, 371.2216033935547 * a);
            c.bezierCurveTo(359.0113830566406 * a, 359.2216033935547 * a, 361.0113830566406 * a, 358.2216033935547 * a, 364.0113830566406 * a, 361.2216033935547 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(323.0113830566406 * a, 393.2216033935547 * a);
            c.bezierCurveTo(338.0113830566406 * a, 424.7216033935547 * a, 338.0113830566406 * a, 424.7216033935547 * a, 353.0113830566406 * a, 456.2216033935547 * a);
            c.bezierCurveTo(355.0113830566406 * a, 467.2216033935547 * a, 354.0113830566406 * a, 469.2216033935547 * a, 336.0113830566406 * a, 475.2216033935547 * a);
            c.bezierCurveTo(326.0113830566406 * a, 478.2216033935547 * a, 326.0113830566406 * a, 478.2216033935547 * a, 316.0113830566406 * a, 481.2216033935547 * a);
            c.bezierCurveTo(304.0113830566406 * a, 484.2216033935547 * a, 304.0113830566406 * a, 477.2216033935547 * a, 301.0113830566406 * a, 454.2216033935547 * a);
            c.bezierCurveTo(295.5113830566406 * a, 429.2216033935547 * a, 295.5113830566406 * a, 429.2216033935547 * a, 290.0113830566406 * a, 404.2216033935547 * a);
            c.bezierCurveTo(287.0113830566406 * a, 396.2216033935547 * a, 297.0113830566406 * a, 394.2216033935547 * a, 303.0113830566406 * a, 392.2216033935547 * a);
            c.bezierCurveTo(316.0113830566406 * a, 387.2216033935547 * a, 318.0113830566406 * a, 387.2216033935547 * a, 323.0113830566406 * a, 394.2216033935547 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(323.0113830566406 * a, 393.2216033935547 * a);
            c.bezierCurveTo(338.0113830566406 * a, 424.7216033935547 * a, 338.0113830566406 * a, 424.7216033935547 * a, 353.0113830566406 * a, 456.2216033935547 * a);
            c.bezierCurveTo(355.0113830566406 * a, 467.2216033935547 * a, 354.0113830566406 * a, 469.2216033935547 * a, 336.0113830566406 * a, 475.2216033935547 * a);
            c.bezierCurveTo(326.0113830566406 * a, 478.2216033935547 * a, 326.0113830566406 * a, 478.2216033935547 * a, 316.0113830566406 * a, 481.2216033935547 * a);
            c.bezierCurveTo(304.0113830566406 * a, 484.2216033935547 * a, 304.0113830566406 * a, 477.2216033935547 * a, 301.0113830566406 * a, 454.2216033935547 * a);
            c.bezierCurveTo(295.5113830566406 * a, 429.2216033935547 * a, 295.5113830566406 * a, 429.2216033935547 * a, 290.0113830566406 * a, 404.2216033935547 * a);
            c.bezierCurveTo(287.0113830566406 * a, 396.2216033935547 * a, 297.0113830566406 * a, 394.2216033935547 * a, 303.0113830566406 * a, 392.2216033935547 * a);
            c.bezierCurveTo(316.0113830566406 * a, 387.2216033935547 * a, 318.0113830566406 * a, 387.2216033935547 * a, 323.0113830566406 * a, 394.2216033935547 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(270.0113830566406 * a, 413.2216033935547 * a);
            c.bezierCurveTo(271.0113830566406 * a, 445.7216033935547 * a, 271.0113830566406 * a, 445.7216033935547 * a, 272.0113830566406 * a, 478.2216033935547 * a);
            c.bezierCurveTo(273.0113830566406 * a, 490.2216033935547 * a, 267.0113830566406 * a, 493.2216033935547 * a, 249.01138305664062 * a, 490.2216033935547 * a);
            c.bezierCurveTo(222.01138305664062 * a, 492.2216033935547 * a, 220.01138305664062 * a, 485.2216033935547 * a, 225.01138305664062 * a, 467.2216033935547 * a);
            c.bezierCurveTo(230.51138305664062 * a, 440.2216033935547 * a, 230.51138305664062 * a, 440.2216033935547 * a, 236.01138305664062 * a, 413.2216033935547 * a);
            c.bezierCurveTo(237.01138305664062 * a, 405.2216033935547 * a, 238.01138305664062 * a, 404.2216033935547 * a, 253.01138305664062 * a, 403.2216033935547 * a);
            c.bezierCurveTo(269.0113830566406 * a, 405.2216033935547 * a, 270.0113830566406 * a, 407.2216033935547 * a, 269.0113830566406 * a, 412.2216033935547 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(270.0113830566406 * a, 413.2216033935547 * a);
            c.bezierCurveTo(271.0113830566406 * a, 445.7216033935547 * a, 271.0113830566406 * a, 445.7216033935547 * a, 272.0113830566406 * a, 478.2216033935547 * a);
            c.bezierCurveTo(273.0113830566406 * a, 490.2216033935547 * a, 267.0113830566406 * a, 493.2216033935547 * a, 249.01138305664062 * a, 490.2216033935547 * a);
            c.bezierCurveTo(222.01138305664062 * a, 492.2216033935547 * a, 220.01138305664062 * a, 485.2216033935547 * a, 225.01138305664062 * a, 467.2216033935547 * a);
            c.bezierCurveTo(230.51138305664062 * a, 440.2216033935547 * a, 230.51138305664062 * a, 440.2216033935547 * a, 236.01138305664062 * a, 413.2216033935547 * a);
            c.bezierCurveTo(237.01138305664062 * a, 405.2216033935547 * a, 238.01138305664062 * a, 404.2216033935547 * a, 253.01138305664062 * a, 403.2216033935547 * a);
            c.bezierCurveTo(269.0113830566406 * a, 405.2216033935547 * a, 270.0113830566406 * a, 407.2216033935547 * a, 269.0113830566406 * a, 412.2216033935547 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(207.01138305664062 * a, 406.2216033935547 * a);
            c.bezierCurveTo(197.51138305664062 * a, 440.7216033935547 * a, 197.51138305664062 * a, 440.7216033935547 * a, 188.01138305664062 * a, 475.2216033935547 * a);
            c.bezierCurveTo(184.01138305664062 * a, 485.2216033935547 * a, 179.01138305664062 * a, 491.2216033935547 * a, 152.01138305664062 * a, 477.2216033935547 * a);
            c.bezierCurveTo(136.51138305664062 * a, 469.7216033935547 * a, 136.51138305664062 * a, 469.7216033935547 * a, 121.01138305664062 * a, 462.2216033935547 * a);
            c.bezierCurveTo(109.01138305664062 * a, 453.2216033935547 * a, 117.01138305664062 * a, 447.2216033935547 * a, 133.01138305664062 * a, 427.2216033935547 * a);
            c.bezierCurveTo(146.51138305664062 * a, 406.7216033935547 * a, 146.51138305664062 * a, 406.7216033935547 * a, 160.01138305664062 * a, 386.2216033935547 * a);
            c.bezierCurveTo(163.01138305664062 * a, 377.2216033935547 * a, 168.01138305664062 * a, 378.2216033935547 * a, 187.01138305664062 * a, 387.2216033935547 * a);
            c.bezierCurveTo(206.01138305664062 * a, 395.2216033935547 * a, 208.01138305664062 * a, 398.2216033935547 * a, 207.01138305664062 * a, 405.2216033935547 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(207.01138305664062 * a, 406.2216033935547 * a);
            c.bezierCurveTo(197.51138305664062 * a, 440.7216033935547 * a, 197.51138305664062 * a, 440.7216033935547 * a, 188.01138305664062 * a, 475.2216033935547 * a);
            c.bezierCurveTo(184.01138305664062 * a, 485.2216033935547 * a, 179.01138305664062 * a, 491.2216033935547 * a, 152.01138305664062 * a, 477.2216033935547 * a);
            c.bezierCurveTo(136.51138305664062 * a, 469.7216033935547 * a, 136.51138305664062 * a, 469.7216033935547 * a, 121.01138305664062 * a, 462.2216033935547 * a);
            c.bezierCurveTo(109.01138305664062 * a, 453.2216033935547 * a, 117.01138305664062 * a, 447.2216033935547 * a, 133.01138305664062 * a, 427.2216033935547 * a);
            c.bezierCurveTo(146.51138305664062 * a, 406.7216033935547 * a, 146.51138305664062 * a, 406.7216033935547 * a, 160.01138305664062 * a, 386.2216033935547 * a);
            c.bezierCurveTo(163.01138305664062 * a, 377.2216033935547 * a, 168.01138305664062 * a, 378.2216033935547 * a, 187.01138305664062 * a, 387.2216033935547 * a);
            c.bezierCurveTo(206.01138305664062 * a, 395.2216033935547 * a, 208.01138305664062 * a, 398.2216033935547 * a, 207.01138305664062 * a, 405.2216033935547 * a);
            c.closePath();
            h(c, f[3], f[2], 12 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(130.01138305664062 * a, 375.2216033935547 * a);
            c.bezierCurveTo(109.51138305664062 * a, 400.7216033935547 * a, 109.51138305664062 * a, 400.7216033935547 * a, 89.01138305664062 * a, 426.2216033935547 * a);
            c.bezierCurveTo(82.01138305664062 * a, 435.2216033935547 * a, 77.01138305664062 * a, 435.2216033935547 * a, 62.011383056640625 * a, 417.2216033935547 * a);
            c.bezierCurveTo(43.011383056640625 * a, 397.2216033935547 * a, 47.011383056640625 * a, 395.2216033935547 * a, 62.011383056640625 * a, 382.2216033935547 * a);
            c.bezierCurveTo(84.01138305664062 * a, 366.7216033935547 * a, 84.01138305664062 * a, 366.7216033935547 * a, 106.01138305664062 * a, 351.2216033935547 * a);
            c.bezierCurveTo(116.01138305664062 * a, 344.2216033935547 * a, 120.01138305664062 * a, 347.2216033935547 * a, 127.01138305664062 * a, 356.2216033935547 * a);
            c.bezierCurveTo(137.01138305664062 * a, 366.2216033935547 * a, 137.01138305664062 * a, 366.2216033935547 * a, 131.01138305664062 * a, 376.2216033935547 * a);
            c.closePath();
            h(c, f[0], f[0], 12 * a);
            c.globalAlpha = 1;
            c.translate(0, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(130.01138305664062 * a, 375.2216033935547 * a);
            c.bezierCurveTo(109.51138305664062 * a, 400.7216033935547 * a, 109.51138305664062 * a, 400.7216033935547 * a, 89.01138305664062 * a, 426.2216033935547 * a);
            c.bezierCurveTo(82.01138305664062 * a, 435.2216033935547 * a, 77.01138305664062 * a, 435.2216033935547 * a, 62.011383056640625 * a, 417.2216033935547 * a);
            c.bezierCurveTo(43.011383056640625 * a, 397.2216033935547 * a, 47.011383056640625 * a, 395.2216033935547 * a, 62.011383056640625 * a, 382.2216033935547 * a);
            c.bezierCurveTo(84.01138305664062 * a, 366.7216033935547 * a, 84.01138305664062 * a, 366.7216033935547 * a, 106.01138305664062 * a, 351.2216033935547 * a);
            c.bezierCurveTo(116.01138305664062 * a, 344.2216033935547 * a, 120.01138305664062 * a, 347.2216033935547 * a, 127.01138305664062 * a, 356.2216033935547 * a);
            c.bezierCurveTo(137.01138305664062 * a, 366.2216033935547 * a, 137.01138305664062 * a, 366.2216033935547 * a, 131.01138305664062 * a, 376.2216033935547 * a);
            c.closePath();
            h(c, f[4], f[2], 12 * a);
            return d;
        };

        function sg(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 218 * a;
            e.height = 185 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(64 * a, 53.135406494140625 * a);
            d.bezierCurveTo(92 * a, 17.135406494140625 * a, 116 * a, 11.135406494140625 * a, 158 * a, 53.135406494140625 * a);
            d.bezierCurveTo(178 * a, 74.13540649414062 * a, 181 * a, 81.13540649414062 * a, 196 * a, 101.13540649414062 * a);
            d.bezierCurveTo(214 * a, 127.13540649414062 * a, 192 * a, 138.13540649414062 * a, 173 * a, 149.13540649414062 * a);
            d.bezierCurveTo(137 * a, 166.13540649414062 * a, 74 * a, 170.13540649414062 * a, 36 * a, 141.13540649414062 * a);
            d.bezierCurveTo(13 * a, 127.13540649414062 * a, 20 * a, 119.13540649414062 * a, 30 * a, 103.13540649414062 * a);
            d.bezierCurveTo(48 * a, 71.13540649414062 * a, 54 * a, 67.13540649414062 * a, 63 * a, 54.135406494140625 * a);
            d.closePath();
            h(d, f[0], f[1], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(107 * a, 25.135406494140625 * a);
            d.bezierCurveTo(62 * a, 90.13540649414062 * a, 54 * a, 129.13540649414062 * a, 53 * a, 151.13540649414062 * a);
            d.bezierCurveTo(39.5 * a, 142.13540649414062 * a, 39.5 * a, 142.13540649414062 * a, 26 * a, 133.13540649414062 * a);
            d.bezierCurveTo(23.5 * a, 128.63540649414062 * a, 23.5 * a, 128.63540649414062 * a, 21 * a, 124.13540649414062 * a);
            d.bezierCurveTo(22 * a, 113.13540649414062 * a, 31 * a, 99.13540649414062 * a, 40 * a, 88.13540649414062 * a);
            d.bezierCurveTo(54.5 * a, 67.13540649414062 * a, 54.5 * a, 67.13540649414062 * a, 69 * a, 46.135406494140625 * a);
            d.bezierCurveTo(80.5 * a, 36.635406494140625 * a, 80.5 * a, 36.635406494140625 * a, 92 * a, 27.135406494140625 * a);
            d.closePath();
            h(d, f[1]);
            return e;
        };

        function Th(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 167 * a;
            e.height = 136 * a;
            d.globalAlpha = 0.5;
            d.save();
            d.translate(76.71426391601562 * a, 67.85713195800781 * a);
            B(d, -57.5 * a, -54.5 * a, 115 * a, 109 * a, 15 * a);
            d.restore();
            h(d, f[0]);
            d.globalAlpha = 0.8;
            d.save();
            d.translate(76.71426391601562 * a, 67.85713195800781 * a);
            B(d, -57.5 * a, -54.5 * a, 115 * a, 109 * a, 15 * a);
            d.restore();
            h(d, void 0, f[1], 7 * a);
            d.globalAlpha = 0.5;
            d.save();
            d.translate(91.21426391601562 * a, 67.35713195800781 * a);
            B(d, -56 * a, -55 * a, 115 * a, 109 * a, 15 * a);
            d.restore();
            h(d, f[0]);
            d.globalAlpha = 1;
            d.save();
            d.translate(91.21426391601562 * a, 67.35713195800781 * a);
            B(d, -56 * a, -55 * a, 115 * a, 109 * a, 15 * a);
            d.restore();
            h(d, void 0, f[1], 7 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(131.21426391601562 * a, 70.35713195800781 * a);
            d.bezierCurveTo(133.21426391601562 * a, 95.35713195800781 * a, 128.21426391601562 * a, 109.35713195800781 * a, 108.21426391601562 * a, 108.35713195800781 * a);
            h(d, void 0, f[1], 10 * a);
            return e;
        };

        function Ve(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 163 * a;
            d.height = 163 * a;
            c.save();
            c.translate(82.5 * a, 81.1015625 * a);
            c.rotate(0);
            B(c, -65.5 * a, -66 * a, 131 * a, 131 * a, 5 * a);
            c.restore();
            h(c, f[1]);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(80 * a, 17.1015625 * a);
            B(c, -64 * a, -4.5 * a, 129 * a, 9 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(80 * a, 17.1015625 * a);
            B(c, -64 * a, -4.5 * a, 129 * a, 9 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(145.5 * a, 83.6015625 * a);
            B(c, -4.5 * a, -61 * a, 9 * a, 129 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(145.5 * a, 83.6015625 * a);
            B(c, -4.5 * a, -61 * a, 9 * a, 129 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(17.5 * a, 82.6015625 * a);
            B(c, -4.5 * a, -65 * a, 9 * a, 129 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(17.5 * a, 82.6015625 * a);
            B(c, -4.5 * a, -65 * a, 9 * a, 129 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(80.5 * a, 145.6015625 * a);
            B(c, -65.5 * a, -4 * a, 129 * a, 9 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(80.5 * a, 145.6015625 * a);
            B(c, -65.5 * a, -4 * a, 129 * a, 9 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(17 * a, 18.1015625 * a);
            B(c, -11 * a, -11.5 * a, 22 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(17 * a, 18.1015625 * a);
            B(c, -11 * a, -11.5 * a, 22 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(145.5 * a, 16.6015625 * a);
            B(c, -10.5 * a, -11.5 * a, 21 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(145.5 * a, 16.6015625 * a);
            B(c, -10.5 * a, -11.5 * a, 21 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(145.5 * a, 144.1015625 * a);
            B(c, -10.5 * a, -11 * a, 22 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(145.5 * a, 144.1015625 * a);
            B(c, -10.5 * a, -11 * a, 22 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            c.translate(17.5 * a, 145.1015625 * a);
            B(c, -11.5 * a, -12 * a, 22 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            c.translate(17.5 * a, 145.1015625 * a);
            B(c, -11.5 * a, -12 * a, 22 * a, 22 * a, 5 * a);
            c.restore();
            h(c, f[2], f[3], 3 * a);
            return d;
        };

        function Gd(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 168 * a;
            d.height = 100 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(10 * a, 5 * a);
            c.save();
            c.translate(24.5 * a, 44.30000305175781 * a);
            B(c, -19.5 * a, -8.5 * a, 39 * a, 17 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(115 * a, 37.80000305175781 * a);
            c.bezierCurveTo(142 * a, 37.80000305175781 * a, 140 * a, 37.80000305175781 * a, 141 * a, 37.80000305175781 * a);
            c.bezierCurveTo(147 * a, 28.800003051757812 * a, 149 * a, 26.800003051757812 * a, 153 * a, 32.80000305175781 * a);
            c.bezierCurveTo(160 * a, 42.80000305175781 * a, 157 * a, 50.80000305175781 * a, 153 * a, 58.80000305175781 * a);
            c.bezierCurveTo(148 * a, 62.80000305175781 * a, 147 * a, 59.80000305175781 * a, 143 * a, 52.80000305175781 * a);
            c.bezierCurveTo(129 * a, 52.80000305175781 * a, 129 * a, 52.80000305175781 * a, 115 * a, 52.80000305175781 * a);
            c.closePath();
            h(c, f[0]);
            A(c, 78 * a, 44.80000305175781 * a, 39.44616584663204 * a);
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-10 * a, -5 * a);
            c.save();
            c.translate(24.5 * a, 44.30000305175781 * a);
            B(c, -19.5 * a, -8.5 * a, 39 * a, 17 * a, 10 * a);
            c.restore();
            h(c, void 0, f[3], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(115 * a, 37.80000305175781 * a);
            c.bezierCurveTo(142 * a, 37.80000305175781 * a, 140 * a, 37.80000305175781 * a, 141 * a, 37.80000305175781 * a);
            c.bezierCurveTo(147 * a, 28.800003051757812 * a, 149 * a, 26.800003051757812 * a, 153 * a, 32.80000305175781 * a);
            c.bezierCurveTo(160 * a, 42.80000305175781 * a, 157 * a, 50.80000305175781 * a, 153 * a, 58.80000305175781 * a);
            c.bezierCurveTo(148 * a, 62.80000305175781 * a, 147 * a, 59.80000305175781 * a, 143 * a, 52.80000305175781 * a);
            c.bezierCurveTo(129 * a, 52.80000305175781 * a, 129 * a, 52.80000305175781 * a, 115 * a, 52.80000305175781 * a);
            c.closePath();
            h(c, void 0, f[3], 6 * a);
            A(c, 78 * a, 44.80000305175781 * a, 42.44616584663204 * a);
            h(c, void 0, f[3], 6 * a);
            c.save();
            c.translate(24.5 * a, 44.30000305175781 * a);
            B(c, -19.5 * a, -8.5 * a, 39 * a, 17 * a, 10 * a);
            c.restore();
            h(c, f[1]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(115 * a, 37.80000305175781 * a);
            c.bezierCurveTo(142 * a, 37.80000305175781 * a, 140 * a, 37.80000305175781 * a, 141 * a, 37.80000305175781 * a);
            c.bezierCurveTo(147 * a, 28.800003051757812 * a, 149 * a, 26.800003051757812 * a, 153 * a, 32.80000305175781 * a);
            c.bezierCurveTo(160 * a, 42.80000305175781 * a, 157 * a, 50.80000305175781 * a, 153 * a, 58.80000305175781 * a);
            c.bezierCurveTo(148 * a, 62.80000305175781 * a, 147 * a, 59.80000305175781 * a, 143 * a, 52.80000305175781 * a);
            c.bezierCurveTo(129 * a, 52.80000305175781 * a, 129 * a, 52.80000305175781 * a, 115 * a, 52.80000305175781 * a);
            c.closePath();
            h(c, f[1]);
            A(c, 78 * a, 44.80000305175781 * a, 39.44616584663204 * a);
            h(c, f[2], f[1], 4 * a);
            A(c, 78 * a, 44.80000305175781 * a, 29.68164415931166 * a);
            h(c, f[3], f[1], 4 * a);
            A(c, 78 * a, 44 * a, 20 * a);
            h(c, f[4]);
            return d;
        };

        function tg(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 158 * a;
            e.height = 201 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(96.5 * a, 76.421875 * a);
            d.bezierCurveTo(100.5 * a, 64.421875 * a, 103.5 * a, 62.421875 * a, 110.5 * a, 65.421875 * a);
            d.bezierCurveTo(116.5 * a, 66.421875 * a, 117.5 * a, 67.421875 * a, 112.5 * a, 73.421875 * a);
            d.bezierCurveTo(107 * a, 79.921875 * a, 107 * a, 79.921875 * a, 101.5 * a, 86.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(61.5 * a, 78.421875 * a);
            d.bezierCurveTo(57.5 * a, 73.421875 * a, 51.5 * a, 66.421875 * a, 45.5 * a, 68.421875 * a);
            d.bezierCurveTo(32.5 * a, 73.421875 * a, 38.5 * a, 75.421875 * a, 46.5 * a, 81.421875 * a);
            d.bezierCurveTo(51.5 * a, 84.921875 * a, 51.5 * a, 84.921875 * a, 56.5 * a, 88.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(116.5 * a, 127.421875 * a);
            d.bezierCurveTo(124.5 * a, 108.421875 * a, 129.5 * a, 104.421875 * a, 141.5 * a, 107.421875 * a);
            d.bezierCurveTo(156.5 * a, 112.421875 * a, 153.5 * a, 113.421875 * a, 132.5 * a, 134.421875 * a);
            d.bezierCurveTo(123.5 * a, 141.921875 * a, 123.5 * a, 141.921875 * a, 114.5 * a, 149.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(41.5 * a, 134.421875 * a);
            d.bezierCurveTo(30.5 * a, 119.421875 * a, 25.5 * a, 111.421875 * a, 12.5 * a, 115.421875 * a);
            d.bezierCurveTo(4.5 * a, 120.421875 * a, 4.5 * a, 121.421875 * a, 26.5 * a, 142.421875 * a);
            d.bezierCurveTo(35 * a, 149.921875 * a, 35 * a, 149.921875 * a, 43.5 * a, 157.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(78.5 * a, 51.921875 * a);
            d.bezierCurveTo(99.5 * a, 75.921875 * a, 110.5 * a, 96.921875 * a, 118.5 * a, 120.921875 * a);
            d.bezierCurveTo(121.5 * a, 140.921875 * a, 107.5 * a, 179.921875 * a, 75.5 * a, 183.921875 * a);
            d.bezierCurveTo(30.5 * a, 169.921875 * a, 37.5 * a, 131.921875 * a, 34.5 * a, 120.921875 * a);
            d.bezierCurveTo(41.5 * a, 89.921875 * a, 61.5 * a, 67.921875 * a, 78.5 * a, 51.921875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(72.5 * a, 72.421875 * a);
            d.bezierCurveTo(76.5 * a, 79.421875 * a, 79.5 * a, 80.421875 * a, 83.5 * a, 73.421875 * a);
            d.bezierCurveTo(80.5 * a, 96.921875 * a, 79.5 * a, 114.421875 * a, 77.5 * a, 120.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.5 * a, 163.421875 * a);
            d.bezierCurveTo(62.5 * a, 185.421875 * a, 86.5 * a, 186.421875 * a, 111.5 * a, 165.421875 * a);
            d.bezierCurveTo(107.5 * a, 176.421875 * a, 95.5 * a, 187.421875 * a, 75.5 * a, 188.421875 * a);
            d.bezierCurveTo(53.5 * a, 188.421875 * a, 43.5 * a, 171.421875 * a, 42.5 * a, 164.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 8 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(79.5 * a, 61.421875 * a);
            d.bezierCurveTo(88.5 * a, 31.421875 * a, 81.5 * a, 16.421875 * a, 75.5 * a, 7.421875 * a);
            d.bezierCurveTo(77.5 * a, 28.421875 * a, 77.5 * a, 37.421875 * a, 68.5 * a, 42.421875 * a);
            d.bezierCurveTo(79.5 * a, 57.421875 * a, 79.5 * a, 58.421875 * a, 80.5 * a, 61.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(72.5 * a, 72.421875 * a);
            d.bezierCurveTo(76.5 * a, 79.421875 * a, 79.5 * a, 80.421875 * a, 83.5 * a, 73.421875 * a);
            d.bezierCurveTo(80.5 * a, 96.921875 * a, 79.5 * a, 114.421875 * a, 77.5 * a, 120.421875 * a);
            d.closePath();
            h(d, f[8], f[8], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(96.5 * a, 76.421875 * a);
            d.bezierCurveTo(100.5 * a, 64.421875 * a, 103.5 * a, 62.421875 * a, 110.5 * a, 65.421875 * a);
            d.bezierCurveTo(116.5 * a, 66.421875 * a, 117.5 * a, 67.421875 * a, 112.5 * a, 73.421875 * a);
            d.bezierCurveTo(107 * a, 79.921875 * a, 107 * a, 79.921875 * a, 101.5 * a, 86.421875 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(61.5 * a, 78.421875 * a);
            d.bezierCurveTo(57.5 * a, 73.421875 * a, 51.5 * a, 66.421875 * a, 45.5 * a, 68.421875 * a);
            d.bezierCurveTo(32.5 * a, 73.421875 * a, 38.5 * a, 75.421875 * a, 46.5 * a, 81.421875 * a);
            d.bezierCurveTo(51.5 * a, 84.921875 * a, 51.5 * a, 84.921875 * a, 56.5 * a, 88.421875 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(116.5 * a, 127.421875 * a);
            d.bezierCurveTo(124.5 * a, 108.421875 * a, 129.5 * a, 104.421875 * a, 141.5 * a, 107.421875 * a);
            d.bezierCurveTo(156.5 * a, 112.421875 * a, 153.5 * a, 113.421875 * a, 132.5 * a, 134.421875 * a);
            d.bezierCurveTo(123.5 * a, 141.921875 * a, 123.5 * a, 141.921875 * a, 114.5 * a, 149.421875 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(41.5 * a, 134.421875 * a);
            d.bezierCurveTo(30.5 * a, 119.421875 * a, 25.5 * a, 111.421875 * a, 12.5 * a, 115.421875 * a);
            d.bezierCurveTo(4.5 * a, 120.421875 * a, 4.5 * a, 121.421875 * a, 26.5 * a, 142.421875 * a);
            d.bezierCurveTo(35 * a, 149.921875 * a, 35 * a, 149.921875 * a, 43.5 * a, 157.421875 * a);
            d.closePath();
            h(d, f[1], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(78.5 * a, 51.921875 * a);
            d.bezierCurveTo(99.5 * a, 75.921875 * a, 110.5 * a, 96.921875 * a, 118.5 * a, 120.921875 * a);
            d.bezierCurveTo(121.5 * a, 140.921875 * a, 107.5 * a, 179.921875 * a, 75.5 * a, 183.921875 * a);
            d.bezierCurveTo(30.5 * a, 169.921875 * a, 37.5 * a, 131.921875 * a, 34.5 * a, 120.921875 * a);
            d.bezierCurveTo(41.5 * a, 89.921875 * a, 61.5 * a, 67.921875 * a, 78.5 * a, 51.921875 * a);
            d.closePath();
            h(d, f[3], f[2], 4 * a);
            A(d, 108.5 * a, 148.421875 * a, 9 * a);
            h(d, f[5]);
            A(d, 106.5 * a, 144.421875 * a, 3 * a);
            h(d, f[6]);
            A(d, 46.5 * a, 148.421875 * a, 9 * a);
            h(d, f[5]);
            A(d, 44.5 * a, 144.421875 * a, 3 * a);
            h(d, f[6]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(116.5 * a, 114.421875 * a);
            d.bezierCurveTo(121.5 * a, 137.421875 * a, 118.5 * a, 133.421875 * a, 108.5 * a, 139.421875 * a);
            d.bezierCurveTo(94.5 * a, 146.421875 * a, 96.5 * a, 148.421875 * a, 95.5 * a, 152.421875 * a);
            h(d, f[3], f[2], 4 * a);
            d.beginPath();
            d.translate(0, -2 * a);
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(35.5 * a, 131.421875 * a);
            d.bezierCurveTo(36.5 * a, 140.421875 * a, 39.5 * a, 140.421875 * a, 49.5 * a, 143.421875 * a);
            d.bezierCurveTo(59.5 * a, 149.421875 * a, 57.5 * a, 151.421875 * a, 59.5 * a, 155.421875 * a);
            h(d, f[3], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(84.5 * a, 57.421875 * a);
            d.bezierCurveTo(101.5 * a, 120.421875 * a, 92.5 * a, 127.421875 * a, 78.5 * a, 134.421875 * a);
            d.bezierCurveTo(51.5 * a, 131.421875 * a, 63.5 * a, 102.421875 * a, 70.5 * a, 59.421875 * a);
            d.bezierCurveTo(75 * a, 55.421875 * a, 78.5 * a, 52.421875 * a, 79.5 * a, 51.421875 * a);
            d.closePath();
            h(d, f[4]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(79.5 * a, 61.421875 * a);
            d.bezierCurveTo(88.5 * a, 31.421875 * a, 81.5 * a, 16.421875 * a, 75.5 * a, 7.421875 * a);
            d.bezierCurveTo(77.5 * a, 28.421875 * a, 77.5 * a, 37.421875 * a, 68.5 * a, 42.421875 * a);
            d.bezierCurveTo(79.5 * a, 57.421875 * a, 79.5 * a, 58.421875 * a, 80.5 * a, 61.421875 * a);
            d.closePath();
            h(d, f[3], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(72.5 * a, 72.421875 * a);
            d.bezierCurveTo(76.5 * a, 79.421875 * a, 79.5 * a, 80.421875 * a, 83.5 * a, 73.421875 * a);
            d.bezierCurveTo(80.5 * a, 96.921875 * a, 79.5 * a, 114.421875 * a, 77.5 * a, 120.421875 * a);
            d.closePath();
            h(d, f[3], f[2], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(87.5 * a, 154.421875 * a);
            d.bezierCurveTo(93.5 * a, 163.921875 * a, 93.5 * a, 163.921875 * a, 99.5 * a, 173.421875 * a);
            d.bezierCurveTo(95 * a, 177.421875 * a, 95 * a, 177.421875 * a, 90.5 * a, 181.421875 * a);
            d.bezierCurveTo(89 * a, 167.921875 * a, 89 * a, 167.921875 * a, 87.5 * a, 154.421875 * a);
            d.closePath();
            h(d, f[6], f[7], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(81.5 * a, 164.421875 * a);
            d.bezierCurveTo(84 * a, 172.921875 * a, 84 * a, 172.921875 * a, 86.5 * a, 181.421875 * a);
            d.bezierCurveTo(82.5 * a, 182.421875 * a, 82.5 * a, 182.421875 * a, 78.5 * a, 183.421875 * a);
            d.closePath();
            h(d, f[6], f[7], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(72.5 * a, 164.421875 * a);
            d.bezierCurveTo(73.5 * a, 173.921875 * a, 73.5 * a, 173.921875 * a, 74.5 * a, 183.421875 * a);
            d.bezierCurveTo(70.5 * a, 182.921875 * a, 70.5 * a, 182.921875 * a, 66.5 * a, 182.421875 * a);
            d.closePath();
            h(d, f[6], f[7], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(65.5 * a, 156.421875 * a);
            d.bezierCurveTo(65 * a, 168.421875 * a, 65 * a, 168.421875 * a, 64.5 * a, 180.421875 * a);
            d.bezierCurveTo(58.5 * a, 177.421875 * a, 58.5 * a, 177.421875 * a, 52.5 * a, 174.421875 * a);
            d.closePath();
            h(d, f[6], f[7], 2 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.5 * a, 163.421875 * a);
            d.bezierCurveTo(62.5 * a, 185.421875 * a, 86.5 * a, 186.421875 * a, 111.5 * a, 165.421875 * a);
            d.bezierCurveTo(107.5 * a, 176.421875 * a, 95.5 * a, 187.421875 * a, 75.5 * a, 188.421875 * a);
            d.bezierCurveTo(53.5 * a, 188.421875 * a, 43.5 * a, 171.421875 * a, 42.5 * a, 164.421875 * a);
            d.closePath();
            h(d, f[3], f[2], 4 * a);
            return e;
        };


        function Uh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 158 * a;
            f.height = 201 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(96.5 * a, 76.421875 * a);
            d.bezierCurveTo(100.5 * a, 64.421875 * a, 103.5 * a, 62.421875 * a, 110.5 * a, 65.421875 * a);
            d.bezierCurveTo(116.5 * a, 66.421875 * a, 117.5 * a, 67.421875 * a, 112.5 * a, 73.421875 * a);
            d.bezierCurveTo(107 * a, 79.921875 * a, 107 * a, 79.921875 * a, 101.5 * a, 86.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(61.5 * a, 78.421875 * a);
            d.bezierCurveTo(57.5 * a, 73.421875 * a, 51.5 * a, 66.421875 * a, 45.5 * a, 68.421875 * a);
            d.bezierCurveTo(32.5 * a, 73.421875 * a, 38.5 * a, 75.421875 * a, 46.5 * a, 81.421875 * a);
            d.bezierCurveTo(51.5 * a, 84.921875 * a, 51.5 * a, 84.921875 * a, 56.5 * a, 88.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(116.5 * a, 127.421875 * a);
            d.bezierCurveTo(124.5 * a, 108.421875 * a, 129.5 * a, 104.421875 * a, 141.5 * a, 107.421875 * a);
            d.bezierCurveTo(156.5 * a, 112.421875 * a, 153.5 * a, 113.421875 * a, 132.5 * a, 134.421875 * a);
            d.bezierCurveTo(123.5 * a, 141.921875 * a, 123.5 * a, 141.921875 * a, 114.5 * a, 149.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(41.5 * a, 134.421875 * a);
            d.bezierCurveTo(30.5 * a, 119.421875 * a, 25.5 * a, 111.421875 * a, 12.5 * a, 115.421875 * a);
            d.bezierCurveTo(4.5 * a, 120.421875 * a, 4.5 * a, 121.421875 * a, 26.5 * a, 142.421875 * a);
            d.bezierCurveTo(35 * a, 149.921875 * a, 35 * a, 149.921875 * a, 43.5 * a, 157.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(78.5 * a, 51.921875 * a);
            d.bezierCurveTo(99.5 * a, 75.921875 * a, 110.5 * a, 96.921875 * a, 118.5 * a, 120.921875 * a);
            d.bezierCurveTo(121.5 * a, 140.921875 * a, 107.5 * a, 179.921875 * a, 75.5 * a, 183.921875 * a);
            d.bezierCurveTo(30.5 * a, 169.921875 * a, 37.5 * a, 131.921875 * a, 34.5 * a, 120.921875 * a);
            d.bezierCurveTo(41.5 * a, 89.921875 * a, 61.5 * a, 67.921875 * a, 78.5 * a, 51.921875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(72.5 * a, 72.421875 * a);
            d.bezierCurveTo(76.5 * a, 79.421875 * a, 79.5 * a, 80.421875 * a, 83.5 * a, 73.421875 * a);
            d.bezierCurveTo(80.5 * a, 96.921875 * a, 79.5 * a, 114.421875 * a, 77.5 * a, 120.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(42.5 * a, 163.421875 * a);
            d.bezierCurveTo(62.5 * a, 185.421875 * a, 86.5 * a, 186.421875 * a, 111.5 * a, 165.421875 * a);
            d.bezierCurveTo(107.5 * a, 176.421875 * a, 95.5 * a, 187.421875 * a, 75.5 * a, 188.421875 * a);
            d.bezierCurveTo(53.5 * a, 188.421875 * a, 43.5 * a, 171.421875 * a, 42.5 * a, 164.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(79.5 * a, 61.421875 * a);
            d.bezierCurveTo(88.5 * a, 31.421875 * a, 81.5 * a, 16.421875 * a, 75.5 * a, 7.421875 * a);
            d.bezierCurveTo(77.5 * a, 28.421875 * a, 77.5 * a, 37.421875 * a, 68.5 * a, 42.421875 * a);
            d.bezierCurveTo(79.5 * a, 57.421875 * a, 79.5 * a, 58.421875 * a, 80.5 * a, 61.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(72.5 * a, 72.421875 * a);
            d.bezierCurveTo(76.5 * a, 79.421875 * a, 79.5 * a, 80.421875 * a, 83.5 * a, 73.421875 * a);
            d.bezierCurveTo(80.5 * a, 96.921875 * a, 79.5 * a, 114.421875 * a, 77.5 * a, 120.421875 * a);
            d.closePath();
            h(d, e[0], e[0], 10 * a);
            return f;
        };

        function ug(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 400 * a;
            e.height = 170 * a;
            d.translate(0, -170 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(159.5 * a, 322.0625 * a);
            d.bezierCurveTo(240.5 * a, 293.0625 * a, 240.5 * a, 293.0625 * a, 321.5 * a, 264.0625 * a);
            d.bezierCurveTo(276.5 * a, 230.0625 * a, 276.5 * a, 230.0625 * a, 231.5 * a, 196.0625 * a);
            d.bezierCurveTo(158.5 * a, 221.5625 * a, 158.5 * a, 221.5625 * a, 85.5 * a, 247.0625 * a);
            d.closePath();
            h(d, f[0], f[1], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(212.5 * a, 270.0625 * a);
            d.bezierCurveTo(235 * a, 261.5625 * a, 235 * a, 261.5625 * a, 257.5 * a, 253.0625 * a);
            d.closePath();
            h(d, void 0, f[0], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(193.5 * a, 226.0625 * a);
            d.bezierCurveTo(204.5 * a, 242.0625 * a, 242.5 * a, 237.0625 * a, 251.5 * a, 225.0625 * a);
            d.bezierCurveTo(246.5 * a, 195.0625 * a, 205.5 * a, 190.0625 * a, 193.5 * a, 227.0625 * a);
            d.closePath();
            h(d, f[2], f[3], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(164.5 * a, 245.0625 * a);
            d.bezierCurveTo(182.5 * a, 264.0625 * a, 252.5 * a, 258.0625 * a, 276.5 * a, 244.0625 * a);
            d.bezierCurveTo(265.5 * a, 226.0625 * a, 244.5 * a, 231.0625 * a, 229.5 * a, 230.0625 * a);
            d.bezierCurveTo(205.5 * a, 227.0625 * a, 175.5 * a, 202.0625 * a, 162.5 * a, 244.0625 * a);
            d.closePath();
            h(d, f[2], f[3], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(115.5 * a, 260.0625 * a);
            d.bezierCurveTo(134.5 * a, 279.0625 * a, 170.5 * a, 275.0625 * a, 191.5 * a, 257.0625 * a);
            d.bezierCurveTo(174.5 * a, 208.0625 * a, 142.5 * a, 197.0625 * a, 116.5 * a, 259.0625 * a);
            d.closePath();
            h(d, f[2], f[3], 12 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(152.5 * a, 278.0625 * a);
            d.bezierCurveTo(165.5 * a, 294.0625 * a, 200.5 * a, 287.0625 * a, 216.5 * a, 278.0625 * a);
            d.bezierCurveTo(206.5 * a, 247.0625 * a, 173.5 * a, 233.0625 * a, 153.5 * a, 276.0625 * a);
            d.closePath();
            h(d, f[2], f[3], 12 * a);
            return e;
        };

        function Vh(a) {
            var e = document.createElement("canvas"),
                f = e.getContext("2d"),
                d = 200 * a,
                c = 180 * a,
                g = 8 * a;
            e.width = d;
            e.height = c;
            f.beginPath();
            B(f, 0, 0, d, c - g, g);
            f.globalAlpha = 0.8;
            h(f, "#1D6055");
            f.globalAlpha = 1;
            c = Ia(a, "Leaderboard", 25, "#FFF");
            f.drawImage(c, (d - c.width) / 2, 5 * a);
            return e;
        };

        function Wh(a) {
            var e = document.createElement("canvas"),
                f = e.getContext("2d"),
                d = 200 * a,
                c = 270 * a,
                g = 8 * a;
            e.width = d;
            e.height = c + 20;
            f.beginPath();
            B(f, 0, 0, d, c - g, g);
            f.globalAlpha = 0.5;
            h(f, "#1D6055");
            f.globalAlpha = 1;
            c = Ia(a, "Leaderboard", 25, "#FFF");
            f.drawImage(c, (d - c.width) / 2, 5 * a);
            return e;
        };

        function Yc(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 272 * a;
            d.height = 264 * a;
            c.translate(0, 20 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56.999969482421875 * a, 84.517333984375 * a);
            c.bezierCurveTo(61.999969482421875 * a, 58.517333984375 * a, 79.99996948242188 * a, 50.517333984375 * a, 102.99996948242188 * a, 50.517333984375 * a);
            c.bezierCurveTo(119.99996948242188 * a, 26.517333984375 * a, 137.99996948242188 * a, 32.517333984375 * a, 156.99996948242188 * a, 44.517333984375 * a);
            c.bezierCurveTo(187.99996948242188 * a, 42.517333984375 * a, 195.99996948242188 * a, 50.517333984375 * a, 202.99996948242188 * a, 77.517333984375 * a);
            c.bezierCurveTo(229.99996948242188 * a, 80.517333984375 * a, 231.99996948242188 * a, 96.517333984375 * a, 229.99996948242188 * a, 118.517333984375 * a);
            c.bezierCurveTo(241.99996948242188 * a, 147.517333984375 * a, 236.99996948242188 * a, 148.517333984375 * a, 220.99996948242188 * a, 165.517333984375 * a);
            c.bezierCurveTo(222.99996948242188 * a, 192.517333984375 * a, 209.99996948242188 * a, 212.517333984375 * a, 177.99996948242188 * a, 213.517333984375 * a);
            c.bezierCurveTo(159.99996948242188 * a, 234.517333984375 * a, 141.99996948242188 * a, 234.517333984375 * a, 116.99996948242188 * a, 222.517333984375 * a);
            c.bezierCurveTo(72.99996948242188 * a, 226.517333984375 * a, 66.99996948242188 * a, 207.517333984375 * a, 65.99996948242188 * a, 190.517333984375 * a);
            c.bezierCurveTo(35.999969482421875 * a, 180.517333984375 * a, 30.999969482421875 * a, 162.517333984375 * a, 39.999969482421875 * a, 135.517333984375 * a);
            c.bezierCurveTo(23.999969482421875 * a, 110.517333984375 * a, 43.999969482421875 * a, 90.517333984375 * a, 55.999969482421875 * a, 85.517333984375 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(0, -20 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56.999969482421875 * a, 84.517333984375 * a);
            c.bezierCurveTo(61.999969482421875 * a, 58.517333984375 * a, 79.99996948242188 * a, 50.517333984375 * a, 102.99996948242188 * a, 50.517333984375 * a);
            c.bezierCurveTo(119.99996948242188 * a, 26.517333984375 * a, 137.99996948242188 * a, 32.517333984375 * a, 156.99996948242188 * a, 44.517333984375 * a);
            c.bezierCurveTo(187.99996948242188 * a, 42.517333984375 * a, 195.99996948242188 * a, 50.517333984375 * a, 202.99996948242188 * a, 77.517333984375 * a);
            c.bezierCurveTo(229.99996948242188 * a, 80.517333984375 * a, 231.99996948242188 * a, 96.517333984375 * a, 229.99996948242188 * a, 118.517333984375 * a);
            c.bezierCurveTo(241.99996948242188 * a, 147.517333984375 * a, 236.99996948242188 * a, 148.517333984375 * a, 220.99996948242188 * a, 165.517333984375 * a);
            c.bezierCurveTo(222.99996948242188 * a, 192.517333984375 * a, 209.99996948242188 * a, 212.517333984375 * a, 177.99996948242188 * a, 213.517333984375 * a);
            c.bezierCurveTo(159.99996948242188 * a, 234.517333984375 * a, 141.99996948242188 * a, 234.517333984375 * a, 116.99996948242188 * a, 222.517333984375 * a);
            c.bezierCurveTo(72.99996948242188 * a, 226.517333984375 * a, 66.99996948242188 * a, 207.517333984375 * a, 65.99996948242188 * a, 190.517333984375 * a);
            c.bezierCurveTo(35.999969482421875 * a, 180.517333984375 * a, 30.999969482421875 * a, 162.517333984375 * a, 39.999969482421875 * a, 135.517333984375 * a);
            c.bezierCurveTo(23.999969482421875 * a, 110.517333984375 * a, 43.999969482421875 * a, 90.517333984375 * a, 55.999969482421875 * a, 85.517333984375 * a);
            c.closePath();
            h(c, f[1], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(123.99996948242188 * a, 116.18402099609375 * a);
            c.bezierCurveTo(115.99996948242188 * a, 99.18402099609375 * a, 109.99996948242188 * a, 74.18402099609375 * a, 109.99996948242188 * a, 63.18402099609375 * a);
            c.bezierCurveTo(115.99996948242188 * a, 69.18402099609375 * a, 125.99996948242188 * a, 87.18402099609375 * a, 137.99996948242188 * a, 112.18402099609375 * a);
            c.bezierCurveTo(142.99996948242188 * a, 84.18402099609375 * a, 143.99996948242188 * a, 76.18402099609375 * a, 153.99996948242188 * a, 62.18402099609375 * a);
            c.bezierCurveTo(155.99996948242188 * a, 79.18402099609375 * a, 149.99996948242188 * a, 110.18402099609375 * a, 151.99996948242188 * a, 117.18402099609375 * a);
            c.bezierCurveTo(162.99996948242188 * a, 104.18402099609375 * a, 180.99996948242188 * a, 91.18402099609375 * a, 191.99996948242188 * a, 91.18402099609375 * a);
            c.bezierCurveTo(185.99996948242188 * a, 102.18402099609375 * a, 180.99996948242188 * a, 106.18402099609375 * a, 160.99996948242188 * a, 124.18402099609375 * a);
            c.bezierCurveTo(190.99996948242188 * a, 121.18402099609375 * a, 199.99996948242188 * a, 120.18402099609375 * a, 207.99996948242188 * a, 123.18402099609375 * a);
            c.bezierCurveTo(199.99996948242188 * a, 129.18402099609375 * a, 181.99996948242188 * a, 132.18402099609375 * a, 160.99996948242188 * a, 135.18402099609375 * a);
            c.bezierCurveTo(179.99996948242188 * a, 142.18402099609375 * a, 193.99996948242188 * a, 151.18402099609375 * a, 196.99996948242188 * a, 156.18402099609375 * a);
            c.bezierCurveTo(185.99996948242188 * a, 156.18402099609375 * a, 163.99996948242188 * a, 149.18402099609375 * a, 152.99996948242188 * a, 147.18402099609375 * a);
            c.bezierCurveTo(157.99996948242188 * a, 155.18402099609375 * a, 165.99996948242188 * a, 176.18402099609375 * a, 169.99996948242188 * a, 195.18402099609375 * a);
            c.bezierCurveTo(162.99996948242188 * a, 190.18402099609375 * a, 147.99996948242188 * a, 167.18402099609375 * a, 139.99996948242188 * a, 153.18402099609375 * a);
            c.bezierCurveTo(137.99996948242188 * a, 167.18402099609375 * a, 126.99996948242188 * a, 194.18402099609375 * a, 119.99996948242188 * a, 204.18402099609375 * a);
            c.bezierCurveTo(117.99996948242188 * a, 186.18402099609375 * a, 123.99996948242188 * a, 165.18402099609375 * a, 126.99996948242188 * a, 149.18402099609375 * a);
            c.bezierCurveTo(110.99996948242188 * a, 163.18402099609375 * a, 103.99996948242188 * a, 170.18402099609375 * a, 82.99996948242188 * a, 177.18402099609375 * a);
            c.bezierCurveTo(90.99996948242188 * a, 162.18402099609375 * a, 99.99996948242188 * a, 153.18402099609375 * a, 117.99996948242188 * a, 140.18402099609375 * a);
            c.bezierCurveTo(97.99996948242188 * a, 140.18402099609375 * a, 83.99996948242188 * a, 139.18402099609375 * a, 65.99996948242188 * a, 132.18402099609375 * a);
            c.bezierCurveTo(77.99996948242188 * a, 127.18402099609375 * a, 95.99996948242188 * a, 127.18402099609375 * a, 115.99996948242188 * a, 127.18402099609375 * a);
            c.bezierCurveTo(91.99996948242188 * a, 113.18402099609375 * a, 84.99996948242188 * a, 107.18402099609375 * a, 76.99996948242188 * a, 96.18402099609375 * a);
            c.bezierCurveTo(94.99996948242188 * a, 99.18402099609375 * a, 109.99996948242188 * a, 109.18402099609375 * a, 123.99996948242188 * a, 116.18402099609375 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(131.99996948242188 * a, 119.18402099609375 * a);
            c.bezierCurveTo(141.99996948242188 * a, 119.18402099609375 * a, 145.99996948242188 * a, 116.18402099609375 * a, 147.99996948242188 * a, 109.18402099609375 * a);
            c.bezierCurveTo(151.99996948242188 * a, 107.18402099609375 * a, 159.99996948242188 * a, 107.18402099609375 * a, 156.99996948242188 * a, 123.18402099609375 * a);
            c.bezierCurveTo(155.99996948242188 * a, 140.18402099609375 * a, 142.99996948242188 * a, 149.18402099609375 * a, 132.99996948242188 * a, 147.18402099609375 * a);
            c.bezierCurveTo(119.99996948242188 * a, 144.18402099609375 * a, 113.99996948242188 * a, 122.18402099609375 * a, 131.99996948242188 * a, 119.18402099609375 * a);
            c.closePath();
            h(c, f[4], f[5], 6 * a);
            return d;
        };

        function Zc(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 247 * a;
            d.height = 247 * a;
            c.translate(0, 10 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(150 * a, 62 * a);
            c.bezierCurveTo(151.5 * a, 71.5 * a, 149 * a, 70 * a, 153 * a, 81 * a);
            c.bezierCurveTo(158 * a, 73.5 * a, 158 * a, 73.5 * a, 163 * a, 66 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(164 * a, 171 * a);
            c.bezierCurveTo(149 * a, 159 * a, 156.5 * a, 165 * a, 149 * a, 159 * a);
            c.bezierCurveTo(149 * a, 167 * a, 149 * a, 170 * a, 152 * a, 178 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(132 * a, 95 * a);
            c.bezierCurveTo(154 * a, 102 * a, 154 * a, 126 * a, 137 * a, 139 * a);
            c.bezierCurveTo(113 * a, 152 * a, 89 * a, 136 * a, 80 * a, 121 * a);
            c.bezierCurveTo(57 * a, 89 * a, 69 * a, 63 * a, 79 * a, 52 * a);
            c.bezierCurveTo(110 * a, 20 * a, 139 * a, 21 * a, 150 * a, 25 * a);
            c.bezierCurveTo(197 * a, 36 * a, 221 * a, 67 * a, 226 * a, 90 * a);
            c.bezierCurveTo(234 * a, 134 * a, 214 * a, 177 * a, 195 * a, 197 * a);
            c.bezierCurveTo(144 * a, 242 * a, 79 * a, 216 * a, 58 * a, 206 * a);
            c.bezierCurveTo(13 * a, 174 * a, 20 * a, 134 * a, 23 * a, 107 * a);
            c.bezierCurveTo(26 * a, 78 * a, 33 * a, 60 * a, 38 * a, 43 * a);
            c.bezierCurveTo(42 * a, 32 * a, 47 * a, 32 * a, 50 * a, 36 * a);
            c.bezierCurveTo(54 * a, 37 * a, 50 * a, 52 * a, 44 * a, 87 * a);
            c.bezierCurveTo(40 * a, 115 * a, 46 * a, 142 * a, 57 * a, 158 * a);
            c.bezierCurveTo(76 * a, 189 * a, 129 * a, 182 * a, 152 * a, 173 * a);
            c.bezierCurveTo(186 * a, 156 * a, 191 * a, 106 * a, 176 * a, 85 * a);
            c.bezierCurveTo(159 * a, 61 * a, 132 * a, 62 * a, 122 * a, 66 * a);
            c.bezierCurveTo(108 * a, 74 * a, 108 * a, 89 * a, 116 * a, 90 * a);
            c.bezierCurveTo(123 * a, 92 * a, 130 * a, 93 * a, 131 * a, 94 * a);
            c.closePath();
            h(c, f[0]);
            c.translate(0, -10 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(150 * a, 62 * a);
            c.bezierCurveTo(151.5 * a, 71.5 * a, 149 * a, 70 * a, 153 * a, 81 * a);
            c.bezierCurveTo(158 * a, 73.5 * a, 158 * a, 73.5 * a, 163 * a, 66 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(164 * a, 171 * a);
            c.bezierCurveTo(149 * a, 159 * a, 156.5 * a, 165 * a, 149 * a, 159 * a);
            c.bezierCurveTo(149 * a, 167 * a, 149 * a, 170 * a, 152 * a, 178 * a);
            c.closePath();
            h(c, f[5]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(132 * a, 95 * a);
            c.bezierCurveTo(154 * a, 102 * a, 154 * a, 126 * a, 137 * a, 139 * a);
            c.bezierCurveTo(113 * a, 152 * a, 89 * a, 136 * a, 80 * a, 121 * a);
            c.bezierCurveTo(57 * a, 89 * a, 69 * a, 63 * a, 79 * a, 52 * a);
            c.bezierCurveTo(110 * a, 20 * a, 139 * a, 21 * a, 150 * a, 25 * a);
            c.bezierCurveTo(197 * a, 36 * a, 221 * a, 67 * a, 226 * a, 90 * a);
            c.bezierCurveTo(234 * a, 134 * a, 214 * a, 177 * a, 195 * a, 197 * a);
            c.bezierCurveTo(144 * a, 242 * a, 79 * a, 216 * a, 58 * a, 206 * a);
            c.bezierCurveTo(13 * a, 174 * a, 20 * a, 134 * a, 23 * a, 107 * a);
            c.bezierCurveTo(26 * a, 78 * a, 33 * a, 60 * a, 38 * a, 43 * a);
            c.bezierCurveTo(42 * a, 32 * a, 47 * a, 32 * a, 50 * a, 36 * a);
            c.bezierCurveTo(54 * a, 37 * a, 50 * a, 52 * a, 44 * a, 87 * a);
            c.bezierCurveTo(40 * a, 115 * a, 46 * a, 142 * a, 57 * a, 158 * a);
            c.bezierCurveTo(76 * a, 189 * a, 129 * a, 182 * a, 152 * a, 173 * a);
            c.bezierCurveTo(186 * a, 156 * a, 191 * a, 106 * a, 176 * a, 85 * a);
            c.bezierCurveTo(159 * a, 61 * a, 132 * a, 62 * a, 122 * a, 66 * a);
            c.bezierCurveTo(108 * a, 74 * a, 108 * a, 89 * a, 116 * a, 90 * a);
            c.bezierCurveTo(123 * a, 92 * a, 130 * a, 93 * a, 131 * a, 94 * a);
            c.closePath();
            h(c, f[1], f[2], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(137 * a, 137 * a);
            c.bezierCurveTo(145 * a, 125 * a, 138 * a, 108 * a, 123 * a, 104 * a);
            c.bezierCurveTo(81 * a, 101 * a, 88 * a, 77 * a, 98 * a, 65 * a);
            c.bezierCurveTo(117 * a, 38 * a, 138 * a, 39 * a, 165 * a, 52 * a);
            c.bezierCurveTo(197 * a, 72 * a, 207 * a, 111 * a, 197 * a, 140 * a);
            c.bezierCurveTo(182 * a, 180 * a, 161 * a, 197 * a, 112 * a, 194 * a);
            c.bezierCurveTo(58 * a, 194 * a, 37 * a, 170 * a, 34 * a, 142 * a);
            c.bezierCurveTo(29 * a, 102 * a, 40 * a, 63 * a, 51 * a, 45 * a);
            c.bezierCurveTo(43 * a, 78 * a, 41 * a, 103 * a, 43 * a, 122 * a);
            c.bezierCurveTo(51 * a, 158 * a, 63 * a, 174 * a, 95 * a, 179 * a);
            c.bezierCurveTo(129 * a, 186 * a, 169 * a, 172 * a, 177 * a, 144 * a);
            c.bezierCurveTo(197 * a, 105 * a, 172 * a, 76 * a, 160 * a, 71 * a);
            c.bezierCurveTo(125 * a, 52 * a, 111 * a, 73 * a, 111 * a, 81 * a);
            c.bezierCurveTo(106 * a, 93 * a, 140 * a, 92 * a, 147 * a, 107 * a);
            c.bezierCurveTo(153 * a, 128 * a, 140 * a, 135 * a, 137 * a, 139 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(132 * a, 95 * a);
            c.bezierCurveTo(154 * a, 102 * a, 154 * a, 126 * a, 137 * a, 139 * a);
            c.bezierCurveTo(113 * a, 152 * a, 89 * a, 136 * a, 80 * a, 121 * a);
            c.bezierCurveTo(57 * a, 89 * a, 69 * a, 63 * a, 79 * a, 52 * a);
            c.bezierCurveTo(110 * a, 20 * a, 139 * a, 21 * a, 150 * a, 25 * a);
            c.bezierCurveTo(197 * a, 36 * a, 221 * a, 67 * a, 226 * a, 90 * a);
            c.bezierCurveTo(234 * a, 134 * a, 214 * a, 177 * a, 195 * a, 197 * a);
            c.bezierCurveTo(144 * a, 242 * a, 79 * a, 216 * a, 58 * a, 206 * a);
            c.bezierCurveTo(13 * a, 174 * a, 20 * a, 134 * a, 23 * a, 107 * a);
            c.bezierCurveTo(26 * a, 78 * a, 33 * a, 60 * a, 38 * a, 43 * a);
            c.bezierCurveTo(42 * a, 32 * a, 47 * a, 32 * a, 50 * a, 36 * a);
            c.bezierCurveTo(54 * a, 37 * a, 50 * a, 52 * a, 44 * a, 87 * a);
            c.bezierCurveTo(40 * a, 115 * a, 46 * a, 142 * a, 57 * a, 158 * a);
            c.bezierCurveTo(76 * a, 189 * a, 129 * a, 182 * a, 152 * a, 173 * a);
            c.bezierCurveTo(186 * a, 156 * a, 191 * a, 106 * a, 176 * a, 85 * a);
            c.bezierCurveTo(159 * a, 61 * a, 132 * a, 62 * a, 122 * a, 66 * a);
            c.bezierCurveTo(108 * a, 74 * a, 108 * a, 89 * a, 116 * a, 90 * a);
            c.bezierCurveTo(123 * a, 92 * a, 130 * a, 93 * a, 131 * a, 94 * a);
            c.closePath();
            h(c, void 0, f[2], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(82 * a, 63 * a);
            c.bezierCurveTo(91 * a, 64 * a, 96 * a, 62 * a, 98 * a, 53 * a);
            c.bezierCurveTo(91 * a, 45 * a, 85 * a, 42 * a, 78 * a, 41 * a);
            c.bezierCurveTo(81 * a, 51 * a, 82 * a, 57 * a, 82 * a, 63 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(148 * a, 40 * a);
            c.bezierCurveTo(140 * a, 52 * a, 131 * a, 51 * a, 123 * a, 43 * a);
            c.bezierCurveTo(123 * a, 25 * a, 129 * a, 17 * a, 134 * a, 12 * a);
            c.bezierCurveTo(138 * a, 35 * a, 142 * a, 31 * a, 148 * a, 40 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(189 * a, 43 * a);
            c.bezierCurveTo(191 * a, 54 * a, 196 * a, 58 * a, 205 * a, 59 * a);
            c.bezierCurveTo(211 * a, 42 * a, 214 * a, 37 * a, 216 * a, 31 * a);
            c.bezierCurveTo(202 * a, 34 * a, 195 * a, 39 * a, 190 * a, 43 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(216 * a, 98 * a);
            c.bezierCurveTo(219 * a, 105 * a, 225 * a, 107 * a, 230 * a, 109 * a);
            c.bezierCurveTo(227 * a, 113 * a, 221 * a, 115 * a, 215 * a, 115 * a);
            c.bezierCurveTo(208 * a, 109 * a, 211 * a, 101 * a, 216 * a, 98 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(180 * a, 85 * a);
            c.bezierCurveTo(193 * a, 86 * a, 196 * a, 98 * a, 191 * a, 108 * a);
            c.bezierCurveTo(179 * a, 112 * a, 167 * a, 113 * a, 155 * a, 111 * a);
            c.bezierCurveTo(169 * a, 100 * a, 176 * a, 96 * a, 180 * a, 85 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(96 * a, 114 * a);
            c.bezierCurveTo(102 * a, 109 * a, 112 * a, 110 * a, 114 * a, 118 * a);
            c.bezierCurveTo(111 * a, 134 * a, 102 * a, 143 * a, 95 * a, 147 * a);
            c.bezierCurveTo(98 * a, 123 * a, 97 * a, 119 * a, 96 * a, 115 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(79 * a, 92 * a);
            c.bezierCurveTo(86 * a, 95 * a, 89 * a, 102 * a, 83 * a, 111 * a);
            c.bezierCurveTo(70 * a, 110 * a, 61 * a, 107 * a, 54 * a, 100 * a);
            c.bezierCurveTo(70 * a, 97 * a, 70 * a, 95 * a, 78 * a, 92 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(39 * a, 130 * a);
            c.bezierCurveTo(37 * a, 141 * a, 41 * a, 143 * a, 48 * a, 144 * a);
            c.bezierCurveTo(54 * a, 134 * a, 55 * a, 131 * a, 56 * a, 123 * a);
            c.bezierCurveTo(47 * a, 129 * a, 43 * a, 129 * a, 39 * a, 129 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(113 * a, 189 * a);
            c.bezierCurveTo(119 * a, 201 * a, 127 * a, 198 * a, 134 * a, 192 * a);
            c.bezierCurveTo(128 * a, 175 * a, 128 * a, 173 * a, 128 * a, 165 * a);
            c.bezierCurveTo(117 * a, 176 * a, 116 * a, 182 * a, 113 * a, 187 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(74 * a, 154 * a);
            c.bezierCurveTo(76 * a, 163 * a, 76 * a, 170 * a, 75 * a, 177 * a);
            c.bezierCurveTo(68 * a, 179 * a, 66 * a, 176 * a, 63 * a, 171 * a);
            c.bezierCurveTo(69 * a, 164 * a, 72 * a, 159 * a, 74 * a, 154 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(206 * a, 152 * a);
            c.bezierCurveTo(198 * a, 158 * a, 198 * a, 166 * a, 201 * a, 171 * a);
            c.bezierCurveTo(209 * a, 170 * a, 221 * a, 170 * a, 226 * a, 172 * a);
            c.bezierCurveTo(219 * a, 159 * a, 210 * a, 155 * a, 207 * a, 153 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(181 * a, 184 * a);
            c.bezierCurveTo(170 * a, 184 * a, 167 * a, 187 * a, 163 * a, 195 * a);
            c.bezierCurveTo(171 * a, 207 * a, 183 * a, 214 * a, 191 * a, 217 * a);
            c.bezierCurveTo(183 * a, 204 * a, 184 * a, 196 * a, 181 * a, 184 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(66 * a, 199 * a);
            c.bezierCurveTo(73 * a, 197 * a, 78 * a, 199 * a, 79 * a, 206 * a);
            c.bezierCurveTo(71 * a, 216 * a, 67 * a, 221 * a, 57 * a, 223 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(182 * a, 143 * a);
            c.bezierCurveTo(183 * a, 146 * a, 183 * a, 149 * a, 179 * a, 152 * a);
            c.bezierCurveTo(174 * a, 146 * a, 174 * a, 146 * a, 169 * a, 140 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(32 * a, 159 * a);
            c.bezierCurveTo(45 * a, 160 * a, 48 * a, 164 * a, 45 * a, 175 * a);
            c.bezierCurveTo(28 * a, 183 * a, 25 * a, 184 * a, 19 * a, 184 * a);
            c.bezierCurveTo(30 * a, 170 * a, 29 * a, 164 * a, 31 * a, 160 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(110 * a, 214 * a);
            c.bezierCurveTo(106 * a, 212 * a, 104 * a, 213 * a, 102 * a, 218 * a);
            c.bezierCurveTo(104 * a, 220 * a, 107 * a, 222 * a, 110 * a, 224 * a);
            c.bezierCurveTo(110.5 * a, 219 * a, 110.5 * a, 219 * a, 111 * a, 214 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(40 * a, 52 * a);
            c.bezierCurveTo(41 * a, 57 * a, 40 * a, 61 * a, 34 * a, 60 * a);
            c.bezierCurveTo(31.5 * a, 55 * a, 31.5 * a, 55 * a, 29 * a, 50 * a);
            c.bezierCurveTo(34 * a, 50.5 * a, 34 * a, 50.5 * a, 39 * a, 51 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(31 * a, 81 * a);
            c.bezierCurveTo(37 * a, 84 * a, 38 * a, 90 * a, 34 * a, 99 * a);
            c.bezierCurveTo(23 * a, 97 * a, 19 * a, 96 * a, 16 * a, 93 * a);
            c.bezierCurveTo(24 * a, 88 * a, 28 * a, 85 * a, 30 * a, 81 * a);
            c.closePath();
            h(c, f[4], f[5], 5 * a);
            return d;
        };

        function We(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 465 * a;
            e.height = 310 * a;
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(126 * a, 192 * a);
            d.bezierCurveTo(198 * a, 202 * a, 245 * a, 203 * a, 335 * a, 194 * a);
            d.bezierCurveTo(336 * a, 232 * a, 326 * a, 235 * a, 232 * a, 237 * a);
            d.bezierCurveTo(161 * a, 235 * a, 122 * a, 235 * a, 126 * a, 193 * a);
            d.closePath();
            h(d, f[0], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(146 * a, 239 * a);
            d.bezierCurveTo(174 * a, 74 * a, 287 * a, 88 * a, 320 * a, 240 * a);
            d.bezierCurveTo(329 * a, 231 * a, 340 * a, 219 * a, 332 * a, 115 * a);
            d.bezierCurveTo(330 * a, 40 * a, 144 * a, 30 * a, 129 * a, 116 * a);
            d.bezierCurveTo(124 * a, 217 * a, 124 * a, 228 * a, 143 * a, 237 * a);
            d.closePath();
            h(d, f[0], f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(126 * a, 193 * a);
            d.bezierCurveTo(173 * a, 94 * a, 209 * a, 100 * a, 228 * a, 57 * a);
            d.bezierCurveTo(190 * a, 112 * a, 165 * a, 115 * a, 127 * a, 184 * a);
            d.closePath();
            h(d, void 0, f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(230 * a, 57 * a);
            d.bezierCurveTo(266 * a, 117 * a, 310 * a, 130 * a, 332 * a, 183 * a);
            d.bezierCurveTo(290 * a, 112 * a, 262 * a, 109 * a, 230 * a, 56 * a);
            d.closePath();
            h(d, void 0, f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(154 * a, 212 * a);
            d.bezierCurveTo(208 * a, 224 * a, 252 * a, 219 * a, 305 * a, 212 * a);
            d.bezierCurveTo(267 * a, 219 * a, 204 * a, 222 * a, 155 * a, 212 * a);
            d.closePath();
            h(d, void 0, f[1], 4 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(239 * a, 59 * a);
            d.bezierCurveTo(302 * a, 72 * a, 325 * a, 84 * a, 326 * a, 115 * a);
            d.bezierCurveTo(289 * a, 80 * a, 270 * a, 88 * a, 253 * a, 78 * a);
            d.closePath();
            h(d, f[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(216 * a, 61 * a);
            d.bezierCurveTo(209 * a, 70 * a, 209 * a, 70 * a, 202 * a, 79 * a);
            d.bezierCurveTo(173 * a, 87 * a, 162 * a, 91 * a, 137 * a, 107 * a);
            d.bezierCurveTo(153 * a, 78 * a, 174 * a, 67 * a, 212 * a, 62 * a);
            d.closePath();
            h(d, f[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(175 * a, 125 * a);
            d.bezierCurveTo(218 * a, 94 * a, 238 * a, 90 * a, 281 * a, 125 * a);
            d.bezierCurveTo(245 * a, 89 * a, 240 * a, 80 * a, 228 * a, 67 * a);
            d.bezierCurveTo(207 * a, 100 * a, 192 * a, 104 * a, 177 * a, 123 * a);
            d.closePath();
            h(d, f[2]);
            return e;
        };

        function Xe(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 465 * a;
            e.height = 405 * a;
            d.globalAlpha = 1;
            d.translate(6 * a, 0 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(39.000030517578125 * a, 162.03977966308594 * a);
            d.bezierCurveTo(125.00003051757812 * a, 84.03977966308594 * a, 108.50003051757812 * a, 115.03977966308594 * a, 178.00003051757812 * a, 68.03977966308594 * a);
            d.bezierCurveTo(299.0000305175781 * a, 146.53977966308594 * a, 299.0000305175781 * a, 146.53977966308594 * a, 420.0000305175781 * a, 225.03977966308594 * a);
            d.bezierCurveTo(400.0000305175781 * a, 288.53977966308594 * a, 400.0000305175781 * a, 288.53977966308594 * a, 380.0000305175781 * a, 352.03977966308594 * a);
            d.bezierCurveTo(216.50003051757812 * a, 345.53977966308594 * a, 216.50003051757812 * a, 345.53977966308594 * a, 53.000030517578125 * a, 339.03977966308594 * a);
            d.closePath();
            h(d, f[3]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(23.000030517578125 * a, 306.94886779785156 * a);
            d.bezierCurveTo(5.000030517578125 * a, 275.94886779785156 * a, 6.000030517578125 * a, 201.94886779785156 * a, 14.000030517578125 * a, 150.94886779785156 * a);
            d.bezierCurveTo(40.000030517578125 * a, 34.94886779785156 * a, 157.00003051757812 * a, 14.948867797851562 * a, 199.00003051757812 * a, 11.948867797851562 * a);
            d.bezierCurveTo(331.0000305175781 * a, 0.9488677978515625 * a, 409.0000305175781 * a, 61.94886779785156 * a, 428.0000305175781 * a, 133.94886779785156 * a);
            d.bezierCurveTo(445.0000305175781 * a, 207.94886779785156 * a, 439.0000305175781 * a, 274.94886779785156 * a, 426.0000305175781 * a, 342.94886779785156 * a);
            d.bezierCurveTo(355.0000305175781 * a, 207.94886779785156 * a, 345.0000305175781 * a, 208.94886779785156 * a, 333.0000305175781 * a, 202.94886779785156 * a);
            d.bezierCurveTo(262.0000305175781 * a, 143.94886779785156 * a, 236.00003051757812 * a, 148.94886779785156 * a, 189.00003051757812 * a, 162.94886779785156 * a);
            d.bezierCurveTo(82.00003051757812 * a, 190.94886779785156 * a, 78.00003051757812 * a, 235.94886779785156 * a, 62.000030517578125 * a, 279.94886779785156 * a);
            d.closePath();
            h(d, f[0], f[1], 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(17.000030517578125 * a, 149.94886779785156 * a);
            d.bezierCurveTo(76.00003051757812 * a, 67.94886779785156 * a, 177.00003051757812 * a, 40.94886779785156 * a, 232.00003051757812 * a, 45.94886779785156 * a);
            d.bezierCurveTo(316.0000305175781 * a, 46.94886779785156 * a, 359.0000305175781 * a, 74.94886779785156 * a, 428.0000305175781 * a, 145.94886779785156 * a);
            d.bezierCurveTo(414.0000305175781 * a, 73.94886779785156 * a, 386.0000305175781 * a, 68.94886779785156 * a, 359.0000305175781 * a, 43.94886779785156 * a);
            d.bezierCurveTo(295.0000305175781 * a, 5.9488677978515625 * a, 239.00003051757812 * a, 10.948867797851562 * a, 207.00003051757812 * a, 10.948867797851562 * a);
            d.bezierCurveTo(121.00003051757812 * a, 20.948867797851562 * a, 104.00003051757812 * a, 34.94886779785156 * a, 45.000030517578125 * a, 84.94886779785156 * a);
            d.bezierCurveTo(14.000030517578125 * a, 128.94886779785156 * a, 18.000030517578125 * a, 142.94886779785156 * a, 16.000030517578125 * a, 151.94886779785156 * a);
            d.closePath();
            h(d, f[2]);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(23.000030517578125 * a, 306.94886779785156 * a);
            d.bezierCurveTo(5.000030517578125 * a, 275.94886779785156 * a, 6.000030517578125 * a, 201.94886779785156 * a, 14.000030517578125 * a, 150.94886779785156 * a);
            d.bezierCurveTo(40.000030517578125 * a, 34.94886779785156 * a, 157.00003051757812 * a, 14.948867797851562 * a, 199.00003051757812 * a, 11.948867797851562 * a);
            d.bezierCurveTo(331.0000305175781 * a, 0.9488677978515625 * a, 409.0000305175781 * a, 61.94886779785156 * a, 428.0000305175781 * a, 133.94886779785156 * a);
            d.bezierCurveTo(445.0000305175781 * a, 207.94886779785156 * a, 439.0000305175781 * a, 274.94886779785156 * a, 426.0000305175781 * a, 342.94886779785156 * a);
            d.bezierCurveTo(355.0000305175781 * a, 207.94886779785156 * a, 345.0000305175781 * a, 208.94886779785156 * a, 333.0000305175781 * a, 202.94886779785156 * a);
            d.bezierCurveTo(262.0000305175781 * a, 143.94886779785156 * a, 236.00003051757812 * a, 148.94886779785156 * a, 189.00003051757812 * a, 162.94886779785156 * a);
            d.bezierCurveTo(82.00003051757812 * a, 190.94886779785156 * a, 78.00003051757812 * a, 235.94886779785156 * a, 62.000030517578125 * a, 279.94886779785156 * a);
            d.closePath();
            h(d, void 0, f[1], 16 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(60.000030517578125 * a, 288.03977966308594 * a);
            d.bezierCurveTo(183.00003051757812 * a, 320.03977966308594 * a, 342.0000305175781 * a, 306.03977966308594 * a, 399.0000305175781 * a, 286.03977966308594 * a);
            d.bezierCurveTo(420.0000305175781 * a, 345.03977966308594 * a, 410.0000305175781 * a, 335.03977966308594 * a, 415.0000305175781 * a, 362.03977966308594 * a);
            d.bezierCurveTo(351.0000305175781 * a, 384.03977966308594 * a, 299.0000305175781 * a, 389.03977966308594 * a, 215.00003051757812 * a, 391.03977966308594 * a);
            d.bezierCurveTo(128.00003051757812 * a, 388.03977966308594 * a, 69.00003051757812 * a, 373.03977966308594 * a, 39.000030517578125 * a, 359.03977966308594 * a);
            d.closePath();
            h(d, f[0], f[1], 13 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(47.000030517578125 * a, 327.03977966308594 * a);
            d.bezierCurveTo(203.00003051757812 * a, 377.03977966308594 * a, 331.0000305175781 * a, 349.03977966308594 * a, 410.0000305175781 * a, 330.03977966308594 * a);
            d.closePath();
            h(d, f[0], f[1], 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(9.000030517578125 * a, 339.1306915283203 * a);
            d.bezierCurveTo(2.000030517578125 * a, 280.1306915283203 * a, 30.000030517578125 * a, 219.1306915283203 * a, 85.00003051757812 * a, 167.1306915283203 * a);
            d.bezierCurveTo(174.00003051757812 * a, 82.13069152832031 * a, 241.00003051757812 * a, 101.13069152832031 * a, 284.0000305175781 * a, 115.13069152832031 * a);
            d.bezierCurveTo(333.0000305175781 * a, 134.1306915283203 * a, 376.0000305175781 * a, 177.1306915283203 * a, 410.0000305175781 * a, 247.1306915283203 * a);
            d.bezierCurveTo(439.0000305175781 * a, 300.1306915283203 * a, 442.0000305175781 * a, 346.1306915283203 * a, 430.0000305175781 * a, 363.1306915283203 * a);
            d.bezierCurveTo(418.0000305175781 * a, 366.1306915283203 * a, 395.0000305175781 * a, 295.1306915283203 * a, 355.0000305175781 * a, 223.1306915283203 * a);
            d.bezierCurveTo(299.0000305175781 * a, 156.1306915283203 * a, 262.0000305175781 * a, 155.1306915283203 * a, 215.00003051757812 * a, 159.1306915283203 * a);
            d.bezierCurveTo(133.00003051757812 * a, 171.1306915283203 * a, 120.00003051757812 * a, 193.1306915283203 * a, 96.00003051757812 * a, 221.1306915283203 * a);
            d.bezierCurveTo(49.000030517578125 * a, 262.1306915283203 * a, 47.000030517578125 * a, 306.1306915283203 * a, 38.000030517578125 * a, 336.1306915283203 * a);
            d.bezierCurveTo(30.000030517578125 * a, 349.1306915283203 * a, 30.000030517578125 * a, 349.1306915283203 * a, 22.000030517578125 * a, 362.1306915283203 * a);
            d.closePath();
            h(d, f[2], f[1], 20 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(228.00003051757812 * a, 128.03977966308594 * a);
            d.bezierCurveTo(315.0000305175781 * a, 131.03977966308594 * a, 349.0000305175781 * a, 178.03977966308594 * a, 386.0000305175781 * a, 234.03977966308594 * a);
            d.bezierCurveTo(444.0000305175781 * a, 329.03977966308594 * a, 446.0000305175781 * a, 354.03977966308594 * a, 427.0000305175781 * a, 373.03977966308594 * a);
            d.bezierCurveTo(389.0000305175781 * a, 389.03977966308594 * a, 399.0000305175781 * a, 329.03977966308594 * a, 361.0000305175781 * a, 277.03977966308594 * a);
            d.bezierCurveTo(306.0000305175781 * a, 191.03977966308594 * a, 266.0000305175781 * a, 183.03977966308594 * a, 220.00003051757812 * a, 181.03977966308594 * a);
            d.bezierCurveTo(138.00003051757812 * a, 184.03977966308594 * a, 123.00003051757812 * a, 212.03977966308594 * a, 89.00003051757812 * a, 271.03977966308594 * a);
            d.bezierCurveTo(52.000030517578125 * a, 349.03977966308594 * a, 68.00003051757812 * a, 364.03977966308594 * a, 33.000030517578125 * a, 369.03977966308594 * a);
            d.bezierCurveTo(6.000030517578125 * a, 366.03977966308594 * a, 5.000030517578125 * a, 341.03977966308594 * a, 26.000030517578125 * a, 288.03977966308594 * a);
            d.bezierCurveTo(60.000030517578125 * a, 207.03977966308594 * a, 100.00003051757812 * a, 180.03977966308594 * a, 113.00003051757812 * a, 170.03977966308594 * a);
            d.bezierCurveTo(159.00003051757812 * a, 132.03977966308594 * a, 196.00003051757812 * a, 133.03977966308594 * a, 226.00003051757812 * a, 129.03977966308594 * a);
            d.closePath();
            h(d, f[0], f[1], 20 * a);
            return e;
        };

        function Cc(a, e, f, d) {
            var c = document.createElement("canvas"),
                g = c.getContext("2d");
            c.width = 198 * a;
            c.height = 147 * a;
            g.globalAlpha = e ? 0.5 : 1;
            g.translate(0, 6 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(44 * a, 76 * a);
            g.bezierCurveTo(50 * a, 82 * a, 50 * a, 82 * a, 56 * a, 88 * a);
            g.bezierCurveTo(59 * a, 82 * a, 59 * a, 82 * a, 62 * a, 76 * a);
            g.bezierCurveTo(59 * a, 71 * a, 59 * a, 71 * a, 56 * a, 66 * a);
            g.bezierCurveTo(59 * a, 69 * a, 59 * a, 69 * a, 62 * a, 72 * a);
            g.bezierCurveTo(80 * a, 48 * a, 102 * a, 50 * a, 120 * a, 62 * a);
            g.bezierCurveTo(127 * a, 58 * a, 127 * a, 58 * a, 134 * a, 54 * a);
            g.bezierCurveTo(129 * a, 60 * a, 129 * a, 60 * a, 124 * a, 66 * a);
            g.bezierCurveTo(129 * a, 73 * a, 129 * a, 73 * a, 134 * a, 80 * a);
            g.bezierCurveTo(140 * a, 74 * a, 140 * a, 74 * a, 146 * a, 68 * a);
            g.bezierCurveTo(142 * a, 76 * a, 142 * a, 76 * a, 138 * a, 84 * a);
            g.bezierCurveTo(144 * a, 90 * a, 142 * a, 90 * a, 144 * a, 90 * a);
            g.bezierCurveTo(136 * a, 97 * a, 136 * a, 97 * a, 128 * a, 104 * a);
            g.bezierCurveTo(154 * a, 110 * a, 164 * a, 90 * a, 160 * a, 80 * a);
            g.bezierCurveTo(138 * a, 22 * a, 148 * a, 51 * a, 136 * a, 22 * a);
            g.bezierCurveTo(97 * a, 24 * a, 97 * a, 24 * a, 58 * a, 26 * a);
            g.bezierCurveTo(47 * a, 54 * a, 36 * a, 80 * a, 36 * a, 82 * a);
            g.bezierCurveTo(40 * a, 108 * a, 54 * a, 104 * a, 62 * a, 104 * a);
            g.bezierCurveTo(46 * a, 92 * a, 54 * a, 97 * a, 46 * a, 90 * a);
            g.closePath();
            h(g, f[0]);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(36 * a, 80 * a);
            g.bezierCurveTo(30 * a, 84 * a, 28 * a, 92 * a, 34 * a, 100 * a);
            g.bezierCurveTo(41.5 * a, 102 * a, 41.5 * a, 102 * a, 49 * a, 104 * a);
            g.bezierCurveTo(43 * a, 105.5 * a, 43 * a, 105.5 * a, 37 * a, 107 * a);
            g.bezierCurveTo(46 * a, 111 * a, 60 * a, 114 * a, 76 * a, 114 * a);
            g.bezierCurveTo(78 * a, 110.5 * a, 78 * a, 110.5 * a, 80 * a, 107 * a);
            g.bezierCurveTo(81 * a, 110.5 * a, 81 * a, 110.5 * a, 82 * a, 114 * a);
            g.bezierCurveTo(94.5 * a, 113.5 * a, 94.5 * a, 113.5 * a, 107 * a, 113 * a);
            g.bezierCurveTo(108.5 * a, 110 * a, 108.5 * a, 110 * a, 110 * a, 107 * a);
            g.bezierCurveTo(111.5 * a, 110.5 * a, 111.5 * a, 110.5 * a, 113 * a, 114 * a);
            g.bezierCurveTo(131 * a, 112.5 * a, 131 * a, 112.5 * a, 149 * a, 111 * a);
            g.bezierCurveTo(148.5 * a, 107.5 * a, 148.5 * a, 107.5 * a, 148 * a, 104 * a);
            g.bezierCurveTo(150.5 * a, 107 * a, 150.5 * a, 107 * a, 153 * a, 110 * a);
            g.bezierCurveTo(155.5 * a, 108.5 * a, 155.5 * a, 108.5 * a, 158 * a, 107 * a);
            g.bezierCurveTo(156.5 * a, 104 * a, 156.5 * a, 104 * a, 155 * a, 101 * a);
            g.bezierCurveTo(158.5 * a, 102.5 * a, 158.5 * a, 102.5 * a, 162 * a, 104 * a);
            g.bezierCurveTo(168 * a, 100 * a, 170 * a, 92 * a, 169 * a, 85 * a);
            g.bezierCurveTo(166 * a, 86 * a, 166 * a, 86 * a, 163 * a, 87 * a);
            g.bezierCurveTo(165.5 * a, 83 * a, 165.5 * a, 83 * a, 168 * a, 79 * a);
            g.bezierCurveTo(165.5 * a, 76.5 * a, 165.5 * a, 76.5 * a, 163 * a, 74 * a);
            g.bezierCurveTo(155 * a, 82.5 * a, 155 * a, 82.5 * a, 147 * a, 91 * a);
            g.bezierCurveTo(139 * a, 95.5 * a, 139 * a, 95.5 * a, 131 * a, 100 * a);
            g.bezierCurveTo(97.5 * a, 100.5 * a, 97.5 * a, 100.5 * a, 64 * a, 101 * a);
            g.bezierCurveTo(49 * a, 102 * a, 43 * a, 90 * a, 36 * a, 80 * a);
            g.closePath();
            h(g, f[0]);
            g.globalAlpha = 1;
            g.translate(0, -6 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(36 * a, 80 * a);
            g.bezierCurveTo(30 * a, 84 * a, 28 * a, 92 * a, 34 * a, 100 * a);
            g.bezierCurveTo(41.5 * a, 102 * a, 41.5 * a, 102 * a, 49 * a, 104 * a);
            g.bezierCurveTo(43 * a, 105.5 * a, 43 * a, 105.5 * a, 37 * a, 107 * a);
            g.bezierCurveTo(46 * a, 111 * a, 60 * a, 114 * a, 76 * a, 114 * a);
            g.bezierCurveTo(78 * a, 110.5 * a, 78 * a, 110.5 * a, 80 * a, 107 * a);
            g.bezierCurveTo(81 * a, 110.5 * a, 81 * a, 110.5 * a, 82 * a, 114 * a);
            g.bezierCurveTo(94.5 * a, 113.5 * a, 94.5 * a, 113.5 * a, 107 * a, 113 * a);
            g.bezierCurveTo(108.5 * a, 110 * a, 108.5 * a, 110 * a, 110 * a, 107 * a);
            g.bezierCurveTo(111.5 * a, 110.5 * a, 111.5 * a, 110.5 * a, 113 * a, 114 * a);
            g.bezierCurveTo(131 * a, 112.5 * a, 131 * a, 112.5 * a, 149 * a, 111 * a);
            g.bezierCurveTo(148.5 * a, 107.5 * a, 148.5 * a, 107.5 * a, 148 * a, 104 * a);
            g.bezierCurveTo(150.5 * a, 107 * a, 150.5 * a, 107 * a, 153 * a, 110 * a);
            g.bezierCurveTo(155.5 * a, 108.5 * a, 155.5 * a, 108.5 * a, 158 * a, 107 * a);
            g.bezierCurveTo(156.5 * a, 104 * a, 156.5 * a, 104 * a, 155 * a, 101 * a);
            g.bezierCurveTo(158.5 * a, 102.5 * a, 158.5 * a, 102.5 * a, 162 * a, 104 * a);
            g.bezierCurveTo(168 * a, 100 * a, 170 * a, 92 * a, 169 * a, 85 * a);
            g.bezierCurveTo(166 * a, 86 * a, 166 * a, 86 * a, 163 * a, 87 * a);
            g.bezierCurveTo(165.5 * a, 83 * a, 165.5 * a, 83 * a, 168 * a, 79 * a);
            g.bezierCurveTo(165.5 * a, 76.5 * a, 165.5 * a, 76.5 * a, 163 * a, 74 * a);
            g.bezierCurveTo(155 * a, 82.5 * a, 155 * a, 82.5 * a, 147 * a, 91 * a);
            g.bezierCurveTo(139 * a, 95.5 * a, 139 * a, 95.5 * a, 131 * a, 100 * a);
            g.bezierCurveTo(97.5 * a, 100.5 * a, 97.5 * a, 100.5 * a, 64 * a, 101 * a);
            g.bezierCurveTo(49 * a, 102 * a, 43 * a, 90 * a, 36 * a, 80 * a);
            g.closePath();
            h(g, f[1], f[2], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(49 * a, 98 * a);
            g.bezierCurveTo(96.5 * a, 98 * a, 96.5 * a, 98 * a, 144 * a, 98 * a);
            g.bezierCurveTo(136.5 * a, 102 * a, 136.5 * a, 102 * a, 129 * a, 106 * a);
            g.bezierCurveTo(103 * a, 105.5 * a, 103 * a, 105.5 * a, 77 * a, 105 * a);
            g.bezierCurveTo(65 * a, 105 * a, 65 * a, 105 * a, 53 * a, 105 * a);
            g.closePath();
            h(g, f[1]);
            g.globalAlpha = 0.5;
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(54 * a, 98 * a);
            g.bezierCurveTo(97 * a, 98 * a, 97 * a, 98 * a, 140 * a, 98 * a);
            g.bezierCurveTo(134 * a, 101 * a, 134 * a, 101 * a, 128 * a, 104 * a);
            g.bezierCurveTo(92 * a, 104 * a, 92 * a, 104 * a, 56 * a, 104 * a);
            g.closePath();
            h(g, f[0]);
            g.globalAlpha = 1;
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(118 * a, 47 * a);
            g.bezierCurveTo(124.5 * a, 43.5 * a, 124.5 * a, 43.5 * a, 131 * a, 40 * a);
            g.bezierCurveTo(128 * a, 46 * a, 128 * a, 46 * a, 125 * a, 52 * a);
            g.bezierCurveTo(131 * a, 57 * a, 135 * a, 64 * a, 139 * a, 73 * a);
            g.bezierCurveTo(142.5 * a, 69.5 * a, 142.5 * a, 69.5 * a, 146 * a, 66 * a);
            g.bezierCurveTo(143.5 * a, 72.5 * a, 143.5 * a, 72.5 * a, 141 * a, 79 * a);
            g.bezierCurveTo(142 * a, 91 * a, 141 * a, 94 * a, 132 * a, 98 * a);
            g.bezierCurveTo(117 * a, 102 * a, 126 * a, 108 * a, 142 * a, 102 * a);
            g.bezierCurveTo(159 * a, 98 * a, 164 * a, 80 * a, 162 * a, 47 * a);
            g.bezierCurveTo(160 * a, 19 * a, 150 * a, 6 * a, 117 * a, 4 * a);
            g.bezierCurveTo(44 * a, 0 * a, 35 * a, 20 * a, 33 * a, 37 * a);
            g.bezierCurveTo(29 * a, 69 * a, 33 * a, 88 * a, 44 * a, 96 * a);
            g.bezierCurveTo(64 * a, 107 * a, 70 * a, 102 * a, 54 * a, 93 * a);
            g.bezierCurveTo(49 * a, 88 * a, 50 * a, 82 * a, 53 * a, 77 * a);
            g.bezierCurveTo(51.5 * a, 71 * a, 51.5 * a, 71 * a, 50 * a, 65 * a);
            g.bezierCurveTo(53 * a, 68.5 * a, 53 * a, 68.5 * a, 56 * a, 72 * a);
            g.bezierCurveTo(59 * a, 67.5 * a, 59 * a, 67.5 * a, 62 * a, 63 * a);
            g.bezierCurveTo(60.5 * a, 59.5 * a, 60.5 * a, 59.5 * a, 59 * a, 56 * a);
            g.bezierCurveTo(62 * a, 57 * a, 62 * a, 57 * a, 65 * a, 58 * a);
            g.bezierCurveTo(78 * a, 35 * a, 103 * a, 36 * a, 117 * a, 47 * a);
            g.closePath();
            h(g, f[1], f[2], 6 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(62 * a, 21 * a);
            g.bezierCurveTo(63 * a, 34 * a, 64 * a, 37 * a, 66 * a, 40 * a);
            g.bezierCurveTo(54 * a, 49 * a, 53 * a, 51 * a, 48 * a, 58 * a);
            g.bezierCurveTo(44 * a, 51 * a, 42 * a, 43 * a, 40 * a, 36 * a);
            g.bezierCurveTo(47 * a, 28 * a, 52 * a, 25 * a, 61 * a, 21 * a);
            g.closePath();
            h(g, f[4]);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(60 * a, 29 * a);
            g.bezierCurveTo(62 * a, 25 * a, 65 * a, 24 * a, 70 * a, 23 * a);
            h(g, void 0, f[3], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(61 * a, 37 * a);
            g.bezierCurveTo(63 * a, 32 * a, 66 * a, 32 * a, 71 * a, 32 * a);
            h(g, void 0, f[3], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(52 * a, 31 * a);
            g.bezierCurveTo(50 * a, 26 * a, 50 * a, 25 * a, 51 * a, 23 * a);
            h(g, void 0, f[3], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(46 * a, 35 * a);
            g.bezierCurveTo(44 * a, 31 * a, 43 * a, 29 * a, 45 * a, 26 * a);
            h(g, void 0, f[3], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(58 * a, 44 * a);
            g.bezierCurveTo(57 * a, 48 * a, 57 * a, 50 * a, 60 * a, 52 * a);
            h(g, void 0, f[3], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(53 * a, 48 * a);
            g.bezierCurveTo(52 * a, 52 * a, 52 * a, 54 * a, 55 * a, 57 * a);
            h(g, void 0, f[3], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(46 * a, 41 * a);
            g.bezierCurveTo(41 * a, 42 * a, 39 * a, 45 * a, 38 * a, 48 * a);
            h(g, void 0, f[3], 4 * a);
            g.beginPath();
            g.lineCap = "round";
            g.lineJoin = "round";
            g.moveTo(48 * a, 48 * a);
            g.bezierCurveTo(42 * a, 51 * a, 42 * a, 53 * a, 40 * a, 55 * a);
            h(g, void 0, f[3], 4 * a);
            (0 == d) ? (g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(99 * a, 101 * a), g.bezierCurveTo(118.6666259765625 * a, 104.33331298828125 * a, 124.6666259765625 * a, 116.33331298828125 * a, 112.6666259765625 * a, 114.33331298828125 * a), g.bezierCurveTo(104.6666259765625 * a, 112.33331298828125 * a, 100.6666259765625 * a, 105.33331298828125 * a, 99.6666259765625 * a, 101.33331298828125 * a), h(g, void 0, f[5], 6 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(97.6666259765625 * a, 101.33331298828125 * a), g.bezierCurveTo(81.6666259765625 * a, 106.33331298828125 * a, 79.6666259765625 * a, 114.33331298828125 * a, 89.6666259765625 * a, 114.33331298828125 * a), g.bezierCurveTo(95.6666259765625 * a, 111.33331298828125 * a, 95.6666259765625 * a, 109.33331298828125 * a, 98.6666259765625 * a, 102.33331298828125 * a), h(g, void 0, f[5], 6 * a)) : (g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(103 * a, 100.39999389648438 * a), g.bezierCurveTo(120 * a, 106.39999389648438 * a, 118 * a, 107.39999389648438 * a, 120 * a, 111.39999389648438 * a), h(g, void 0, f[5], 6 * a), g.beginPath(), g.lineCap = "round", g.lineJoin = "round", g.moveTo(103 * a, 100.39999389648438 * a), g.bezierCurveTo(90 * a, 103.39999389648438 * a, 89 * a, 106.39999389648438 * a, 87 * a, 112.39999389648438 * a), h(g, void 0, f[5], 6 * a), A(g, 86 * a, 114.39999389648438 * a, 4.5 * a), h(g, f[1], f[5], 6 * a), A(g, 121 * a, 114.39999389648438 * a, 4.5 * a), h(g, f[1], f[5], 6 * a));
            return c;
        };

        function vg(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 253 * a;
            f.height = 192 * a;
            d.globalAlpha = 0.5;
            d.save();
            d.translate(42 * a, 99 * a);
            d.globalAlpha = 0.5;
            B(d, -7 * a, -20 * a, 14 * a, 39 * a, 20 * a);
            d.restore();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.save();
            d.translate(37 * a, 94 * a);
            B(d, -7 * a, -20 * a, 14 * a, 37 * a, 20 * a);
            d.restore();
            h(d, e[2]);
            d.globalAlpha = 0.5;
            d.save();
            d.translate(136 * a, 99 * a);
            d.globalAlpha = 0.5;
            B(d, -84 * a, -67 * a, 168 * a, 134 * a, 20 * a);
            d.restore();
            h(d, e[0], e[0], 13 * a);
            d.globalAlpha = 1;
            d.save();
            d.translate(131 * a, 94 * a);
            B(d, -84 * a, -67 * a, 168 * a, 134 * a, 20 * a);
            d.restore();
            h(d, e[2], e[2], 13 * a);
            d.save();
            d.translate(131 * a, 94 * a);
            B(d, -76 * a, -61 * a, 152 * a, 122 * a, 20 * a);
            d.restore();
            h(d, e[3], e[1], 8 * a);
            d.save();
            d.translate(168.5 * a, 93.5 * a);
            B(d, -30.5 * a, -58.5 * a, 61 * a, 117 * a, 20 * a);
            d.restore();
            h(d, e[3], e[4], 6 * a);
            d.save();
            d.translate(93.5 * a, 95.5 * a);
            B(d, -32 * a, -59.5 * a, 59 * a, 119 * a, 20 * a);
            d.restore();
            h(d, e[3], e[4], 6 * a);
            d.save();
            d.translate(130.5 * a, 94 * a);
            B(d, -36 * a, -67 * a, 73 * a, 134 * a, 20 * a);
            d.restore();
            h(d, e[3], e[2], 8 * a);
            d.globalAlpha = 0.5;
            d.save();
            d.translate(133 * a, 97 * a);
            B(d, -83 * a, -12 * a, 160 * a, 24 * a, 0 * a);
            d.restore();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.save();
            d.translate(133 * a, 92 * a);
            B(d, -83 * a, -12 * a, 160 * a, 24 * a, 0 * a);
            d.restore();
            h(d, e[2]);
            d.globalAlpha = 0.5;
            d.save();
            d.translate(228 * a, 99.5 * a);
            d.globalAlpha = 0.5;
            B(d, -5 * a, -18.5 * a, 10 * a, 37 * a, 20 * a);
            d.restore();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.save();
            d.translate(223 * a, 94.5 * a);
            B(d, -5 * a, -18.5 * a, 10 * a, 37 * a, 20 * a);
            d.restore();
            h(d, e[2]);
            d.save();
            d.translate(133.5 * a, 175.5 * a);
            d.globalAlpha = 0.5;
            B(d, -22.5 * a, -6.5 * a, 45 * a, 13 * a, 20 * a);
            d.restore();
            h(d, e[0]);
            d.globalAlpha = 1;
            d.save();
            d.translate(128.5 * a, 170.5 * a);
            B(d, -22.5 * a, -6.5 * a, 45 * a, 13 * a, 20 * a);
            d.restore();
            h(d, e[2]);
            return f;
        };

        function Xh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 253 * a;
            f.height = 192 * a;
            d.save();
            d.translate(37 * a, 94 * a);
            B(d, -7 * a, -20 * a, 14 * a, 37 * a, 20 * a);
            d.restore();
            h(d, e[0]);
            d.save();
            d.translate(131 * a, 94 * a);
            B(d, -84 * a, -67 * a, 168 * a, 134 * a, 20 * a);
            d.restore();
            h(d, e[0], e[0], 13 * a);
            d.save();
            d.translate(223 * a, 94.5 * a);
            B(d, -5 * a, -18.5 * a, 10 * a, 37 * a, 20 * a);
            d.restore();
            h(d, e[0]);
            d.save();
            d.translate(128.5 * a, 170.5 * a);
            B(d, -22.5 * a, -6.5 * a, 45 * a, 13 * a, 20 * a);
            d.restore();
            h(d, e[0]);
            return f;
        };

        function Ye(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 316 * a;
            e.height = 365 * a;
            d.save();
            d.translate(156.07142639160156 * a, 51.81248474121094 * a);
            d.rotate(0);
            B(d, -21.5 * a, -34 * a, 43 * a, 68 * a, 8 * a);
            d.restore();
            h(d, f[1], f[2], 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(110.57142639160156 * a, 197.09820556640625 * a);
            d.bezierCurveTo(158.07142639160156 * a, 179.09820556640625 * a, 158.07142639160156 * a, 179.09820556640625 * a, 205.57142639160156 * a, 161.09820556640625 * a);
            d.bezierCurveTo(205.57142639160156 * a, 235.45535278320312 * a, 205.57142639160156 * a, 235.45535278320312 * a, 205.57142639160156 * a, 309.8125 * a);
            d.bezierCurveTo(205.57142639160156 * a, 323.8125 * a, 200.57142639160156 * a, 325.8125 * a, 187.57142639160156 * a, 326.8125 * a);
            d.bezierCurveTo(155.57142639160156 * a, 326.3125 * a, 155.57142639160156 * a, 326.3125 * a, 123.57142639160156 * a, 325.8125 * a);
            d.bezierCurveTo(111.57142639160156 * a, 326.8125 * a, 109.57142639160156 * a, 321.8125 * a, 110.57142639160156 * a, 312.8125 * a);
            d.closePath();
            h(d, f[3], f[4], 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(126.57142639160156 * a, 67.38392639160156 * a);
            d.bezierCurveTo(126.57142639160156 * a, 57.38392639160156 * a, 132.57142639160156 * a, 54.38392639160156 * a, 140.57142639160156 * a, 54.38392639160156 * a);
            d.bezierCurveTo(177.57142639160156 * a, 55.38392639160156 * a, 158.07142639160156 * a, 54.38392639160156 * a, 175.57142639160156 * a, 54.38392639160156 * a);
            d.bezierCurveTo(185.57142639160156 * a, 56.38392639160156 * a, 185.57142639160156 * a, 57.38392639160156 * a, 184.57142639160156 * a, 66.38392639160156 * a);
            d.bezierCurveTo(184.57142639160156 * a, 78.38392639160156 * a, 184.57142639160156 * a, 89.38392639160156 * a, 184.57142639160156 * a, 90.38392639160156 * a);
            d.bezierCurveTo(177.57142639160156 * a, 107.38392639160156 * a, 180.57142639160156 * a, 112.38392639160156 * a, 189.57142639160156 * a, 116.38392639160156 * a);
            d.bezierCurveTo(212.57142639160156 * a, 127.38392639160156 * a, 212.57142639160156 * a, 132.38392639160156 * a, 211.57142639160156 * a, 150.38392639160156 * a);
            d.bezierCurveTo(211.57142639160156 * a, 227.59821128845215 * a, 211.57142639160156 * a, 227.59821128845215 * a, 211.57142639160156 * a, 304.81249618530273 * a);
            d.bezierCurveTo(212.57142639160156 * a, 328.81249618530273 * a, 209.57142639160156 * a, 330.81249618530273 * a, 188.57142639160156 * a, 333.81249618530273 * a);
            d.bezierCurveTo(155.07142639160156 * a, 333.31249618530273 * a, 155.07142639160156 * a, 333.31249618530273 * a, 121.57142639160156 * a, 332.81249618530273 * a);
            d.bezierCurveTo(104.57142639160156 * a, 327.81249618530273 * a, 105.57142639160156 * a, 328.81249618530273 * a, 104.57142639160156 * a, 312.81249618530273 * a);
            d.bezierCurveTo(104.57142639160156 * a, 228.16963958740234 * a, 104.57142639160156 * a, 228.16963958740234 * a, 104.57142639160156 * a, 143.52678298950195 * a);
            d.bezierCurveTo(106.57142639160156 * a, 124.52678298950195 * a, 110.57142639160156 * a, 123.52678298950195 * a, 123.57142639160156 * a, 116.52678298950195 * a);
            d.bezierCurveTo(136.57142639160156 * a, 110.52678298950195 * a, 130.57142639160156 * a, 106.52678298950195 * a, 126.57142639160156 * a, 98.52678298950195 * a);
            d.closePath();
            h(d, void 0, f[5], 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(125.57142639160156 * a, 156.66963958740234 * a);
            d.bezierCurveTo(125.57142639160156 * a, 182.66963958740234 * a, 125.57142639160156 * a, 182.66963958740234 * a, 125.57142639160156 * a, 208.66963958740234 * a);
            d.closePath();
            h(d, void 0, f[6], 15 * a);
            return e;
        };

        function Yh(a, e, f) {
            e = document.createElement("canvas");
            var d = e.getContext("2d");
            e.width = 316 * a;
            e.height = 365 * a;
            d.save();
            d.translate(156.07142639160156 * a, 51.81248474121094 * a);
            d.rotate(0);
            B(d, -21.5 * a, -34 * a, 43 * a, 68 * a, 8 * a);
            d.restore();
            h(d, f[1], f[2], 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(126.57142639160156 * a, 67.38392639160156 * a);
            d.bezierCurveTo(126.57142639160156 * a, 57.38392639160156 * a, 132.57142639160156 * a, 54.38392639160156 * a, 140.57142639160156 * a, 54.38392639160156 * a);
            d.bezierCurveTo(177.57142639160156 * a, 55.38392639160156 * a, 158.07142639160156 * a, 54.38392639160156 * a, 175.57142639160156 * a, 54.38392639160156 * a);
            d.bezierCurveTo(185.57142639160156 * a, 56.38392639160156 * a, 185.57142639160156 * a, 57.38392639160156 * a, 184.57142639160156 * a, 66.38392639160156 * a);
            d.bezierCurveTo(184.57142639160156 * a, 78.38392639160156 * a, 184.57142639160156 * a, 89.38392639160156 * a, 184.57142639160156 * a, 90.38392639160156 * a);
            d.bezierCurveTo(177.57142639160156 * a, 107.38392639160156 * a, 180.57142639160156 * a, 112.38392639160156 * a, 189.57142639160156 * a, 116.38392639160156 * a);
            d.bezierCurveTo(212.57142639160156 * a, 127.38392639160156 * a, 212.57142639160156 * a, 132.38392639160156 * a, 211.57142639160156 * a, 150.38392639160156 * a);
            d.bezierCurveTo(211.57142639160156 * a, 227.59821128845215 * a, 211.57142639160156 * a, 227.59821128845215 * a, 211.57142639160156 * a, 304.81249618530273 * a);
            d.bezierCurveTo(212.57142639160156 * a, 328.81249618530273 * a, 209.57142639160156 * a, 330.81249618530273 * a, 188.57142639160156 * a, 333.81249618530273 * a);
            d.bezierCurveTo(155.07142639160156 * a, 333.31249618530273 * a, 155.07142639160156 * a, 333.31249618530273 * a, 121.57142639160156 * a, 332.81249618530273 * a);
            d.bezierCurveTo(104.57142639160156 * a, 327.81249618530273 * a, 105.57142639160156 * a, 328.81249618530273 * a, 104.57142639160156 * a, 312.81249618530273 * a);
            d.bezierCurveTo(104.57142639160156 * a, 228.16963958740234 * a, 104.57142639160156 * a, 228.16963958740234 * a, 104.57142639160156 * a, 143.52678298950195 * a);
            d.bezierCurveTo(106.57142639160156 * a, 124.52678298950195 * a, 110.57142639160156 * a, 123.52678298950195 * a, 123.57142639160156 * a, 116.52678298950195 * a);
            d.bezierCurveTo(136.57142639160156 * a, 110.52678298950195 * a, 130.57142639160156 * a, 106.52678298950195 * a, 126.57142639160156 * a, 98.52678298950195 * a);
            d.closePath();
            h(d, void 0, f[5], 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(125.57142639160156 * a, 156.66963958740234 * a);
            d.bezierCurveTo(125.57142639160156 * a, 182.66963958740234 * a, 125.57142639160156 * a, 182.66963958740234 * a, 125.57142639160156 * a, 208.66963958740234 * a);
            d.closePath();
            h(d, void 0, f[6], 15 * a);
            return e;
        };

        function Zh(a, e) {
            var f = document.createElement("canvas"),
                d = f.getContext("2d");
            f.width = 316 * a;
            f.height = 365 * a;
            d.save();
            d.translate(156.07142639160156 * a, 51.81248474121094 * a);
            d.rotate(0);
            B(d, -21.5 * a, -34 * a, 43 * a, 68 * a, 8 * a);
            d.restore();
            h(d, e[0], e[0], 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(126.57142639160156 * a, 67.38392639160156 * a);
            d.bezierCurveTo(126.57142639160156 * a, 57.38392639160156 * a, 132.57142639160156 * a, 54.38392639160156 * a, 140.57142639160156 * a, 54.38392639160156 * a);
            d.bezierCurveTo(177.57142639160156 * a, 55.38392639160156 * a, 158.07142639160156 * a, 54.38392639160156 * a, 175.57142639160156 * a, 54.38392639160156 * a);
            d.bezierCurveTo(185.57142639160156 * a, 56.38392639160156 * a, 185.57142639160156 * a, 57.38392639160156 * a, 184.57142639160156 * a, 66.38392639160156 * a);
            d.bezierCurveTo(184.57142639160156 * a, 78.38392639160156 * a, 184.57142639160156 * a, 89.38392639160156 * a, 184.57142639160156 * a, 90.38392639160156 * a);
            d.bezierCurveTo(177.57142639160156 * a, 107.38392639160156 * a, 180.57142639160156 * a, 112.38392639160156 * a, 189.57142639160156 * a, 116.38392639160156 * a);
            d.bezierCurveTo(212.57142639160156 * a, 127.38392639160156 * a, 212.57142639160156 * a, 132.38392639160156 * a, 211.57142639160156 * a, 150.38392639160156 * a);
            d.bezierCurveTo(211.57142639160156 * a, 227.59821128845215 * a, 211.57142639160156 * a, 227.59821128845215 * a, 211.57142639160156 * a, 304.81249618530273 * a);
            d.bezierCurveTo(212.57142639160156 * a, 328.81249618530273 * a, 209.57142639160156 * a, 330.81249618530273 * a, 188.57142639160156 * a, 333.81249618530273 * a);
            d.bezierCurveTo(155.07142639160156 * a, 333.31249618530273 * a, 155.07142639160156 * a, 333.31249618530273 * a, 121.57142639160156 * a, 332.81249618530273 * a);
            d.bezierCurveTo(104.57142639160156 * a, 327.81249618530273 * a, 105.57142639160156 * a, 328.81249618530273 * a, 104.57142639160156 * a, 312.81249618530273 * a);
            d.bezierCurveTo(104.57142639160156 * a, 228.16963958740234 * a, 104.57142639160156 * a, 228.16963958740234 * a, 104.57142639160156 * a, 143.52678298950195 * a);
            d.bezierCurveTo(106.57142639160156 * a, 124.52678298950195 * a, 110.57142639160156 * a, 123.52678298950195 * a, 123.57142639160156 * a, 116.52678298950195 * a);
            d.bezierCurveTo(136.57142639160156 * a, 110.52678298950195 * a, 130.57142639160156 * a, 106.52678298950195 * a, 126.57142639160156 * a, 98.52678298950195 * a);
            d.closePath();
            h(d, e[0], e[0], 15 * a);
            d.beginPath();
            d.lineCap = "round";
            d.lineJoin = "round";
            d.moveTo(125.57142639160156 * a, 156.66963958740234 * a);
            d.bezierCurveTo(125.57142639160156 * a, 182.66963958740234 * a, 125.57142639160156 * a, 182.66963958740234 * a, 125.57142639160156 * a, 208.66963958740234 * a);
            d.closePath();
            h(d, e[0], e[0], 15 * a);
            return f;
        };

        function $h(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 400 * a;
            d.height = 400 * a;
            c.translate(0, 15 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(108 * a, 216.5 * a, 108 * a, 216.5 * a, 114 * a, 279 * a);
            c.bezierCurveTo(124 * a, 300 * a, 237 * a, 299 * a, 251 * a, 279 * a);
            c.bezierCurveTo(257 * a, 217 * a, 257 * a, 217 * a, 263 * a, 155 * a);
            c.bezierCurveTo(248 * a, 194 * a, 91 * a, 180 * a, 103 * a, 156 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(106 * a, 53 * a, 255 * a, 53 * a, 263 * a, 154 * a);
            c.bezierCurveTo(248 * a, 38 * a, 99 * a, 69 * a, 103 * a, 154 * a);
            c.closePath();
            h(c, void 0, f[0], 11 * a);
            c.translate(0, -5 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(103 * a, 154 * a);
            c.bezierCurveTo(98 * a, 119 * a, 264 * a, 119 * a, 264 * a, 154 * a);
            c.bezierCurveTo(271 * a, 189 * a, 94 * a, 188 * a, 103 * a, 154 * a);
            c.closePath();
            h(c, f[3], f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(108 * a, 216.5 * a, 108 * a, 216.5 * a, 114 * a, 279 * a);
            c.bezierCurveTo(124 * a, 300 * a, 237 * a, 299 * a, 251 * a, 279 * a);
            c.bezierCurveTo(257 * a, 217 * a, 257 * a, 217 * a, 263 * a, 155 * a);
            c.bezierCurveTo(248 * a, 194 * a, 91 * a, 180 * a, 103 * a, 156 * a);
            c.closePath();
            h(c, f[1], f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(182 * a, 185 * a);
            c.bezierCurveTo(182.5 * a, 237.5 * a, 182.5 * a, 237.5 * a, 183 * a, 290 * a);
            c.closePath();
            h(c, void 0, f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(222 * a, 287 * a);
            c.bezierCurveTo(226 * a, 233.5 * a, 226 * a, 233.5 * a, 230 * a, 180 * a);
            c.closePath();
            h(c, void 0, f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(145 * a, 290 * a);
            c.bezierCurveTo(140.5 * a, 237 * a, 140.5 * a, 237 * a, 136 * a, 184 * a);
            c.closePath();
            h(c, f[1], f[2], 11 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(105 * a, 184 * a);
            c.bezierCurveTo(148 * a, 205 * a, 231 * a, 202 * a, 260 * a, 182 * a);
            c.bezierCurveTo(259 * a, 195.5 * a, 259 * a, 195.5 * a, 258 * a, 209 * a);
            c.bezierCurveTo(217 * a, 218 * a, 163 * a, 225 * a, 108 * a, 207 * a);
            c.closePath();
            h(c, f[4], f[2], 11 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(251 * a, 276 * a);
            c.bezierCurveTo(251.5 * a, 267.5 * a, 251.5 * a, 267.5 * a, 252 * a, 259 * a);
            c.bezierCurveTo(212 * a, 272 * a, 156 * a, 275 * a, 112 * a, 260 * a);
            c.bezierCurveTo(112.5 * a, 269 * a, 112.5 * a, 269 * a, 113 * a, 278 * a);
            c.bezierCurveTo(155 * a, 306 * a, 253 * a, 286 * a, 250 * a, 276 * a);
            c.closePath();
            h(c, f[4], f[2], 11 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(106 * a, 53 * a, 255 * a, 53 * a, 263 * a, 154 * a);
            c.bezierCurveTo(248 * a, 38 * a, 99 * a, 69 * a, 103 * a, 154 * a);
            c.closePath();
            h(c, void 0, f[2], 11 * a);
            return d;
        };

        function ai(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 400 * a;
            d.height = 400 * a;
            c.translate(0, 15 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(108 * a, 216.5 * a, 108 * a, 216.5 * a, 114 * a, 279 * a);
            c.bezierCurveTo(124 * a, 300 * a, 237 * a, 299 * a, 251 * a, 279 * a);
            c.bezierCurveTo(257 * a, 217 * a, 257 * a, 217 * a, 263 * a, 155 * a);
            c.bezierCurveTo(248 * a, 194 * a, 91 * a, 180 * a, 103 * a, 156 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(106 * a, 53 * a, 255 * a, 53 * a, 263 * a, 154 * a);
            c.bezierCurveTo(248 * a, 38 * a, 99 * a, 69 * a, 103 * a, 154 * a);
            c.closePath();
            h(c, void 0, f[0], 11 * a);
            c.translate(0, -5 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(103 * a, 154 * a);
            c.bezierCurveTo(98 * a, 119 * a, 264 * a, 119 * a, 264 * a, 154 * a);
            c.bezierCurveTo(271 * a, 189 * a, 94 * a, 188 * a, 103 * a, 154 * a);
            c.closePath();
            h(c, f[3], f[2], 12 * a);
            c.translate(0, 25 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(103 * a, 154 * a);
            c.bezierCurveTo(98 * a, 119 * a, 264 * a, 119 * a, 264 * a, 154 * a);
            c.bezierCurveTo(271 * a, 189 * a, 94 * a, 188 * a, 103 * a, 154 * a);
            c.closePath();
            h(c, f[5]);
            c.translate(0, -25 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(108 * a, 216.5 * a, 108 * a, 216.5 * a, 114 * a, 279 * a);
            c.bezierCurveTo(124 * a, 300 * a, 237 * a, 299 * a, 251 * a, 279 * a);
            c.bezierCurveTo(257 * a, 217 * a, 257 * a, 217 * a, 263 * a, 155 * a);
            c.bezierCurveTo(248 * a, 194 * a, 91 * a, 180 * a, 103 * a, 156 * a);
            c.closePath();
            h(c, f[1], f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(182 * a, 185 * a);
            c.bezierCurveTo(182.5 * a, 237.5 * a, 182.5 * a, 237.5 * a, 183 * a, 290 * a);
            c.closePath();
            h(c, void 0, f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(222 * a, 287 * a);
            c.bezierCurveTo(226 * a, 233.5 * a, 226 * a, 233.5 * a, 230 * a, 180 * a);
            c.closePath();
            h(c, void 0, f[2], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(145 * a, 290 * a);
            c.bezierCurveTo(140.5 * a, 237 * a, 140.5 * a, 237 * a, 136 * a, 184 * a);
            c.closePath();
            h(c, f[1], f[2], 11 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(105 * a, 184 * a);
            c.bezierCurveTo(148 * a, 205 * a, 231 * a, 202 * a, 260 * a, 182 * a);
            c.bezierCurveTo(259 * a, 195.5 * a, 259 * a, 195.5 * a, 258 * a, 209 * a);
            c.bezierCurveTo(217 * a, 218 * a, 163 * a, 225 * a, 108 * a, 207 * a);
            c.closePath();
            h(c, f[4], f[2], 11 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(251 * a, 276 * a);
            c.bezierCurveTo(251.5 * a, 267.5 * a, 251.5 * a, 267.5 * a, 252 * a, 259 * a);
            c.bezierCurveTo(212 * a, 272 * a, 156 * a, 275 * a, 112 * a, 260 * a);
            c.bezierCurveTo(112.5 * a, 269 * a, 112.5 * a, 269 * a, 113 * a, 278 * a);
            c.bezierCurveTo(155 * a, 306 * a, 253 * a, 286 * a, 250 * a, 276 * a);
            c.closePath();
            h(c, f[4], f[2], 11 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(102 * a, 154 * a);
            c.bezierCurveTo(106 * a, 53 * a, 255 * a, 53 * a, 263 * a, 154 * a);
            c.bezierCurveTo(248 * a, 38 * a, 99 * a, 69 * a, 103 * a, 154 * a);
            c.closePath();
            h(c, void 0, f[2], 11 * a);
            return d;
        };

        function Xa(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 80 * a;
            d.height = 160 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.save();
            B(c, 33 * a, 53 * a, 10 * a, 98 * a, 10 * a);
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(-150 * a, -100 * a);
            c.moveTo(167.5 * a, 171.0625 * a);
            c.bezierCurveTo(188 * a, 171.0625 * a, 188 * a, 171.0625 * a, 208.5 * a, 171.0625 * a);
            c.bezierCurveTo(208.5 * a, 156.0625 * a, 208.5 * a, 156.0625 * a, 208.5 * a, 141.0625 * a);
            c.bezierCurveTo(203.5 * a, 113.0625 * a, 179.5 * a, 96.0625 * a, 167.5 * a, 141.0625 * a);
            c.closePath();
            h(c, f[0]);
            c.restore();
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.save();
            B(c, 33 * a, 53 * a, 10 * a, 98 * a, 10 * a);
            h(c, f[1], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(-150 * a, -100 * a);
            c.moveTo(167.5 * a, 171.0625 * a);
            c.bezierCurveTo(188 * a, 171.0625 * a, 188 * a, 171.0625 * a, 208.5 * a, 171.0625 * a);
            c.bezierCurveTo(208.5 * a, 156.0625 * a, 208.5 * a, 156.0625 * a, 208.5 * a, 141.0625 * a);
            c.bezierCurveTo(203.5 * a, 113.0625 * a, 179.5 * a, 96.0625 * a, 167.5 * a, 141.0625 * a);
            c.closePath();
            h(c, f[3], f[4], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.translate(0 * a, 1 * a);
            c.moveTo(180.5 * a, 169.0625 * a);
            c.bezierCurveTo(180.5 * a, 157.5625 * a, 180.5 * a, 157.5625 * a, 180.5 * a, 146.0625 * a);
            c.bezierCurveTo(181.5 * a, 134.0625 * a, 193.5 * a, 129.0625 * a, 196.5 * a, 146.0625 * a);
            c.bezierCurveTo(196.5 * a, 157.5625 * a, 196.5 * a, 157.5625 * a, 196.5 * a, 169.0625 * a);
            c.closePath();
            h(c, f[5]);
            c.restore();
            return d;
        };

        function Hd(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 109 * a;
            d.height = 110 * a;
            A(c, 54.5 * a, 55 * a, 48.038209575038294 * a);
            h(c, e[0], e[1], 8 * a);
            (0 == f) ? (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(54.928558349609375 * a, 43.72320556640625 * a), c.bezierCurveTo(66.92855834960938 * a, 31.72320556640625 * a, 69.92855834960938 * a, 29.72320556640625 * a, 74.92855834960938 * a, 29.72320556640625 * a), c.bezierCurveTo(86.92855834960938 * a, 28.72320556640625 * a, 91.92855834960938 * a, 42.72320556640625 * a, 89.92855834960938 * a, 52.72320556640625 * a), c.bezierCurveTo(88.92855834960938 * a, 63.72320556640625 * a, 73.92855834960938 * a, 75.72320556640625 * a, 55.928558349609375 * a, 87.72320556640625 * a), c.bezierCurveTo(37.928558349609375 * a, 78.72320556640625 * a, 26.928558349609375 * a, 65.72320556640625 * a, 19.928558349609375 * a, 54.72320556640625 * a), c.bezierCurveTo(13.928558349609375 * a, 42.72320556640625 * a, 21.928558349609375 * a, 28.72320556640625 * a, 35.928558349609375 * a, 29.72320556640625 * a), c.bezierCurveTo(45.928558349609375 * a, 31.72320556640625 * a, 51.928558349609375 * a, 40.72320556640625 * a, 53.928558349609375 * a, 44.72320556640625 * a), c.closePath(), h(c, e[2])) : ((1 == f) ? (c.save(), c.translate(55 * a, 39.48748779296875 * a), B(c, -11.5 * a, -36 * a, 23 * a, 72 * a, 10 * a), c.restore(), h(c, e[2], e[3], 4 * a), A(c, 54.5 * a, 78.48748779296875 * a, 22.02271554554524 * a), h(c, e[4], e[3], 4 * a), c.save(), c.translate(55.5 * a, 57.287506103515625 * a), B(c, -9 * a, -16 * a, 18 * a, 32 * a, 10 * a), c.restore(), h(c, e[4]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(66.5 * a, 25.287506103515625 * a), c.bezierCurveTo(60.5 * a, 25.287506103515625 * a, 63.5 * a, 25.287506103515625 * a, 54.5 * a, 25.287506103515625 * a), c.closePath(), h(c, void 0, e[5], 4 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(66.5 * a, 37.287506103515625 * a), c.bezierCurveTo(60.5 * a, 37.287506103515625 * a, 60.5 * a, 37.287506103515625 * a, 54.5 * a, 37.287506103515625 * a), c.closePath(), h(c, void 0, e[5], 4 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(66.5 * a, 50.287506103515625 * a), c.bezierCurveTo(61 * a, 50.287506103515625 * a, 61 * a, 50.287506103515625 * a, 55.5 * a, 50.287506103515625 * a), c.closePath(), h(c, void 0, e[5], 4 * a)) : ((2 == f) ? (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(45.928558349609375 * a, 55.29463195800781 * a), c.bezierCurveTo(38.928558349609375 * a, 67.29463195800781 * a, 38.928558349609375 * a, 67.29463195800781 * a, 31.928558349609375 * a, 79.29463195800781 * a), c.bezierCurveTo(15.928558349609375 * a, 85.29463195800781 * a, 17.928558349609375 * a, 86.29463195800781 * a, 17.928558349609375 * a, 90.29463195800781 * a), c.bezierCurveTo(19.928558349609375 * a, 94.29463195800781 * a, 21.928558349609375 * a, 94.29463195800781 * a, 27.928558349609375 * a, 92.29463195800781 * a), c.bezierCurveTo(29.928558349609375 * a, 98.29463195800781 * a, 30.928558349609375 * a, 99.29463195800781 * a, 33.928558349609375 * a, 99.29463195800781 * a), c.bezierCurveTo(38.928558349609375 * a, 97.29463195800781 * a, 38.928558349609375 * a, 93.29463195800781 * a, 37.928558349609375 * a, 86.29463195800781 * a), c.bezierCurveTo(45.428558349609375 * a, 73.29463195800781 * a, 51.928558349609375 * a, 64.29463195800781 * a, 52.928558349609375 * a, 60.29463195800781 * a), c.closePath(), h(c, e[2]), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(55.928558349609375 * a, 8.866058349609375 * a), c.bezierCurveTo(35.928558349609375 * a, 35.866058349609375 * a, 37.928558349609375 * a, 48.866058349609375 * a, 46.928558349609375 * a, 62.866058349609375 * a), c.bezierCurveTo(65.92855834960938 * a, 72.86605834960938 * a, 80.92855834960938 * a, 55.866058349609375 * a, 93.92855834960938 * a, 36.866058349609375 * a), c.closePath(), h(c, e[3], e[4], 6 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(93.92855834960938 * a, 36.866058349609375 * a), c.bezierCurveTo(82.92855834960938 * a, 37.866058349609375 * a, 77.92855834960938 * a, 36.866058349609375 * a, 67.92855834960938 * a, 28.866058349609375 * a), c.bezierCurveTo(53.928558349609375 * a, 16.866058349609375 * a, 53.928558349609375 * a, 14.866058349609375 * a, 55.928558349609375 * a, 7.866058349609375 * a), c.bezierCurveTo(65.92855834960938 * a, 4.866058349609375 * a, 71.92855834960938 * a, 7.866058349609375 * a, 83.92855834960938 * a, 13.866058349609375 * a), c.bezierCurveTo(96.92855834960938 * a, 21.866058349609375 * a, 95.92855834960938 * a, 31.866058349609375 * a, 92.92855834960938 * a, 36.866058349609375 * a), c.closePath(), h(c, e[3], e[4], 6 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(68.92855834960938 * a, 16.866058349609375 * a), c.bezierCurveTo(71.92855834960938 * a, 13.866058349609375 * a, 76.92855834960938 * a, 16.866058349609375 * a, 79.92855834960938 * a, 21.866058349609375 * a), c.bezierCurveTo(82.92855834960938 * a, 24.866058349609375 * a, 81.92855834960938 * a, 27.866058349609375 * a, 73.92855834960938 * a, 24.866058349609375 * a), c.bezierCurveTo(67.92855834960938 * a, 20.866058349609375 * a, 66.92855834960938 * a, 19.866058349609375 * a, 67.92855834960938 * a, 17.866058349609375 * a), c.closePath(), h(c, e[2])) : ((3 == f) && (c.scale(0.9, 0.9), c.translate(6 * a, 0), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(54 * a, 0.421875 * a), c.bezierCurveTo(84 * a, 45.421875 * a, 89 * a, 51.421875 * a, 83 * a, 74.421875 * a), c.bezierCurveTo(74 * a, 95.421875 * a, 46 * a, 98.421875 * a, 30 * a, 78.421875 * a), c.bezierCurveTo(22 * a, 59.421875 * a, 27 * a, 49.421875 * a, 34 * a, 36.421875 * a), c.closePath(), h(c, e[2], e[3], 6 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(74 * a, 52.421875 * a), c.bezierCurveTo(77 * a, 73.421875 * a, 69 * a, 81.421875 * a, 58 * a, 81.421875 * a), c.bezierCurveTo(66 * a, 71.421875 * a, 70 * a, 66.421875 * a, 74 * a, 52.421875 * a), c.closePath(), h(c, e[3])))));
            return d;
        };

        function bi(a) {
            var e = document.createElement("canvas"),
                f = e.getContext("2d"),
                d = 250 * a,
                c = 20 * a,
                g = 35 * a,
                k = 65 * a,
                l = 2 * a,
                m = 4 * a;
            e.width = 335 * a;
            e.height = 120 * a;
            f.beginPath();
            f.translate(0, 15 * a);
            B(f, k, 0, d, c, l);
            h(f, null, "#69A148", m);
            f.translate(0, g);
            B(f, k, 0, d, c, l);
            h(f, null, "#AF352A", m);
            f.translate(0, g);
            B(f, k, 0, d, c, l);
            h(f, null, "#669BB1", m);
            return e;
        };

        function wg(a) {
            var e = document.createElement("canvas"),
                f = e.getContext("2d"),
                d = 600 * a,
                c = 22 * a,
                g = 4 * a;
            e.width = d;
            e.height = c;
            B(f, 5 * a, 5 * a, d - (10 * a), c - (10 * a), 4 * a);
            h(f, null, "#BBE8EF", g);
            return e;
        };

        function Ze(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 573 * a;
            d.height = 350 * a;
            (1 == f) && (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(336 * a, 72 * a), c.bezierCurveTo(366 * a, 15 * a, 426 * a, 36 * a, 497 * a, 83 * a), c.bezierCurveTo(522 * a, 85 * a, 522 * a, 85 * a, 547 * a, 87 * a), c.bezierCurveTo(476.5 * a, 205 * a, 476.5 * a, 205 * a, 406 * a, 323 * a), c.bezierCurveTo(297.5 * a, 319 * a, 297.5 * a, 319 * a, 189 * a, 315 * a), c.bezierCurveTo(105.5 * a, 279 * a, 105.5 * a, 279 * a, 22 * a, 243 * a), c.bezierCurveTo(92 * a, 140 * a, 92 * a, 140 * a, 162 * a, 37 * a), c.bezierCurveTo(173 * a, 39 * a, 173 * a, 39 * a, 184 * a, 41 * a), c.bezierCurveTo(185 * a, 38.5 * a, 185 * a, 38.5 * a, 186 * a, 36 * a), c.bezierCurveTo(323 * a, 13 * a, 322 * a, 25 * a, 337 * a, 74 * a), c.closePath(), h(c, e[4], e[4], 35 * a));
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(168 * a, 42 * a);
            c.bezierCurveTo(255 * a, 60 * a, 255 * a, 60 * a, 342 * a, 78 * a);
            c.bezierCurveTo(443 * a, 81.5 * a, 443 * a, 81.5 * a, 544 * a, 85 * a);
            c.bezierCurveTo(475 * a, 204.5 * a, 475 * a, 204.5 * a, 406 * a, 324 * a);
            c.bezierCurveTo(297.5 * a, 320 * a, 297.5 * a, 320 * a, 189 * a, 316 * a);
            c.bezierCurveTo(105.5 * a, 279 * a, 105.5 * a, 279 * a, 22 * a, 242 * a);
            c.closePath();
            h(c, e[0], e[1], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(188 * a, 41 * a);
            c.bezierCurveTo(308 * a, 15 * a, 325 * a, 18 * a, 337 * a, 66 * a);
            c.bezierCurveTo(191 * a, 305 * a, 196 * a, 286 * a, 184 * a, 307 * a);
            c.bezierCurveTo(175 * a, 250 * a, 90 * a, 254 * a, 52 * a, 241 * a);
            c.closePath();
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(336 * a, 71 * a);
            c.bezierCurveTo(375 * a, 8 * a, 429 * a, 50 * a, 518 * a, 92 * a);
            c.bezierCurveTo(455 * a, 199.5 * a, 455 * a, 199.5 * a, 392 * a, 307 * a);
            c.bezierCurveTo(227 * a, 301 * a, 261 * a, 255 * a, 188 * a, 308 * a);
            c.closePath();
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(357 * a, 76 * a);
            c.bezierCurveTo(390 * a, 67 * a, 414 * a, 86 * a, 435 * a, 104 * a);
            c.bezierCurveTo(417 * a, 135 * a, 417 * a, 135 * a, 399 * a, 166 * a);
            c.bezierCurveTo(352 * a, 140 * a, 345 * a, 139 * a, 319 * a, 142 * a);
            c.closePath();
            h(c, e[3], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(309 * a, 168 * a);
            c.bezierCurveTo(345 * a, 163 * a, 372 * a, 180 * a, 412 * a, 203 * a);
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(263 * a, 54 * a);
            c.bezierCurveTo(305 * a, 44 * a, 307 * a, 51 * a, 311 * a, 64 * a);
            c.bezierCurveTo(270.5 * a, 129.5 * a, 270.5 * a, 129.5 * a, 230 * a, 195 * a);
            c.bezierCurveTo(221 * a, 175 * a, 203 * a, 171 * a, 186 * a, 172 * a);
            c.closePath();
            h(c, e[3], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(292 * a, 198 * a);
            c.bezierCurveTo(328 * a, 191 * a, 364 * a, 211 * a, 401 * a, 237 * a);
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(245 * a, 68 * a);
            c.bezierCurveTo(210 * a, 72 * a, 210 * a, 72 * a, 189 * a, 69 * a);
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(222 * a, 96 * a);
            c.bezierCurveTo(196 * a, 97 * a, 193 * a, 97 * a, 177 * a, 92 * a);
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(207 * a, 124 * a);
            c.bezierCurveTo(179 * a, 123 * a, 177 * a, 124 * a, 161 * a, 119 * a);
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(115 * a, 183 * a);
            c.bezierCurveTo(184 * a, 185 * a, 203 * a, 198 * a, 219 * a, 221 * a);
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(98 * a, 213 * a);
            c.bezierCurveTo(161 * a, 214 * a, 193 * a, 227 * a, 201 * a, 249 * a);
            h(c, e[2], e[3], 12 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(399 * a, 257 * a);
            c.bezierCurveTo(287 * a, 215 * a, 280 * a, 215 * a, 263 * a, 222 * a);
            c.bezierCurveTo(253 * a, 238 * a, 247 * a, 245 * a, 243 * a, 254 * a);
            c.bezierCurveTo(267 * a, 236 * a, 292 * a, 263 * a, 377 * a, 284 * a);
            h(c, e[3], e[3], 12 * a);
            return d;
        };

        function $e(a, e, f, d) {
            e = document.createElement("canvas");
            var c = e.getContext("2d");
            e.width = 170 * a;
            e.height = 200 * a;
            c.translate(5 * a, 15 * a);
            (1 == d) && (c.translate(0, -5 * a), A(c, 77.00003051757812 * a, 104.49432373046875 * a, 71.84010022264724 * a), h(c, f[1], f[5], 20 * a), A(c, 77.00003051757812 * a, 104.22160339355469 * a, 61.554853586049575 * a), h(c, f[1], f[5], 20 * a), c.save(), c.translate(77.00003051757812 * a, 31.267044067382812 * a), B(c, -6 * a, -12.5 * a, 12 * a, 25 * a, 10 * a), c.restore(), h(c, f[1], f[5], 20 * a), c.save(), c.translate(77.00003051757812 * a, 13.267044067382812 * a), B(c, -15 * a, -10.5 * a, 30 * a, 21 * a, 10 * a), c.restore(), h(c, f[1], f[5], 20 * a));
            A(c, 77.00003051757812 * a, 104.49432373046875 * a, 71.84010022264724 * a);
            h(c, f[1], f[2], 7 * a);
            A(c, 77.00003051757812 * a, 104.22160339355469 * a, 61.554853586049575 * a);
            h(c, f[1], f[2], 7 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(18.000030517578125 * a, 105.85795593261719 * a);
            c.bezierCurveTo(134.00003051757812 * a, 104.85795593261719 * a, 77.00003051757812 * a, 104.85795593261719 * a, 136.00003051757812 * a, 103.85795593261719 * a);
            c.closePath();
            h(c, f[1], f[2], 8 * a);
            A(c, 77.00003051757812 * a, 104.6761474609375 * a, 32.55764119219941 * a);
            h(c, f[1], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(78.00003051757812 * a, 112.03977966308594 * a);
            c.bezierCurveTo(78.00003051757812 * a, 87.03977966308594 * a, 78.00003051757812 * a, 87.03977966308594 * a, 78.00003051757812 * a, 62.03977966308594 * a);
            c.closePath();
            h(c, f[3], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(78.00003051757812 * a, 48.03977966308594 * a);
            c.bezierCurveTo(82.00003051757812 * a, 55.53977966308594 * a, 82.00003051757812 * a, 55.53977966308594 * a, 86.00003051757812 * a, 63.03977966308594 * a);
            c.bezierCurveTo(78.00003051757812 * a, 63.03977966308594 * a, 78.00003051757812 * a, 63.03977966308594 * a, 70.00003051757812 * a, 63.03977966308594 * a);
            c.closePath();
            h(c, f[3], f[2], 4 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80.00003051757812 * a, 111.6761474609375 * a);
            c.bezierCurveTo(95.00003051757812 * a, 97.1761474609375 * a, 95.00003051757812 * a, 97.1761474609375 * a, 110.00003051757812 * a, 82.6761474609375 * a);
            c.closePath();
            h(c, f[3], f[2], 8 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(107.00003051757812 * a, 76.6761474609375 * a);
            c.bezierCurveTo(111.50003051757812 * a, 82.6761474609375 * a, 111.50003051757812 * a, 82.6761474609375 * a, 116.00003051757812 * a, 88.6761474609375 * a);
            c.bezierCurveTo(118.50003051757812 * a, 81.6761474609375 * a, 118.50003051757812 * a, 81.6761474609375 * a, 121.00003051757812 * a, 74.6761474609375 * a);
            c.closePath();
            h(c, f[3], f[2], 4 * a);
            A(c, 77.00003051757812 * a, 105.03977966308594 * a, 15.556349186104045 * a);
            h(c, f[3], f[2], 4 * a);
            c.save();
            c.translate(77.00003051757812 * a, 31.267044067382812 * a);
            c.rotate(0);
            B(c, -6 * a, -12.5 * a, 12 * a, 25 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 7 * a);
            c.save();
            c.translate(77.00003051757812 * a, 13.267044067382812 * a);
            c.rotate(0);
            B(c, -15 * a, -10.5 * a, 30 * a, 21 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 7 * a);
            return e;
        };

        function af(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 81 * a;
            d.height = 77 * a;
            c.translate(0, 10 * a);
            c.scale(0.2, 0.2);
            c.translate(0, -30 * a);
            (1 == f) && (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(36.5 * a, 278.0625 * a), c.bezierCurveTo(67.5 * a, 316.0625 * a, 134.5 * a, 334.0625 * a, 199.5 * a, 319.0625 * a), c.bezierCurveTo(254.5 * a, 304.0625 * a, 346.5 * a, 270.0625 * a, 348.5 * a, 237.0625 * a), c.bezierCurveTo(359.5 * a, 206.0625 * a, 318.5 * a, 129.0625 * a, 262.5 * a, 122.0625 * a), c.bezierCurveTo(213.5 * a, 115.0625 * a, 166.5 * a, 133.0625 * a, 104.5 * a, 166.0625 * a), c.bezierCurveTo(54.5 * a, 194.0625 * a, 23.5 * a, 241.0625 * a, 36.5 * a, 277.0625 * a), c.closePath(), h(c, e[0], e[3], 50 * a));
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(36.5 * a, 278.0625 * a);
            c.bezierCurveTo(67.5 * a, 316.0625 * a, 134.5 * a, 334.0625 * a, 199.5 * a, 319.0625 * a);
            c.bezierCurveTo(254.5 * a, 304.0625 * a, 346.5 * a, 270.0625 * a, 348.5 * a, 237.0625 * a);
            c.bezierCurveTo(359.5 * a, 206.0625 * a, 318.5 * a, 129.0625 * a, 262.5 * a, 122.0625 * a);
            c.bezierCurveTo(213.5 * a, 115.0625 * a, 166.5 * a, 133.0625 * a, 104.5 * a, 166.0625 * a);
            c.bezierCurveTo(54.5 * a, 194.0625 * a, 23.5 * a, 241.0625 * a, 36.5 * a, 277.0625 * a);
            c.closePath();
            h(c, e[0], e[1], 19 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(214.5 * a, 124.0625 * a);
            c.bezierCurveTo(242.5 * a, 125.0625 * a, 272.5 * a, 159.0625 * a, 283.5 * a, 184.0625 * a);
            c.bezierCurveTo(277.5 * a, 161.0625 * a, 233.5 * a, 128.0625 * a, 219.5 * a, 122.0625 * a);
            c.closePath();
            h(c, e[0], e[1], 19 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(157.5 * a, 145.0625 * a);
            c.bezierCurveTo(176.5 * a, 148.0625 * a, 205.5 * a, 176.0625 * a, 212.5 * a, 197.0625 * a);
            c.bezierCurveTo(205.5 * a, 178.0625 * a, 177.5 * a, 152.0625 * a, 156.5 * a, 142.0625 * a);
            c.closePath();
            h(c, e[0], e[1], 19 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(103.5 * a, 169.0625 * a);
            c.bezierCurveTo(160.5 * a, 166.0625 * a, 228.5 * a, 312.0625 * a, 162.5 * a, 323.0625 * a);
            c.bezierCurveTo(128.5 * a, 330.0625 * a, 45.5 * a, 312.0625 * a, 34.5 * a, 268.0625 * a);
            c.bezierCurveTo(30.5 * a, 238.0625 * a, 44.5 * a, 222.0625 * a, 52.5 * a, 211.0625 * a);
            c.bezierCurveTo(82.5 * a, 174.0625 * a, 104.5 * a, 166.0625 * a, 119.5 * a, 172.0625 * a);
            c.closePath();
            h(c, e[2], e[1], 19 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(194.5 * a, 313.0625 * a);
            c.bezierCurveTo(222.5 * a, 306.0625 * a, 319.5 * a, 271.0625 * a, 337.5 * a, 241.0625 * a);
            c.bezierCurveTo(274.5 * a, 270.0625 * a, 216.5 * a, 288.0625 * a, 199.5 * a, 287.0625 * a);
            c.bezierCurveTo(198.5 * a, 302.0625 * a, 195.5 * a, 311.0625 * a, 193.5 * a, 312.0625 * a);
            c.closePath();
            h(c, e[1]);
            c.scale(3, 3);
            c.translate(15, 10 * a);
            (1 == f) && (c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(4 * a, 32 * a), c.bezierCurveTo(19 * a, 25 * a, 19 * a, 25 * a, 34 * a, 18 * a), c.bezierCurveTo(41.5 * a, 23.5 * a, 41.5 * a, 23.5 * a, 49 * a, 29 * a), c.bezierCurveTo(59.5 * a, 20 * a, 59.5 * a, 20 * a, 70 * a, 11 * a), h(c, void 0, e[3], 28 * a), c.beginPath(), c.lineCap = "round", c.lineJoin = "round", c.moveTo(56 * a, 6 * a), c.bezierCurveTo(63.5 * a, 13.5 * a, 63.5 * a, 13.5 * a, 71 * a, 21 * a), c.bezierCurveTo(74.5 * a, 11.5 * a, 74.5 * a, 11.5 * a, 78 * a, 2 * a), c.closePath(), h(c, e[3], e[3], 28 * a));
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(4 * a, 32 * a);
            c.bezierCurveTo(19 * a, 25 * a, 19 * a, 25 * a, 34 * a, 18 * a);
            c.bezierCurveTo(41.5 * a, 23.5 * a, 41.5 * a, 23.5 * a, 49 * a, 29 * a);
            c.bezierCurveTo(59.5 * a, 20 * a, 59.5 * a, 20 * a, 70 * a, 11 * a);
            h(c, void 0, e[1], 17 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56 * a, 6 * a);
            c.bezierCurveTo(63.5 * a, 13.5 * a, 63.5 * a, 13.5 * a, 71 * a, 21 * a);
            c.bezierCurveTo(74.5 * a, 11.5 * a, 74.5 * a, 11.5 * a, 78 * a, 2 * a);
            c.closePath();
            h(c, e[1], e[1], 17 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(4 * a, 32 * a);
            c.bezierCurveTo(19 * a, 25 * a, 19 * a, 25 * a, 34 * a, 18 * a);
            c.bezierCurveTo(41.5 * a, 23.5 * a, 41.5 * a, 23.5 * a, 49 * a, 29 * a);
            c.bezierCurveTo(59.5 * a, 20 * a, 59.5 * a, 20 * a, 70 * a, 11 * a);
            h(c, void 0, e[2], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(56 * a, 6 * a);
            c.bezierCurveTo(63.5 * a, 13.5 * a, 63.5 * a, 13.5 * a, 71 * a, 21 * a);
            c.bezierCurveTo(74.5 * a, 11.5 * a, 74.5 * a, 11.5 * a, 78 * a, 2 * a);
            c.closePath();
            h(c, e[2], e[2], 10 * a);
            return d;
        };

        function bf(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 144 * a;
            d.height = 280 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(5 * a, 5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(62 * a, 103.79999542236328 * a);
            c.bezierCurveTo(62.5 * a, 148.79999542236328 * a, 62.5 * a, 148.79999542236328 * a, 63 * a, 193.79999542236328 * a);
            c.bezierCurveTo(63 * a, 219.79999542236328 * a, 47 * a, 217.79999542236328 * a, 51 * a, 230.79999542236328 * a);
            c.bezierCurveTo(62 * a, 255.79999542236328 * a, 74 * a, 260.7999954223633 * a, 72 * a, 248.79999542236328 * a);
            c.bezierCurveTo(65 * a, 226.79999542236328 * a, 71 * a, 229.79999542236328 * a, 76 * a, 225.79999542236328 * a);
            c.bezierCurveTo(90 * a, 224.79999542236328 * a, 89 * a, 232.79999542236328 * a, 90 * a, 243.79999542236328 * a);
            c.bezierCurveTo(95 * a, 253.79999542236328 * a, 99 * a, 249.79999542236328 * a, 100 * a, 229.79999542236328 * a);
            c.bezierCurveTo(102 * a, 213.79999542236328 * a, 98 * a, 214.79999542236328 * a, 90 * a, 205.79999542236328 * a);
            c.bezierCurveTo(82 * a, 201.79999542236328 * a, 82 * a, 185.79999542236328 * a, 82 * a, 114.79999542236328 * a);
            c.bezierCurveTo(80 * a, 73 * a, 82 * a, 68 * a, 93 * a, 53 * a);
            c.bezierCurveTo(98 * a, 37 * a, 65 * a, 14 * a, 74 * a, 33 * a);
            c.bezierCurveTo(82 * a, 56 * a, 77 * a, 52 * a, 69 * a, 54 * a);
            c.bezierCurveTo(55 * a, 57 * a, 57 * a, 53 * a, 54 * a, 39 * a);
            c.bezierCurveTo(46 * a, 20 * a, 37 * a, 61 * a, 50 * a, 68 * a);
            c.bezierCurveTo(65 * a, 81 * a, 60 * a, 89 * a, 62 * a, 102 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(-5 * a, -5 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(62 * a, 103.79999542236328 * a);
            c.bezierCurveTo(62.5 * a, 148.79999542236328 * a, 62.5 * a, 148.79999542236328 * a, 63 * a, 193.79999542236328 * a);
            c.bezierCurveTo(63 * a, 219.79999542236328 * a, 47 * a, 217.79999542236328 * a, 51 * a, 230.79999542236328 * a);
            c.bezierCurveTo(62 * a, 255.79999542236328 * a, 74 * a, 260.7999954223633 * a, 72 * a, 248.79999542236328 * a);
            c.bezierCurveTo(65 * a, 226.79999542236328 * a, 71 * a, 229.79999542236328 * a, 76 * a, 225.79999542236328 * a);
            c.bezierCurveTo(90 * a, 224.79999542236328 * a, 89 * a, 232.79999542236328 * a, 90 * a, 243.79999542236328 * a);
            c.bezierCurveTo(95 * a, 253.79999542236328 * a, 99 * a, 249.79999542236328 * a, 100 * a, 229.79999542236328 * a);
            c.bezierCurveTo(102 * a, 213.79999542236328 * a, 98 * a, 214.79999542236328 * a, 90 * a, 205.79999542236328 * a);
            c.bezierCurveTo(82 * a, 201.79999542236328 * a, 82 * a, 185.79999542236328 * a, 82 * a, 114.79999542236328 * a);
            c.bezierCurveTo(80 * a, 73 * a, 82 * a, 68 * a, 93 * a, 53 * a);
            c.bezierCurveTo(98 * a, 37 * a, 65 * a, 14 * a, 74 * a, 33 * a);
            c.bezierCurveTo(82 * a, 56 * a, 77 * a, 52 * a, 69 * a, 54 * a);
            c.bezierCurveTo(55 * a, 57 * a, 57 * a, 53 * a, 54 * a, 39 * a);
            c.bezierCurveTo(46 * a, 20 * a, 37 * a, 61 * a, 50 * a, 68 * a);
            c.bezierCurveTo(65 * a, 81 * a, 60 * a, 89 * a, 62 * a, 102 * a);
            c.closePath();
            h(c, f[1], f[2], 6 * a);
            return d;
        };

        function cf(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 160 * a;
            d.height = 161 * a;
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.save();
            c.translate(80.5 * a, 78 * a);
            B(c, -71.5 * a, -71 * a, 143 * a, 143 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.save();
            c.translate(80.5 * a, 78 * a);
            B(c, -71.5 * a, -71 * a, 143 * a, 143 * a, 10 * a);
            c.restore();
            h(c, f[1], f[2], 6 * a);
            c.save();
            c.translate(80 * a, 78.5 * a);
            B(c, -17 * a, -72.5 * a, 34 * a, 145 * a, 10 * a);
            c.restore();
            h(c, f[3], f[4], 6 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.save();
            c.translate(80 * a, 79.5 * a);
            B(c, -73 * a, -16.5 * a, 145 * a, 34 * a, 10 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.save();
            c.translate(80 * a, 79.5 * a);
            B(c, -73 * a, -16.5 * a, 145 * a, 34 * a, 10 * a);
            c.restore();
            h(c, f[3], f[4], 6 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(79 * a, 71 * a);
            c.bezierCurveTo(90 * a, 42 * a, 98 * a, 36 * a, 109 * a, 43 * a);
            c.bezierCurveTo(119 * a, 47 * a, 128 * a, 62 * a, 107 * a, 72 * a);
            c.bezierCurveTo(96 * a, 78.5 * a, 96 * a, 78.5 * a, 85 * a, 85 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(84 * a, 78 * a);
            c.bezierCurveTo(113 * a, 82 * a, 123 * a, 97 * a, 115 * a, 108 * a);
            c.bezierCurveTo(110 * a, 119 * a, 98 * a, 124 * a, 87 * a, 107 * a);
            c.bezierCurveTo(81.5 * a, 94.5 * a, 81.5 * a, 94.5 * a, 76 * a, 82 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80 * a, 73 * a);
            c.bezierCurveTo(64 * a, 37 * a, 55 * a, 34 * a, 45 * a, 42 * a);
            c.bezierCurveTo(30 * a, 54 * a, 36 * a, 65 * a, 51 * a, 72 * a);
            c.bezierCurveTo(62.5 * a, 77 * a, 62.5 * a, 77 * a, 74 * a, 82 * a);
            c.closePath();
            h(c, f[0]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(82 * a, 83 * a);
            c.bezierCurveTo(73 * a, 107 * a, 60 * a, 123 * a, 47 * a, 113 * a);
            c.bezierCurveTo(33 * a, 105 * a, 33 * a, 92 * a, 52 * a, 85 * a);
            c.bezierCurveTo(74 * a, 73 * a, 77 * a, 76 * a, 76 * a, 75 * a);
            c.closePath();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(79 * a, 71 * a);
            c.bezierCurveTo(90 * a, 42 * a, 98 * a, 36 * a, 109 * a, 43 * a);
            c.bezierCurveTo(119 * a, 47 * a, 128 * a, 62 * a, 107 * a, 72 * a);
            c.bezierCurveTo(96 * a, 78.5 * a, 96 * a, 78.5 * a, 85 * a, 85 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(84 * a, 78 * a);
            c.bezierCurveTo(113 * a, 82 * a, 123 * a, 97 * a, 115 * a, 108 * a);
            c.bezierCurveTo(110 * a, 119 * a, 98 * a, 124 * a, 87 * a, 107 * a);
            c.bezierCurveTo(81.5 * a, 94.5 * a, 81.5 * a, 94.5 * a, 76 * a, 82 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(80 * a, 73 * a);
            c.bezierCurveTo(64 * a, 37 * a, 55 * a, 34 * a, 45 * a, 42 * a);
            c.bezierCurveTo(30 * a, 54 * a, 36 * a, 65 * a, 51 * a, 72 * a);
            c.bezierCurveTo(62.5 * a, 77 * a, 62.5 * a, 77 * a, 74 * a, 82 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(82 * a, 83 * a);
            c.bezierCurveTo(73 * a, 107 * a, 60 * a, 123 * a, 47 * a, 113 * a);
            c.bezierCurveTo(33 * a, 105 * a, 33 * a, 92 * a, 52 * a, 85 * a);
            c.bezierCurveTo(74 * a, 73 * a, 77 * a, 76 * a, 76 * a, 75 * a);
            c.closePath();
            h(c, f[3], f[4], 6 * a);
            c.globalAlpha = e ? 0.5 : 1;
            c.translate(0, 10 * a);
            c.save();
            c.translate(78.5 * a, 78 * a);
            B(c, -13.5 * a, -14 * a, 27 * a, 27 * a, 6 * a);
            c.restore();
            h(c, f[0]);
            c.globalAlpha = 1;
            c.translate(0, -10 * a);
            c.save();
            c.translate(78.5 * a, 78 * a);
            B(c, -13.5 * a, -14 * a, 27 * a, 27 * a, 6 * a);
            c.restore();
            h(c, f[3], f[4], 6 * a);
            return d;
        };

        function Pb(a, e, f) {
            var d = document.createElement("canvas"),
                c = d.getContext("2d");
            d.width = 372 * a;
            d.height = 358 * a;
            c.translate(0 * a, 10 * a);
            c.globalAlpha = e ? 0.2 : 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(247.00003051757812 * a, 115.76704406738281 * a);
            c.bezierCurveTo(305.0000305175781 * a, 124.76704406738281 * a, 335.0000305175781 * a, 112.76704406738281 * a, 359.0000305175781 * a, 93.76704406738281 * a);
            c.bezierCurveTo(359.5000305175781 * a, 113.26704406738281 * a, 359.5000305175781 * a, 113.26704406738281 * a, 360.0000305175781 * a, 132.7670440673828 * a);
            c.bezierCurveTo(339.0000305175781 * a, 177.7670440673828 * a, 281.0000305175781 * a, 178.7670440673828 * a, 243.00003051757812 * a, 183.7670440673828 * a);
            c.bezierCurveTo(214.50003051757812 * a, 214.2670440673828 * a, 214.50003051757812 * a, 214.2670440673828 * a, 186.00003051757812 * a, 244.7670440673828 * a);
            c.bezierCurveTo(155.00003051757812 * a, 214.2670440673828 * a, 155.00003051757812 * a, 214.2670440673828 * a, 124.00003051757812 * a, 183.7670440673828 * a);
            c.bezierCurveTo(51.000030517578125 * a, 180.7670440673828 * a, 21.000030517578125 * a, 161.7670440673828 * a, 9.000030517578125 * a, 129.7670440673828 * a);
            c.bezierCurveTo(8.500030517578125 * a, 110.76704406738281 * a, 8.500030517578125 * a, 110.76704406738281 * a, 8.000030517578125 * a, 91.76704406738281 * a);
            c.bezierCurveTo(31.000030517578125 * a, 112.76704406738281 * a, 87.00003051757812 * a, 119.76704406738281 * a, 116.00003051757812 * a, 117.76704406738281 * a);
            c.bezierCurveTo(175.00003051757812 * a, 18.767044067382812 * a, 170.00003051757812 * a, 23.767044067382812 * a, 181.00003051757812 * a, 14.767044067382812 * a);
            c.bezierCurveTo(199.00003051757812 * a, 34.76704406738281 * a, 203.00003051757812 * a, 54.76704406738281 * a, 247.00003051757812 * a, 115.76704406738281 * a);
            c.closePath();
            h(c, f[0], f[0], 10 * a);
            c.translate(0 * a, -10 * a);
            c.globalAlpha = 1;
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(107.00003051757812 * a, 54.13069152832031 * a);
            c.bezierCurveTo(106.50003051757812 * a, 38.63069152832031 * a, 106.50003051757812 * a, 38.63069152832031 * a, 106.00003051757812 * a, 23.130691528320312 * a);
            c.bezierCurveTo(121.50003051757812 * a, 38.13069152832031 * a, 121.50003051757812 * a, 38.13069152832031 * a, 137.00003051757812 * a, 53.13069152832031 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(233.00003051757812 * a, 53.6761474609375 * a);
            c.bezierCurveTo(247.00003051757812 * a, 37.1761474609375 * a, 247.00003051757812 * a, 37.1761474609375 * a, 261.0000305175781 * a, 20.6761474609375 * a);
            c.bezierCurveTo(261.0000305175781 * a, 36.1761474609375 * a, 261.0000305175781 * a, 36.1761474609375 * a, 261.0000305175781 * a, 51.6761474609375 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(293.0000305175781 * a, 54.403411865234375 * a);
            c.bezierCurveTo(300.0000305175781 * a, 49.903411865234375 * a, 300.0000305175781 * a, 49.903411865234375 * a, 307.0000305175781 * a, 45.403411865234375 * a);
            c.bezierCurveTo(307.0000305175781 * a, 49.903411865234375 * a, 307.0000305175781 * a, 49.903411865234375 * a, 307.0000305175781 * a, 54.403411865234375 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(77.00003051757812 * a, 54.403411865234375 * a);
            c.bezierCurveTo(70.00003051757812 * a, 50.403411865234375 * a, 70.00003051757812 * a, 50.403411865234375 * a, 63.000030517578125 * a, 46.403411865234375 * a);
            c.bezierCurveTo(62.500030517578125 * a, 50.903411865234375 * a, 62.500030517578125 * a, 50.903411865234375 * a, 62.000030517578125 * a, 55.403411865234375 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(58.000030517578125 * a, 122.3125 * a);
            c.bezierCurveTo(59.500030517578125 * a, 97.3125 * a, 59.500030517578125 * a, 97.3125 * a, 61.000030517578125 * a, 72.3125 * a);
            c.bezierCurveTo(91.00003051757812 * a, 89.3125 * a, 91.00003051757812 * a, 89.3125 * a, 121.00003051757812 * a, 106.3125 * a);
            c.closePath();
            h(c, f[1], f[1], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(310.0000305175781 * a, 127.3125 * a);
            c.bezierCurveTo(308.0000305175781 * a, 98.3125 * a, 308.0000305175781 * a, 98.3125 * a, 306.0000305175781 * a, 69.3125 * a);
            c.bezierCurveTo(274.5000305175781 * a, 88.8125 * a, 274.5000305175781 * a, 88.8125 * a, 243.00003051757812 * a, 108.3125 * a);
            c.closePath();
            h(c, f[1], f[1], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(226.00003051757812 * a, 87.85795593261719 * a);
            c.bezierCurveTo(243.50003051757812 * a, 66.85795593261719 * a, 243.50003051757812 * a, 66.85795593261719 * a, 261.0000305175781 * a, 45.85795593261719 * a);
            c.bezierCurveTo(265.0000305175781 * a, 83.85795593261719 * a, 265.0000305175781 * a, 83.85795593261719 * a, 269.0000305175781 * a, 121.85795593261719 * a);
            c.bezierCurveTo(235.00003051757812 * a, 122.85795593261719 * a, 233.00003051757812 * a, 107.85795593261719 * a, 228.00003051757812 * a, 90.85795593261719 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(105.00003051757812 * a, 128.8579559326172 * a);
            c.bezierCurveTo(104.50003051757812 * a, 87.85795593261719 * a, 104.50003051757812 * a, 87.85795593261719 * a, 104.00003051757812 * a, 46.85795593261719 * a);
            c.bezierCurveTo(126.50003051757812 * a, 69.35795593261719 * a, 126.50003051757812 * a, 69.35795593261719 * a, 149.00003051757812 * a, 91.85795593261719 * a);
            c.bezierCurveTo(130.00003051757812 * a, 123.85795593261719 * a, 123.00003051757812 * a, 132.8579559326172 * a, 107.00003051757812 * a, 130.8579559326172 * a);
            c.closePath();
            h(c, f[1], f[1], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(59.000030517578125 * a, 121.85795593261719 * a);
            c.bezierCurveTo(59.500030517578125 * a, 99.35795593261719 * a, 59.500030517578125 * a, 99.35795593261719 * a, 60.000030517578125 * a, 76.85795593261719 * a);
            c.bezierCurveTo(84.00003051757812 * a, 92.35795593261719 * a, 84.00003051757812 * a, 92.35795593261719 * a, 108.00003051757812 * a, 107.85795593261719 * a);
            c.bezierCurveTo(106.00003051757812 * a, 148.8579559326172 * a, 86.00003051757812 * a, 148.8579559326172 * a, 62.000030517578125 * a, 123.85795593261719 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(105.00003051757812 * a, 132.8579559326172 * a);
            c.bezierCurveTo(104.50003051757812 * a, 93.35795593261719 * a, 104.50003051757812 * a, 93.35795593261719 * a, 104.00003051757812 * a, 53.85795593261719 * a);
            c.bezierCurveTo(126.50003051757812 * a, 75.85795593261719 * a, 126.50003051757812 * a, 75.85795593261719 * a, 149.00003051757812 * a, 97.85795593261719 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(311.0000305175781 * a, 126.85795593261719 * a);
            c.bezierCurveTo(309.0000305175781 * a, 101.35795593261719 * a, 309.0000305175781 * a, 101.35795593261719 * a, 307.0000305175781 * a, 75.85795593261719 * a);
            c.bezierCurveTo(271.0000305175781 * a, 96.85795593261719 * a, 271.0000305175781 * a, 96.85795593261719 * a, 235.00003051757812 * a, 117.85795593261719 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(228.00003051757812 * a, 96.85795593261719 * a);
            c.bezierCurveTo(244.50003051757812 * a, 74.85795593261719 * a, 244.50003051757812 * a, 74.85795593261719 * a, 261.0000305175781 * a, 52.85795593261719 * a);
            c.bezierCurveTo(265.5000305175781 * a, 89.85795593261719 * a, 265.5000305175781 * a, 89.85795593261719 * a, 270.0000305175781 * a, 126.85795593261719 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(12.000030517578125 * a, 86.13069152832031 * a);
            c.bezierCurveTo(36.000030517578125 * a, 113.13069152832031 * a, 84.00003051757812 * a, 111.13069152832031 * a, 116.00003051757812 * a, 113.13069152832031 * a);
            c.bezierCurveTo(164.00003051757812 * a, 23.130691528320312 * a, 172.00003051757812 * a, 18.130691528320312 * a, 181.00003051757812 * a, 9.130691528320312 * a);
            c.bezierCurveTo(199.00003051757812 * a, 29.130691528320312 * a, 221.00003051757812 * a, 78.13069152832031 * a, 247.00003051757812 * a, 112.13069152832031 * a);
            c.bezierCurveTo(301.0000305175781 * a, 122.13069152832031 * a, 338.0000305175781 * a, 111.13069152832031 * a, 359.0000305175781 * a, 94.13069152832031 * a);
            c.bezierCurveTo(359.0000305175781 * a, 113.13069152832031 * a, 358.5000305175781 * a, 105.13069152832031 * a, 358.0000305175781 * a, 116.13069152832031 * a);
            c.bezierCurveTo(270.5000305175781 * a, 130.1306915283203 * a, 270.5000305175781 * a, 130.1306915283203 * a, 183.00003051757812 * a, 144.1306915283203 * a);
            c.bezierCurveTo(98.00003051757812 * a, 128.6306915283203 * a, 98.00003051757812 * a, 128.6306915283203 * a, 13.000030517578125 * a, 113.13069152832031 * a);
            c.closePath();
            h(c, f[1], f[1], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(247.00003051757812 * a, 115.76704406738281 * a);
            c.bezierCurveTo(305.0000305175781 * a, 124.76704406738281 * a, 335.0000305175781 * a, 112.76704406738281 * a, 359.0000305175781 * a, 93.76704406738281 * a);
            c.bezierCurveTo(359.5000305175781 * a, 113.26704406738281 * a, 359.5000305175781 * a, 113.26704406738281 * a, 360.0000305175781 * a, 132.7670440673828 * a);
            c.bezierCurveTo(339.0000305175781 * a, 177.7670440673828 * a, 281.0000305175781 * a, 178.7670440673828 * a, 243.00003051757812 * a, 183.7670440673828 * a);
            c.bezierCurveTo(214.50003051757812 * a, 214.2670440673828 * a, 214.50003051757812 * a, 214.2670440673828 * a, 186.00003051757812 * a, 244.7670440673828 * a);
            c.bezierCurveTo(155.00003051757812 * a, 214.2670440673828 * a, 155.00003051757812 * a, 214.2670440673828 * a, 124.00003051757812 * a, 183.7670440673828 * a);
            c.bezierCurveTo(51.000030517578125 * a, 180.7670440673828 * a, 21.000030517578125 * a, 161.7670440673828 * a, 9.000030517578125 * a, 129.7670440673828 * a);
            c.bezierCurveTo(8.500030517578125 * a, 110.76704406738281 * a, 8.500030517578125 * a, 110.76704406738281 * a, 8.000030517578125 * a, 91.76704406738281 * a);
            c.bezierCurveTo(31.000030517578125 * a, 112.76704406738281 * a, 87.00003051757812 * a, 119.76704406738281 * a, 116.00003051757812 * a, 117.76704406738281 * a);
            c.bezierCurveTo(175.00003051757812 * a, 18.767044067382812 * a, 170.00003051757812 * a, 23.767044067382812 * a, 181.00003051757812 * a, 14.767044067382812 * a);
            c.bezierCurveTo(199.00003051757812 * a, 34.76704406738281 * a, 203.00003051757812 * a, 54.76704406738281 * a, 247.00003051757812 * a, 115.76704406738281 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(27.000030517578125 * a, 94.76704406738281 * a);
            c.bezierCurveTo(11.000030517578125 * a, 81.76704406738281 * a, 31.000030517578125 * a, 72.76704406738281 * a, 44.000030517578125 * a, 59.76704406738281 * a);
            c.bezierCurveTo(9.000030517578125 * a, 65.76704406738281 * a, 4.000030517578125 * a, 78.76704406738281 * a, 9.000030517578125 * a, 89.76704406738281 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(352.0000305175781 * a, 100.76705932617188 * a);
            c.bezierCurveTo(362.0000305175781 * a, 92.76705932617188 * a, 352.0000305175781 * a, 84.76705932617188 * a, 340.0000305175781 * a, 68.76705932617188 * a);
            c.bezierCurveTo(360.0000305175781 * a, 69.76705932617188 * a, 364.0000305175781 * a, 79.76705932617188 * a, 364.0000305175781 * a, 94.76705932617188 * a);
            c.closePath();
            h(c, f[1], f[1], 1 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(25.000030517578125 * a, 97.94886779785156 * a);
            c.bezierCurveTo(2.000030517578125 * a, 76.94886779785156 * a, 29.000030517578125 * a, 62.94886779785156 * a, 44.000030517578125 * a, 59.94886779785156 * a);
            c.bezierCurveTo(8.000030517578125 * a, 59.94886779785156 * a, -0.999969482421875 * a, 81.94886779785156 * a, 4.000030517578125 * a, 92.94886779785156 * a);
            c.closePath();
            h(c, f[3]);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(349.0000305175781 * a, 100.94886779785156 * a);
            c.bezierCurveTo(366.0000305175781 * a, 82.94886779785156 * a, 353.0000305175781 * a, 76.94886779785156 * a, 337.0000305175781 * a, 67.94886779785156 * a);
            c.bezierCurveTo(366.0000305175781 * a, 69.94886779785156 * a, 366.0000305175781 * a, 83.94886779785156 * a, 363.0000305175781 * a, 101.94886779785156 * a);
            c.closePath();
            h(c, f[2], f[3], 10 * a);
            A(c, 46.000030517578125 * a, 137.5852279663086 * a, 9.219544457292887 * a);
            h(c, f[4], f[5], 1 * a);
            A(c, 308.0000305175781 * a, 141.5852279663086 * a, 8.54400374531753 * a);
            h(c, f[4], f[5], 1 * a);
            A(c, 92.00003051757812 * a, 149.58523559570312 * a, 14.866068747318506 * a);
            h(c, f[4], f[5], 1 * a);
            A(c, 262.0000305175781 * a, 148.8579559326172 * a, 15.620499351813308 * a);
            h(c, f[4], f[5], 1 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(184.00003051757812 * a, 68.85795593261719 * a);
            c.bezierCurveTo(203.00003051757812 * a, 108.85795593261719 * a, 203.00003051757812 * a, 108.85795593261719 * a, 222.00003051757812 * a, 148.8579559326172 * a);
            c.bezierCurveTo(202.50003051757812 * a, 177.8579559326172 * a, 202.50003051757812 * a, 177.8579559326172 * a, 183.00003051757812 * a, 206.8579559326172 * a);
            c.bezierCurveTo(162.00003051757812 * a, 178.8579559326172 * a, 162.00003051757812 * a, 178.8579559326172 * a, 141.00003051757812 * a, 150.8579559326172 * a);
            c.closePath();
            h(c, f[4], f[5], 10 * a);
            c.beginPath();
            c.lineCap = "round";
            c.lineJoin = "round";
            c.moveTo(183.00003051757812 * a, 104.94886779785156 * a);
            c.bezierCurveTo(192.50003051757812 * a, 125.44886779785156 * a, 192.50003051757812 * a, 125.44886779785156 * a, 202.00003051757812 * a, 145.94886779785156 * a);
            c.bezierCurveTo(192.00003051757812 * a, 163.94886779785156 * a, 192.00003051757812 * a, 163.94886779785156 * a, 182.00003051757812 * a, 181.94886779785156 * a);
            c.bezierCurveTo(172.50003051757812 * a, 164.44886779785156 * a, 172.50003051757812 * a, 164.44886779785156 * a, 163.00003051757812 * a, 146.94886779785156 * a);
            c.closePath();
            h(c, f[6]);
            return d;
        };

        function ci() {
            var a = document.createElement("canvas"),
                e = a.getContext("2d");
            a.width = 460;
            a.height = 220;
            e.fillStyle = "#3a2a0d";
            e.fillRect(0, 0, a.width, a.height);
            e.lineWidth = 4;
            e.beginPath();
            e.strokeStyle = "#513810";
            for (var f = 20; 220 > f; f += 20) e.moveTo(0, f), e.lineTo(460, f), e.closePath(), e.stroke();
            return a;
        };

        function di(a) {
            var f = document.createElement("canvas"),
                g = f.getContext("2d"),
                d = 180 * a,
                c = 20 * a,
                k = 240 * a,
                l = 35 * a,
                m = 1 * a,
                p = 4 * a,
                n = 4 * a;
            f.width = 950 * a;
            f.height = 50 * a;
            g.translate(0, 15 * a);
            B(g, l, m, d, c, p);
            h(g, null, "#69A148", n);
            a = u[e.o0UuV];
            g.drawImage(a, 17, -8);
            g.translate(k, 0);
            B(g, l, m, d, c, p);
            h(g, null, "#AF352A", n);
            a = u[e.w0UU0];
            g.drawImage(a, 17, -9);
            g.translate(k, 0);
            B(g, l, m, d, c, p);
            h(g, null, "#669BB1", n);
            a = u[e.UvWvU];
            g.drawImage(a, 17, -8);
            g.translate(k, 0);
            B(g, l, m, d, c, p);
            h(g, null, "#074A87", n);
            a = u[e.Wwow$];
            g.drawImage(a, 17, -8);
            return f;
        };

        function xg() {
            function a(a) {
                for (var c = 0, d = 0, e = 0; d < a.length; d++) {
                    var f = a.charAt(d);
                    (("_" !== f) && (5 !== d)) && (("1" === f) && (c += Math.pow(2, e)), e++);
                }
                return c;
            };
            var f = (new Date).getTime();
            oO$ow();
            u[e.oouVU] = [o.OVwwU, o.WUo_W];
            u[e.WV] = [];
            u[e.WV][e._v] = [];
            u[e.WV][e._v][a("000_010_000")] = [o.ouO, o.uQO];
            u[e.WV][e._v][a("000_010_010")] = u[e.WV][e._v][a("000_010_000")];
            u[e.WV][e._v][a("000_011_000")] = u[e.WV][e._v][a("000_010_000")];
            u[e.WV][e._v][a("000_011_010")] = [o.Uo_, o.oov, o.uQO, o.ouO, o.UQU, o.uv$, o.woo];
            u[e.WV][e._v][a("000_011_011")] = [o._0u, o.Uo_, o.oov, o.uQO, o.ouO, o.UQU, o.uv$, o.woo, o.OO_];
            u[e.WV][e._v][a("000_110_000")] = [o.o$U, o.uQO];
            u[e.WV][e._v][a("000_110_010")] = [o.$$_, o.o$U, o.QUQ, o.uQO, o.ouO, o.OO_, o.OOw, o.WuvVU];
            u[e.WV][e._v][a("000_110_110")] = [o.$$_, o.UwVO_, o.Vow, o.o$U, o.QUQ, o.uQO, o.OO_, o.OOw, o.WuvVU];
            u[e.WV][e._v][a("000_111_000")] = [o.o$U, o.QUQ, o._Ov, o.UOw];
            u[e.WV][e._v][a("000_111_111")] = [o.o$U, o.Vow, o.$$_, o.oov, o.Uo_, o._0u, o._Vw];
            u[e.WV][e._v][a("010_010_000")] = [o.uQO];
            u[e.WV][e._v][a("010_010_010")] = [o.$Oo, o.uQO, o.ouO];
            u[e.WV][e._v][a("010_011_000")] = [o.uUo, o.uQO, o.ouO, o.OOw];
            u[e.WV][e._v][a("010_110_000")] = [o.o$U, o.QUQ, o.uQO, o.OOw, o._u0];
            u[e.WV][e._v][a("010_110_110")] = [o.oWV, o.uUo, o.Uo_, o.oov, o.$$_, o.Vow, o.o$U, o._Vw, o.uVo, o.$Oo, o.QUQ, o._Ov, o.UOw, o.uQO, o.ouO, o.UQU, o.uv$, o.woo, o.OO_, o.OOw, o._u0];
            u[e.WV][e._v][a("010_011_010")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("010_011_011")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("000_111_011")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("010_110_010")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("010_111_000")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("010_111_010")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("010_111_011")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("010_111_110")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("010_111_111")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("000_111_110")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("000_111_010")] = u[e.WV][e._v][a("010_110_110")];
            u[e.WV][e._v][a("011_011_000")] = [o.uuQ, o.oWV, o.uUo, o.uQO, o.ouO, o.OOw];
            u[e.WV][e._v][a("011_011_010")] = [o.uuQ, o.oWV, o.uUo, o.o$U, o.QUQ, o._Ov, o.UOw, o.uQO, o.ouO, o.OOw, o._u0];
            u[e.WV][e._v][a("011_011_011")] = [o.oov, o.Uo_, o._0u, o.uUo, o.oWV, o.uuQ, o.uVo];
            u[e.WV][e._v][a("011_111_000")] = u[e.WV][e._v][a("011_011_010")];
            u[e.WV][e._v][a("011_111_010")] = [o.uuQ, o.oWV, o.uUo, o.Uo_, o.oov, o.$$_, o.o$U, o._Vw, o.uVo, o.$Oo, o.QUQ, o._Ov, o.UOw, o.uQO, o.ouO, o.UQU, o.uv$, o.woo, o.OO_, o.OOw, o._u0];
            u[e.WV][e._v][a("011_111_011")] = u[e.WV][e._v][a("011_111_010")];
            u[e.WV][e._v][a("011_111_110")] = u[e.WV][e._v][a("011_111_010")];
            u[e.WV][e._v][a("011_111_111")] = [o.uuQ, o.oWV, o.uUo, o._0u, o.Uo_, o.oov, o.$$_, o.Vow, o.o$U, o._Vw, o.uVo, o.$Oo, o.QUQ, o._Ov, o.UOw, o.uQO, o.ouO, o.UQU, o.uv$, o.woo, o.OO_, o.OOw, o._u0];
            u[e.WV][e._v][a("110_110_000")] = [o.vQu, o.o$U, o.$vvwU, o.QUQ, o.uQO, o._u0];
            u[e.WV][e._v][a("110_110_010")] = [o.$$_, o.vQu, o.o$U, o.$Oo, o.QUQ, o.uQO, o.OO_, o._u0];
            u[e.WV][e._v][a("110_110_110")] = [o.$$_, o.Vow, o.vQu, o.o$U, o.$Oo, o.QUQ, o.uQO, o.OO_, o._u0];
            u[e.WV][e._v][a("110_111_000")] = [o.oWV, o.uUo, o.vQu, o.o$U, o.$vvwU, o._wwvw, o.QUQ, o._Ov, o.UOw, o.uQO, o.ouO, o.OOw, o._u0];
            u[e.WV][e._v][a("110_111_110")] = [o.oWV, o.uUo, o.Uo_, o.oov, o.$$_, o.Vow, o.vQu, o.o$U, o._Vw, o._wwvw, o.uVo, o.$Oo, o.QUQ, o._Ov, o.UOw, o.uQO, o.ouO, o.UQU, o.uv$, o.woo, o.OO_, o.OOw, o._u0];
            u[e.WV][e._v][a("110_111_111")] = u[e.WV][e._v][a("110_111_110")];
            u[e.WV][e._v][a("110_111_011")] = u[e.WV][e._v][a("110_111_110")];
            u[e.WV][e._v][a("110_111_010")] = u[e.WV][e._v][a("110_111_110")];
            u[e.WV][e._v][a("111_111_110")] = [o._u0, o.OOw, o.OO_, o.woo, o.uv$, o.UQU, o.ouO, o.uQO, o.UOw, o._Ov, o.QUQ, o.$Oo, o.uVo, o._wwvw, o._Vw, o.o$U, o.vQu, o.$$_, o.oov, o.Uo_, o.uUo, o.oWV, o.uuQ];
            u[e.WV][e._v][a("111_111_011")] = u[e.WV][e._v][a("111_111_110")];
            u[e.WV][e._v][a("111_111_000")] = [o.$vvwU, o.o$U, o.vQu, o.uUo, o.oWV, o.uuQ, o._wwvw];
            u[e.WV][e._v][a("111_111_111")] = [o.uuQ, o.oWV, o.uUo, o._0u, o.Uo_, o.oov, o.$$_, o.Vow, o.vQu, o.o$U, o._Vw, o.uVo, o.$Oo, o.QUQ, o._Ov, o.UOw, o.uQO, o.ouO, o.UQU, o.uv$, o.woo, o.OO_, o.OOw, o._u0];
            u[e.WV][e._v][a("111_111_010")] = u[e.WV][e._v][a("111_111_110")];
            u[e.WV][e.OW] = [];
            u[e.WV][e.OW][a("000_010_000")] = [o.oOW, o.ww$];
            u[e.WV][e.OW][a("000_010_010")] = u[e.WV][e.OW][a("000_010_000")];
            u[e.WV][e.OW][a("000_011_000")] = u[e.WV][e.OW][a("000_010_000")];
            u[e.WV][e.OW][a("000_011_010")] = [o.UV_, o.QVO, o.ww$, o.oOW, o.OQ0, o.VoQ, o.w_Q];
            u[e.WV][e.OW][a("000_011_011")] = [o.$v_, o.UV_, o.QVO, o.ww$, o.oOW, o.OQ0, o.VoQ, o.w_Q, o.UwO];
            u[e.WV][e.OW][a("000_110_000")] = [o._Q_, o.ww$];
            u[e.WV][e.OW][a("000_110_010")] = [o.Uvv, o._Q_, o.Uuo, o.ww$, o.oOW, o.UwO, o.uOw, o.uWQ_V];
            u[e.WV][e.OW][a("000_110_110")] = [o.Uvv, o.uQ$wv, o.Qw0, o._Q_, o.Uuo, o.ww$, o.UwO, o.uOw, o.uWQ_V];
            u[e.WV][e.OW][a("000_111_000")] = [o._Q_, o.Uuo, o.wOO, o.UuW];
            u[e.WV][e.OW][a("000_111_111")] = [o._Q_, o.Qw0, o.Uvv, o.QVO, o.UV_, o.$v_, o.oU_];
            u[e.WV][e.OW][a("010_010_000")] = [o.ww$];
            u[e.WV][e.OW][a("010_010_010")] = [o.uWV, o.ww$, o.oOW];
            u[e.WV][e.OW][a("010_011_000")] = [o.vuU, o.ww$, o.oOW, o.uOw];
            u[e.WV][e.OW][a("010_110_000")] = [o._Q_, o.Uuo, o.ww$, o.uOw, o.O$o];
            u[e.WV][e.OW][a("010_110_110")] = [o.V_O, o.vuU, o.UV_, o.QVO, o.Uvv, o.Qw0, o._Q_, o.oU_, o.wu$, o.uWV, o.Uuo, o.wOO, o.UuW, o.ww$, o.oOW, o.OQ0, o.VoQ, o.w_Q, o.UwO, o.uOw, o.O$o];
            u[e.WV][e.OW][a("010_011_010")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("010_011_011")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("000_111_011")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("010_110_010")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("010_111_000")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("010_111_010")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("010_111_011")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("010_111_110")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("010_111_111")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("000_111_110")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("000_111_010")] = u[e.WV][e.OW][a("010_110_110")];
            u[e.WV][e.OW][a("011_011_000")] = [o.uvv, o.V_O, o.vuU, o.ww$, o.oOW, o.uOw];
            u[e.WV][e.OW][a("011_011_010")] = [o.uvv, o.V_O, o.vuU, o._Q_, o.Uuo, o.wOO, o.UuW, o.ww$, o.oOW, o.uOw, o.O$o];
            u[e.WV][e.OW][a("011_011_011")] = [o.QVO, o.UV_, o.$v_, o.vuU, o.V_O, o.uvv, o.wu$];
            u[e.WV][e.OW][a("011_111_000")] = u[e.WV][e.OW][a("011_011_010")];
            u[e.WV][e.OW][a("011_111_010")] = [o.uvv, o.V_O, o.vuU, o.UV_, o.QVO, o.Uvv, o._Q_, o.oU_, o.wu$, o.uWV, o.Uuo, o.wOO, o.UuW, o.ww$, o.oOW, o.OQ0, o.VoQ, o.w_Q, o.UwO, o.uOw, o.O$o];
            u[e.WV][e.OW][a("011_111_011")] = u[e.WV][e.OW][a("011_111_010")];
            u[e.WV][e.OW][a("011_111_110")] = u[e.WV][e.OW][a("011_111_010")];
            u[e.WV][e.OW][a("011_111_111")] = [o.uvv, o.V_O, o.vuU, o.$v_, o.UV_, o.QVO, o.Uvv, o.Qw0, o._Q_, o.oU_, o.wu$, o.uWV, o.Uuo, o.wOO, o.UuW, o.ww$, o.oOW, o.OQ0, o.VoQ, o.w_Q, o.UwO, o.uOw, o.O$o];
            u[e.WV][e.OW][a("110_110_000")] = [o._o_, o._Q_, o.UQuov, o.Uuo, o.ww$, o.O$o];
            u[e.WV][e.OW][a("110_110_010")] = [o.Uvv, o._o_, o._Q_, o.uWV, o.Uuo, o.ww$, o.UwO, o.O$o];
            u[e.WV][e.OW][a("110_110_110")] = [o.Uvv, o.Qw0, o._o_, o._Q_, o.uWV, o.Uuo, o.ww$, o.UwO, o.O$o];
            u[e.WV][e.OW][a("110_111_000")] = [o.V_O, o.vuU, o._o_, o._Q_, o.UQuov, o.wWuVw, o.Uuo, o.wOO, o.UuW, o.ww$, o.oOW, o.uOw, o.O$o];
            u[e.WV][e.OW][a("110_111_110")] = [o.V_O, o.vuU, o.UV_, o.QVO, o.Uvv, o.Qw0, o._o_, o._Q_, o.oU_, o.wWuVw, o.wu$, o.uWV, o.Uuo, o.wOO, o.UuW, o.ww$, o.oOW, o.OQ0, o.VoQ, o.w_Q, o.UwO, o.uOw, o.O$o];
            u[e.WV][e.OW][a("110_111_111")] = u[e.WV][e.OW][a("110_111_110")];
            u[e.WV][e.OW][a("110_111_011")] = u[e.WV][e.OW][a("110_111_110")];
            u[e.WV][e.OW][a("110_111_010")] = u[e.WV][e.OW][a("110_111_110")];
            u[e.WV][e.OW][a("111_111_110")] = [o.O$o, o.uOw, o.UwO, o.w_Q, o.VoQ, o.OQ0, o.oOW, o.ww$, o.UuW, o.wOO, o.Uuo, o.uWV, o.wu$, o.wWuVw, o.oU_, o._Q_, o._o_, o.Uvv, o.QVO, o.UV_, o.vuU, o.V_O, o.uvv];
            u[e.WV][e.OW][a("111_111_011")] = u[e.WV][e.OW][a("111_111_110")];
            u[e.WV][e.OW][a("111_111_000")] = [o.UQuov, o._Q_, o._o_, o.vuU, o.V_O, o.uvv, o.wWuVw];
            u[e.WV][e.OW][a("111_111_111")] = [o.uvv, o.V_O, o.vuU, o.$v_, o.UV_, o.QVO, o.Uvv, o.Qw0, o._o_, o._Q_, o.oU_, o.wu$, o.uWV, o.Uuo, o.wOO, o.UuW, o.ww$, o.oOW, o.OQ0, o.VoQ, o.w_Q, o.UwO, o.uOw, o.O$o];
            u[e.WV][e.OW][a("111_111_010")] = u[e.WV][e.OW][a("111_111_110")];
            u[e.WWV] = [];
            u[e.WWV][e._v] = [];
            u[e.WWV][e._v][a("000_010_000")] = o.QovvO;
            u[e.WWV][e._v][a("000_010_010")] = o.wu$$U;
            u[e.WWV][e._v][a("000_011_000")] = o.VVUvu;
            u[e.WWV][e._v][a("000_011_010")] = o.UW__Q;
            u[e.WWV][e._v][a("000_011_011")] = o._wwvO;
            u[e.WWV][e._v][a("000_110_000")] = o.Ww_WU;
            u[e.WWV][e._v][a("000_110_010")] = o.vwuQ$;
            u[e.WWV][e._v][a("000_110_110")] = o.oUW$V;
            u[e.WWV][e._v][a("000_111_000")] = o.WwU$Q;
            u[e.WWV][e._v][a("000_111_010")] = o.$ooOO;
            u[e.WWV][e._v][a("000_111_011")] = o.O_woo;
            u[e.WWV][e._v][a("000_111_110")] = o.VVvV0;
            u[e.WWV][e._v][a("000_111_111")] = o._OWWU;
            u[e.WWV][e._v][a("010_010_000")] = o.UVwVQ;
            u[e.WWV][e._v][a("010_010_010")] = o.vU$0Q;
            u[e.WWV][e._v][a("010_011_000")] = o.W_uUv;
            u[e.WWV][e._v][a("010_011_010")] = o.oQ$vo;
            u[e.WWV][e._v][a("010_011_011")] = o.V_vVV;
            u[e.WWV][e._v][a("010_110_000")] = o.uwQOQ;
            u[e.WWV][e._v][a("010_110_010")] = o.wQvuo;
            u[e.WWV][e._v][a("010_110_110")] = o.QUOWW;
            u[e.WWV][e._v][a("010_111_000")] = o.WVQv_;
            u[e.WWV][e._v][a("010_111_010")] = o.wUOvW;
            u[e.WWV][e._v][a("010_111_011")] = o.QWQvQ;
            u[e.WWV][e._v][a("010_111_110")] = o.V_OUW;
            u[e.WWV][e._v][a("010_111_111")] = o.U$oV$;
            u[e.WWV][e._v][a("011_011_000")] = o.uUwWQ;
            u[e.WWV][e._v][a("011_011_010")] = o.$OQuV;
            u[e.WWV][e._v][a("011_011_011")] = o.Q_UuW;
            u[e.WWV][e._v][a("011_111_000")] = o.Q$v0U;
            u[e.WWV][e._v][a("011_111_010")] = o.ooO$U;
            u[e.WWV][e._v][a("011_111_011")] = o.Ou_Wu;
            u[e.WWV][e._v][a("011_111_110")] = o.oUUW0;
            u[e.WWV][e._v][a("011_111_111")] = o.QUU0U;
            u[e.WWV][e._v][a("110_110_000")] = o.UWVWO;
            u[e.WWV][e._v][a("110_110_010")] = o.vOuVv;
            u[e.WWV][e._v][a("110_110_110")] = o.uWuQQ;
            u[e.WWV][e._v][a("110_111_000")] = o.wVUVW;
            u[e.WWV][e._v][a("110_111_010")] = o.vQuUQ;
            u[e.WWV][e._v][a("110_111_011")] = o.QoOOo;
            u[e.WWV][e._v][a("110_111_110")] = o.$W_uO;
            u[e.WWV][e._v][a("110_111_111")] = o.Qu$O_;
            u[e.WWV][e._v][a("111_111_011")] = o.wwvQv;
            u[e.WWV][e._v][a("111_111_110")] = o.u0_OO;
            u[e.WWV][e._v][a("111_111_011")] = o.wwvQv;
            u[e.WWV][e._v][a("111_111_000")] = o.$vvUV;
            u[e.WWV][e._v][a("111_111_111")] = o.$wV$_;
            u[e.WWV][e._v][a("111_111_010")] = o.U$vV$;
            u[e.WWV][e.OW] = [];
            u[e.WWV][e.OW][a("000_010_000")] = o.Vw_QO;
            u[e.WWV][e.OW][a("000_010_010")] = o.QvQOU;
            u[e.WWV][e.OW][a("000_011_000")] = o.UOwuW;
            u[e.WWV][e.OW][a("000_011_010")] = o.OOW_$;
            u[e.WWV][e.OW][a("000_011_011")] = o.O0Ouw;
            u[e.WWV][e.OW][a("000_110_000")] = o.wV$u_;
            u[e.WWV][e.OW][a("000_110_010")] = o.ww$Qv;
            u[e.WWV][e.OW][a("000_110_110")] = o.oQVuU;
            u[e.WWV][e.OW][a("000_111_000")] = o.U0Voo;
            u[e.WWV][e.OW][a("000_111_010")] = o.W_QVW;
            u[e.WWV][e.OW][a("000_111_011")] = o.v$voO;
            u[e.WWV][e.OW][a("000_111_110")] = o.Q$$$W;
            u[e.WWV][e.OW][a("000_111_111")] = o.VooVu;
            u[e.WWV][e.OW][a("010_010_000")] = o.o0OVu;
            u[e.WWV][e.OW][a("010_010_010")] = o.wUuVV;
            u[e.WWV][e.OW][a("010_011_000")] = o.$vv_w;
            u[e.WWV][e.OW][a("010_011_010")] = o._uu$w;
            u[e.WWV][e.OW][a("010_011_011")] = o.$uuVV;
            u[e.WWV][e.OW][a("010_110_000")] = o.OVU$O;
            u[e.WWV][e.OW][a("010_110_010")] = o.QUQ00;
            u[e.WWV][e.OW][a("010_110_110")] = o.Quw0W;
            u[e.WWV][e.OW][a("010_111_000")] = o.WQQOo;
            u[e.WWV][e.OW][a("010_111_010")] = o.wVuW_;
            u[e.WWV][e.OW][a("010_111_011")] = o.v0wWQ;
            u[e.WWV][e.OW][a("010_111_110")] = o.wu$UQ;
            u[e.WWV][e.OW][a("010_111_111")] = o.Q0WQW;
            u[e.WWV][e.OW][a("011_011_000")] = o.vvoVw;
            u[e.WWV][e.OW][a("011_011_010")] = o._V_vW;
            u[e.WWV][e.OW][a("011_011_011")] = o.$oUOU;
            u[e.WWV][e.OW][a("011_111_000")] = o.V0$W0;
            u[e.WWV][e.OW][a("011_111_010")] = o.OQ_WV;
            u[e.WWV][e.OW][a("011_111_011")] = o.OWUv_;
            u[e.WWV][e.OW][a("011_111_110")] = o.QOu$_;
            u[e.WWV][e.OW][a("011_111_111")] = o._Q$VU;
            u[e.WWV][e.OW][a("110_110_000")] = o.oW_$W;
            u[e.WWV][e.OW][a("110_110_010")] = o.VOwQw;
            u[e.WWV][e.OW][a("110_110_110")] = o.OVwQQ;
            u[e.WWV][e.OW][a("110_111_000")] = o.$OQu_;
            u[e.WWV][e.OW][a("110_111_010")] = o._VOW$;
            u[e.WWV][e.OW][a("110_111_011")] = o.W_uo0;
            u[e.WWV][e.OW][a("110_111_110")] = o.O0UV$;
            u[e.WWV][e.OW][a("110_111_111")] = o._0Q_w;
            u[e.WWV][e.OW][a("111_111_011")] = o.WuuVU;
            u[e.WWV][e.OW][a("111_111_110")] = o.vUVoO;
            u[e.WWV][e.OW][a("111_111_011")] = o.WuuVU;
            u[e.WWV][e.OW][a("111_111_000")] = o.Oo$uw;
            u[e.WWV][e.OW][a("111_111_111")] = o.vQw__;
            u[e.WWV][e.OW][a("111_111_010")] = o.uoO0$;
            u[e.V_V] = [];
            u[e.V_V][e._v] = o.OwO_o;
            u[e.V_V][e.OW] = o.Q0wvQ;
            u[e._w_] = [];
            u[e._w_][e._v] = o.W0QOU;
            u[e._w_][e.OW] = o.Q_UWv;
            u[e.OWUW0] = [];
            u[e.OWUW0][e._v] = o.wvV0O;
            u[e.OWUW0][e.OW] = o.wuOoW;
            u[e.UVv] = [];
            u[e.UVv][e._v] = o._uVOO;
            u[e.UVv][e.OW] = o.Ouw$Q;
            u[e.UUvv$] = [];
            u[e.UUvv$][e._v] = o.wvW$_;
            u[e.UUvv$][e.OW] = o.v$o$0;
            u[e.U_WV0] = [];
            u[e.U_WV0][e._v] = o.U$uWw;
            u[e.U_WV0][e.OW] = o.wWuuu;
            u[e.wwW] = [];
            u[e.wwW][e._v] = o.uOUUW;
            u[e.wwW][e.OW] = o.uQ$WU;
            u[e.$u_$v] = [];
            u[e.$u_$v][e._v] = o._VQvW;
            u[e.$u_$v][e.OW] = o.uVW_$;
            u[e.uUu_0] = [];
            u[e.uUu_0][e._v] = o.V$U_u;
            u[e.uUu_0][e.OW] = o.VUoOQ;
            u[e.U_wvQ] = [];
            u[e.U_wvQ][e._v] = o.wu$U_;
            u[e.U_wvQ][e.OW] = o.wu$_0;
            u[e.VWw] = [];
            u[e.VWw][e._v] = [o.QuVuO];
            u[e.VWw][e.OW] = [o.UwU_V];
            u[e.oWQ] = [];
            u[e.oWQ][e._v] = o._ouWo;
            u[e.oWQ][e.OW] = o._vvwV;
            u[e.uQu] = [];

            u[e.wUO] = [];
            u[e.wUO][e._v] = o.__$uo;
            u[e.wUO][e.OW] = o.$ou0Q;
            u[e.vwQ] = [];
            u[e.vwQ][e._v] = o._oO$$;
            u[e.vwQ][e.OW] = o.VwWOu;
            u[e.v$_] = [];
            u[e.v$_][e._v] = o.OVvWo;
            u[e.v$_][e.OW] = o.OVU_W;
            u[e.owo] = [];
            u[e.owo][e._v] = o.o$ovV;
            u[e.owo][e.OW] = o.QvUWv;
            u[e.$W0] = [];
            u[e.$W0][e._v] = o.__VQ$;
            u[e.$W0][e.OW] = o.WouV0;
            u[e.Q$o] = [];
            u[e.Q$o][e._v] = o.$UoVO;
            u[e.Q$o][e.OW] = o.VW_uU;
            u[e.$VU] = [];
            u[e.$VU][e._v] = o.oovO_;
            u[e.$VU][e.OW] = o.Ovwv$;
            u[e.wQouo] = [];
            u[e.wQouo][e._v] = o.U_wWo;
            u[e.wQouo][e.OW] = o.wQw__;
            u[e.vuUWW] = [];
            u[e.vuUWW][e._v] = o.$OO_w;
            u[e.vuUWW][e.OW] = o.vuv_Q;
            u[e.VQ0] = [];
            u[e.VQ0][e._v] = o.WVOov;
            u[e.VQ0][e.OW] = o.voUo_;
            u[e.u0o__] = o.u0o__;
            u[e.uuovO] = o.uuovO;
            u[e.v_0] = [];
            u[e.v_0][e._v] = [];
            u[e.v_0][e.OW] = [];
            u[e.v_0][e._v].push(o.$QUw$);
            u[e.v_0][e._v].push(o.VWOwu);
            u[e.v_0][e._v].push(o.oWvou);
            u[e.v_0][e.OW].push(o._w$oU);
            u[e.v_0][e.OW].push(o.Q$u0_);
            u[e.v_0][e.OW].push(o.oow_O);
            u[e.$u0] = [];
            u[e.$u0][e._v] = [];
            u[e.$u0][e.OW] = [];
            u[e.$u0][e._v].push(o.OoOo$);
            u[e.$u0][e._v].push(o.QwWWO);
            u[e.$u0][e._v].push(o.OovW$);
            u[e.$u0][e.OW].push(o.uQQ_W);
            u[e.$u0][e.OW].push(o.QUVuu);
            u[e.$u0][e.OW].push(o.VvuUV);
            u[e.O_v] = [];
            u[e.O_v][e._v] = [];
            u[e.O_v][e.OW] = [];
            u[e.O_v][e._v].push(o.voO_v);
            u[e.O_v][e._v].push(o.voQOQ);
            u[e.O_v][e._v].push(o.ouw$Q);
            u[e.O_v][e._v].push(o._OuQ$);
            u[e.O_v][e.OW].push(o.uOOWw);
            u[e.O_v][e.OW].push(o.U_oVV);
            u[e.O_v][e.OW].push(o.osocket$);
            u[e.O_v][e.OW].push(o.W0uVw);
            u[e._u$] = [];
            u[e._u$][e._v] = o.WQOoU;
            u[e._u$][e.OW] = o.OowQU;
            u[e.Wvw_w] = [];
            u[e.Wvw_w][e._v] = o.$_QQ$;
            u[e.Wvw_w][e.OW] = o.vvvWO;
            u[e.OwUQo] = [];
            u[e.OwUQo][e._v] = o.Uv$UU;
            u[e.OwUQo][e.OW] = o._$vQV;
            u[e.W$$] = o.W$$;
            u[e.vQ$uo] = o.vQ$uo;
            u[e.nbirdA] = o.nbirdA;
            u[e._ov] = [];
            u[e._ov][e._v] = o.oWQQ_;
            u[e._ov][e.OW] = o.Ou_UV;
            u[e.$oo] = [];
            u[e.$oo][e._v] = o.QWoO_;
            u[e.$oo][e.OW] = o.o_v_O;
            u[e._vo] = [];
            u[e._vo][e._v] = o.ooV_Q;
            u[e._vo][e.OW] = o.v__vQ;
            u[e.Oo$] = [];
            u[e.Oo$][e._v] = o.QWoO_;
            u[e.Oo$][e.OW] = o.o_v_O;
            u[e.vQ$] = [];
            u[e.VQv] = [];
            u[e.QUW] = [];
            u[e._U0] = [];
            u[e.wQo] = [];
            u[e.uU_] = [];
            u[e.$$W] = [];
            u[e.$oV] = [];
            u[e._0o] = [];
            textureOn = function (state)   {
                let Rsword = new Image(),
                Rspike = new Image(),
                Rshield = new Image(),
                Rhelmet = new Image(),
                Rspear = new Image();
                Rhelmet.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147668855652372/day-12reidite-helmet.png"
                Rspear.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147663927353384/day-reidite-sp12ear.png"
                Rsword.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147665579933746/day-reidite-12sword.png"
                Rshield.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147667320541184/day-reidite-shie12ld.png"
                Rspike.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147671649079296/day-reidite-12333spike.png"
                let Bird1 = new Image(),
                  Bird2 = new Image(),
                  BirdLeft = new Image(),
                  BirdRight = new Image();
                  Bird1.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147657308762143/day-falcon-ground.png";
                  Bird2.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147662450974750/day-falcon.png";
                  BirdLeft.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147659066155068/day-falcon-wings-left.png";
                  BirdRight.src = "https://cdn.discordapp.com/attachments/888101337424855110/889147660441907230/day-falcon-wings-right.png";


                  /* reidite shit */
                  if(state) {


                    u[e.vQ$][e._v] = Rhelmet;
                    u[e.vQ$][e.OW] = Rhelmet;
                    u[e.QUW][e._v] = Rspear;
                    u[e.QUW][e.OW] = Rspear;
                    u[e.VQv][e._v] = Rsword;
                    u[e.VQv][e.OW] = Rsword;
                    u[e.uQu][e._v] = Rspike;
                    u[e.uQu][e.OW] = Rspike;
                    u[e.wQo][e._v] = Rshield;
                    u[e.wQo][e.OW] = Rshield;
                    /* bird */
                    u[e.uU_][e._v] = Bird1;
                    u[e.uU_][e.OW] = Bird1;
                    u[e.$$W][e._v] = Bird2;
                    u[e.$$W][e.OW] = Bird2;
                    u[e.$oV][e._v] = BirdLeft;
                    u[e.$oV][e.OW] = BirdLeft;

                    u[e._0o][e._v] = BirdRight;
                    u[e._0o][e.OW] = BirdRight;
                  }else {
      /* reidite shit */
      u[e.vQ$][e._v] = o.rhelmetd;
      u[e.vQ$][e.OW] = o.rhelmetn;
      u[e.QUW][e._v] = o.redspeard;
      u[e.QUW][e.OW] = o.redspearn;
      u[e.VQv][e._v] = o.rsword;
      u[e.VQv][e.OW] = o.rnsword;
      u[e.uQu][e._v] = o.redspiked;
      u[e.uQu][e.OW] = o.redspiken;
      u[e.wQo][e._v] = o.rdshield;
      u[e.wQo][e.OW] = o.rnshield;
       /* bird */
      u[e.uU_][e._v] = o.dbird;
      u[e.uU_][e.OW] = o.nbird;
      u[e.$$W][e._v] = o.daybirdG;
      u[e.$$W][e.OW] = o.nbirdg;
      u[e.$oV][e._v] = o.birdWingLeftDay;
      u[e.$oV][e.OW] = o.birdWingLeftNight;
      u[e._0o][e._v] = o.birdWingRightDay;
      u[e._0o][e.OW] = o.birdWingRightNight;

                  }

            }


            u[e._U0] = [];
            u[e._U0][e._v] = o.o0Q_V;
            u[e._U0][e.OW] = o.QwuwU;
            u[e.WWu] = [];
            u[e.WWu][e._v] = o.v$uUQ;
            u[e.WWu][e.OW] = o.U0VQw;
            u[e._$0] = [];
            u[e._$0][e._v] = o.u_oo$;
            u[e._$0][e.OW] = o.$wOww;
            u[e.$$w] = [];
            u[e.$$w][e._v] = o.vQWUo;
            u[e.$$w][e.OW] = o._u$OQ;
            u[e.woU] = [];
            u[e.woU][e._v] = o.V_o_Q;
            u[e.woU][e.OW] = o.VOvWw;
            u[e.WuO] = [];
            u[e.WuO][e._v] = o.Vwvou;
            u[e.WuO][e.OW] = o.VwVVU;
            u[e.$Ow] = [];
            u[e.$Ow][e._v] = o.vw$$u;
            u[e.$Ow][e.OW] = o.$Vwow;
            u[e.w$Q] = [];
            u[e.w$Q][e._v] = o.U_Vvo;
            u[e.w$Q][e.OW] = o.oVW$_;
            u[e.wQO] = [];
            u[e.wQO][e._v] = o.w$vW0;
            u[e.wQO][e.OW] = o.___o$;
            u[e.VWv] = [];
            u[e.VWv][e._v] = o.WUvQU;
            u[e.VWv][e.OW] = o.owuoQ;

            u[e.wwo] = [];
            u[e.wwo][e._v] = o.V0vu$;
            u[e.wwo][e.OW] = o.O$__w;
            u[e.VWO] = [];
            u[e.VWO][e._v] = o.owU_o;
            u[e.VWO][e.OW] = o.uvouW;
            u[e.$w0] = [];
            u[e.$w0][e._v] = o.uuvo$;
            u[e.$w0][e.OW] = o.uuQO_;
            u[e._vW] = [];
            u[e._vW][e._v] = o.Vv$uU;
            u[e._vW][e.OW] = o.vW$U0;
            u[e.OWv] = [];
            u[e.OWv][e._v] = o.$UwVU;
            u[e.OWv][e.OW] = o._$uou;
            u[e.uuu] = [];
            u[e.uuu][e._v] = o.QovoW;
            u[e.uuu][e.OW] = o.vQWUu;
            u[e.VWQ] = [];
            u[e.VWQ][e._v] = o.UVQWv;
            u[e.VWQ][e.OW] = o.UwoQv;
            u[e.OQW] = [];
            u[e.OQW][e._v] = o.owQw_;
            u[e.OQW][e.OW] = o.UoO$v;
            u[e.UWW] = [];
            u[e.UWW][e._v] = o._WuQV;
            u[e.UWW][e.OW] = o.wuOUu;
            u[e.UwW] = [];
            u[e.UwW][e._v] = o.W$VvV;
            u[e.UwW][e.OW] = o.UWUou;
            u[e.Wv_] = [];
            u[e.Wv_][e._v] = o.QoOUw;
            u[e.Wv_][e.OW] = o.WWuQO;
            u[e.vOV] = [];
            u[e.vOV][e._v] = o.u$oQO;
            u[e.vOV][e.OW] = o.vvQv$;
            u[e.vvU] = [];
            u[e.vvU][e._v] = o.o_QwO;
            u[e.vvU][e.OW] = o.VuWoV;
            u[e.vvo] = [];
            u[e.vvo][e._v] = o.Wo$$W;
            u[e.vvo][e.OW] = o.Q0U$Q;
            u[e.O__] = [];
            u[e.O__][e._v] = o.QUoU_;
            u[e.O__][e.OW] = o.u0wow;
            u[e.o_v] = [];
            u[e.o_v][e._v] = o.vOUQ_;
            u[e.o_v][e.OW] = o.ov$Qo;
            u[e.U$v] = [];
            u[e.U$v][e._v] = o._VQ_U;
            u[e.U$v][e.OW] = o.OuwVU;
            u[e.Q_V] = [];
            u[e.Q_V][e._v] = o.Q_vvu;
            u[e.Q_V][e.OW] = o.u$vWQ;
            u[e.oO_] = [];
            u[e.oO_][e._v] = [];
            u[e.oO_][e.OW] = [];
            u[e.oO_][e._v].push(o.ovQw0);
            u[e.oO_][e._v].push(o.w_uuO);
            u[e.oO_][e.OW].push(o.w_uuO);
            u[e.oO_][e.OW].push(o.QuVu$);
            u[e.oOv] = [];
            u[e.oOv][e._v] = [];
            u[e.oOv][e.OW] = [];
            u[e.oOv][e._v].push(o.uuvQ$);
            u[e.oOv][e._v].push(o.QVw$W);
            u[e.oOv][e._v].push(o.QvVVu);
            u[e.oOv][e.OW].push(o.$0UW$);
            u[e.oOv][e.OW].push(o.v0OQO);
            u[e.oOv][e.OW].push(o._ou$o);
            u[e.UOQ] = [];
            u[e.UOQ][e._v] = o.u0uWu;
            u[e.UOQ][e.OW] = o.v_v$W;
            u[e.OoU] = [];
            u[e.OoU][e._v] = o.vWWO$;
            u[e.OoU][e.OW] = o.$$wo0;
            u[e.WwW] = [];
            u[e.WwW][e._v] = [];
            u[e.WwW][e.OW] = [];
            u[e.WwW][e._v].push(o.VOuv_);
            u[e.WwW][e._v].push(o._ow0U);
            u[e.WwW][e._v].push(o.v$wv$);
            u[e.WwW][e.OW].push(o.UuU_$);
            u[e.WwW][e.OW].push(o.oVUUW);
            u[e.WwW][e.OW].push(o.$v$_V);
            u[e.w_] = [];
            u[e.w_][e._v] = [];
            u[e.w_][e.OW] = [];
            u[e.w_][e._v].push(o.OWWu_);
            u[e.w_][e._v].push(o.QvOO0);
            u[e.w_][e._v].push(o.V_QwU);
            u[e.w_][e.OW].push(o.VUOoV);
            u[e.w_][e.OW].push(o.VO$$0);
            u[e.w_][e.OW].push(o.u_v$Q);
            u[e.WUu] = [];
            u[e.WUu][e._v] = [];
            u[e.WUu][e.OW] = [];
            u[e.WUu][e._v].push(o.O_WUO);
            u[e.WUu][e._v].push(o.Wuu_u);
            u[e.WUu][e._v].push(o.OuUQW);
            u[e.WUu][e._v].push(o.UV__Q);
            u[e.WUu][e._v].push(o.uQvvV);
            u[e.WUu][e._v].push(o.VoVU_);
            u[e.WUu][e.OW].push(o.uVw$O);
            u[e.WUu][e.OW].push(o.VVWo0);
            u[e.WUu][e.OW].push(o.uUVuo);
            u[e.WUu][e.OW].push(o.VuO_U);
            u[e.WUu][e.OW].push(o.ouVW_);
            u[e.WUu][e.OW].push(o.Uo$vV);
            u[e.QWw] = [];
            u[e.QWw][e._v] = [];
            u[e.QWw][e.OW] = [];
            u[e.QWw][e._v].push(o.QuO_V);
            u[e.QWw][e._v].push(o.VWu0V);
            u[e.QWw][e._v].push(o.VwVoW);
            u[e.QWw][e._v].push(o.UWwwW);
            u[e.QWw][e._v].push(o._uwwv);
            u[e.QWw][e._v].push(o.$OVu_);
            u[e.QWw][e.OW].push(o.Uow_W);
            u[e.QWw][e.OW].push(o.OWUWw);
            u[e.QWw][e.OW].push(o.O0o$w);
            u[e.QWw][e.OW].push(o.Ww$$U);
            u[e.QWw][e.OW].push(o.wovOv);
            u[e.QWw][e.OW].push(o.W_V_V);
            u[e.WUO$_] = [];
            u[e.WUO$_][e._v] = o.V_QvV;
            u[e.WUO$_][e.OW] = o.uo_uU;
            u[e.$0vuU] = o.oWUuv;
            u[e.OVv] = [];
            u[e.OVv][e._v] = o.VvwV_;
            u[e.OVv][e.OW] = o._U__w;
            u[e.VuU] = [];
            u[e.VuU][e._v] = o.wo_WQ;
            u[e.VuU][e.OW] = o.uwO_O;
            u[e.uQW] = [];
            u[e.uQW][e._v] = o.V_uww;
            u[e.uQW][e.OW] = o.uVQ$0;
            u[e.vOv] = [];
            u[e.vOv][e._v] = o.uO$$V;
            u[e.vOv][e.OW] = o.QVoVu;
            u[e.Q$W] = [];
            u[e.Q$W][e._v] = o.QOv_U;
            u[e.Q$W][e.OW] = o.WQwUV;
            u[e.wOoQo] = o.wOoQo;
            u[e.VuQWo] = [];
            u[e.VuQWo][e._v] = o._0UuQ;
            u[e.VuQWo][e.OW] = o.uV_U_;
            u[e.$O$0W] = [];
            u[e.$O$0W][e._v] = o.QVUWv;
            u[e.$O$0W][e.OW] = o.$v_uw;
            u[e.U0_U0] = o.U0_U0;
            u[e.wowQu] = o.wowQu;
            u[e.QOW_0] = o.QOW_0;
            u[e.v$o0v] = [];
            u[e.v$o0v][e._v] = o.oWovW;
            u[e.v$o0v][e.OW] = o.voWow;
            u[e.WOouO] = [];
            u[e.WOouO][e._v] = o.V$W0o;
            u[e.WOouO][e.OW] = o.vOUwU;
            u[e.uVWQ_] = [];
            u[e.uVWQ_][e._v] = o.VQO$v;
            u[e.uVWQ_][e.OW] = o.wQo0w;
            u[e.$wvuw] = o.$wvuw;
            u[e.w0$_o] = o.w0$_o;
            u[e.o0V_0] = o.o0V_0;
            u[e.uov_w] = [];
            u[e.uov_w][e._v] = o.Q0UV_;
            u[e.uov_w][e.OW] = o.u_OQ0;
            u[e.vu_] = [];
            u[e.vu_][e._v] = o.o$O_w;
            u[e.vu_][e.OW] = o.Q0V_O;
            u[e.vww] = [];
            u[e.vww][e._v] = o.O__Uw;
            u[e.vww][e.OW] = o._uo00;
            u[e.W0O] = [];
            u[e.W0O][e._v] = o.u_wuV;
            u[e.W0O][e.OW] = o.WWVQo;
            u[e.voW] = [];
            u[e.voW][e._v] = o.vU$vQ;
            u[e.voW][e.OW] = o.VUuOQ;
            u[e._wWUW] = [];
            u[e._wWUW][e._v] = o.wQ_QW;
            u[e._wWUW][e.OW] = o.Vvo_U;
            u[e.QwWVv] = [];
            u[e.QwWVv][e._v] = o.$_UOU;
            u[e.QwWVv][e.OW] = o.wUWVO;
            u[e.wo_QW] = o.wo_QW;
            u[e.voUV_] = o.voUV_;
            u[e.v$Q_Q] = o.v$Q_Q;
            u[e._wVWu] = o._wVWu;
            u[e.$QuWU] = o.$QuWU;
            u[e.V_Q$V] = o.V_Q$V;
            u[e.$_oUW] = [];
            u[e.$_oUW][e._v] = o._Wv$Q;
            u[e.$_oUW][e.OW] = o.wOWvV;
            u[e.OW$] = [];
            u[e.OW$][e._v] = o.QVouU;
            u[e.OW$][e.OW] = o.O_v0v;
            u[e.Qvo] = [];
            u[e.Qvo][e._v] = o.ouu00;
            u[e.Qvo][e.OW] = o.oV_uv;
            u[e.U$w] = [];
            u[e.U$w][e._v] = o.vOWuO;
            u[e.U$w][e.OW] = o.V0vwU;
            u[e.UUUV0] = o.UUUV0;
            u[e.wvQwO] = o.wvQwO;
            u[e.uwuw$] = [];
            u[e.uwuw$][e._v] = o.vvu_w;
            u[e.uwuw$][e.OW] = o.W$V$V;
            u[e.$Uo] = [];
            u[e.$Uo][e._v] = o.$$u$U;
            u[e.$Uo][e.OW] = o.OWOQ$;
            u[e.QWo] = [];
            u[e.QWo][e._v] = o._$Vo$;
            u[e.QWo][e.OW] = o.ou_0Q;
            u[e.QOWUQ] = [];
            u[e.QOWUQ][e._v] = o.ouo0O;
            u[e.QOWUQ][e.OW] = o._0QVU;
            u[e.QOwoU] = [];
            u[e.QOwoU][e._v] = o._vQW$;
            u[e.QOwoU][e.OW] = o.WvVUw;
            u[e.uOuvW] = [];
            u[e.uOuvW][e._v] = o.uOuQO;
            u[e.uOuvW][e.OW] = o.woWQu;
            u[e._VV0W] = [];
            u[e._VV0W][e._v] = o.$_OV0;
            u[e._VV0W][e.OW] = o.uvVUu;
            u[e.UV_$w] = [];
            u[e.UV_$w][e._v] = o.U0_V0;
            u[e.UV_$w][e.OW] = o.QOv__;
            u[e.WVWQQ] = [];
            u[e.WVWQQ][e._v] = o.UUVv$;
            u[e.WVWQQ][e.OW] = o.vQOvo;
            u[e.oV0] = o.oV0;
            u[e.O$VwV] = o.O$VwV;
            u[e.vOv_W] = o.vOv_W;
            u[e.OO_uv] = [];
            u[e.OO_uv][e._v] = o.v_v_U;
            u[e.OO_uv][e.OW] = o.VwO$w;
            u[e.$ww] = [];
            u[e.$ww][e._v] = o._wU_w;
            u[e.$ww][e.OW] = o.W__UQ;
            u[e.WUU] = [];
            u[e.WUU][e._v] = o.$VvuO;
            u[e.WUU][e.OW] = o.O$Vo0;
            u[e.VV$o_] = [];
            u[e.VV$o_][e._v] = o.ouUv0;
            u[e.VV$o_][e.OW] = o.Vw_u$;
            u[e.WU$wU] = [];
            u[e.WU$wU][e._v] = o.oWWWO;
            u[e.WU$wU][e.OW] = o.W0oVo;
            u[e.WuV_W] = [];
            u[e.WuV_W][e._v] = o._QVv$;
            u[e.WuV_W][e.OW] = o.u0wVo;
            u[e._oowo] = [];
            u[e._oowo][e._v] = o.WuVOO;
            u[e._oowo][e.OW] = o.OoWoo;
            u[e.QV$vo] = [];
            u[e.QV$vo][e._v] = o.V_VV0;
            u[e.QV$vo][e.OW] = o.Q$vu$;
            u[e.U0$Wo] = [];
            u[e.U0$Wo][e._v] = o.wQWwW;
            u[e.U0$Wo][e.OW] = o.WOO0_;
            u[e.Uw$] = o.Uw$;
            u[e.$_uQ0] = o.$_uQ0;
            u[e.O0v] = o.O0v;
            u[e.o0v] = [];
            u[e.o0v][e._v] = o.dbirdA;
            u[e.o0v][e.OW] = o.nbirdA;

            u[e.v0o] = o.v0o;

            u[e._oO] = [];
            u[e._oO][e._v] = o.OuooU;
            u[e._oO][e.OW] = o.vuO_o;
            u[e.$vw] = [];
            u[e.$vw][e._v] = o.$0_VV;
            u[e.$vw][e.OW] = o.uVQVV;

            u[e.V$_] = [];
            u[e.V$_][e._v] = o.ovo$u;
            u[e.V$_][e.OW] = o.vU_Ow;
            u[e.o0O] = [];
            u[e.o0O][e._v] = o.U$O$U;
            u[e.o0O][e.OW] = o.UOOVo;
            u[e.UWo] = [];
            u[e.UWo][e._v] = o.Vvwww;
            u[e.UWo][e.OW] = o.$uvuQ;
            u[e.v0U] = [];
            u[e.v0U][e._v] = o.W_wW_;
            u[e.v0U][e.OW] = o.O$Ouu;
            u[e.wVv] = o.wVv;
            u[e.v0O] = o.v0O;
            u[e._o$] = o._o$;
            u[e.OUO] = [];
            u[e.OUO][e._v] = o.oVOWv;
            u[e.OUO][e.OW] = o.VVW$w;
            u[e.wQQ] = [];
            u[e.wQQ][e._v] = o.vovWo;
            u[e.wQQ][e.OW] = o.u$w0u;
            u[e.$0Q] = o.$0Q;
            u[e.vVwww] = [];
            u[e.vVwww][e._v] = o.voUOU;
            u[e.vVwww][e.OW] = o.VVUQ$;
            u[e.$vU] = [];
            u[e.$vU][e._v] = o.woowU;
            u[e.$vU][e.OW] = o.V0O0_;
            u[e.Qu_Uo] = [];
            u[e.Qu_Uo][e._v] = o.WQOVu;
            u[e.Qu_Uo][e.OW] = o.QW$Q$;
            u[e.wuwuo] = [];
            u[e.wuwuo][e._v] = o.u$WWu;
            u[e.wuwuo][e.OW] = o.OuOQO;
            u[e.VWov0] = [];
            u[e.VWov0][e._v] = o.VUvWo;
            u[e.VWov0][e.OW] = o.W_vwW;
            u[e.Q0V] = [];
            u[e.Q0V][e._v] = o.WQ_V0;
            u[e.Q0V][e.OW] = o.QOU0v;
            u[e.U0w] = [];
            u[e.U0w][e._v] = o.w_$uO;
            u[e.U0w][e.OW] = o.uUwwV;
            u[e.QVUvU] = [];
            u[e.QVUvU][e._v] = o.vUoQw;
            u[e.QVUvU][e.OW] = o.QwvvW;
            u[e.U_U_u] = [];
            u[e.U_U_u][e._v] = o.VU_WQ;
            u[e.U_U_u][e.OW] = o.oovV$;
            u[e.QU0] = o.QU0;
            u[e.wVU] = o.wVU;
            u[e.V0V] = o.V0V;
            u[e.vuu] = [];
            u[e.vuu][e._v] = o._0U_v;
            u[e.vuu][e.OW] = o.v_w0U;
            u[e.$$v] = [];
            u[e.$$v][e._v] = o.O_$wQ;
            u[e.$$v][e.OW] = o.wQ_V_;
            u[e.wv$vo] = [];
            u[e.wv$vo][e._v] = o.uuOWw;
            u[e.wv$vo][e.OW] = o._W_VV;
            u[e.O_U] = [];
            u[e.O_U][e._v] = o.O_U;
            u[e.O_U][e.OW] = o.O_U;
            u[e.U_$] = [];
            u[e.U_$][e._v] = o.U_$;
            u[e.U_$][e.OW] = o.U_$;
            u[e.$OV] = [];
            u[e.$OV][e._v] = o.$OV;
            u[e.$OV][e.OW] = o.$OV;
            u[e.VUvVO] = o.VUvVO;
            u[e.U_u] = [];
            u[e.U_u][e._v] = o.$VowV;
            u[e.U_u][e.OW] = o.ou_OQ;
            u[e.vwO] = [];
            u[e.vwO][e._v] = o.uWUUv;
            u[e.vwO][e.OW] = o.UQo$_;
            u[e.UQQ] = [];
            u[e.UQQ][e._v] = [o.o$$Q$, o.oouV0, o.V0vu$, o.uuvo$, o.$UwVU, o.UVQWv, o._WuQV, o.QoOUw, o.o_QwO];
            u[e.UQQ][e.OW] = [o.VsocketW, o.wuvvu, o.O$__w, o.uuQO_, o._$uou, o.UwoQv, o.wuOUu, o.QoOUw, o.VuWoV];
            u[e.O$O] = [];
            u[e.O$O][e._v] = o.QOQQo;
            u[e.O$O][e.OW] = o.UwOuQ;
            u[e.ovw] = [];
            u[e.ovw][e._v] = o._VVVU;
            u[e.ovw][e.OW] = o._wUWw;
            u[e.ovO] = [];
            u[e.ovO][e._v] = o.vw_Wv;
            u[e.ovO][e.OW] = o.OoUVo;
            u[e.$uv] = [];
            u[e.$uv][e._v] = o.OVvVV;
            u[e.$uv][e.OW] = o.wUoWv;
            u[e.QwQ] = [];
            u[e.QwQ][e._v] = o.UvQVo;
            u[e.QwQ][e.OW] = o.Oo$0w;
            u[e.oOO] = [];
            u[e.oOO][e._v] = o.VOo_v;
            u[e.oOO][e.OW] = o.WVv$v;
            u[e.VUO] = [];
            u[e.VUO][e._v] = o.UWVwQ;
            u[e.VUO][e.OW] = o.O$VvV;
            u[e.u_o] = [];
            u[e.u_o][e._v] = [];
            u[e.u_o][e.OW] = [];
            u[e.u_o][e._v].push(o.VOo0Q);
            u[e.u_o][e._v].push(o.wUuV_);
            u[e.u_o][e._v].push(o.QOwuQ);
            u[e.u_o][e.OW].push(o.wvV$_);
            u[e.u_o][e.OW].push(o._w$vV);
            u[e.u_o][e.OW].push(o.oWOQW);
            u[e.W$O] = [];
            u[e.W$O][e._v] = [];
            u[e.W$O][e.OW] = [];
            u[e.W$O][e._v].push(o.OvQ$o);
            u[e.W$O][e._v].push(o.vvQW$);
            u[e.W$O][e._v].push(o.wvoo$);
            u[e.W$O][e.OW].push(o.vQW$$);
            u[e.W$O][e.OW].push(o._wow0);
            u[e.W$O][e.OW].push(o.vvOv_);
            u[e.u_W] = [];
            u[e.u_W][e._v] = [];
            u[e.u_W][e.OW] = [];
            u[e.u_W][e._v].push(o.owUow);
            u[e.u_W][e._v].push(o.Q_VWw);
            u[e.u_W][e._v].push(o._0WWv);
            u[e.u_W][e.OW].push(o.Qo_uo);
            u[e.u_W][e.OW].push(o.uV_uU);
            u[e.u_W][e.OW].push(o.uUWUQ);
            $VO.g = [];
            $VO.g[0] = [o.QouUQ, o.oQvWU];
            $VO.g[1] = $VO.g[0];
            $VO.g[2] = [o.WVW0U, o._wwWO];
            $VO.m = [];
            $VO.m[0] = [o._V$uo, o.QQWWQ];
            $VO.m[1] = $VO.m[0];
            $VO.m[2] = [o.oQWWQ, o.wWvu_];
            $VO.la = [];
            $VO.la[0] = [o.$VuUU, o.vVQu_];
            $VO.la[1] = $VO.la[0];
            $VO.la[2] = $VO.la[0];
            $VO.la[3] = $VO.la[0];
            $VO.la[4] = $VO.la[0];
            $VO.la[5] = $VO.la[0];
            $VO.s = [];
            $VO.s[0] = [o.vuOUo, o._0wvo];
            $VO.s[1] = $VO.s[0];
            $VO.s[2] = [o.QVuov, o.$$u0$];
            $VO.p = [];
            $VO.p[0] = [o.uvuW0, o.uvuW0];
            $VO.a = [];
            $VO.a[0] = [o.QVWOV, o._wVQu];
            $VO.a[1] = $VO.a[0];
            $VO.a[2] = $VO.a[0];
            $VO.d = [];
            $VO.d[0] = [o.WVv_U, o.QoOv$];
            $VO.d[1] = $VO.d[0];
            $VO.d[2] = $VO.d[0];
            $VO.re = [];
            $VO.re[0] = [o.QoOu_, o.oVQVw];
            $VO.re[1] = $VO.re[0];
            $VO.re[2] = $VO.re[0];
            $VO.f = [];
            $VO.f[0] = [o.WoOo0, o.uvvQU];
            $VO.f[1] = $VO.f[0];
            $VO.f[2] = $VO.f[0];
            $VO.isl = [];
            $VO.isl[0] = [o.U0_u$, o.WoUUo];
            $VO.isl[1] = $VO.isl[0];
            $VO.isl[2] = $VO.isl[0];
            $VO.c = [];
            $VO.c[0] = [o.Wuuwo, o.OW_u$];
            $VO.c[1] = $VO.c[0];
            $VO.c[2] = $VO.c[0];
            $VO.wtb = [];
            $VO.wtb[0] = [o.wVUQ$, o.W$vo0];
            $VO.PIRANHA = [o.o0vVV, o.wV$_Q];
            $VO.KRAKEN = [o.QV$_0, o.v$QuV];
            $VO.FOX = [o._U$U0, o.Q0V00];
            $VO.WOLF = [o.$WWVV, o.uUWO_];
            $VO.SPIDER = [o.$UOWO, o.OQu$v];
            $VO.BEAR = [o.vOVwv, o.wWOow];
            $VO.CAVE = [o.Ovw$$, o.WO_U$];
            $VO.MAP = [o.vvw$$, o.uvvVW];
            $VO.FOREST = [o.oU$vW, o.wuVoV];
            $VO.WINTER = [o.VVWWU, o.o$UQo];
            $VO.DESERT = [o.vUwwu, o.vWuWo];
            $VO.LAVA = [o.u_o$o, o.WVU0U];
            for (var g in $VO)
                for (var d = $VO[g], c = 0; c < d.length; c++) {
                    var h = d[c];
                    if (void 0 !== h.vQo) h.vQo();
                    else if (0 < h.length)
                        for (var k = 0; k < h.length; k++)(void 0 !== h[k].vQo) && h[k].vQo();
                }
            console.log("Load images", Date.now() - f);
        };

        function ei() {
            var a = (new Date).getTime();
            xg();
            u[e.ouvoO] = N(1, [{
                f: Yc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#352b10 #c06937 #cd733b #b25e34 #244e2b #214224 #6f4424 #3c3009".split(" ")
            }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.Q_W0O] = u[e.ouvoO];
            u[e.OUV] = [];
            u[e.OUV][0] = o.U$vwu;
            u[e.OUV][1] = o.QOQW0;
            u[e.OUV][2] = o.O_w_u;
            u[e.VuOuw] = u[e.OUV];
            u[e.QUO] = [];
            u[e.QUO][0] = o.o$WUv;
            u[e.QUO][1] = o.Vo_wU;
            u[e.QUO][2] = o.$OOQw;
            u[e.__WoW] = u[e.QUO];
            u[e._ou] = [];
            u[e._ou][0] = o.V0OOw;
            u[e._ou][1] = o.WQO0u;
            u[e._ou][2] = o.VWQuw;
            u[e.WVUow] = u[e._ou];
            u[e.UWv] = [];
            u[e.UWv][0] = o.W0VvW;
            u[e.UWv][1] = o._o_OU;
            u[e.UWv][2] = o.V0$Wu;
            u[e.V$uWw] = u[e.UWv];
            u[e.VOU] = [];
            u[e.VOU][0] = o.QQQu_;
            u[e.VOU][1] = o.UQOuU;
            u[e.VOU][2] = o.W0_U$;
            u[e.u$UOQ] = u[e.VOU];
            u[e.$Wv] = [];
            u[e.$Wv][0] = o.Qouo$;
            u[e.$Wv][1] = o.wvWO_;
            u[e.$Wv][2] = o.oWVwW;
            u[e.UVvV0] = u[e.$Wv];
            u[e._VUwU] = u[e.$Wv];
            u[e.Vu_] = [];
            u[e.Vu_][0] = o.WoQ0O;
            u[e.Vu_][1] = o.OOuQO;
            u[e.Vu_][2] = o.O0vUU;
            u[e.o_uw0] = u[e.Vu_];
            u[e.U_Uuv] = u[e.Vu_];
            u[e.wU0] = [];
            u[e.wU0][0] = o.Vvw$u;
            u[e.wU0][1] = o.wUUww;
            u[e.wU0][2] = o.W_o$Q;
            u[e.uUoO0] = u[e.wU0];
            u[e.oOovW] = u[e.wU0];
            u[e.uvo] = [];
            u[e.uvo][0] = o.wuOov;
            u[e.uvo][1] = o.U0OuU;
            u[e.uvo][2] = o.Qv_00;
            u[e.UoWvU] = u[e.uvo];
            u[e.vwo_W] = u[e.uvo];
            u[e.UQO] = [];
            u[e.UQO][0] = o.WoV_0;
            u[e.UQO][1] = o.U$VU0;
            u[e.UQO][2] = o.QvOWO;
            u[e.VWQwO] = u[e.UQO];
            u[e._w$] = [];
            u[e._w$][0] = o.ouU0$;
            u[e._w$][1] = o.vVU0V;
            u[e._w$][2] = o.O$wOQ;
            u[e.$$U_v] = u[e._w$];
            u[e.V$UwW] = u[e._w$];
            u[e.VOu] = [];
            u[e.VOu][0] = o.O$o_U;
            u[e.VOu][1] = o.v$uuQ;
            u[e.VOu][2] = o.vwUv_;
            u[e.W0QOo] = u[e.VOu];
            u[e.u__Uo] = u[e.VOu];
            u[e.uv0] = [];
            u[e.uv0][0] = o.uWQ$W;
            u[e.uv0][1] = o.u0ooo;
            u[e.uv0][2] = o.ovovQ;
            u[e.WQOV0] = u[e.uv0];
            u[e._Q$0_] = u[e.uv0];
            u[e.WVQ] = [];
            u[e.WVQ][0] = o.u0WOu;
            u[e.WVQ][1] = o.Q0u_U;
            u[e.WVQ][2] = o.U0QUQ;
            u[e.wvVQ$] = u[e.WVQ];
            u[e.uOuO$] = u[e.WVQ];
            u[e._$V] = [];
            u[e._$V][0] = o.WOvwU;
            u[e._$V][1] = o.ooU_u;
            u[e._$V][2] = o.VQowv;
            u[e.wuQQw] = u[e._$V];
            u[e.oVsocket] = u[e._$V];
            u[e.o_O] = [];
            u[e.o_O][0] = o.O_vvU;
            u[e.o_O][1] = o.U_$wo;
            u[e.o_O][2] = o.WWuo$;
            u[e.OQwQV] = u[e.o_O];
            u[e.$_VvQ] = u[e.o_O];
            u[e.Uw0] = [];
            u[e.Uw0][0] = o.u0OO0;
            u[e.Uw0][1] = o.wW$_U;
            u[e.Uw0][2] = o.oUvOo;
            u[e.OUUQ_] = u[e.Uw0];
            u[e.wO$oQ] = u[e.Uw0];
            u[e.Wou] = [];
            u[e.Wou][0] = o._w$WQ;
            u[e.Wou][1] = o.w_Q__;
            u[e.Wou][2] = o.QuWwW;
            u[e.__vwQ] = u[e.Wou];
            u[e.v_U0v] = u[e.Wou];
            u[e.Qvu] = [];
            u[e.Qvu][0] = o._OvVv;
            u[e.Qvu][1] = o.VwwU_;
            u[e.Qvu][2] = o.v$oWQ;
            u[e.VUu$_] = u[e.Qvu];
            u[e.oV$W0] = u[e.Qvu];
            u[e._wo] = [];
            u[e._wo][0] = o.v0uU_;
            u[e._wo][1] = o.v0socket;
            u[e._wo][2] = o.WUvuU;
            u[e.WQWo$] = u[e._wo];
            u[e.W_u_0] = u[e._wo];
            u[e.wW$] = [];
            u[e.wW$][0] = o.vW_UU;
            u[e.wW$][1] = o.QowOu;
            u[e.wW$][2] = o.OuovO;
            u[e.WQOou] = u[e.wW$];
            u[e.ww$0u] = u[e.wW$];
            u[e.U$V] = [];
            u[e.U$V][0] = o.u0QW$;
            u[e.U$V][1] = o.oOO_Q;
            u[e.U$V][2] = o.u0Uov;
            u[e.vwOWQ] = u[e.U$V];
            u[e.OwvQQ] = u[e.U$V];
            u[e._oW] = [];
            u[e._oW][0] = o.$UvwW;
            u[e._oW][1] = o.vwQwO;
            u[e._oW][2] = o.O0VO0;
            u[e.WVUv_] = u[e._oW];
            u[e.OVw$w] = u[e._oW];
            u[e.uWo] = [];
            u[e.uWo][0] = o.Ovw$o;
            u[e.uWo][1] = o.$__uo;
            u[e.uWo][2] = o.Wo_00;
            u[e._uVVO] = u[e.uWo];
            u[e.$wu$o] = u[e.uWo];
            u[e.UUu] = [];
            u[e.UUu][0] = o._o$OO;
            u[e.UUu][1] = o.UVWOu;
            u[e.UUu][2] = o.vUO$0;
            u[e.uOOow] = u[e.UUu];
            u[e.wOw$Q] = u[e.UUu];
            u[e.VvV] = [];
            u[e.VvV][0] = o.o$wWQ;
            u[e.VvV][1] = o.VuoU0;
            u[e.VvV][2] = o.uUu_U;
            u[e.vWUOw] = u[e.VvV];
            u[e.wuw_v] = u[e.VvV];
            u[e.QV0] = [];
            u[e.QV0][0] = o.U$WQO;
            u[e.QV0][1] = o.V$$w0;
            u[e.QV0][2] = o.UoQ_w;
            u[e.Vw$wV] = u[e.QV0];
            u[e.U$uuo] = u[e.QV0];
            u[e.VV$] = [];
            u[e.VV$][0] = o.oQVuQ;
            u[e.VV$][1] = o.v_UoQ;
            u[e.VV$][2] = o.wQoov;
            u[e.Vvo_W] = u[e.VV$];
            u[e.uuOQV] = u[e.VV$];
            u[e.UvV] = [];
            u[e.UvV][0] = o.vOVVo;
            u[e.UvV][1] = o.WUuwO;
            u[e.UvV][2] = o.uVQW$;
            u[e.OwOo_] = u[e.UvV];
            u[e.QoovQ] = u[e.UvV];
            u[e.UOv] = [];
            u[e.UOv][0] = o.UVVQw;
            u[e.UOv][1] = o.VuvvV;
            u[e.UOv][2] = o.VwwWV;
            u[e.Qvwo0] = u[e.UOv];
            u[e.vuOuQ] = u[e.UOv];
            u[e.o_U] = [];
            u[e.o_U][0] = o._OuoV;
            u[e.o_U][1] = o.VQV$u;
            u[e.o_U][2] = o.VooOv;
            u[e.$UuUu] = u[e.o_U];
            u[e.V$V0$] = u[e.o_U];
            u[e.WWU] = [];
            u[e.WWU][0] = o._VuWW;
            u[e.WWU][1] = o.$Qw_w;
            u[e.WWU][2] = o.$0Wv$;
            u[e.u$ov0] = u[e.WWU];
            u[e._O_wO] = u[e.WWU];
            u[e._W0] = [];
            u[e._W0][0] = o._WvQW;
            u[e._W0][1] = o.wO_uU;
            u[e._W0][2] = o.v$$WV;
            u[e.$U$Oo] = u[e._W0];
            u[e.Q_vuQ] = u[e._W0];
            u[e.$w$WV] = N(1, [{
                f: Rc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
            }], 0.22, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.u$vou] = u[e.$w$WV];
            u[e.U$wOv] = N(1, [{
                f: Zc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#352b10 #349970 #245c45 #348361 #e8e8e8 #bbbbbb".split(" ")
            }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.Uv$Ou] = u[e.U$wOv];
            u[e.UwvVw] = N(1, [{
                f: Yd,
                x: -1,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #596560 #394841 #67766F #46554D #4C3B19 #674C2A #7C5A29 #596560 #394841".split(" ")
            }, {
                f: Zd,
                x: -1,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #596560 #394841 #67766F #46554D #4C3B19 #674C2A #7C5A29 #596560 #394841".split(" ")
            }, {
                f: $d,
                x: -1,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #596560 #394841 #67766F #46554D #4C3B19 #674C2A #7C5A29 #596560 #394841".split(" ")
            }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.oOvOV] = u[e.UwvVw];
            u[e.WuQw_] = N(1, [{
                f: rc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#A89F67", "#9E8456"]
            }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.$wOvw] = N(1, [{
                f: Bd,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#0d1b1c", "#44301b", "#57442a", "#523e26"]
            }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e._oOVQ] = u[e.$wOvw];
            u[e.Q0VVO] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#A89F67", "#9E8456"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.$_w_Q] = u[e.Q0VVO];
            u[e.O_OO0] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#493d36", "#332b28"]
            }], 0.7, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.oQU0_] = u[e.O_OO0];
            u[e.w_U] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#c67933", "#b17238"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.O0_0V] = u[e.w_U];
            u[e.u$O] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#e8e8e8", "#bbbbbb"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.W0UUU] = u[e.u$O];
            u[e._QQ] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#328a56", "#449573"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.vWUQ_] = u[e._QQ];
            u[e.vVU] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#c98e2f", "#a36b11"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.VOWvv] = u[e.vVU];
            u[e.UwOu0] = u[e.vVU];
            u[e.oQQ] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#13a56d", "#098a58"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.w_$u0] = u[e.oQQ];
            u[e.v$Quw] = u[e.oQQ];
            u[e.QwVOu] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#3a8214", "#4a9c1e"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.O$U_$] = u[e.QwVOu];
            u[e.woUQO] = u[e.QwVOu];
            u[e.socket] = N(1, [{
                f: va,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#b22419", "#99110e"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.QWVvu] = u[e.socket];
            u[e.WOUuO] = u[e.socket];
            u[e.WvOUo] = N(1, [{
                f: sc,
                x: -2,
                y: -2,
                a: 1,
                r: -Math.PI / 7,
                c: ["#4d2d14", "#432516"]
            }, {
                f: wd,
                x: -2,
                y: -2,
                a: 1,
                r: -Math.PI / 7,
                c: ["#efd435", "#ec8d35", "#e96132"]
            }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.wvoWo] = u[e.WvOUo];
            u[e.W0_] = N(1, [{
                f: ae,
                x: -2,
                y: -1,
                a: 1,
                r: -Math.PI / 7,
                c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
            }, {
                f: wd,
                x: -2,
                y: -1,
                a: 1,
                r: -Math.PI / 7,
                c: ["#efd435", "#ec8d35", "#e96132"]
            }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.wQQQV] = u[e.W0_];
            u[e.uVVuU] = N(1, [{
                f: ee,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #4a3a22 #362818 #c7c7c7 #909090 #eceaea #bbbbbb #d6d1d1".split(" ")
            }], 0.1, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e._$_v$] = N(1, [{
                f: je,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #ffffff #5f6061 #eb2933 #57b74e #42a54d #ac222a #e6636a".split(" ")
            }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e._vUv$] = N(1, [{
                f: de,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#252525 #73583e #493425 #7d6144 #5e4530 #563e2b".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.VuW$U] = N(1, [{
                f: fe,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #939393 #5f6061 #b1afaf #493d36 #332b28".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.Q$v_$] = N(1, [{
                f: ge,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #c4bc51 #b29c32 #c4bc51 #493e26 #382e19".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.$wWv$] = N(1, [{
                f: he,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #6ad9e8 #29aaa1 #95e9f5 #022320 #011e19 #FFFFFF".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.W$O_Q] = N(1, [{
                f: ie,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #b864d6 #8c29aa #cc81e7 #262114 #211108 #FFFFFF".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.QUOQU] = N(1, [{
                f: Ba,
                x: -2,
                y: 5,
                a: 1,
                r: -Math.PI / 5,
                c: "#0d1b1c #000000 #0d1b1c #4d2d14 #432516 #4d2d14 #432516".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.UwUu_] = N(1, [{
                f: Ba,
                x: -2,
                y: 5,
                a: 1,
                r: -Math.PI / 5,
                c: "#0d1b1c #000000 #0d1b1c #4d2d14 #432516 #939393 #5f6061".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vouUo] = N(1, [{
                f: Ba,
                x: -2,
                y: 5,
                a: 1,
                r: -Math.PI / 5,
                c: "#0d1b1c #000000 #0d1b1c #493e26 #382e19 #c4bc51 #b29c32".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vWQvo] = N(1, [{
                f: Ba,
                x: -2,
                y: 5,
                a: 1,
                r: -Math.PI / 5,
                c: "#0d1b1c #000000 #0d1b1c #262114 #211108 #63c9d6 #29aaa1".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.VO_UU] = N(1, [{
                f: Ba,
                x: -2,
                y: 5,
                a: 1,
                r: -Math.PI / 5,
                c: "#0d1b1c #000000 #0d1b1c #262114 #211108 #b864d6 #8c29aa".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.QQW] = [];
            u[e.QQW][0] = o.vQvou;
            u[e.QQW][1] = o.Vo_OO;
            u[e.QQW][2] = o.$QwVo;
            u[e.$WuQU] = u[e.QQW];
            u[e.vwUV0] = u[e.QQW];
            u[e.O_$] = N(1, [{
                f: Lb,
                x: -5,
                y: -5,
                a: 1,
                r: 0,
                c: ["#252B28", "#58645F", "#75827D"]
            }], 0.23, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.__O] = N(1, [{
                f: $a,
                x: -5,
                y: -5,
                a: 1,
                r: 0,
                c: ["#282823", "#877c2d", "#c4bc51"]
            }], 0.43, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.V$W] = N(1, [{
                f: Wa,
                x: -5,
                y: -5,
                a: 1,
                r: 0,
                c: ["#232828", "#3fc9c9", "#74ede6"]
            }], 0.33, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.UQw] = N(1, [{
                f: sc,
                x: 0,
                y: -5,
                a: 1,
                r: Math.PI / 2.5,
                c: ["#4d2d14", "#432516"]
            }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.vVOvo] = u[e._vUv$];
            u[e.uo$vu] = u[e.VuW$U];
            u[e._vO_0] = u[e.Q$v_$];
            u[e.UvwW0] = u[e.$wWv$];
            u[e.QUWov] = u[e.W$O_Q];
            u[e.O0woo] = u[e.QUOQU];
            u[e.WUQv0] = u[e.UwUu_];
            u[e.QoVo_] = u[e.vouUo];
            u[e.W$_OQ] = u[e.vWQvo];
            u[e.uuQv0] = u[e.VO_UU];
            u[e.v$wv0] = N(1, [{
                f: kh,
                x: 0,
                y: 0,
                a: 1,
                r: 0
            }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.$wWVu] = N(1, [{
                f: Xd,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #4d2d14 #432516 #756e52 #663f22 #9e9577".split(" ")
            }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.U$OoW] = u[e.$wWVu];
            u[e.u0v] = N(1, [{
                f: yc,
                x: -2,
                y: -2,
                a: 1,
                r: 0,
                c: "#0d1b1c #6a7570 #939995 #9baaa3 #adbcb5 #8a938e".split(" ")
            }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.ooQw0] = u[e.u0v];
            u[e.vvVuO] = N(1, [{
                f: ne,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #5cc5ce #89d1d4 #86d0d1 #95d5d8 #e0f2f6 #b3e0e3".split(" ")
            }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.QQU$$] = u[e.vvVuO];
            u[e.oVv0o] = N(1, [{
                f: yc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #b15ecf #8c29aa #c26de0 #af59cd #d588f1".split(" ")
            }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.QVuOv] = u[e.oVv0o];
            u[e.U0uuU] = N(1, [{
                f: oe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #877d36 #a08f47 #a7983c #b29e4d #c1b06b".split(" ")
            }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.oQO_O] = u[e.U0uuU];
            u[e.U0QWO] = N(1, [{
                f: me,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #4c3a15 #634828 #564021 #634828 #4c3a15".split(" ")
            }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.U0_QV] = u[e.U0QWO];
            u[e.$uQ$_] = N(1, [{
                f: De,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #5f6061 #939393 #4c3a15 #634828 #564021 #634828 #4c3a15".split(" ")
            }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.UWQoo] = u[e.$uQ$_];
            u[e.w_Uwu] = N(1, [{
                f: Ad,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #5f6061 #939393 #877d36 #a08f47 #a7983c #b29e4d #c1b06b".split(" ")
            }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e._vUQV] = u[e.w_Uwu];
            u[e._QOwW] = N(1, [{
                f: Ad,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #7d8b90 #9facaa #5cc5ce #89d1d4 #86d0d1 #95d5d8 #e0f2f6 #b3e0e3".split(" ")
            }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.vvWuQ] = u[e._QOwW];
            u[e.uU$$v] = N(1, [{
                f: zc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #5f6061 #939393 #6a7570 #939995 #9baaa3 #adbcb5 #8a938e".split(" ")
            }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.V_UQW] = u[e.uU$$v];
            u[e.VwQuu] = N(1, [{
                f: zc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #5f6061 #939393 #b15ecf #8c29aa #c26de0 #af59cd #d588f1".split(" ")
            }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.QWWVW] = u[e.VwQuu];
            u[e._UOou] = N(1, [{
                f: Nb,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #4c3b19 #574122 #644928 #574122 #735534".split(" ")
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.U_UOO] = u[e._UOou];
            u[e.UWu] = N(1, [{
                f: Ca,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #6a7570 #939995 #9baaa3 #8a938e #adbcb5".split(" ")
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e._WQ0$] = u[e.UWu];
            u[e.UUWVv] = N(1, [{
                f: Ca,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #b15ecf #8c29aa #c26de0 #af59cd #d588f1".split(" ")
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.w$WwQ] = u[e.UUWVv];
            u[e._wOV_] = N(1, [{
                f: Ub,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #877d36 #a08f47 #a7983c #9a8636 #c1b06b".split(" ")
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.u_V0U] = u[e._wOV_];
            u[e.WWQoO] = N(1, [{
                f: Ob,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #5cc5ce #89d1d4 #86d0d1 #95d5d8 #e0f2f6 #b3e0e3".split(" ")
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.OOOv$] = u[e.WWQoO];
            u[e.vWUOQ] = N(1, [{
                f: Ae,
                x: 0,
                y: 2,
                a: 1,
                r: 0,
                c: "#133a2b #9e8838 #c4a23a #4c3b19 #614627 #614627 #614627 #c4a23a #c4a23a #c4a23a".split(" ")
            }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.QoUuV] = u[e.vWUOQ];
            u[e.VVWoW] = N(1, [{
                f: Jf,
                x: 0,
                y: -3,
                a: 1,
                r: 0,
                c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
            }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.OWuuv] = N(1, [{
                f: Jf,
                x: 0,
                y: -3,
                a: 1,
                r: 0,
                c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
            }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.u0QUV] = u[e.OWuuv];
            u[e.OoQuV] = N(1, [{
                f: Mf,
                x: -3,
                y: -3,
                a: 1,
                r: 0,
                c: ["#cec0c4", "#ffffff", "#6d6768"]
            }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.$UOO$] = N(1, [{
                f: Mf,
                x: -3,
                y: -3,
                a: 1,
                r: 0,
                c: ["#d4e9ec", "#37b1d7", "#506c71"]
            }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.v0W_v] = u[e.$UOO$];
            u[e.uQvU0] = N(1, [{
                f: Uc,
                x: -3,
                y: -3,
                a: 1,
                r: 0,
                c: ["#ef96be", "#ffffff"]
            }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.Qvsocket] = N(1, [{
                f: Uc,
                x: -3,
                y: -3,
                a: 1,
                r: 0,
                c: ["#55423e", "#ffffff"]
            }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.oVoQv] = N(1, [{
                f: Tf,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
            }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.vvOwv] = N(1, [{
                f: Tf,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
            }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.WwuU0] = N(1, [{
                f: Uc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#201851", "#b6222a"]
            }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.uQVoU] = N(1, [{
                f: Uc,
                x: -3,
                y: -3,
                a: 1,
                r: 0,
                c: ["#231f20", "#b6222a"]
            }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.uu_wW] = N(1, [{
                f: Uc,
                x: -3,
                y: -3,
                a: 1,
                r: 0,
                c: ["#ffffff", "#b6222a"]
            }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.Wv0] = N(1, [{
                f: Be,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
            }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.O0_] = u[e.Wv0];
            u[e.$Q$U$] = N(1, [{
                f: qe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
            }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e._Uo_o] = u[e.$Q$U$];
            u[e.w0UwO] = N(1, [{
                f: Ce,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
            }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vuwW_] = u[e.w0UwO];
            u[e.$Vu_0] = N(1, [{
                f: ce,
                x: 0,
                y: 5,
                a: 1,
                r: 0,
                c: "#171a19 #c5232c #84191d #a72027 #fef4f4 #e9dad9".split(" ")
            }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.$vWQv] = u[e.$Vu_0];
            u[e.wUV_v] = N(1, [{
                f: be,
                x: 0,
                y: 5,
                a: 1,
                r: 0,
                c: "#171a19 #0f964c #106e3b #138344 #fef4f4 #e9dad9 #C5232C #A92D2D".split(" ")
            }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.V$UV0] = u[e.wUV_v];
            u[e.WvVUV] = N(1, [{
                f: th,
                x: -2,
                y: -2,
                a: 1,
                r: 0,
                c: ["#ffffff", "#cec0c4"]
            }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.u_uvW] = u[e.WvVUV];
            u[e.Qvw] = [];
            u[e.Qvw][0] = o.wO$00;
            u[e.Qvw][1] = o.wuv__;
            u[e.Qvw][2] = o.VWOuO;
            u[e.wo$o0] = u[e.Qvw];
            u[e.QWv] = [];
            u[e.QWv][0] = o.$0OUO;
            u[e.QWv][1] = o.VwuwV;
            u[e.QWv][2] = o.QwWo0;
            u[e.$VoWW] = u[e.QWv];
            u[e.vwo_$] = u[e.QWv];
            u[e.UVQ] = [];
            u[e.UVQ][0] = o.O$QvW;
            u[e.UVQ][1] = o.QwoQo;
            u[e.UVQ][2] = o.o_vvU;
            u[e.OvVVQ] = u[e.UVQ];
            u[e.ouuVQ] = u[e.UVQ];
            u[e.W$Q] = [];
            u[e.W$Q][0] = o.vV$vW;
            u[e.W$Q][1] = o.vV$vW;
            u[e.W$Q][2] = o.vV$vW;
            u[e.WoQwQ] = u[e.W$Q];
            u[e.u$o] = [];
            u[e.u$o][0] = o.vWQU$;
            u[e.u$o][1] = o.Qu$_U;
            u[e.u$o][2] = o.U$OvQ;
            u[e.U_WwV] = u[e.u$o];
            u[e.U0u0w] = u[e.u$o];
            u[e.uu0] = [];
            u[e.uu0][0] = o.Wu$__;
            u[e.uu0][1] = o.Wu$__;
            u[e.uu0][2] = o.Wu$__;
            u[e.VOVOV] = u[e.uu0];
            u[e.uWw] = [];
            u[e.uWw][0] = o.W_UVo;
            u[e.uWw][1] = o.W$uvV;
            u[e.uWw][2] = o.QO$WV;
            u[e.QWUuO] = u[e.uWw];
            u[e.wvouV] = u[e.uWw];
            u[e.oQ_] = [];
            u[e.oQ_][0] = o.wOOWu;
            u[e.oQ_][1] = o.OWQuW;
            u[e.oQ_][2] = o.OUOUv;
            u[e.wOsocket] = u[e.oQ_];
            u[e.O_$$W] = u[e.oQ_];
            u[e.w__] = [];
            u[e.w__][0] = o.VUWu0;
            u[e.w__][1] = o.VwuwO;
            u[e.w__][2] = o.$vo0V;
            u[e.$0uwO] = u[e.w__];
            u[e.OVuWV] = u[e.w__];
            u[e._O0] = [];
            u[e._O0][0] = o.W0v_0;
            u[e._O0][1] = o.UQVw0;
            u[e._O0][2] = o.wouvW;
            u[e.QUWUw] = u[e._O0];
            u[e.VO__Q] = u[e._O0];
            u[e.Qv_] = [];
            u[e.Qv_][0] = o.U$$QV;
            u[e.Qv_][1] = o._o_U$;
            u[e.Qv_][2] = o._$o00;
            u[e.QV$uQ] = u[e.Qv_];
            u[e.uu_OW] = u[e.Qv_];
            u[e.V_0] = [];
            u[e.V_0][0] = o.oQUO0;
            u[e.V_0][1] = o.wQ$0w;
            u[e.V_0][2] = o._VV0V;
            u[e.OvU_U] = u[e.V_0];
            u[e.VVOuQ] = u[e.V_0];
            u[e.uoO] = [];
            u[e.uoO][0] = o.Q$u0v;
            u[e.uoO][1] = o.VVUvU;
            u[e.uoO][2] = o._VQU0;
            u[e.VoQVo] = u[e.uoO];
            u[e.uwWVO] = u[e.uoO];
            u[e.W_o] = [];
            u[e.W_o][0] = o.voO$Q;
            u[e.W_o][1] = o.U$wuQ;
            u[e.W_o][2] = o.voU__;
            u[e.u0UQ0] = u[e.W_o];
            u[e.UUOU0] = u[e.W_o];
            u[e.OUQ] = [];
            u[e.OUQ][0] = o.oWQuQ;
            u[e.OUQ][1] = o._WUv_;
            u[e.OUQ][2] = o.Q$UwQ;
            u[e._uQWv] = u[e.OUQ];
            u[e.vUoV_] = u[e.OUQ];
            u[e.OQu] = [];
            u[e.OQu][0] = o.Vwoo0;
            u[e.OQu][1] = o.V_vWO;
            u[e.OQu][2] = o.wuwuw;
            u[e.WOuvv] = u[e.OQu];
            u[e.Qo$Vu] = u[e.OQu];
            u[e.Oo0] = [];
            u[e.Oo0][0] = o.Oo0;
            u[e.Oo0][1] = o.Oo0;
            u[e.Oo0][2] = o.Oo0;
            u[e.oUoQO] = u[e.Oo0];
            u[e.OoWVo] = u[e.Oo0];
            u[e.$QV] = [];
            u[e.$QV][0] = o.$QV;
            u[e.$QV][1] = o.$QV;
            u[e.$QV][2] = o.$QV;
            u[e.OuUuv] = u[e.$QV];
            u[e.QvVW0] = u[e.$QV];
            u[e.vw0] = [];
            u[e.vw0][0] = o.vw0;
            u[e.vw0][1] = o.vw0;
            u[e.vw0][2] = o.vw0;
            u[e.OWQVv] = u[e.vw0];
            u[e.vvuOo] = u[e.vw0];
            u[e.Qv0] = [];
            u[e.Qv0][0] = o.Qv0;
            u[e.Qv0][1] = o.Qv0;
            u[e.Qv0][2] = o.Qv0;
            u[e.wOW0o] = u[e.Qv0];
            u[e.ooQ] = [];
            u[e.ooQ][0] = o.$VQUW;
            u[e.ooQ][1] = o.WuQvo;
            u[e.ooQ][2] = o.u$OvU;
            u[e.wvuw_] = u[e.ooQ];
            u[e.oOuwV] = u[e.ooQ];
            u[e.wUW] = [];
            u[e.wUW][0] = o.OU$OV;
            u[e.wUW][1] = o.V0Qw0;
            u[e.wUW][2] = o.o$OQ_;
            u[e.Q$vuQ] = u[e.wUW];
            u[e.UW$oo] = u[e.wUW];
            u[e.WoU] = [];
            u[e.WoU][0] = o._WQV$;
            u[e.WoU][1] = o.o_UwO;
            u[e.WoU][2] = o.QOw0U;
            u[e.UuQv_] = u[e.WoU];
            u[e.V$u0O] = u[e.WoU];
            u[e._OU] = [];
            u[e._OU][0] = o.Qo$oW;
            u[e._OU][1] = o.UUuQ$;
            u[e._OU][2] = o._uW$Q;
            u[e.UW_U_] = u[e._OU];
            u[e.$oQW$] = u[e._OU];
            u[e.O$U] = [];
            u[e.O$U][0] = o.O$_Oo;
            u[e.O$U][1] = o.w$Q_V;
            u[e.O$U][2] = o.WO$u0;
            u[e.U_wv0] = u[e.O$U];
            u[e.VoV$Q] = u[e.O$U];
            u[e._VU] = [];
            u[e._VU][0] = o.wOo0W;
            u[e._VU][1] = o.$$O_v;
            u[e._VU][2] = o._Ow_V;
            u[e.$$uVV] = u[e._VU];
            u[e.WoU00] = u[e._VU];
            u[e.voO] = [];
            u[e.voO][0] = o._vQ$v;
            u[e.voO][1] = o._wOvO;
            u[e.voO][2] = o.$V_Uv;
            u[e.Q_Ww0] = u[e.voO];
            u[e.WoO0$] = u[e.voO];
            u[e.vvw] = [];
            u[e.vvw][0] = o.V$QQ_;
            u[e.vvw][1] = o.uOOOV;
            u[e.vvw][2] = o.OvvVU;
            u[e.Qwov_] = u[e.vvw];
            u[e.uvOOo] = u[e.vvw];
            u[e.Oov] = [];
            u[e.Oov][0] = o.VUO0U;
            u[e.Oov][1] = o._Q$QV;
            u[e.Oov][2] = o._$wwV;
            u[e.voQUv] = u[e.Oov];
            u[e.V_V_O] = u[e.Oov];
            u[e.oUv] = [];
            u[e.oUv][0] = o.v$vWQ;
            u[e.oUv][1] = o.vWVV0;
            u[e.oUv][2] = o.ow$_w;
            u[e.V$vwQ] = u[e.oUv];
            u[e.WVo$v] = u[e.oUv];
            u[e.VVQ] = [];
            u[e.VVQ][0] = o.VUQ0u;
            u[e.VVQ][1] = o.oOu$_;
            u[e.VVQ][2] = o.wvwwv;
            u[e.uOVWO] = u[e.VVQ];
            u[e.ou$Vv] = u[e.VVQ];
            u[e.UUw] = [];
            u[e.UUw][0] = o.uO$wV;
            u[e.UUw][1] = o.Ouu_U;
            u[e.UUw][2] = o.oUvvU;
            u[e.v0OOv] = u[e.UUw];
            u[e.vVV0$] = u[e.UUw];
            u[e.$oQ] = [];
            u[e.$oQ][0] = o._QQwW;
            u[e.$oQ][1] = o.UOw0w;
            u[e.$oQ][2] = o.w_QoO;
            u[e.W$$OV] = u[e.$oQ];
            u[e.vouoV] = u[e.$oQ];
            u[e.vQQ__] = N(1, [{
                f: Se,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #515C57 #3A4942 #68736F #C1C0C0 #be8d50 #7d5234 #222825 #4D5752 #e48727 #d4a872 #232a27".split(" ")
            }, {
                f: Te,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#e4c027"]
            }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.wVvuu] = u[e.vQQ__];
            u[e.$vwuO] = N(1, [{
                f: pe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #939393 #5f6061 #c0c0c0 #ffad22 #fffdd5 #fee764".split(" ")
            }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.voWUw] = u[e.$vwuO];
            u[e.W$uvU] = N(1, [{
                f: se,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #554139 #3f332a #261912 #eee6c5 #d1c599 #554139 #3f332a #86509b #703a99 #ded4b4 #d6ceab #c796c2 #bc83b7 #ffffff #87519c #703e94 #3eb67f #218f65 #efe7c5 #d093c4".split(" ")
            }], 0.32, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e._OO0w] = u[e.W$uvU];
            u[e.oU$vo] = u[e.W$uvU];
            u[e.QwQV_] = N(1, [{
                f: Vf,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
            }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.VvWWV] = u[e.QwQV_];
            u[e.uU$ou] = N(1, [{
                f: te,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #58452b #47341d #ee593d #c04933 #c04933 #a33e2b #c3be9a #7f6d52".split(" ")
            }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e._w_ww] = u[e.uU$ou];
            u[e.U0Ow_] = u[e.uU$ou];
            u[e._uw] = N(1, [{
                f: ue,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #58452b #47341d #765d42 #c3be9a #7f6d52".split(" ")
            }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.$W$Wu] = u[e._uw];
            u[e.Q$QQW] = N(1, [{
                f: ve,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #4d2d14 #432516 #c3be9a #7f6d52 #7a7575 #454749 #8c8787 #939393 #5f6061 #aaa6a6".split(" ")
            }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vQQ_u] = u[e.Q$QQW];
            u[e.$OuQQ] = N(1, [{
                f: we,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #493e26 #382e19 #a69e39 #9c8828 #bab143 #c4bc51 #b29c32 #d2ca59".split(" ")
            }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e._oo$o] = u[e.$OuQQ];
            u[e.uowWO] = N(1, [{
                f: xe,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #262114 #211108 #4ba8b4 #198a82 #6ccad7 #63c9d6 #29aaa1 #7bd9e6".split(" ")
            }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.VuQUv] = u[e.uowWO];
            u[e.OwQv0] = N(1, [{
                f: ye,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #262114 #211108 #9443b1 #6f1988 #a752c6 #9e35be #8c29aa #b864d6".split(" ")
            }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.wQQow] = u[e.OwQv0];
            u[e.uQ0] = N(1, [{
                f: ze,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #1e2b34 #151c24 #99d7dd #7dcbd1 #c6e8eb #aadee8 #b7e2e5".split(" ")
            }], 0.38, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vu$_w] = u[e.uQ0];
            u[e.uVuoO] = u[e.uQ0];
            u[e.vUUow] = N(1, [{
                f: ab,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
            }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.owOvO] = u[e.vUUow];
            u[e.VOo$Q] = N(1, [{
                f: bf,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: ["#0d1b1c", "#939393", "#5f6061"]
            }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vQuWQ] = u[e.VOo$Q];
            u[e.ovuV$] = N(1, [{
                f: Qe,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #9b5927 #7a3610 #1e0302 #0d825b #6bd16e #17915d #89e5aa #16935d #a0efc4 #28b26d #cdf4cb #42cc90".split(" ")
            }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vVOUu] = u[e.ovuV$];
            u[e.$$Ouw] = N(1, [{
                f: ab,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
            }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.$Owu_] = u[e.$$Ouw];
            u[e.Q$ovQ] = N(1, [{
                f: ab,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
            }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.VOvuQ] = u[e.Q$ovQ];
            u[e.VQOuv] = N(1, [{
                f: ab,
                x: 2,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
            }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.vuov0] = u[e.VQOuv];
            u[e.W$u] = [];
            u[e.W$u][0] = o.vUoO_;
            u[e.W$u][1] = o.QUv$o;
            u[e.W$u][2] = o.wvwu0;
            u[e.uV_o_] = u[e.W$u];
            u[e.__uO$] = u[e.W$u];
            u[e.oVU] = [];
            u[e.oVU][0] = o.VUUVu;
            u[e.oVU][1] = o.Q0VV_;
            u[e.oVU][2] = o.OVu$$;
            u[e.o$VUV] = u[e.oVU];
            u[e.w0Qvw] = u[e.oVU];
            u[e.UWV] = [];
            u[e.UWV][0] = o.WQoVQ;
            u[e.UWV][1] = o.$OuUu;
            u[e.UWV][2] = o.vWOW0;
            u[e.Q0V_w] = u[e.UWV];
            u[e.$vWwV] = u[e.UWV];
            u[e.$VQ] = [];
            u[e.$VQ][0] = o.VOuUO;
            u[e.$VQ][1] = o._oO$W;
            u[e.$VQ][2] = o.WQow_;
            u[e.wVvQu] = u[e.$VQ];
            u[e.O$uO_] = u[e.$VQ];
            u[e.$$0] = [];
            u[e.$$0][0] = o.WOvOV;
            u[e.$$0][1] = o.wVuQ_;
            u[e.$$0][2] = o.o0$Qo;
            u[e.uu_oQ] = u[e.$$0];
            u[e.V0vUU] = u[e.$$0];
            u[e.ou$] = [];
            u[e.ou$][0] = o.oUOo_;
            u[e.ou$][1] = o.UvUoO;
            u[e.ou$][2] = o.V_$W0;
            u[e.U0__O] = u[e.ou$];
            u[e.VVQU$] = u[e.ou$];
            u[e.V$o] = [];
            u[e.V$o][0] = o.$wO$Q;
            u[e.V$o][1] = o.WWvoO;
            u[e.V$o][2] = o.$Q$W$;
            u[e.O0$wu] = u[e.V$o];
            u[e.VwUoQ] = u[e.V$o];
            u[e.UwUVo] = N(1, [{
                f: Ac,
                x: -2,
                y: -2,
                a: 1,
                r: 0,
                c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
            }], 0.8, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.wUou$] = u[e.UwUVo];
            u[e.WVVww] = N(1, [{
                f: Bc,
                x: -2,
                y: -2,
                a: 1,
                r: -Math.PI / 5,
                c: ["#141414", "#c4a23a", "#816511"]
            }], 0.08, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.VWQvV] = u[e.WVVww];
            u[e.uQouu] = N(1, [{
                f: Fd,
                x: -2,
                y: -2,
                a: 1,
                r: 0,
                c: ["#141414", "#178a99", "#0a6372", "#03282e"]
            }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
            u[e.Quu] = N(1, [{
                f: Fd,
                x: -2,
                y: -2,
                a: 1,
                r: 0,
                c: ["#120202", "#991616", "#750a0a", "#120202"]
            }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
            u[e.oUooo] = N(1, [{
                f: Le,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#347f93", "#54a4ba"]
            }, {
                f: Oe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#347f93 #54a4ba #1c2528 #a9e4ed #86d4e0 #959da0 #697072 #929da0 #afb9bc #418ba5 #59b8ce".split(" ")
            }, {
                f: Ne,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#a9e4ed", "#86d4e0"]
            }, {
                f: Me,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
            }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.owuww] = u[e.oUooo];
            u[e.UuWOQ] = N(1, [{
                f: Ed,
                x: 45,
                y: 70,
                a: 1,
                r: 0,
                c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.vuuwO] = u[e.UuWOQ];
            u[e.w_QvU] = N(1, [{
                f: Ke,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #8c55b7 #652d8e #79359e #5eccd1 #4badad #9e6ac6".split(" ")
            }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.$v$vu] = u[e.w_QvU];
            u[e.Q00] = N(1, [{
                f: Xe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
            }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.V0O_Q] = u[e.Q00];
            u[e._$Q] = N(1, [{
                f: We,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#2a2938", "#242330", "#313041"]
            }], 0.25, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.$oQ0Q] = u[e._$Q];
            u[e.W0V] = N(1, [{
                f: Cc,
                x: 0,
                y: 3,
                a: 1,
                r: 0,
                c: "#1d1d22 #e2e1e1 #d2cbcb #cfcbc8 #beb5b5 #ada0a0".split(" ")
            }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.oUuvu] = u[e.W0V];
            u[e.V0_] = N(1, [{
                f: Cc,
                x: 0,
                y: 3,
                a: 1,
                r: 0,
                c: "#1d1d22 #8c7654 #785f4c #a88e6c #785f4c #705845".split(" ")
            }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.oUuQ0] = u[e.V0_];
            u[e.O$o0Q] = N(1, [{
                f: Pb,
                x: 0,
                y: 10,
                a: 1,
                r: 0,
                c: "#0d1b1c #A5A244 #D8DC74 #C0BF55 #49B669 #19994C #71C187".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.WVQ0V] = u[e.O$o0Q];
            u[e.$_u] = N(1, [{
                f: Pb,
                x: 0,
                y: 10,
                a: 1,
                r: 0,
                c: "#0d1b1c #A5A244 #D8DC74 #C0BF55 #C45727 #994617 #DB9358".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.UV_UV] = u[e.$_u];
            u[e.U0_] = N(1, [{
                f: Pb,
                x: 0,
                y: 10,
                a: 1,
                r: 0,
                c: "#0d1b1c #A5A244 #D8DC74 #C0BF55 #2792C1 #196599 #59C0D8".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.WvwOw] = u[e.U0_];
            u[e.WWVO0] = N(1, [{
                f: re,
                x: -1,
                y: 0,
                a: 1,
                r: 0,
                c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.UUuuv] = u[e.WWVO0];
            u[e.vVU_Q] = u[e.WWVO0];
            u[e.QvUuu] = N(1, [{
                f: Fe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#0d1b1c #cae9eb #75bcae #ffffff #51736d #2b4d48 #1b3a3a #80ccca #59ada7".split(" ")
            }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.O_wwo] = u[e.QvUuu];
            u[e.$wO] = N(1, [{
                f: Wc,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
            }], 0.75, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.W$o__] = u[e.$wO];
            u[e.VUv_U] = N(1, [{
                f: og,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
            }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.VU__O] = N(1, [{
                f: ng,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
            }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e._u$0O] = N(1, [{
                f: og,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
            }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.u$U] = N(1, [{
                f: ng,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
            }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.$uv0W] = N(1, [{
                f: Pe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
            }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.OouUu] = N(1, [{
                f: Pe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
            }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.uUoWQ] = N(1, [{
                f: Pe,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
            }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.__u$W] = N(1, [{
                f: Xa,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #6d5041 #4f3d35 #939393 #5f6061 #757575".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.Qvvow] = u[e.__u$W];
            u[e.o0OWU] = N(1, [{
                f: Xa,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #493e26 #382e19 #c4bc51 #b29c32 #b4ac45".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.v$$OW] = u[e.o0OWU];
            u[e.vuvWU] = N(1, [{
                f: Xa,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #262114 #211108 #63c9d6 #29aaa1 #42aab8".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.oOU$V] = u[e.vuvWU];
            u[e._Uv0Q] = N(1, [{
                f: Xa,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#0d1b1c #262114 #211108 #b864d6 #8c29aa #a853c7".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.$$QW0] = u[e._Uv0Q];
            u[e.u_wUO] = N(1, [{
                f: Ge,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#c9a65f #ae863f #655530 #4a391c #ebdd79 #4a421c".split(" ")
            }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.WQUQW] = u[e.u_wUO];
            u[e.$QOoU] = N(1, [{
                f: He,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#252525", "#73583e", "#493425", "#7d6144"]
            }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e._0OOQ] = u[e.$QOoU];
            u[e.WUw_W] = N(1, [{
                f: Dd,
                x: 0,
                y: -2,
                a: 1,
                r: 0,
                c: "#252525 #808080 #4a4a4a #9e9c8b #615c53 #686969 #8a8776 #555555 #747474 #969696 #454545".split(" ")
            }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e._OW0W] = u[e.WUw_W];
            u[e.w0U] = N(1, [{
                f: Ie,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#dbce71", "#b29c32", "#c4bc51"]
            }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.uvO_Q] = u[e.w0U];
            u[e.Q_o] = N(1, [{
                f: Je,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#717171 #485252 #555555 #65c7cd #4aadad #358d8b #c1e6ea #a6dce4".split(" ")
            }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.Uwww$] = u[e.Q_o];
            u[e._0v] = N(1, [{
                f: Qh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#511f00 #2f1300 #ffffff #d4d4d4 #5b2400 #984e21".split(" ")
            }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.VOvwQ] = u[e._0v];
            u[e.u0o] = N(1, [{
                f: Rh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#221e1b", "#ffffff", "#f6f0e7"]
            }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.WUoQU] = u[e.u0o];
            u[e.uO0] = N(1, [{
                f: Gb,
                x: -5,
                y: -5,
                a: 1,
                r: 0,
                c: ["#1d051e", "#c27add", "#cd98e5"]
            }], 0.31, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e._wUvW] = N(1, [{
                f: sg,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#D7C393", "#a48c6c"]
            }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.OOVw_] = N(1, [{
                f: Th,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#93CBCE", "#E9F6F6"]
            }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.QW$U$] = N(1, [{
                f: sg,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#866432", "#6b4f25"]
            }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.oUvoQ] = N(1, [{
                f: ai,
                x: 3,
                y: 2,
                a: 1,
                r: 0,
                c: "#1e2021 #674C2A #4C3B19 #2f2211 #785931 #1678a2".split(" ")
            }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.v_woU] = N(1, [{
                f: $h,
                x: 3,
                y: 2,
                a: 1,
                r: 0,
                c: "#1e2021 #674C2A #4C3B19 #2f2211 #785931 #1678a2".split(" ")
            }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.UoOvU] = u[e.oUvoQ];
            u[e.oo_o$] = u[e.v_woU];
            u[e.o$oUu] = N(1, [{
                f: Xc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#1e2021 #717273 #606162 #a09f9f #878787 #454545".split(" ")
            }], 0.1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.wQW_O] = u[e.o$oUu];
            u[e.W_$w$] = N(1, [{
                f: Ye,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#C6AF81 #C98435 #B26F31 #53A4D5 #388AC7 #C1C0C0 #EAEAEA".split(" ")
            }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.wwVOQ] = N(1, [{
                f: Yh,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 5,
                c: "#C6AF81 #C98435 #B26F31 #53A4D5 #388AC7 #C1C0C0 #EAEAEA".split(" ")
            }], 0.18, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.$Ww] = u[e.W_$w$];
            u[e.$UQUv] = u[e.wwVOQ];
            u[e.O$v_V] = N(1, [{
                f: vh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
            }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.OOUwV] = u[e.O$v_V];
            u[e.o__UV] = N(1, [{
                f: wh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#1a1011 #e29c2b #b76413 #d6c418 #e0bf32 #b78a1a #aa1a17 #cc9f2f #cc741d #b51524 #bc1522 #991922 #a01ed5 #d51e81".split(" ")
            }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e._vu$v] = N(1, [{
                f: xh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#1a1011 #693c2a #54311f #9f7a3d #492d1d #dbb175 #54311f #9f7a3d #604720".split(" ")
            }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.W_Ouu] = N(1, [{
                f: qg,
                x: 0,
                y: -2,
                a: 1,
                r: 0,
                c: "#1d051e #bf8d51 #7d5133 #e8d6bf #e0c8a9 #ab7a3f".split(" ")
            }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.voOOo] = u[e.W_Ouu];
            u[e.VoWvv] = N(1, [{
                f: Ah,
                x: -3,
                y: -5,
                a: 1,
                r: 0,
                c: "#1d051e #63767c #424f51 #6c8288 #536468 #202020 #ffffff #806f60 #514942 #756557".split(" ")
            }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.uvuvO] = N(1, [{
                f: Bh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#1d051e", "#42261A", "#281818"]
            }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.O0Quo] = u[e.uvuvO];
            u[e.Ov_Qv] = N(1, [{
                f: ke,
                x: -3,
                y: 0,
                a: 1,
                r: 0,
                c: "#1e2021 #65A8B7 #2E85A0 #14275B #081826 #1A3163 #0C1944 #89C4CE #2E85A0".split(" ")
            }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.W_Woo] = u[e.Ov_Qv];
            u[e.VOQOW] = N(1, [{
                f: sh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
            }], 0.15, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.vOvV_] = N(1, [{
                f: le,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
            }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
            u[e.w$OOu] = u[e.vOvV_];
            u[e.VvOo0] = N(1, [{
                f: Ve,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
            }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.VVO0O] = u[e.VvOo0];
            u[e.v$QO_] = N(1, [{
                f: jh,
                x: -5,
                y: -5,
                a: 1,
                r: 0,
                c: ["#e2d63b", "#ee71a9", "#42b672"]
            }], 1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.o_QOw] = u[e.v$QO_];
            u[e._WuWO] = N(1, [{
                f: Ue,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
            }], 0.5, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.vOU_U] = u[e._WuWO];
            u[e.uwV_v] = N(1, [{
                f: Td,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#1e2021 #352618 #402b18 #4c3b19 #574122 #52391e".split(" ")
            }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.OUoVO] = u[e.uwV_v];
            u[e.o0vvv] = N(1, [{
                f: Gd,
                x: -1,
                y: 0,
                a: 1,
                r: -Math.PI / 5,
                c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
            }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.7);
            u[e.$OQOV] = u[e.o0vvv];
            u[e.QWO$w] = N(1, [{
                f: Gd,
                x: -1,
                y: 0,
                a: 1,
                r: -Math.PI / 5,
                c: "#1e2021 #674C2A #4C3B19 #594225 #3F2D18 #2D2112".split(" ")
            }], 0.4, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.OwuuQ] = u[e.QWO$w];
            u[e.OoO0O] = N(1, [{
                f: ug,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
            }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.$uU] = N(1, [{
                f: Sf,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
            }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.OO$QW] = u[e.$uU];
            u[e.wwwQQ] = N(1, [{
                f: zh,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: "#1e2021 #63391a #523124 #d2c4b9 #c1aca2 #d8cbc2 #c8b5ac #ac222a #e6636a".split(" ")
            }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.wuWU0] = u[e.wwwQQ];
            u[e.wuuO0] = N(1, [{
                f: rh,
                x: -2,
                y: -8,
                a: 1,
                r: 0,
                c: "#dfd6bc #7b5139 #bf8d50 #834e49 #602820 #d7ccaa".split(" ")
            }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
            u[e.ouVWO] = u[e.wuuO0];
            u[e.Q$O] = [];
            u[e.Q$O][0] = o.$$VoO;
            u[e.Q$O][1] = o.u$OVW;
            u[e.Q$O][2] = o._Vu$Q;
            u[e.UoU0w] = u[e.Q$O];
            u[e._wWV_] = u[e.Q$O];
            u[e.$$O] = [];
            u[e.$$O][0] = o._0_00;
            u[e.$$O][1] = o.WOwo0;
            u[e.$$O][2] = o.V$vuu;
            u[e._0VQv] = u[e.$$O];
            u[e.UQvQw] = u[e.$$O];
            u[e.$0UUO] = u[e.OOU];
            u[e.uvVOV] = u[e.OOU];
            u[e.OOU] = [];
            u[e.OOU][0] = o.uOQ$v;
            u[e.OOU][1] = o._wW$O;
            u[e.OOU][2] = o.wvow0;
            u[e.$0UUO] = u[e.OOU];
            u[e.uvVOV] = u[e.OOU];
            u[e.wO_] = [];
            u[e.wO_][0] = o.$VuvQ;
            u[e.wO_][1] = o.U0W$w;
            u[e.wO_][2] = o.$uuw_;
            u[e.O0UQV] = u[e.wO_];
            u[e.UUO$o] = u[e.wO_];
            u[e.Wvo] = [];
            u[e.Wvo][0] = o.Ow_0V;
            u[e.Wvo][1] = o.uVQ_v;
            u[e.Wvo][2] = o.WowQ_;
            u[e.vQUQW] = u[e.Wvo];
            u[e._wQWV] = u[e.Wvo];
            u[e.uW0] = [];
            u[e.uW0][0] = o.o0Q$$;
            u[e.uW0][1] = o.u0Uu$;
            u[e.uW0][2] = o.Q_$UW;
            u[e.uuoo0] = u[e.uW0];
            u[e.W0vVQ] = u[e.uW0];
            u[e.vU$] = [];
            u[e.vU$][0] = o.$Qw_Q;
            u[e.vU$][1] = o.wuoow;
            u[e.vU$][2] = o.oUwQV;
            u[e.VVwW0] = u[e.vU$];
            u[e.UUQuQ] = u[e.vU$];
            u[e.OVw] = [];
            u[e.OVw][0] = o.oV_U$;
            u[e.OVw][1] = o.ooUvu;
            u[e.OVw][2] = o.w$w_u;
            u[e.$U_Qw] = u[e.OVw];
            u[e.VQQVV] = u[e.OVw];
            u[e.vOW] = [];
            u[e.vOW][0] = o.UVOQW;
            u[e.vOW][1] = o.o$WWO;
            u[e.vOW][2] = o.OVQoU;
            u[e.uWwUU] = u[e.vOW];
            u[e.V_OQV] = u[e.vOW];
            u[e._WV] = [];
            u[e._WV][0] = o.$0Q$u;
            u[e._WV][1] = o.o_wVu;
            u[e._WV][2] = o.uovWV;
            u[e.uV_u$] = u[e._WV];
            u[e.QwoWV] = u[e._WV];
            u[e.VuW] = [];
            u[e.VuW][0] = o.WWWW$;
            u[e.VuW][1] = o.oWw0$;
            u[e.VuW][2] = o.OWvU$;
            u[e._OWww] = u[e.VuW];
            u[e._VQ0U] = u[e.VuW];
            u[e.OU_] = [];
            u[e.OU_][0] = o.wUV0U;
            u[e.OU_][1] = o.wWU_0;
            u[e.OU_][2] = o._uQoV;
            u[e.OvQ$O] = u[e.OU_];
            u[e.$_Uw0] = u[e.OU_];
            u[e.wvQ] = [];
            u[e.wvQ][0] = o.QVW_W;
            u[e.wvQ][1] = o.vuwOQ;
            u[e.wvQ][2] = o.oOWwu;
            u[e.wQovW] = u[e.wvQ];
            u[e.O$V] = [];
            u[e.O$V][0] = o.VQvUv;
            u[e.O$V][1] = o.o0O$w;
            u[e.O$V][2] = o.WwOV$;
            u[e.U_$O$] = u[e.O$V];
            u[e.Owowv] = u[e.__u$W];
            u[e._o_0Q] = u[e.o0OWU];
            u[e.UuVU_] = u[e.vuvWU];
            u[e.vvoOQ] = u[e._Uv0Q];
            u[e.wO$0$] = u[e.O_OO0];
            u[e.ow$Uu] = u[e.Q0VVO];
            u[e.uWouv] = u[e.UwvVw];
            u[e.W$_u_] = u[e.WuQw_];
            u[e.vQvov] = u[e.WvOUo];
            u[e.Qvvu0] = u[e.VU__O];
            u[e.$oQ$v] = u[e.VUv_U];
            u[e.UVoWQ] = u[e.u$U];
            u[e.OVv__] = u[e._u$0O];
            u[e.$wVoO] = u[e.W0_];
            u[e.OWV$U] = u[e._$_v$];
            u[e.oQu_W] = u[e.uVVuU];
            u[e.$QwOw] = u[e._vUv$];
            u[e.vw$wV] = u[e.VuW$U];
            u[e.wWoVo] = u[e.OvWuV];
            u[e._Ov0w] = u[e.Q$v_$];
            u[e.w0vuv] = u[e.$wWv$];
            u[e.wOuU$] = u[e.W$O_Q];
            u[e.QoQVW] = u[e.QUOQU];
            u[e.$_$Qw] = u[e.UwUu_];
            u[e.uuvUW] = u[e.vouUo];
            u[e.uuow_] = u[e.vWQvo];
            u[e.vuUVV] = u[e.VO_UU];
            u[e.vuuwv] = u[e.O_$];
            u[e._Uv0$] = u[e.__O];
            u[e.oW_Uu] = u[e.V$W];
            u[e.$WOOv] = u[e.UQw];
            u[e.oOwOU] = u[e.v$wv0];
            u[e.oVo0O] = u[e.$wWVu];
            u[e.__U_O] = u[e.u0v];
            u[e.oW$wo] = u[e.vvVuO];
            u[e.o0UOU] = u[e.U0uuU];
            u[e.WWO0U] = u[e.oVv0o];
            u[e.o_ouw] = u[e.U0QWO];
            u[e.wQovw] = u[e.$uQ$_];
            u[e.V$_Q_] = u[e.VVWoW];
            u[e.uVuwu] = u[e.OWuuv];
            u[e.Q_$$u] = u[e.OoQuV];
            u[e.vVoW$] = u[e.$UOO$];
            u[e.QwQ0o] = u[e.WvVUV];
            u[e.owQ_W] = u[e.UwUVo];
            u[e.wv$wu] = u[e.WVVww];
            u[e.vwvuU] = u[e.oUooo];
            u[e.OowVo] = u[e.uQouu];
            u[e.o0_$U] = u[e.Quu];
            u[e.VuwVQ] = u[e.$wO];
            u[e.Ou$wQ] = u[e.UuWOQ];
            u[e.WoU$0] = u[e._UOou];
            u[e.uOooo] = u[e.vWUOQ];
            u[e.vv_0v] = r(Fh(0.8, !0, ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"]));
            u[e.wuw$0] = N(0.5, [{
                f: Eh,
                x: 0,
                y: 2,
                a: 1,
                r: 0,
                c: ["#ffffff"]
            }], 0.16, ["#c4a23a", "#d0ad41", "#b89733"], 0.9);
            u[e.QV_V$] = u[e.uU$$v];
            u[e.$U__w] = u[e.w_Uwu];
            u[e.$0Oou] = u[e._QOwW];
            u[e.Qvv$w] = u[e.VwQuu];
            u[e._owOW] = u[e.Qvw];
            u[e.wV_UO] = u[e.oVoQv];
            u[e.w$uVQ] = u[e.vvOwv];
            u[e.UWQV_] = u[e.uQvU0];
            u[e.WUuu0] = u[e.WwuU0];
            u[e.WVoW_] = u[e.uQVoU];
            u[e.Q$OQv] = u[e.Qvsocket];
            u[e.vwuWV] = u[e.uu_wW];
            u[e.UOv$$] = u[e.Wv0];
            u[e.UO_$W] = u[e.w0UwO];
            u[e.wuwV$] = u[e.UWu];
            u[e.vQVV$] = u[e._wOV_];
            u[e.vQvuQ] = u[e.WWQoO];
            u[e.u0uuW] = u[e.UUWVv];
            u[e.vvvuv] = u[e.$Q$U$];
            u[e.VwVu_] = u[e._uw];
            u[e.OvQV$] = u[e.Q$QQW];
            u[e.WVVoV] = u[e.$OuQQ];
            u[e.WUWu_] = u[e.uowWO];
            u[e.wOOQu] = u[e.OwQv0];
            u[e.uVuoO] = u[e.uQ0];
            u[e.w0W0W] = u[e.ovuV$];
            u[e.vOO_Q] = u[e.VOo$Q];
            u[e.QUw$V] = u[e.vUUow];
            u[e.wQw0O] = u[e.$$Ouw];
            u[e.uUOVW] = u[e.Q$ovQ];
            u[e.uoUWO] = u[e.VQOuv];
            u[e.VVw_$] = u[e.$vwuO];
            u[e.V$oou] = u[e.vQQ__];
            u[e.$oWVw] = u[e.u_wUO];
            u[e.OwOuu] = u[e.WUw_W];
            u[e.wOWVW] = u[e.w0U];
            u[e.W_wV$] = u[e.Q_o];
            u[e.vU$uW] = u[e.w_QvU];
            u[e.VUQ0W] = u[e.QvUuu];
            u[e.uWW_u] = u[e._0v];
            u[e.VV$uW] = u[e.u0o];
            u[e.voU$W] = u[e.uO0];
            u[e.$_UuU] = u[e._WuWO];
            u[e.oWWuv] = u[e.uwV_v];
            u[e.vou0$] = u[e.VvOo0];
            u[e.VQvwW] = u[e._wUvW];
            u[e.uV$OW] = u[e.W_Ouu];
            u[e.vuwvO] = u[e.OOVw_];
            u[e.vvuOQ] = u[e.QW$U$];
            u[e.oUUUw] = u[e.W_$w$];
            u[e.uVQUQ] = u[e.wwVOQ];
            u[e.VuWWo] = u[e.QWO$w];
            u[e.QW$vV] = u[e.OoO0O];
            u[e.QuvVo] = u[e.O$v_V];
            u[e.WwwVo] = u[e.o__UV];
            u[e.Ww$_o] = u[e._vu$v];
            u[e.ovuOO] = u[e.vOvV_];
            u[e.OOQOu] = u[e.Ov_Qv];
            u[e.uQOww] = u[e.o0vvv];
            u[e._WW0_] = u[e.wwwQQ];
            u[e.OO$QW] = u[e.$uU];
            u[e.W_wVO] = u[e.VoWvv];
            u[e.WW_QQ] = u[e.uvuvO];
            u[e.oOww_] = u[e.VOQOW];
            u[e.wQ$$O] = u[e.wuuO0];
            u[e.o0OOO] = u[e.O$o0Q];
            u[e.V_UWo] = u[e.$uv0W];
            u[e.oQO0Q] = u[e.$_u];
            u[e.Q__0W] = u[e.OouUu];
            u[e._0O0V] = u[e.U0_];
            u[e.OwUUU] = u[e.uUoWQ];
            u[e.QQWU$] = u[e._$Q];
            u[e.OuuVW] = u[e.V0_];
            u[e.oovoQ] = u[e.W0V];
            u[e.QO_QO] = u[e.Q00];
            u[e.oUO$Q] = u[e.v_woU];
            u[e.uWU0w] = u[e.oUvoQ];
            u[e.VvoVo] = u[e.o$oUu];
            u[e.UVU_O] = u[e.$wOvw];
            u[e.oWu_U] = u[e.w_U];
            u[e.wouO_] = u[e.u$O];
            u[e.Vo$ou] = u[e._QQ];
            u[e.wUUOO] = u[e.$QOoU];
            u[e.$vv] = [];
            u[e.$vv][e._v] = [];
            u[e.$vv][e.OW] = [];
            for (var f = 0; f < e.___u0; f++) u[e.$vv][e._v].push(r(Mb(1, 4 + f, "#59B8CE"))), u[e.$vv][e.OW].push(r(Mb(1, 4 + f, "#90DDD9")));
            u[e.vVO] = [];
            u[e.vVO][e._v] = [];
            u[e.vVO][e.OW] = [];
            for (f = 0; f < e.OovUw; f++) u[e.vVO][e._v].push(r(Mb(1, 4 + f, "#fff"))), u[e.vVO][e.OW].push(r(Mb(1, 4 + f, "#fff")));
            u[e.UuO] = [];
            u[e.UuO][e._v] = [];
            u[e.UuO][e.OW] = [];
            for (f = 0; f < e.OovUw; f++) u[e.UuO][e._v].push(r(Mb(1, 6 + f, "#DDCD8A"))), u[e.UuO][e.OW].push(r(Mb(1, 6 + f, "#155E57")));
            u[e.Qo0] = [];
            u[e.Qo0][e._v] = [];
            u[e.Qo0][e.OW] = [];
            for (f = 0; f < e.$u$Qv; f++) u[e.Qo0][e._v].push(r(Mb(1, 4 + f, "#353326"))), u[e.Qo0][e.OW].push(r(Mb(1, 4 + f, "#1D2526")));
            u[e.Qww] = [];
            u[e.Qww][e._v] = r(vb(1.5, !0, ["#ee71a9"]));
            u[e.Qww][e.OW] = r(vb(1.5, !0, ["#ee71a9"]));
            u[e.WWw] = [u[e.Qww]];
            u[e.WWw][1] = [];
            u[e.WWw][2] = [];
            u[e.WWw][3] = [];
            u[e.WWw][4] = [];
            u[e.WWw][1][e._v] = r(vb(1.5, !0, ["#e2d63b"]));
            u[e.WWw][1][e.OW] = r(vb(1.5, !0, ["#e2d63b"]));
            u[e.WWw][2][e._v] = r(vb(1.5, !0, ["#309cbd"]));
            u[e.WWw][2][e.OW] = r(vb(1.5, !0, ["#309cbd"]));
            u[e.WWw][3][e._v] = r(vb(1.5, !0, ["#cd232d"]));
            u[e.WWw][3][e.OW] = r(vb(1.5, !0, ["#cd232d"]));
            u[e.WWw][4][e._v] = r(vb(1.5, !0, ["#42b672"]));
            u[e.WWw][4][e.OW] = r(vb(1.5, !0, ["#42b672"]));
            OQ.vUuuO("cti", M.location.href) ? (document.getElementById("version").innerHTML += "[CTI]") : (r = function(a) {
                a.loaded = 1;
                return a;
            });
            u[e.VUu$w] = r(ci());
            u[e.uuw] = [];
            u[e.uuw][e._v] = [];
            u[e.uuw][e.OW] = [];
            u[e.uuw][e._v].push(r(Lb(1.1, !1, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
            u[e.uuw][e._v].push(r(Lb(0.9, !1, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
            u[e.uuw][e._v].push(r(Lb(0.6, !1, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
            u[e.uuw][e.OW].push(r(Lb(1.1, !1, ["#0a2728", "#3c8e88", "#40a39b"])));
            u[e.uuw][e.OW].push(r(Lb(0.9, !1, ["#0a2728", "#3c8e88", "#40a39b"])));
            u[e.uuw][e.OW].push(r(Lb(0.6, !1, ["#0a2728", "#3c8e88", "#40a39b"])));
            u[e.$U] = [];
            u[e.$U][e._v] = [];
            u[e.$U][e.OW] = [];
            u[e.$U][e._v].push(r($a(1.5, !1, ["#2b280a", "#ddcf8a", "#f4efc6"])));
            u[e.$U][e._v].push(r($a(1.3, !1, ["#2b280a", "#ddcf8a", "#f4efc6"])));
            u[e.$U][e._v].push(r($a(1.1, !1, ["#2b280a", "#ddcf8a", "#f4efc6"])));
            u[e.$U][e.OW].push(r($a(1.5, !1, ["#030d14", "#1b4444", "#16605a"])));
            u[e.$U][e.OW].push(r($a(1.3, !1, ["#030d14", "#1b4444", "#16605a"])));
            u[e.$U][e.OW].push(r($a(1.1, !1, ["#030d14", "#1b4444", "#16605a"])));
            u[e.v$] = [];
            u[e.v$][e._v] = [];
            u[e.v$][e.OW] = [];
            u[e.v$][e._v].push(r(Wa(1.1, !1, ["#232828", "#3fc9c9", "#74ede6"])));
            u[e.v$][e._v].push(r(Wa(0.9, !1, ["#232828", "#3fc9c9", "#74ede6"])));
            u[e.v$][e._v].push(r(Wa(0.7, !1, ["#232828", "#3fc9c9", "#74ede6"])));
            u[e.v$][e.OW].push(r(Wa(1.1, !1, ["#030d14", "#2b9390", "#57bcb5"])));
            u[e.v$][e.OW].push(r(Wa(0.9, !1, ["#030d14", "#2b9390", "#57bcb5"])));
            u[e.v$][e.OW].push(r(Wa(0.7, !1, ["#030d14", "#2b9390", "#57bcb5"])));
            u[e.V$V] = [];
            u[e.V$V][e._v] = o.UoQoW;
            u[e.V$V][e.OW] = o.w0o$V;
            u[e.wu0] = [];
            u[e.wu0][e._v] = r(Pf(0.6, ["#0d1b1c"]));
            u[e.wu0][e.OW] = r(Pf(0.6, ["#030d14"]));
            u[e.Ww0] = [];
            u[e.Ww0][e._v] = r(Of(0.6, ["#2a2938", "#242330"]));
            u[e.Ww0][e.OW] = r(Of(0.6, ["#1b1e30", "#161921"]));
            u[e.uvW] = [];
            u[e.uvW][e._v] = r(Gf(0.6, !0, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"]));
            u[e.uvW][e.OW] = r(Gf(0.6, !0, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"]));
            u[e.OOW] = [];
            u[e.OOW][e._v] = r(Ff(0.6, !0, "#0d1b1c #759e6e #55604b #f9ccd4 #891a1e #da232e #a52026 #a02d28 #721819 #FFFFFF".split(" ")));
            u[e.OOW][e.OW] = r(Ff(0.6, !0, "#030d14 #11635e #02373e #167771 #0c5752 #401d49 #2e1336 #261336 #23163c #FFFFFF".split(" ")));
            u[e.Qu0] = [];
            u[e.Qu0][e._v] = r(Nf(0.4, ["#0d1b1c", "#759e6e", "#55604b"]));
            u[e.Qu0][e.OW] = r(Nf(0.4, ["#030d14", "#11635e", "#02373e"]));
            u[e.OQWO0] = r(Ud(0.6, ["#BB0000"]));
            u[e.vOoWo] = r(Ud(0.6, ["#DBE71C"]));
            u[e.VWuvW] = r(Ud(0.6, ["#00BB00"]));
            u[e.vU_] = [];
            u[e.vU_][e._v] = [];
            u[e.vU_][e.OW] = [];
            u[e.vU_][e._v].push(jb(1.1, "#242503 #8e7c0c #6d5903 #9e8320 #f0f4f0 #FFFFFF".split(" "), !1, 0));
            u[e.vU_][e._v].push(jb(1.1, "#242503 #8e7c0c #6d5903 #9e8320 #f0f4f0 #FFFFFF".split(" "), !0, 0));
            u[e.vU_][e._v].push(jb(0.9, "#242503 #898e0c #757303 #9e9b20 #f0f4f0 #FFFFFF".split(" "), !1, 0));
            u[e.vU_][e._v].push(jb(0.9, "#242503 #963400 #7c2200 #a83204 #f0f4f0 #FFFFFF".split(" "), !0, 0));
            u[e.vU_][e._v].push(jb(0.7, "#242503 #6d5a09 #77591a #7b5a1f #f0f4f0 #FFFFFF".split(" "), !1, 0));
            u[e.vU_][e._v].push(jb(0.7, "#242503 #703700 #813009 #813009 #f0f4f0 #FFFFFF".split(" "), !0, 0));
            u[e.vU_][e.OW].push(jb(1.1, "#030d14 #12493d #0e3831 #155247 #f0f4f0 #16695f".split(" "), !1, 0));
            u[e.vU_][e.OW].push(jb(1.1, ["#030d14", "#12493d", "#0e3831", "#155247", "#16695f"], !0, 0));
            u[e.vU_][e.OW].push(jb(0.9, ["#030d14", "#0b3629", "#144437", "#174235", "#16695f"], !1, 0));
            u[e.vU_][e.OW].push(jb(0.9, ["#030d14", "#0d2522", "#0c2821", "#0d2a28", "#16695f"], !0, 0));
            u[e.vU_][e.OW].push(jb(0.7, ["#030d14", "#082b1f", "#073328", "#073327", "#16695f"], !1, 0));
            u[e.vU_][e.OW].push(jb(0.7, ["#030d14", "#0c2823", "#0b2b23", "#0c2d24", "#16695f"], !0, 0));
            u[e.W_U] = [];
            u[e.W_U][e._v] = [];
            u[e.W_U][e.OW] = [];
            u[e.W_U][e._v].push(r(xb(Ab(1.1, "#242503 #4d2d14 #432516 #756608 #5b4a02 #8b731b".split(" "), !1), u[e.vU_][e._v][0])));
            u[e.W_U][e._v].push(r(xb(Ab(1.1, "#242503 #4d2d14 #432516 #756608 #5b4a02 #8b731b".split(" "), !0), u[e.vU_][e._v][1])));
            u[e.W_U][e.OW].push(r(xb(Ab(1.1, "#030d14 #031619 #041c21 #0e3b31 #0b2e28 #10443a".split(" "), !1), u[e.vU_][e.OW][0])));
            u[e.W_U][e.OW].push(r(xb(Ab(1.1, "#030d14 #031619 #041c21 #0e3b31 #0b2e28 #10443a".split(" "), !0), u[e.vU_][e.OW][1])));
            u[e.W_U][e._v].push(r(xb(Ab(0.9, "#242503 #4d2d14 #432516 #6d6c09 #686609 #777310".split(" "), !1), u[e.vU_][e._v][2])));
            u[e.W_U][e._v].push(r(xb(Ab(0.9, "#242503 #4d2d14 #432516 #6d6c09 #686609 #777310".split(" "), !0), u[e.vU_][e._v][2])));
            u[e.W_U][e.OW].push(r(xb(Ab(0.9, "#030d14 #031619 #041c21 #0d2522 #0c2821 #0d2a28".split(" "), !1), u[e.vU_][e.OW][2])));
            u[e.W_U][e.OW].push(r(xb(Ab(0.9, "#030d14 #031619 #041c21 #0c2823 #0b2b23 #0c2d24".split(" "), !0), u[e.vU_][e.OW][3])));
            u[e.vU_][e._v][5] = r(u[e.vU_][e._v][5]);
            u[e.vU_][e._v][4] = r(u[e.vU_][e._v][4]);
            u[e.vU_][e._v][3] = r(u[e.vU_][e._v][3]);
            u[e.vU_][e._v][2] = r(u[e.vU_][e._v][2]);
            u[e.vU_][e._v][1] = r(u[e.vU_][e._v][1]);
            u[e.vU_][e._v][0] = r(u[e.vU_][e._v][0]);
            u[e.vU_][e.OW][5] = r(u[e.vU_][e.OW][5]);
            u[e.vU_][e.OW][4] = r(u[e.vU_][e.OW][4]);
            u[e.vU_][e.OW][3] = r(u[e.vU_][e.OW][3]);
            u[e.vU_][e.OW][2] = r(u[e.vU_][e.OW][2]);
            u[e.vU_][e.OW][1] = r(u[e.vU_][e.OW][1]);
            u[e.vU_][e.OW][0] = r(u[e.vU_][e.OW][0]);
            u[e.$ov] = [];
            u[e.$ov][e._v] = r(V(4, Ba(0.75, !0, "#0d1b1c #000000 #0d1b1c #4d2d14 #432516 #4d2d14 #432516".split(" "))));
            u[e.$ov][e.OW] = r(V(4, Ba(0.75, !0, "#030d14 #000000 #030d14 #0d2e33 #0b2326 #0d2e33 #0b2326".split(" "))));
            u[e.oOo] = [];
            u[e.oOo][e._v] = r(V(4, Ba(0.75, !0, "#0d1b1c #000000 #0d1b1c #4d2d14 #432516 #939393 #5f6061".split(" "))));
            u[e.oOo][e.OW] = r(V(4, Ba(0.75, !0, "#030d14 #000000 #030d14 #0d2e33 #0b2326 #485e66 #1f343f".split(" "))));
            u[e.QWu] = [];
            u[e.QWu][e._v] = r(V(4, Ba(0.75, !0, "#0d1b1c #000000 #0d1b1c #493e26 #382e19 #c4bc51 #b29c32".split(" "))));
            u[e.QWu][e.OW] = r(V(4, Ba(0.75, !0, "#030d14 #000000 #030d14 #263947 #263947 #43aa82 #29997c".split(" "))));
            u[e.OQv] = [];
            u[e.OQv][e._v] = r(V(4, Ba(0.75, !0, "#0d1b1c #000000 #0d1b1c #262114 #211108 #63c9d6 #29aaa1".split(" "))));
            u[e.OQv][e.OW] = r(V(4, Ba(0.75, !0, "#030d14 #000000 #030d14 #111316 #0a0b0c #73dde5 #3dc4c0".split(" "))));
            u[e._v_] = [];
            u[e._v_][e._v] = r(V(4, Ba(0.75, !0, "#0d1b1c #000000 #0d1b1c #262114 #211108 #b864d6 #8c29aa".split(" "))));
            u[e._v_][e.OW] = r(V(4, Ba(0.75, !0, "#030d14 #000000 #030d14 #111316 #0a0b0c #8359d3 #764eb5".split(" "))));
            u[e.UuV] = [];
            u[e.UuV][e._v] = r(V(3, ee(0.17, !0, "#0d1b1c #4a3a22 #362818 #c7c7c7 #909090 #eceaea #bbbbbb #d6d1d1".split(" "))));
            u[e.UuV][e.OW] = r(V(3, ee(0.17, !0, "#0d1b1c #0d2e33 #0b2326 #59737d #364f59 #618395 #4d768c #54859f".split(" "))));
            u[e.uUV] = [];
            u[e.uUV][e._v] = r(V(3, je(0.32, !0, "#0d1b1c #ffffff #5f6061 #eb2933 #57b74e #42a54d #ac222a #e6636a".split(" "))));
            u[e.uUV][e.OW] = r(V(3, je(0.42, !0, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"])));
            u[e.WvU] = [];
            u[e.WvU][e._v] = r(V(3, de(0.4, !0, "#0d1b1c #73583e #493425 #7d6144 #5e4530 #473221 #745840".split(" "))));
            u[e.WvU][e.OW] = r(V(3, de(0.4, !0, "#0d1b1c #0b3d3a #092b2a #144642 #082927 #092b29".split(" "))));
            u[e.QvW] = [];
            u[e.QvW][e._v] = r(V(3, fe(0.4, !0, "#0d1b1c #939393 #5f6061 #b1afaf #493d36 #332b28".split(" "))));
            u[e.QvW][e.OW] = r(V(3, fe(0.4, !0, "#0d1b1c #485e66 #1f343f #5d757e #0d2e33 #0b2326".split(" "))));
            u[e.$Vu] = [];
            u[e.$Vu][e._v] = r(V(3, ge(0.4, !0, "#0d1b1c #c4bc51 #b29c32 #c4bc51 #493e26 #382e19".split(" "))));
            u[e.$Vu][e.OW] = r(V(3, ge(0.4, !0, "#0d1b1c #43aa82 #29997c #54bf96 #263947 #182935".split(" "))));
            u[e.WU_] = [];
            u[e.WU_][e._v] = r(V(3, he(0.4, !0, "#0d1b1c #6ad9e8 #29aaa1 #95e9f5 #022320 #011e19 #FFFFFF".split(" "))));
            u[e.WU_][e.OW] = r(V(3, he(0.4, !0, "#0d1b1c #73dde5 #3dc4c0 #93eaf1 #111316 #0a0b0c".split(" "))));
            u[e.w$v] = [];
            u[e.w$v][e._v] = r(V(3, ie(0.4, !0, "#0d1b1c #b864d6 #8c29aa #cc81e7 #262114 #211108 #FFFFFF".split(" "))));
            u[e.w$v][e.OW] = r(V(3, ie(0.4, !0, "#0d1b1c #8359d3 #764eb5 #966de6 #111316 #0a0b0c".split(" "))));
            u[e.WOv] = [];
            u[e.WOv][e._v] = [];
            u[e.WOv][e.OW] = [];
            u[e.WOv][e._v].push(r(wc(0.9, !1, ["#0d4f35"], 0)));
            u[e.WOv][e._v].push(r(wc(0.9, !1, ["#0d4f35"], 1)));
            u[e.WOv][e._v].push(r(wc(0.9, !1, ["#0d4f35"], 2)));
            u[e.WOv][e.OW].push(r(wc(0.9, !1, ["#053339"], 0)));
            u[e.WOv][e.OW].push(r(wc(0.9, !1, ["#053339"], 1)));
            u[e.WOv][e.OW].push(r(wc(0.9, !1, ["#053339"], 2)));
            u[e.WOv][e._v].push(r(Tc(0.8, ["#241301", "#ba6b0e", "#6d3f04"])));
            u[e.WOv][e._v].push(r(Tc(0.8, ["#292002", "#ba930e", "#6d5704"])));
            u[e.WOv][e.OW].push(r(Tc(0.9, ["#052919", "#0a4738", "#06321f"])));
            u[e.WOv][e.OW].push(r(Tc(0.8, ["#052918", "#08491c", "#063417"])));
            u[e.vuQ] = [];
            u[e.vuQ][e._v] = r(V(Math.PI / 2, Bd(0.25, !0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])));
            u[e.vuQ][e.OW] = r(V(Math.PI / 2, Bd(0.25, !0, ["#030d14", "#082b22", "#0a2f2b", "#072824"])));
            u[e._wW] = [];
            u[e._wW].push(r(Ee(0.25, ["#44301b", "#57442a", "#523e26"], 0)));
            u[e._wW].push(r(Ee(0.25, ["#4f371e", "#624d30", "#5e472c", "#eda80d"], 1)));
            u[e._wW].push(r(Ee(0.25, ["#382715", "#4e3c25", "#473620", "#d7990c"], 2)));
            u[e.$V$] = [];
            u[e.$V$][e._v] = [];
            u[e.$V$][e.OW] = [];
            u[e.$V$][e._v].push(r(V(Math.PI / 2, Vb(0.25, !1, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25"], 1))));
            u[e.$V$][e.OW].push(r(V(Math.PI / 2, Vb(0.25, !1, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25"], 1))));
            u[e.$V$][e._v].push(r(V(Math.PI / 2, Vb(0.25, !1, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#4f9246"], 2))));
            u[e.$V$][e.OW].push(r(V(Math.PI / 2, Vb(0.25, !1, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#4f9246"], 2))));
            u[e.$V$][e._v].push(r(V(Math.PI / 2, Vb(0.25, !1, "#0d1b1c #44301b #57442a #523e26 #9b2b25 #ffffff".split(" "), 3))));
            u[e.$V$][e.OW].push(r(V(Math.PI / 2, Vb(0.25, !1, "#030d14 #082b22 #0a2f2b #072824 #9b2b25 #ffffff".split(" "), 3))));
            u[e.$V$][e._v].push(r(V(Math.PI / 2, Vb(0.25, !1, "#0d1b1c #44301b #57442a #523e26 #9b2b25 #362513".split(" "), 4))));
            u[e.$V$][e.OW].push(r(V(Math.PI / 2, Vb(0.25, !1, "#030d14 #082b22 #0a2f2b #072824 #9b2b25 #664d2e".split(" "), 4))));
            u[e.Q$_] = [];
            u[e.Q$_][e._v] = [r(Za(1.2, !0, ["#352b10", "#80500b", "#7c4908"]))];
            u[e.Q$_][e.OW] = [r(Za(1.2, !0, ["#030d14", "#0a3429", "#0a2f2b"]))];
            u[e.$0vu$] = [];
            u[e.$0vu$][e._v] = r(Za(0.8, !0, ["#0e3022", "#68622D", "#665329"]));
            u[e.$0vu$][e.OW] = r(Za(0.8, !0, ["#030d14", "#0F3A24", "#083326"]));
            u[e.VWU] = [];
            u[e.VWU][e._v] = r(Yc(0.5, !0, "#1b170c #c67933 #a6692f #bd7533 #86683e #6e502d".split(" ")));
            u[e.VWU][e.OW] = r(Yc(0.5, !0, "#030d14 #0a3429 #0a2f2b #082f25 #082925 #0a3630".split(" ")));
            u[e.oOu] = [];
            u[e.oOu][e._v] = r(Rc(0.5, !0, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"]));
            u[e.oOu][e.OW] = r(Rc(0.5, !0, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"]));
            u[e.Vuw] = [];
            u[e.Vuw][e._v] = r(Zc(0.5, !0, "#1b170c #349970 #245c45 #348361 #e8e8e8 #bbbbbb".split(" ")));
            u[e.Vuw][e.OW] = r(Zc(0.5, !0, "#030d14 #0d5551 #074440 #0f5c58 #4e8784 #3f7572".split(" ")));
            u[e._Ov$U] = [];
            u[e._Ov$U][e._v] = r(Za(0.8, !0, ["#1b170c", "#0b8052", "#077b49"]));
            u[e._Ov$U][e.OW] = r(Za(0.8, !0, ["#030d14", "#084442", "#0a4049"]));
            u[e.U0oQo] = [];
            u[e.U0oQo][e._v] = r(Yc(0.5, !0, "#1b170c #68622D #665329 #5e5823 #86683e #6e502d".split(" ")));
            u[e.U0oQo][e.OW] = r(Yc(0.5, !0, "#030d14 #0F3A24 #083326 #0c301e #062a1f #083b2b".split(" ")));
            u[e.WUVu0] = [];
            u[e.WUVu0][e._v] = r(Rc(0.5, !0, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"]));
            u[e.WUVu0][e.OW] = r(Rc(0.5, !0, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"]));
            u[e.$OOuv] = [];
            u[e.$OOuv][e._v] = r(Zc(0.5, !0, "#1b170c #7a9160 #4a5e3c #637e5a #c5cfc0 #8a9685".split(" ")));
            u[e.$OOuv][e.OW] = r(Zc(0.5, !0, "#030d14 #3e5d5b #2f4442 #354e4c #637d7c #556b6a".split(" ")));
            u[e.woW] = [];
            u[e.woW][e._v] = r(cf(0.45, !0, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"]));
            u[e.woW][e.OW] = r(cf(0.45, !0, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"]));
            u[e.W_w$V] = r(cf(0.65, !0, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"]));
            u[e.$QO] = [];
            u[e.$QO][e._v] = r(fb(1.4, !1, ["#3d2a6e", "#8255b5"]));
            u[e.$QO][e.OW] = r(fb(1.4, !1, ["#26124f", "#524082"]));
            u[e.$uu] = [];
            u[e.$uu][e._v] = r(wd(0.9, !1, ["#efd435", "#ec8d35", "#e96132"]));
            u[e.$uu][e.OW] = r(wd(0.9, !1, ["#efdb7b", "#efe854", "#e8ef62"]));
            u[e.VQWUV] = [];
            u[e.VQWUV][e._v] = r(ae(0.9, !1, ["#4d2d14", "#432516"]));
            u[e.VQWUV][e.OW] = r(ae(0.9, !1, ["#282404", "#0a0a01"]));
            u[e.UoV] = [];
            u[e.UoV][e._v] = r(sc(0.9, !1, ["#4d2d14", "#432516"]));
            u[e.UoV][e.OW] = r(sc(0.9, !1, ["#282404", "#0a0a01"]));
            u[e.o_0] = [];
            u[e.o_0][e._v] = r(yd(0.9, !1, ["#efd435"]));
            u[e.o_0][e.OW] = r(yd(0.9, !1, ["#fffabb"]));
            u[e.Vvv] = [];
            u[e.Vvv][e._v] = r(xd(0.9, !1, ["#efd435"]));
            u[e.Vvv][e.OW] = r(xd(0.9, !1, ["#fffabb"]));
            u[e.ouvQo] = [];
            u[e.ouvQo][e._v] = r(yd(0.9, !1, ["#efd435"]));
            u[e.ouvQo][e.OW] = r(yd(0.9, !1, ["rgba(255, 84, 0, 1)"]));
            u[e._0VWo] = [];
            u[e._0VWo][e._v] = r(xd(0.9, !1, ["#efd435"]));
            u[e._0VWo][e.OW] = r(xd(0.9, !1, ["#ff5704"]));
            u[e.W$v$w] = r(Sc(1, "#ffffff", 1));
            u[e.QV_VO] = r(Sc(1.5, "#ffffff", 1));
            u[e.UowUU] = r(Ia(1, "Your score:", 15, "#FFF"));
            u[e.UuwQV] = r(yh(0.9, "#596560 #394841 #543B1C #694D28 #4D3C1A #694D28 #DEE2E0 #CDCCCC #7B5A31 #7E8A85".split(" ")));
            u[e.oVOQQ] = o.oVOQQ;
            u[e.U$W] = [];
            u[e.U$W][e._v] = r(Yd(1.5, !0, "#0d1b1c #596560 #394841 #67766F #46554D #4C3B19 #674C2A #7C5A29 #596560 #394841".split(" ")));
            u[e.U$W][e.OW] = r(Yd(1.5, !0, "#030d14 #163A3A #214C4B #1a4545 #225755 #07393D #07454a #0c484d #163A3A #214C4B".split(" ")));
            u[e.UOVQw] = [];
            u[e.UOVQw][e._v] = r(Zd(2, !0, "#0d1b1c #596560 #394841 #67766F #46554D #4C3B19 #674C2A #7C5A29 #596560 #394841".split(" ")));
            u[e.UOVQw][e.OW] = r(Zd(2, !0, "#030d14 #163A3A #214C4B #1a4545 #225755 #07393D #07454a #0c484d #163A3A #214C4B".split(" ")));
            u[e.OWO_V] = [];
            u[e.OWO_V][e._v] = r($d(1.5, !0, "#0d1b1c #596560 #394841 #67766F #46554D #4C3B19 #674C2A #7C5A29 #596560 #394841".split(" ")));
            u[e.OWO_V][e.OW] = r($d(1.5, !0, "#030d14 #163A3A #214C4B #1a4545 #225755 #07393D #07454a #0c484d #163A3A #214C4B".split(" ")));
            u[e.OwW] = [];
            u[e.OwW][e._v] = r(rc(2.2, !0, ["#A89F67", "#9E8456"]));
            u[e.OwW][e.OW] = r(rc(2.2, !0, ["#0B4049", "#08383D"]));
            u[e.___0O] = [];
            u[e.___0O][e._v] = r(rc(2.2, !0, ["#68622D", "#665329"]));
            u[e.___0O][e.OW] = r(rc(2.2, !0, ["#0F3A24", "#083326"]));
            u[e.Qo_] = [];
            u[e.Qo_][e._v] = r(va(0.8, !0, ["#A89F67", "#9E8456"]));
            u[e.Qo_][e.OW] = r(va(0.8, !0, ["#15514F", "#0F3F3D"]));
            u[e.U_w00] = [];
            u[e.U_w00][e._v] = r(va(0.8, !0, ["#c67933", "#b17238"]));
            u[e.U_w00][e.OW] = r(va(0.8, !0, ["#043c37", "#032b23"]));
            u[e.UUw$_] = [];
            u[e.UUw$_][e._v] = r(va(0.8, !0, ["#3a8214", "#4a9c1e"]));
            u[e.UUw$_][e.OW] = r(va(0.8, !0, ["#032d29", "#044640"]));
            u[e.WoowU] = [];
            u[e.WoowU][e._v] = r(va(0.8, !0, ["#e8e8e8", "#bbbbbb"]));
            u[e.WoowU][e.OW] = r(va(0.8, !0, ["#1c6161", "#07413f"]));
            u[e.UQOWU] = [];
            u[e.UQOWU][e._v] = r(va(0.8, !0, ["#328a56", "#449573"]));
            u[e.UQOWU][e.OW] = r(va(0.8, !0, ["#043c37", "#032b23"]));
            u[e.vvvUv] = [];
            u[e.vvvUv][e._v] = r(va(0.8, !0, ["#c98e2f", "#a36b11"]));
            u[e.vvvUv][e.OW] = r(va(0.8, !0, ["#043c37", "#032b23"]));
            u[e.wvv00] = [];
            u[e.wvv00][e._v] = r(va(0.8, !0, ["#b22419", "#99110e"]));
            u[e.wvv00][e.OW] = r(va(0.8, !0, ["#04323c", "#03222b"]));
            u[e.OwU$u] = [];
            u[e.OwU$u][e._v] = r(va(0.8, !0, ["#13a56d", "#098a58"]));
            u[e.OwU$u][e.OW] = r(va(0.8, !0, ["#043c37", "#032b23"]));
            u[e.UUwwQ] = N(1, [{
                f: rc,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#A89F67", "#9E8456"]
            }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
            u[e.wQVvw] = N(1, [{
                f: sc,
                x: 0,
                y: 0,
                a: 1,
                r: -Math.PI / 5,
                c: ["#4d2d14", "#432516"]
            }], 0.3, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
            u[e.QQuwO] = N(1, [{
                f: qg,
                x: 0,
                y: -5,
                a: 1,
                r: 0,
                c: "#1d051e #bf8d51 #7d5133 #e8d6bf #e0c8a9 #ab7a3f".split(" ")
            }], 0.15, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
            u[e.wW$v$] = N(0.9, [], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
            u[e.W0OQv] = [];
            u[e.W0OQv][e._v] = r(ca(0.9, !1, ["#7d613e", "#9e7e5a"]));
            u[e.W0OQv][e.OW] = r(ca(0.9, !1, ["#084442", "#125e5a"]));
            u[e._W$] = [];
            u[e._W$][e._v] = r(ca(0.9, !1, ["#9E8456", "#A89F67"]));
            u[e._W$][e.OW] = r(ca(0.9, !1, ["#1b6f6a", "#0d4e4c"]));
            u[e.Q_u$o] = [];
            u[e.Q_u$o][e._v] = r(ca(0.9, !1, ["#665329", "#68622D"]));
            u[e.Q_u$o][e.OW] = r(ca(0.9, !1, ["#083326", "#0F3A24"]));
            u[e.OUVW_] = [];
            u[e.OUVW_][e._v] = r(ca(0.9, !1, ["#c67933", "#ec952d"]));
            u[e.OUVW_][e.OW] = r(ca(0.9, !1, ["#0e6553", "#094437"]));
            u[e.QVUO_] = [];
            u[e.QVUO_][e._v] = r(ca(0.9, !1, ["#375809", "#4b770e"]));
            u[e.QVUO_][e.OW] = r(ca(0.9, !1, ["#09542d", "#0d5d2f"]));
            u[e.W0uV_] = [];
            u[e.W0uV_][e._v] = r(ca(0.9, !1, ["#585809", "#72770e"]));
            u[e.W0uV_][e.OW] = r(ca(0.9, !1, ["#295209", "#305d0d"]));
            u[e.wWWv$] = [];
            u[e.wWWv$][e._v] = r(ca(0.9, !1, ["#b9b094", "#e2d2c0"]));
            u[e.wWWv$][e.OW] = r(ca(0.9, !1, ["#126366", "#0d484b"]));
            u[e.$oWQ$] = [];
            u[e.$oWQ$][e._v] = r(ca(0.9, !1, ["#3f8662", "#30915d"]));
            u[e.$oWQ$][e.OW] = r(ca(0.9, !1, ["#0e6553", "#094437"]));
            u[e.Qwwuo] = [];
            u[e.Qwwuo][e._v] = r(ca(0.9, !1, ["#c79153", "#dfa868"]));
            u[e.Qwwuo][e.OW] = r(ca(0.9, !1, ["#073927", "#075040"]));
            u[e.ou$0W] = [];
            u[e.ou$0W][e._v] = r(ca(0.9, !1, ["#768b5b", "#819984"]));
            u[e.ou$0W][e.OW] = r(ca(0.9, !1, ["#0c4540", "#0e5153"]));
            u[e.OVV$v] = [];
            u[e.OVV$v][e._v] = r(ca(0.9, !1, ["#567465", "#627c6e"]));
            u[e.OVV$v][e.OW] = r(ca(0.9, !1, ["#073927", "#075040"]));
            u[e.$$oW0] = [];
            u[e.$$oW0][e._v] = r(ca(0.9, !1, ["#996b3a", "#bf956b"]));
            u[e.$$oW0][e.OW] = r(ca(0.9, !1, ["#0e6553", "#094437"]));
            u[e.wWouU] = [];
            u[e.wWouU][e._v] = r(ca(0.9, !1, ["#7a634a", "#a68f77"]));
            u[e.wWouU][e.OW] = r(ca(0.9, !1, ["#1e4d43", "#113c32"]));
            u[e.WVo_0] = [];
            u[e.WVo_0][e._v] = r(ca(0.9, !1, ["#99403c", "#bc796c"]));
            u[e.WVo_0][e.OW] = r(ca(0.9, !1, ["#1e434d", "#11303c"]));
            u[e.vowWo] = [];
            u[e.vowWo][e._v] = r(ca(0.9, !1, ["#88504e", "#b3857c"]));
            u[e.vowWo][e.OW] = r(ca(0.9, !1, ["#253b41", "#162930"]));
            u[e.w0O0W] = [];
            u[e.w0O0W][e._v] = r(ca(0.9, !1, ["#0f8870", "#23af93"]));
            u[e.w0O0W][e.OW] = r(ca(0.9, !1, ["#032829", "#083233"]));
            u[e._UOw_] = [];
            u[e._UOw_][e._v] = r(ca(0.9, !1, ["#618a20", "#84a74e"]));
            u[e._UOw_][e.OW] = r(ca(0.9, !1, ["#1f4632", "#335d47"]));
            u[e.oOQ] = [];
            u[e.oOQ][e._v] = r(Xd(1.2, !0, "#0d1b1c #4d2d14 #432516 #756e52 #663f22 #9e9577".split(" ")));
            u[e.oOQ][e.OW] = r(Xd(1.2, !0, "#030d14 #0d2e33 #072322 #3e706b #123d3f #4e827c".split(" ")));
            u[e._OW] = [];
            u[e._OW][e._v] = r(me(1, !0, "#0d1b1c #4c3a15 #634828 #564021 #634828 #4c3a15".split(" ")));
            u[e._OW][e.OW] = r(me(1, !0, "#030d14 #0d2e33 #184747 #123b3f #0d2e33 #174444".split(" ")));
            u[e.Wvw] = [];
            u[e.Wvw][e._v] = r(ne(1, !0, "#0d1b1c #5cc5ce #89d1d4 #86d0d1 #95d5d8 #e0f2f6 #b3e0e3".split(" ")));
            u[e.Wvw][e.OW] = r(ne(1, !0, "#030d14 #2b9390 #43b5af #43b5af #4bbcb4 #83ddd4 #59c9c0".split(" ")));
            u[e.$wu] = [];
            u[e.$wu][e._v] = r(yc(1, !0, "#0d1b1c #b15ecf #8c29aa #c26de0 #af59cd #d588f1".split(" ")));
            u[e.$wu][e.OW] = r(yc(1, !0, "#030d14 #8359d3 #764eb5 #8f65de #7f55cc #9d77e6".split(" ")));
            u[e.OwO] = [];
            u[e.OwO][e._v] = r(yc(1, !0, "#0d1b1c #6a7570 #939995 #9baaa3 #adbcb5 #8a938e".split(" ")));
            u[e.OwO][e.OW] = r(yc(1, !0, "#030d14 #163a3a #214c4b #1f4948 #295957 #1f5955".split(" ")));
            u[e.uVv] = [];
            u[e.uVv][e._v] = r(oe(1, !0, "#0d1b1c #877d36 #a08f47 #a7983c #b29e4d #c1b06b".split(" ")));
            u[e.uVv][e.OW] = r(oe(1, !0, "#030d14 #1f4948 #215e55 #1f6058 #2a7773 #2c7a70".split(" ")));
            u[e.oV_] = [];
            u[e.oV_][e._v] = r(De(0.8, !0, "#0d1b1c #5f6061 #939393 #4c3a15 #634828 #564021 #634828 #4c3a15".split(" ")));
            u[e.oV_][e.OW] = r(De(0.8, !0, "#030d14 #1f343f #485e66 #0d2e33 #184747 #123b3f #0d2e33 #174444".split(" ")));
            u[e.uuo] = [];
            u[e.uuo][e._v] = r(Ad(0.8, !0, "#0d1b1c #69685a #9c9683 #877d36 #a08f47 #a7983c #b29e4d #c1b06b".split(" ")));
            u[e.uuo][e.OW] = r(Ad(0.8, !0, "#030d14 #1a3732 #1e544c #1f4948 #215e55 #1f6058 #2a7773 #2c7a70".split(" ")));
            u[e._w0] = [];
            u[e._w0][e._v] = r(Xf(0.8, !0, "#0d1b1c #7d8b90 #9facaa #5cc5ce #89d1d4 #86d0d1 #95d5d8 #e0f2f6 #b3e0e3".split(" ")));
            u[e._w0][e.OW] = r(Xf(0.8, !0, "#030d14 #2c4b55 #546d77 #2b9390 #43b5af #43b5af #4bbcb4 #83ddd4 #59c9c0".split(" ")));
            u[e.wuW] = [];
            u[e.wuW][e._v] = r(zc(0.8, !0, "#0d1b1c #6a7570 #939393 #6a7570 #939995 #9baaa3 #adbcb5 #8a938e".split(" ")));
            u[e.wuW][e.OW] = r(zc(0.8, !0, "#030d14 #1f343f #485e66 #163a3a #214c4b #1f4948 #295957 #1f5955".split(" ")));
            u[e.QwW] = [];
            u[e.QwW][e._v] = r(zc(0.8, !0, "#0d1b1c #6a7570 #939393 #b15ecf #8c29aa #c26de0 #af59cd #d588f1".split(" ")));
            u[e.QwW][e.OW] = r(zc(0.8, !0, "#030d14 #1f343f #485e66 #8359d3 #764eb5 #8f65de #7f55cc #9d77e6".split(" ")));
            u[e.QOUuW] = [];
            u[e.QOUuW][e._v] = r(Nb(1.5, !0, "#0d1b1c #4c3b19 #574122 #644928 #574122 #735534 #23a54e #1f934a #208e48 #b12c2a #9c2625 #ebd6a4 #cca73f".split(" ")));
            u[e.QOUuW][e.OW] = r(Nb(1.5, !0, "#030d14 #0d2e33 #184747 #123b3f #0d2e33 #174444".split(" ")));
            u[e.v_W] = [];
            u[e.v_W][e._v] = r(Nb(1, !1, "#133a2b #133a2b #1a4935 #1a4935 #133a2b #1a4935".split(" ")));
            u[e.v_W][e.OW] = r(Nb(1, !1, "#042b30 #042b30 #0b342b #0b342b #042b30 #0b342b".split(" ")));
            u[e.WwUoo] = [];
            u[e.WwUoo][e._v] = r(Ca(1.5, !0, "#0d1b1c #6a7570 #939995 #9baaa3 #8a938e #adbcb5".split(" ")));
            u[e.WwUoo][e.OW] = r(Ca(1.5, !0, "#030d14 #163a3a #214c4b #1f4948 #164542 #295957".split(" ")));
            u[e.$U_] = [];
            u[e.$U_][e._v] = r(Ca(1, !1, "#133a2b #133a2b #1a4935 #1a4935 #133a2b #1a4935".split(" ")));
            u[e.$U_][e.OW] = r(Ca(1, !1, "#032428 #032428 #07393d #07393d #032428 #07393d".split(" ")));
            u[e.vV$Wu] = [];
            u[e.vV$Wu][e._v] = r(Ca(1.5, !0, "#0d1b1c #b15ecf #8c29aa #c26de0 #af59cd #d588f1".split(" ")));
            u[e.vV$Wu][e.OW] = r(Ca(1.5, !0, "#030d14 #8359d3 #764eb5 #8f65de #7f55cc #9d77e6".split(" ")));
            u[e.QVQ] = [];
            u[e.QVQ][e._v] = r(Ca(1, !1, "#133a2b #133a2b #1a4935 #1a4935 #133a2b #1a4935".split(" ")));
            u[e.QVQ][e.OW] = r(Ca(1, !1, "#032428 #032428 #07393d #07393d #032428 #07393d".split(" ")));
            u[e.o0Q00] = [];
            u[e.o0Q00][e._v] = r(Ub(1.5, !0, "#0d1b1c #877d36 #a08f47 #a7983c #9a8636 #c1b06b".split(" ")));
            u[e.o0Q00][e.OW] = r(Ub(1.5, !0, "#030d14 #1f4948 #215e55 #1f6058 #1f605c #2c7a70".split(" ")));
            u[e.Wu_] = [];
            u[e.Wu_][e._v] = r(Ub(1, !1, "#133a2b #133a2b #1a4935 #1a4935 #133a2b #1a4935".split(" ")));
            u[e.Wu_][e.OW] = r(Ub(1, !1, "#032428 #032428 #07393d #07393d #032428 #07393d".split(" ")));
            u[e.QOVu$] = [];
            u[e.QOVu$][e._v] = r(Ob(1.5, !0, "#0d1b1c #5cc5ce #89d1d4 #86d0d1 #95d5d8 #e0f2f6 #b3e0e3".split(" ")));
            u[e.QOVu$][e.OW] = r(Ob(1.5, !0, "#030d14 #2b9390 #43b5af #43b5af #4bbcb4 #83ddd4 #59c9c0".split(" ")));
            u[e.$oU] = [];
            u[e.$oU][e._v] = r(Ob(1, !1, "#133a2b #133a2b #1a4935 #1a4935 #133a2b #1a4935".split(" ")));
            u[e.$oU][e.OW] = r(Ob(1, !1, "#032428 #032428 #07393d #07393d #032428 #07393d".split(" ")));
            u[e.V$Q] = [];
            u[e.V$Q][e._v] = r(Ae(0.5, !0, "#133a2b #9e8838 #c4a23a #4c3b19 #614627 #614627 #614627 #c4a23a #c4a23a #c4a23a".split(" ")));
            u[e.V$Q][e.OW] = r(Ae(0.5, !0, "#032428 #266161 #2b6664 #123335 #1f5453 #1f5453 #1f5453 #2b6664 #2b6664 #2b6664".split(" ")));
            u[e.wWO] = [];
            u[e.wWO][e._v] = r(vg(0.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"]));
            u[e.wWO][e.OW] = r(vg(0.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"]));
            u[e._$o] = [];
            u[e._$o][e._v] = r(Hf(0.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"]));
            u[e._$o][e.OW] = r(Hf(0.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"]));
            u[e.uVQ] = [];
            u[e.uVQ][e._v] = r(V(Math.PI, Kf(0.9, "#000000 #b7252c #b7252c #b7252c #FFFFFF #000000".split(" "))));
            u[e.uVQ][e.OW] = r(V(Math.PI, Kf(0.9, "#030d14 #401d49 #b7252c #401d49 #FFFFFF #000000".split(" "))));
            u[e.VV_] = r(oh(0.6, ["#FFFFFF"]));
            u[e._Q$] = [];
            u[e._Q$][e._v] = r(If(1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"]));
            u[e._Q$][e.OW] = r(If(1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"]));
            u[e._UQ] = [];
            u[e._UQ][e._v] = r(Be(0.6, !0, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]));
            u[e._UQ][e.OW] = r(Be(0.6, !0, ["#478e8b", "#327e73", "#073030", "#08403f"]));
            u[e.u$w] = [];
            u[e.u$w][e._v] = r(qe(0.6, !0, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]));
            u[e.u$w][e.OW] = r(qe(0.6, !0, ["#073030", "#08403f", "#478e8b", "#327e73"]));
            u[e.vvW] = [];
            u[e.vvW][e._v] = r(Ce(0.63, !0, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]));
            u[e.vvW][e.OW] = r(Ce(0.63, !0, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"]));
            u[e.oO0] = [];
            u[e.oO0][e._v] = r(ce(0.6, !0, "#171a19 #c5232c #84191d #a72027 #fef4f4 #e9dad9".split(" ")));
            u[e.oO0][e.OW] = r(ce(0.6, !0, "#073030 #392966 #2a194f #433379 #66aaa3 #469e95".split(" ")));
            u[e.o$$] = [];
            u[e.o$$][e._v] = r(be(0.6, !0, "#171a19 #0f964c #106e3b #138344 #fef4f4 #e9dad9 #C5232C #A92D2D".split(" ")));
            u[e.o$$][e.OW] = r(be(0.6, !0, "#073030 #124949 #0e3838 #15514f #66aaa3 #469e95 #292f66 #202559".split(" ")));
            u[e.WouWQ] = [];
            u[e.WouWQ][e._v] = r(Se(0.42, !0, "#0d1b1c #515C57 #3A4942 #68736F #C1C0C0 #be8d50 #7d5234 #222825 #4D5752 #e48727 #d4a872 #343d39".split(" ")));
            u[e.WouWQ][e.OW] = r(Se(0.42, !0, "#0d1b1c #485E66 #1F343F #60757D #C1C0C0 #be8d50 #7d5234 #1F343F #344B51 #D8E57F #dfa64e #192225".split(" ")));
            u[e.vwu0$] = [];
            u[e.vwu0$][e._v] = r(Te(0.9, ["#e4c027"]));
            u[e.vwu0$][e.OW] = r(Te(0.9, ["#D8E57F"]));
            u[e.$_uVo] = [];
            u[e.$_uVo][e._v] = r(rg(0.42, !0, "#0d1b1c #515C57 #3A4942 #68736F #C1C0C0 #be8d50 #7d5234 #222825 #4D5752 #e48727 #d4a872 #232a27".split(" ")));
            u[e.$_uVo][e.OW] = r(rg(0.42, !0, "#0d1b1c #485E66 #1F343F #60757D #C1C0C0 #be8d50 #7d5234 #1F343F #344B51 #D8E57F #dfa64e #1b2529".split(" ")));
            u[e.UVOwu] = r(uh(1, "#596560 #394841 #543B1C #694D28 #7E8A85 #384740 #525956".split(" ")));
            u[e.vUVwu] = [];
            u[e.vUVwu][e._v] = r(pe(0.5, !0, "#0d1b1c #939393 #5f6061 #c0c0c0 #ffad22 #fffdd5 #fee764".split(" ")));
            u[e.vUVwu][e.OW] = r(pe(0.5, !0, "#0d1b1c #485e66 #1f343f #60757d #ffdc73 #fffce2 #fef259".split(" ")));
            u[e.WuOvV] = [];
            u[e.WuOvV][e._v] = r(Uf(0.5, !0, "#0d1b1c #939393 #5f6061 #c0c0c0 #4f4f4f #6c6c6c #454545".split(" ")));
            u[e.WuOvV][e.OW] = r(Uf(0.5, !0, "#0d1b1c #485e66 #1f343f #60757d #152229 #0c1113 #0c1113".split(" ")));
            u[e.wvU_Q] = r(Dh(0.8, !0, ["#5f6061", "#939393"]));
            u[e.oO_v0] = N(1, [{
                f: sc,
                x: 0,
                y: 0,
                a: 1,
                r: Math.PI / 2.5,
                c: ["#4d2d14", "#432516"]
            }], 0.3, ["#494949", "#5b5858", "#3d3b3b"], 1);
            u[e.Wwv] = [];
            u[e.Wwv][e._v] = r(se(1, !0, "#0d1b1c #554139 #3f332a #261912 #eee6c5 #d1c599 #554139 #3f332a #86509b #703a99".split(" ")));
            u[e.Wwv][e.OW] = r(se(1, !0, "#0d1b1c #0b3432 #092b29 #052120 #104d5b #0b424f #0b3432 #092b29 #2b0b4a #23073e".split(" ")));
            u[e.WOo] = [];
            u[e.WOo][e._v] = r(Wf(1, !0, "#0d1b1c #554139 #3f332a #261912 #eee6c5 #d1c599 #554139 #3f332a #86509b #703a99".split(" ")));
            u[e.WOo][e.OW] = r(Wf(1, !0, "#0d1b1c #0b3432 #092b29 #052120 #104d5b #083b37 #0b3432 #092b29 #2b0b4a #23073e".split(" ")));
            u[e.QVV] = [];
            u[e.QVV][e._v] = r(V(3, te(0.7, !0, "#0d1b1c #58452b #47341d #ee593d #c04933 #c04933 #a33e2b #c3be9a #7f6d52".split(" "))));
            u[e.QVV][e.OW] = r(V(3, te(0.7, !0, "#0d1b1c #0b3432 #092b29 #34255d #281b4e #2f2157 #281b4e #104d5b #083b37".split(" "))));
            u[e.$Uu] = [];
            u[e.$Uu][e._v] = r(V(3, ue(0.7, !0, "#0d1b1c #58452b #47341d #765d42 #c3be9a #7f6d52".split(" "))));
            u[e.$Uu][e.OW] = r(V(3, ue(0.7, !0, "#0d1b1c #0b3432 #092b29 #0e4d49 #1a6c67 #07322f".split(" "))));
            u[e.$v$] = [];
            u[e.$v$][e._v] = r(V(3, ve(0.65, !0, "#0d1b1c #4d2d14 #432516 #c3be9a #7f6d52 #7a7575 #454749 #8c8787 #939393 #5f6061 #aaa6a6".split(" "))));
            u[e.$v$][e.OW] = r(V(3, ve(0.65, !0, "#0d1b1c #0d2e33 #0b2326 #1a6c67 #07322f #374950 #101f26 #2c3c42 #485e66 #1f343f #546e78".split(" "))));
            u[e.ow_] = [];
            u[e.ow_][e._v] = r(V(3, we(0.67, !0, "#0d1b1c #493e26 #382e19 #a69e39 #9c8828 #bab143 #c4bc51 #b29c32 #d2ca59".split(" "))));
            u[e.ow_][e.OW] = r(V(3, we(0.67, !0, "#030d14 #263947 #182935 #33916d #197c62 #3eab81 #43aa82 #29997c #52be94".split(" "))));
            u[e.wo0] = [];
            u[e.wo0][e._v] = r(V(3, xe(0.67, !0, "#0d1b1c #262114 #211108 #4ba8b4 #198a82 #6ccad7 #63c9d6 #29aaa1 #7bd9e6".split(" "))));
            u[e.wo0][e.OW] = r(V(3, xe(0.67, !0, "#0d1b1c #111316 #0a0b0c #4bbbc3 #23a19d #54c5cd #4ad2ce #3dc4c0 #73dde5".split(" "))));
            u[e._uV] = [];
            u[e._uV][e._v] = r(V(3, ye(0.67, !0, "#0d1b1c #262114 #211108 #9443b1 #6f1988 #a752c6 #9e35be #8c29aa #b864d6".split(" "))));
            u[e._uV][e.OW] = r(V(3, ye(0.67, !0, "#0d1b1c #111316 #0a0b0c #6e43bf #673fa4 #784bcc #845bc6 #764eb5 #966be7".split(" "))));
            u[e.___] = [];
            u[e.___][e._v] = r(V(3, ze(1, !0, "#0d1b1c #1e2b34 #151c24 #99d7dd #7dcbd1 #c6e8eb #aadee8 #b7e2e5".split(" "))));
            u[e.___][e.OW] = r(V(3, ze(1, !0, "#0d1b1c #1c2026 #0a0b0c #7dc6d9 #6cbacf #87d2e6 #49b2cf #87d2e6".split(" "))));
            u[e.oQw] = [];
            u[e.oQw][e._v] = r(V(3, ab(1, !0, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
            u[e.oQw][e.OW] = r(V(3, ab(1, !0, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"])));
            u[e.uvV] = [];
            u[e.uvV][e._v] = r(V(3, bf(0.5, !0, ["#0d1b1c", "#939393", "#5f6061"])));
            u[e.uvV][e.OW] = r(V(3, bf(0.5, !0, ["#030d14", "#485e66", "#1f343f"])));
            u[e.vvV] = [];
            u[e.vvV][e._v] = r(V(3, Qe(1, !0, "#0d1b1c #9b5927 #7a3610 #1e0302 #0d825b #6bd16e #17915d #89e5aa #16935d #a0efc4 #28b26d #cdf4cb".split(" "))));
            u[e.vvV][e.OW] = r(V(3, Qe(1, !0, "#0d1b1c #2a4f4a #1e423d #1e0302 #096b3f #3db76f #118254 #40c696 #0c7a50 #59d8a4 #249376 #80d8c7".split(" "))));
            u[e.UQV] = [];
            u[e.UQV][e._v] = r(V(3, ab(1, !0, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
            u[e.UQV][e.OW] = r(V(3, ab(1, !0, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"])));
            u[e.wvo] = [];
            u[e.wvo][e._v] = r(V(3, ab(1, !0, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
            u[e.wvo][e.OW] = r(V(3, ab(1, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
            u[e.$OU] = [];
            u[e.$OU][e._v] = r(V(3, ab(1, !0, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
            u[e.$OU][e.OW] = r(V(3, ab(1, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
            u[e.vQQ] = [];
            u[e.vQQ][e._v] = r(Ac(0.55, !1, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]));
            u[e.vQQ][e.OW] = r(Ac(0.55, !1, ["#080707", "#133d3c", "#2b6664", "#1b2529"]));
            u[e.VUV] = [];
            u[e.VUV].push(r(Ac(0.8, !1, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])));
            u[e.VUV].push(r(Ac(0.8, !1, ["#141414", "#9f7d17", "#dab33c", "#474545"])));
            u[e.VUV].push(r(Ac(0.8, !1, ["#141414", "#73590d", "#a88a2c", "#2a2828"])));
            u[e.__W] = [];
            u[e.__W].push(u[e.VUV][0]);
            u[e.__W].push(u[e.VUV][0]);
            u[e.__W].push(u[e.VUV][0]);
            u[e.UoU] = [];
            u[e.UoU][e._v] = r(Bc(0.06, !1, ["#141414", "#c4a23a", "#816511"]));
            u[e.UoU][e.OW] = r(Bc(0.06, !1, ["#030d14", "#2b6664", "#133d3c"]));
            u[e._Wv] = [];
            u[e._Wv].push(r(Bc(0.08, !1, ["#141414", "#c4a23a", "#816511"])));
            u[e._Wv].push(r(Bc(0.08, !1, ["#141414", "#e2bd4e", "#a38018"])));
            u[e._Wv].push(r(Bc(0.08, !1, ["#141414", "#b0902e", "#634d09"])));
            u[e.WQw] = N(1.5, [{
                f: Fd,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#141414", "#178a99", "#0a6372", "#03282e"]
            }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
            u[e.$$oV_] = [];
            u[e.$$oV_][e._v] = r(Le(0.8, !0, ["#347f93", "#54a4ba"]));
            u[e.$$oV_][e.OW] = r(Le(0.8, !0, ["#98ede3", "#94f2e7"]));
            u[e.oWuU0] = [];
            u[e.oWuU0][e._v] = r(Me(0.8, !0, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]));
            u[e.oWuU0][e.OW] = r(Me(0.8, !0, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"]));
            u[e._WUQW] = [];
            u[e._WUQW][e._v] = r(Ne(0.8, !0, ["#a9e4ed", "#86d4e0"]));
            u[e._WUQW][e.OW] = r(Ne(0.8, !0, ["#83ddd4", "#485e66"]));
            u[e._UO] = [];
            u[e._UO][e._v] = r(Oe(0.8, !0, "#347f93 #54a4ba #1c2528 #a9e4ed #86d4e0 #959da0 #697072 #929da0 #afb9bc".split(" ")));
            u[e._UO][e.OW] = r(Oe(0.8, !0, "#98ede3 #94f2e7 #1f343f #59c9c0 #83ddd4 #485e66 #2d484f #546d6d #597b84".split(" ")));
            u[e.VoO0w] = [];
            u[e.VoO0w][e._v] = o.uOvvQ;
            u[e.VoO0w][e.OW] = o.$wQvu;
            u[e.WoUvo] = [];
            u[e.WoUvo][e._v] = o.UwVw_;
            u[e.WoUvo][e.OW] = o.WovVw;
            u[e.U$WvW] = [];
            u[e.U$WvW][e._v] = o.U0W$V;
            u[e.U$WvW][e.OW] = o.$$OuW;
            u[e.QW$] = [];
            u[e.QW$][e._v] = o.uuvuU;
            u[e.QW$][e.OW] = o.$0uwo;
            u[e.VVuov] = [];
            u[e.VVuov][e._v] = o.UQQ$o;
            u[e.VVuov][e.OW] = o.ooUOu;
            u[e.u_V] = [];
            u[e.u_V][e._v] = o.u_o_Q;
            u[e.u_V][e.OW] = o.$WUuU;
            u[e.wUOuo] = [];
            u[e.wUOuo][e._v] = o.WWvvW;
            u[e.wUOuo][e.OW] = o.QVowo;
            u[e.ouo] = [];
            u[e.ouo][e._v] = o.QVQ$Q;
            u[e.ouo][e.OW] = o.Vuvo0;
            u[e.QuW$_] = [];
            u[e.QuW$_][e._v] = o.wovww;
            u[e.QuW$_][e.OW] = o.WuWvW;
            u[e._vU] = [];
            u[e._vU][e._v] = o.QuQ$O;
            u[e._vU][e.OW] = o.UvWvV;
            u[e.OWVQO] = [];
            u[e.OWVQO][e._v] = o._Ww$v;
            u[e.OWVQO][e.OW] = o.o_UuV;
            u[e.V_w] = [];
            u[e.V_w][e._v] = o.oQO0v;
            u[e.V_w][e.OW] = o.OwUww;
            u[e.ou$QV] = [];
            u[e.ou$QV][e._v] = o.V0uvu;
            u[e.ou$QV][e.OW] = o.QQOOw;
            u[e.W_W] = [];
            u[e.W_W][e._v] = o.QQQUO;
            u[e.W_W][e.OW] = o.$V_Wv;
            u[e.v$v] = [];
            u[e.v$v][e._v] = o.VoU0$;
            u[e.v$v][e.OW] = o.wQoVv;
            u[e.o$VQV] = o.o$VQV;
            u[e.Ww$] = [];
            u[e.Ww$][e._v] = r(mg(0.75, !0, ["#0d1b1c", "#4c3a15", "#634828", "#564021"]));
            u[e.Ww$][e.OW] = r(mg(0.75, !0, ["#030d14", "#0d2e33", "#184747", "#123b3f"]));
            u[e.vOUQu] = r(Vc(0.3, ["#092813", "#1f773d"], 0));
            u[e.QuOuw] = r(Vc(0.3, ["#092813", "#1f773d"], 1));
            u[e.VWOoO] = r(Gh(0.6, ["#092813", "#1f773d"]));
            u[e._VO] = [];
            u[e._VO].push(r(nb(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0)));
            u[e._VO].push(r(nb(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0)));
            u[e._VO].push(r(nb(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0)));
            u[e.O_Q] = [];
            f = r(nb(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
            u[e.O_Q].push(f);
            u[e.O_Q].push(f);
            u[e.O_Q].push(f);
            u[e.WvW] = [];
            u[e.WvW].push(r(nb(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1)));
            u[e.WvW].push(r(nb(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1)));
            u[e.WvW].push(r(nb(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1)));
            u[e.uuw_w] = r(Hh(0.3, ["#FFFFFF"]));
            u[e.ouvW$] = r(Ch(0.3, ["#FFFFFF"]));
            u[e.O$UoW] = r(Vc(0.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0));
            u[e.OO$Ov] = r(V(Math.PI / 5, Zh(0.2, ["#FFFFFF"])));
            u[e.wOu] = [];
            u[e.wOu][e._v] = r(Ke(0.85, !0, "#0d1b1c #8c55b7 #652d8e #79359e #5eccd1 #4badad #9e6ac6".split(" ")));
            u[e.wOu][e.OW] = r(Ke(0.85, !0, "#0d1b1c #4e4e93 #393977 #444187 #2b9390 #277a74 #7da8db".split(" ")));
            u[e.WuU] = [];
            u[e.WuU].push(r(nb(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1)));
            u[e.WuU].push(r(nb(0.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1)));
            u[e.WuU].push(r(nb(0.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1)));
            u[e.VoU] = [];
            u[e.VoU][e._v] = r(We(0.37, !0, ["#2a2938", "#242330", "#313041"]));
            u[e.VoU][e.OW] = r(We(0.37, !0, ["#1b1e30", "#161921", "#252f3e"]));
            u[e.$wo] = [];
            u[e.$wo][e._v] = r(Xe(0.17, !0, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"]));
            u[e.$wo][e.OW] = r(Xe(0.17, !0, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"]));
            u[e.ow$] = [];
            u[e.ow$][e._v] = r(Cc(0.55, !0, "#1d1d22 #e2e1e1 #d2cbcb #cfcbc8 #beb5b5 #ada0a0".split(" "), 1));
            u[e.ow$][e.OW] = r(Cc(0.55, !0, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1));
            u[e.o_Q] = [];
            u[e.o_Q][e._v] = r(Cc(0.55, !0, "#1d1d22 #8c7654 #785f4c #a88e6c #785f4c #705845".split(" "), 0));
            u[e.o_Q][e.OW] = r(Cc(0.55, !0, "#1d1d22 #1b5752 #0e3b37 #23706a #11413e #0b322f".split(" "), 0));
            u[e.w_v] = [];
            u[e.w_v][e._v] = r(Pb(0.2, !0, "#0d1b1c #A5A244 #D8DC74 #C0BF55 #49B669 #19994C #71C187".split(" ")));
            u[e.w_v][e.OW] = r(Pb(0.2, !0, "#2b7c57 #114933 #1b6656 #1a7961 #3db76f #118254 #40c696".split(" ")));
            u[e.uWU] = [];
            u[e.uWU][e._v] = r(Pb(0.2, !0, "#0d1b1c #A5A244 #D8DC74 #C0BF55 #C45727 #994617 #DB9358".split(" ")));
            u[e.uWU][e.OW] = r(Pb(0.2, !0, "#2b7c57 #114933 #1b6656 #1a7961 #69b681 #509a75 #7ec387".split(" ")));
            u[e.VwO] = [];
            u[e.VwO][e._v] = r(Pb(0.2, !0, "#0d1b1c #A5A244 #D8DC74 #C0BF55 #2792C1 #196599 #59C0D8".split(" ")));
            u[e.VwO][e.OW] = r(Pb(0.2, !0, "#2b7c57 #114933 #1b6656 #1a7961 #19899e #16688b #4ea3c7".split(" ")));
            u[e.VUW] = [];
            u[e.VUW][e._v] = r(re(0.24, !0, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"]));
            u[e.VUW][e.OW] = r(re(0.24, !0, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"]));
            u[e.$$Q] = [];
            u[e.$$Q][e._v] = r(Fe(0.32, !0, "#0d1b1c #cae9eb #75bcae #ffffff #51736d #2b4d48 #1b3a3a #80ccca #59ada7".split(" ")));
            u[e.$$Q][e.OW] = r(Fe(0.32, !0, "#0d1b1c #70c1d6 #49b2cf #87cad9 #367c93 #113743 #0c2c36 #51a2b8 #3a8ea4".split(" ")));
            u[e._Wu] = [];
            u[e._Wu][e._v] = r(V(3, Wc(0.9, !0, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"])));
            u[e._Wu][e.OW] = r(V(3, Wc(0.9, !0, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"])));
            u[e.Q0o0v] = [];
            u[e.Q0o0v][e._v] = r(V(3, Wc(1, !0, [void 0, void 0, void 0, "#c8efef", "#c8efef"])));
            u[e.Q0o0v][e.OW] = r(V(3, Wc(1, !0, [void 0, void 0, void 0, "#87d2e6", "#87d2e6"])));
            u[e.wVO] = [];
            u[e.wVO].push(r($e(0.3, !0, "#0d1b1c #392C16 #5E3E1A #704821 #654320 #eda80d".split(" "), 0)));
            u[e.wVO].push(r($e(0.3, !0, "#0d1b1c #392C16 #5E3E1A #704821 #654320 #eda80d".split(" "), 1)));
            u[e.wVO].push(r($e(0.3, !0, "#0d1b1c #392C16 #5E3E1A #704821 #654320 #d7990c".split(" "), 1)));
            u[e.o_o] = [];
            u[e.o_o].push(r(af(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0)));
            u[e.o_o].push(r(af(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
            u[e.o_o].push(r(af(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
            u[e.Q__] = [];
            u[e.Q__].push(r(tc(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 1)));
            u[e.Q__].push(r(tc(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 1)));
            u[e.Q__].push(r(tc(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 1)));
            u[e.VvQ] = [];
            u[e.VvQ].push(r(tc(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 0)));
            u[e.VvQ].push(r(tc(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 0)));
            u[e.VvQ].push(r(tc(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 0)));
            u[e.oVO] = [];
            u[e.oVO][e._v] = r(V(3, Xa(0.7, !0, "#0d1b1c #6d5041 #4f3d35 #939393 #5f6061 #757575".split(" "))));
            u[e.oVO][e.OW] = r(V(3, Xa(0.7, !0, "#0d1b1c #0d2e33 #0b2326 #485e66 #1f343f #274352".split(" "))));
            u[e.UwQ] = [];
            u[e.UwQ][e._v] = r(V(3, Xa(0.7, !0, "#0d1b1c #493e26 #382e19 #c4bc51 #b29c32 #ada437".split(" "))));
            u[e.UwQ][e.OW] = r(V(3, Xa(0.7, !0, "#0d1b1c #263947 #182935 #43aa82 #29997c #32916c".split(" "))));
            u[e.OvW] = [];
            u[e.OvW][e._v] = r(V(3, Xa(0.7, !0, "#0d1b1c #262114 #211108 #63c9d6 #29aaa1 #42aab8".split(" "))));
            u[e.OvW][e.OW] = r(V(3, Xa(0.7, !0, "#0d1b1c #111316 #0a0b0c #73dde5 #3dc4c0 #49bdc6".split(" "))));
            u[e.oQo] = [];
            u[e.oQo][e._v] = r(V(3, Xa(0.7, !0, "#0d1b1c #262114 #211108 #b864d6 #8c29aa #9641b5".split(" "))));
            u[e.oQo][e.OW] = r(V(3, Xa(0.7, !0, "#0d1b1c #111316 #0a0b0c #8359d3 #764eb5 #6f45c2".split(" "))));
            u[e.uo$] = [];
            u[e.uo$].push(r(Re(0.7, ["#3b330d", "#b5a118", "#c8ac16"], 0)));
            u[e.uo$].push(r(Re(0.7, ["#524712", "#c7b11c", "#d9ba18"], 0)));
            u[e.uo$].push(r(Re(0.7, ["#2a2409", "#9f8e14", "#ad9511"], 0)));
            u[e._vv$V] = r(mh(1.1, ["#BB0000"]));
            u[e.vQU__] = r(V(Math.PI, nh(0.9, "#BB0000")));
            u[e.oo0] = [];
            u[e.oo0][e._v] = r(Ge(0.55, !0, "#c9a65f #ae863f #655530 #4a391c #ebdd79 #4a421c".split(" ")));
            u[e.oo0][e.OW] = r(Ge(0.55, !0, "#15514f #0f3f3d #123335 #0d2d2b #2b6664 #070d16".split(" ")));
            u[e._U$] = [];
            u[e._U$][e._v] = r(He(0.55, !0, ["#252525", "#73583e", "#573f29", "#7d6144"]));
            u[e._U$][e.OW] = r(He(0.55, !0, ["#0d3b39", "#144642", "#0b3230", "#154f4b"]));
            u[e.vOO] = [];
            u[e.vOO][e._v] = r(Dd(0.6, !0, "#252525 #808080 #4a4a4a #9e9c8b #615c53 #686969 #8a8776 #555555 #747474 #969696 #454545".split(" ")));
            u[e.vOO][e.OW] = r(Dd(0.6, !0, "#030d14 #1c4a4a #102d2d #255756 #163d3c #194544 #1f5252 #184141 #1c4a4a #255756 #163a3a".split(" ")));
            u[e.uou] = [];
            u[e.uou][e._v] = r(Ie(0.58, !0, ["#dbce71", "#b29c32", "#c4bc51"]));
            u[e.uou][e.OW] = r(Ie(0.58, !0, ["#2b7c57", "#15543c", "#1a7961"]));
            u[e._O$] = [];
            u[e._O$][e._v] = r(Je(0.69, !0, "#717171 #485252 #555555 #65c7cd #4aadad #358d8b #c1e6ea #a6dce4".split(" ")));
            u[e._O$][e.OW] = r(Je(0.69, !0, "#183f3f #092121 #123335 #2b9390 #277a74 #1f665f #83ddd4 #59c9c0".split(" ")));
            u[e.WUW] = [];
            u[e.WUW][e._v] = [];
            u[e.WUW][e.OW] = [];
            u[e.WUW][e._v].push(r($f(1.3, "#0a2d18 #124c34 #227248 #ccedd9 #2d7a55 #3c9660 #afddc1 #bbefd0 #0a2d18 #e4efe8".split(" "))));
            u[e.WUW][e._v].push(r(Zf(1.5, "#191919 #134d35 #247349 #afddc1 #bbefd0 #e4efe8".split(" "))));
            u[e.WUW][e._v].push(r(Yf(1.5, "#191919 #134d35 #247349 #cde7d6 #122d1c #e3eee7".split(" "))));
            u[e.WUW][e.OW].push(r($f(1.3, "#000000 #0e3638 #174a51 #328587 #174a51 #1d5559 #328587 #48a8aa #0a2728 #56afac".split(" "))));
            u[e.WUW][e.OW].push(r(Zf(1.5, "#000000 #0e3638 #174a51 #328587 #48a8aa #56afac".split(" "))));
            u[e.WUW][e.OW].push(r(Yf(1.5, "#000000 #0e3638 #174a51 #328587 #0a2728 #56afac".split(" "))));
            u[e._oU] = [];
            u[e._oU][e._v] = r(jg(1, "#292b2b #57aba6 #80ccca #c42333 #a4dad9 #3e8294 #ffffff #57aba6 #ffffff".split(" ")));
            u[e._oU][e.OW] = r(jg(1, "#050505 #1d3a38 #0b514a #200333 #327570 #1d3a38 #ffffff #0b514a #63afa9".split(" ")));
            u[e.vo$Q$] = [];
            u[e.vo$Q$][e._v] = r(kg(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
            u[e.vo$Q$][e.OW] = r(kg(1, ["#050505", "#327570", "#021724", "#200333"]));
            u[e.QUUUU] = [];
            u[e.QUUUU][e._v] = r(lg(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
            u[e.QUUUU][e.OW] = r(lg(1, ["#050505", "#327570", "#021724", "#200333"]));
            u[e.Wov] = [];
            u[e.Wov][e._v] = [];
            u[e.Wov][e.OW] = [];
            u[e.Wov][e._v] = [o.QWWO_, o.$uw0Q, o.OOVoV, o.QVUWo, o.$VoW$, o.uVv$o, o.WOUoQ, o.Qw$$_, o.UWUoV, o.v0w$Q, o.VuUWu, o.$O$w0, o.u0WwO, o.OovQw, o._VW0U, o.v0V0v, o.OOUQv, o.Ou$oU, o.vW_UO, o.OUQ0v, o.v_VU0, o.W$$VO, o.QWVou, o.wOQQW, o.Uwu$v, o.vuQWQ, o.Ovu_V, o.o0Voo, o.VQUw0, o.UVOoQ, o.oOUv_, o.$__uQ, o.ow$0V, o.V0OQQ, o.uuV$u, o.wvUQ$, o.QQVOv, o.VVWQU, o.Q$VQv, o.QOoOw, o.$_u0$, o.UUwoO, o.QWwVO, o.VUQ00, o.vuvV0, o.UWvOW, o.uQWwu, o.uuQUw, o.QOUQO, o.$Oouw, o._Vw$u, o.OUU_w, o.v_UO_, o.o$UwO, o.Uuu0_, o.Q$_o_];
            u[e.Wov][e.OW] = [o.v0wvO, o._W$0_, o._VUow, o.$OoUV, o.Ouvuu, o.$wQu$, o.uuv$o, o.$uQU0, o.WoUO$, o.vV_UW, o.oUU0u, o.$$oQo, o.QV_oo, o.Wvu0_, o.WQWu$, o.Ww_QO, o.QOW0Q, o.UQVwv, o.WV_wW, o.Wu$0w, o.$QoQV, o.Qwwow, o.$U__V, o.QoQo_, o.uwQo_, o.W0W__, o.w0$wu, o.UwuU$, o.w0_W$, o.wQvwo, o._oV0v, o._Uv$w, o._W_Wo, o.U0Wow, o.vWOQ_, o.WV_wu, o.wWu$O, o.W0Qv_, o.vwvQv, o.vwU$V, o.Q0wWQ, o.$O_uO, o.OOO0Q, o.VuWvQ, o.oUuOo, o.WWwWo, o.V$V$Q, o.UoOUo, o.OU__0, o.VvVwv, o.Q0vOW, o.wQWo_, o.oU$vO, o.v$uov, o._uVoW, o.wuWUQ];
            u[e.ouw] = [];
            u[e.ouw][e._v] = [];
            u[e.ouw][e.OW] = [];
            u[e.ouw][e._v].push(r(Fa(1.1, !1, ["#252B28", "#747471", "#83827e"], 0)));
            u[e.ouw][e._v].push(r(Fa(0.9, !1, ["#252B28", "#747471", "#83827e"], 1)));
            u[e.ouw][e._v].push(r(Fa(1, !1, ["#252B28", "#747471", "#83827e"], 2)));
            u[e.ouw][e._v].push(r(Fa(0.9, !1, ["#252B28", "#747471", "#83827e"], 2)));
            u[e.ouw][e.OW].push(r(Fa(1.1, !1, ["#030d14", "#123335", "#183f3f"], 0)));
            u[e.ouw][e.OW].push(r(Fa(0.9, !1, ["#030d14", "#123335", "#183f3f"], 1)));
            u[e.ouw][e.OW].push(r(Fa(1, !1, ["#030d14", "#123335", "#183f3f"], 2)));
            u[e.ouw][e.OW].push(r(Fa(0.9, !1, ["#030d14", "#123335", "#183f3f"], 2)));
            u[e.wWu] = [];
            u[e.wWu][e._v] = [];
            u[e.wWu][e.OW] = [];
            u[e.wWu][e._v].push(r(Fa(1.1, !0, ["#252B28", "#58645F", "#75827D"], 2)));
            u[e.wWu][e._v].push(r(Fa(0.9, !0, ["#252B28", "#58645F", "#75827D"], 2)));
            u[e.wWu][e._v].push(r(Fa(1, !0, ["#252B28", "#58645F", "#75827D"], 2)));
            u[e.wWu][e._v].push(r(Fa(0.9, !0, ["#252B28", "#58645F", "#75827D"], 2)));
            u[e.wWu][e.OW].push(r(Fa(1.1, !0, ["#030d14", "#123335", "#183f3f"], 2)));
            u[e.wWu][e.OW].push(r(Fa(0.9, !0, ["#030d14", "#123335", "#183f3f"], 2)));
            u[e.wWu][e.OW].push(r(Fa(1, !0, ["#030d14", "#123335", "#183f3f"], 2)));
            u[e.wWu][e.OW].push(r(Fa(0.9, !0, ["#030d14", "#123335", "#183f3f"], 2)));
            u[e.Qwo] = [];
            u[e.Qwo][e._v] = [];
            u[e.Qwo][e.OW] = [];
            u[e.Qwo][e._v].push(r($a(1.5, !1, ["#2b280a", "#ddcf8a", "#f4efc6"])));
            u[e.Qwo][e._v].push(r($a(1.3, !1, ["#2b280a", "#ddcf8a", "#f4efc6"])));
            u[e.Qwo][e._v].push(r($a(1.1, !1, ["#2b280a", "#ddcf8a", "#f4efc6"])));
            u[e.Qwo][e.OW].push(r($a(1.5, !1, ["#0a2728", "#3e8989", "#50a09c"])));
            u[e.Qwo][e.OW].push(r($a(1.3, !1, ["#0a2728", "#3e8989", "#50a09c"])));
            u[e.Qwo][e.OW].push(r($a(1.1, !1, ["#0a2728", "#3e8989", "#50a09c"])));
            u[e.uW_] = [];
            u[e.uW_][e._v] = [];
            u[e.uW_][e.OW] = [];
            u[e.uW_][e._v].push(r(Wa(1.1, !1, ["#123d38", "#70e0dd", "#95efea"])));
            u[e.uW_][e._v].push(r(Wa(0.9, !1, ["#123d38", "#70e0dd", "#95efea"])));
            u[e.uW_][e._v].push(r(Wa(0.7, !1, ["#123d38", "#70e0dd", "#95efea"])));
            u[e.uW_][e.OW].push(r(Wa(1.1, !1, ["#123d38", "#47b2ac", "#5cccc4"])));
            u[e.uW_][e.OW].push(r(Wa(0.9, !1, ["#123d38", "#47b2ac", "#5cccc4"])));
            u[e.uW_][e.OW].push(r(Wa(0.7, !1, ["#123d38", "#47b2ac", "#5cccc4"])));
            u[e.$W] = [];
            u[e.$W][e._v] = [];
            u[e.$W][e.OW] = [];
            u[e.$W][e._v].push(r(Gb(1.7, !0, ["#1d051e", "#c27add", "#cd98e5"])));
            u[e.$W][e._v].push(r(Gb(1.5, !0, ["#1d051e", "#c27add", "#cd98e5"])));
            u[e.$W][e._v].push(r(Gb(1.3, !0, ["#1d051e", "#c27add", "#cd98e5"])));
            u[e.$W][e.OW].push(r(Gb(1.7, !0, ["#1d051e", "#41aaa0", "#5cccc4"])));
            u[e.$W][e.OW].push(r(Gb(1.5, !0, ["#1d051e", "#41aaa0", "#5cccc4"])));
            u[e.$W][e.OW].push(r(Gb(1.3, !0, ["#1d051e", "#41aaa0", "#5cccc4"])));
            u[e.$OO] = [];
            u[e.$OO][e._v] = [];
            u[e.$OO][e.OW] = [];
            u[e.$OO][e._v].push(r(Cd(1, ["#2d53c4"])));
            u[e.$OO][e.OW].push(r(Cd(1, ["#2d53c4"])));
            u[e.WOw] = [];
            u[e.WOw][e._v] = [];
            u[e.WOw][e.OW] = [];
            u[e.WOw][e._v].push(r(Cd(1, ["#c4912d"])));
            u[e.WOw][e.OW].push(r(Cd(1, ["#c4912d"])));
            u[e.ow_$$] = [];
            u[e.ow_$$][e._v] = r(gb(1, ["#414040"]));
            u[e.ow_$$][e.OW] = r(gb(1, ["#153635"]));
            u[e.WVo$0] = [];
            u[e.WVo$0][e._v] = r(Nb(1, !1, "#EBF2F0 #EBF2F0 #b2d4d1 #b2d4d1 #EBF2F0 #b2d4d1".split(" ")));
            u[e.WVo$0][e.OW] = r(Nb(1, !1, "#136167 #136167 #24878f #24878f #136167 #24878f".split(" ")));
            u[e.uwVW_] = [];
            u[e.uwVW_][e._v] = r(Ca(1, !1, "#EBF2F0 #EBF2F0 #b2d4d1 #b2d4d1 #EBF2F0 #b2d4d1".split(" ")));
            u[e.uwVW_][e.OW] = r(Ca(1, !1, "#136167 #136167 #24878f #24878f #136167 #24878f".split(" ")));
            u[e.Quw_W] = [];
            u[e.Quw_W][e._v] = r(Ca(1, !1, "#EBF2F0 #EBF2F0 #b2d4d1 #b2d4d1 #EBF2F0 #b2d4d1".split(" ")));
            u[e.Quw_W][e.OW] = r(Ca(1, !1, "#136167 #136167 #24878f #24878f #136167 #24878f".split(" ")));
            u[e.V_v$Q] = [];
            u[e.V_v$Q][e._v] = r(Ob(1, !1, "#EBF2F0 #EBF2F0 #b2d4d1 #b2d4d1 #EBF2F0 #b2d4d1".split(" ")));
            u[e.V_v$Q][e.OW] = r(Ob(1, !1, "#136167 #136167 #24878f #24878f #136167 #24878f".split(" ")));
            u[e.V_V$v] = [];
            u[e.V_V$v][e._v] = r(Ub(1, !1, "#EBF2F0 #EBF2F0 #b2d4d1 #b2d4d1 #EBF2F0 #b2d4d1".split(" ")));
            u[e.V_V$v][e.OW] = r(Ub(1, !1, "#136167 #136167 #24878f #24878f #136167 #24878f".split(" ")));
            u[e.uOV] = [];
            u[e.uOV][e._v] = r(hg(0.9, "#1d051e #ffffff #c41c50 #2c2e2d #c63450 #f7e7f0".split(" ")));
            u[e.uOV][e.OW] = r(hg(0.9, "#123d38 #1a847f #200333 #131919 #01333a #b6f2db".split(" ")));
            u[e.W$o] = [];
            u[e.W$o][e._v] = r(ig(0.9, "#1d051e #ffffff #c41c50 #c63450 #ffffff #f7e7f0 #2b2d2d".split(" ")));
            u[e.W$o][e.OW] = r(ig(0.9, "#123d38 #1a847f #200333 #01333a #ffffff #b6f2db #2b2d2d".split(" ")));
            u[e.vUv] = [];
            u[e.uQQ] = [];
            u[e._W_] = [];
            u[e._$W] = [];
            for (f = 0; 2 > f; f++) u[e.vUv][f] = document.createElement("canvas"), u[e.vUv][f].width = 193, u[e.vUv][f].height = 193, u[e.uQQ][f] = u[e.vUv][f].getContext("2d"), u[e._W_][f] = document.createElement("canvas"), u[e._W_][f].width = 600, u[e._W_][f].height = 600, u[e._$W][f] = u[e._W_][f].getContext("2d");
            u[e.$OoQU] = [];
            u[e.$OoQU][e._v] = r(gb(1, ["#c8e0de"]));
            u[e.$OoQU][e.OW] = r(gb(1, ["#147071"]));
            u[e.uowOo] = [];
            u[e.uowOo][e._v] = r(gb(1, ["#231912"]));
            u[e.uowOo][e.OW] = r(gb(1, ["#021719"]));
            u[e.wovOQ] = r(Xh(0.5, ["#BB0000"]));
            u[e.WOoUV] = r(Lh(0.9, "#BB0000"));
            u[e.wQwQW] = r(Mh(0.9, "#BB0000"));
            u[e.$u_OV] = r(Nh(1, ["#BB0000"]));
            u[e.VUvQ$] = r(Oh(0.8, "#BB0000"));
            u[e.wuQ$0] = r(Ph(0.8, "#BB0000"));
            u[e.wwwUo] = r(lh(0.9, "#BB0000"));
            u[e.VvW] = r(vd(0.6, "#BB0000"));
            u[e.v$V] = r(vd(0.6, "#1CE7E0"));
            u[e.QQV] = r(vd(0.6, "#DBE71C"));
            u[e.V0O] = r(vd(0.6, "#00BB00"));
            u[e.OUVuV] = [];
            u[e.OUVuV][e._v] = r(gb(1, ["#dac291"]));
            u[e.OUVuV][e.OW] = r(gb(1, ["#0D423D"]));
            u[e.w__WU] = [];
            u[e.w__WU][e._v] = r(gb(1, ["#dac291"]));
            u[e.w__WU][e.OW] = r(gb(1, ["#0D423D"]));
            u[e.$0QUQ] = [];
            u[e.$0QUQ][e._v] = r(Xc(0.3, !0, "#1e2021 #717273 #606162 #a09f9f #878787 #1a6470".split(" ")));
            u[e.$0QUQ][e.OW] = r(Xc(0.3, !0, "#1e2021 #1a4545 #163a3a #245d5d #1f5454 #09373F".split(" ")));
            u[e.vwOv_] = [];
            u[e.vwOv_][e._v] = r(Xc(0.3, !0, "#1e2021 #717273 #606162 #a09f9f #878787 #454545".split(" ")));
            u[e.vwOv_][e.OW] = r(Xc(0.3, !0, "#1e2021 #1a4545 #163a3a #245d5d #1f5454 #0b2121".split(" ")));
            u[e.QQu] = [r(Ye(1, !0, "#C6AF81 #C98435 #B26F31 #53A4D5 #388AC7 #C1C0C0 #EAEAEA".split(" ")))];
            u[e.vvv] = [r(Ye(1, !0, "#C6AF81 #C98435 #B26F31 #53A4D5 #388AC7 #C1C0C0 #EAEAEA".split(" ")))];
            u[e.ww0] = [];
            u[e.ww0][e._v] = [];
            u[e.ww0][e.OW] = [];
            u[e.ww0][e._v].push(r(ag(1, ["#0B6A84"])));
            u[e.ww0][e._v].push(r(bg(1, ["#0B6A84"])));
            u[e.ww0][e._v].push(r(cg(1, ["#0B6A84"])));
            u[e.ww0][e._v].push(r(dg(1, ["#0B6A84"])));
            u[e.ww0][e._v].push(r(eg(1, ["#0B6A84"])));
            u[e.ww0][e._v].push(r(fg(1, ["#0B6A84"])));
            u[e.ww0][e._v].push(r(gg(1, ["#0B6A84"])));
            u[e.ww0][e.OW].push(r(ag(1, ["#09373F"])));
            u[e.ww0][e.OW].push(r(bg(1, ["#09373F"])));
            u[e.ww0][e.OW].push(r(cg(1, ["#09373F"])));
            u[e.ww0][e.OW].push(r(dg(1, ["#09373F"])));
            u[e.ww0][e.OW].push(r(eg(1, ["#09373F"])));
            u[e.ww0][e.OW].push(r(fg(1, ["#09373F"])));
            u[e.ww0][e.OW].push(r(gg(1, ["#09373F"])));
            u[e._OQ] = [];
            u[e._OQ][e._v] = [];
            u[e._OQ][e.OW] = [];
            u[e._OQ][e._v].push(r(Ea(1.7, ["#FBEFBC"], 0)));
            u[e._OQ][e._v].push(r(Ea(1.9, ["#FBEFBC"], 1)));
            u[e._OQ][e._v].push(r(Ea(1.7, ["#FBEFBC"], 2)));
            u[e._OQ][e.OW].push(r(Ea(1.7, ["#0F4C48"], 0)));
            u[e._OQ][e.OW].push(r(Ea(1.9, ["#0F4C48"], 1)));
            u[e._OQ][e.OW].push(r(Ea(1.7, ["#0F4C48"], 2)));
            u[e.$QU] = [];
            u[e.$QU][e._v] = [];
            u[e.$QU][e.OW] = [];
            u[e.$QU][e._v].push(r(Ea(1.8, ["#A9D6D3"], 0)));
            u[e.$QU][e._v].push(r(Ea(2, ["#A9D6D3"], 1)));
            u[e.$QU][e._v].push(r(Ea(1.8, ["#A9D6D3"], 2)));
            u[e.$QU][e.OW].push(r(Ea(1.8, ["#115E60"], 0)));
            u[e.$QU][e.OW].push(r(Ea(2, ["#115E60"], 1)));
            u[e.$QU][e.OW].push(r(Ea(1.8, ["#115E60"], 2)));
            u[e.$vu] = [];
            u[e.$vu][e._v] = [];
            u[e.$vu][e.OW] = [];
            u[e.$vu][e._v].push(r(Ea(1.9, ["#2A8B9B"], 0)));
            u[e.$vu][e._v].push(r(Ea(2.1, ["#2A8B9B"], 1)));
            u[e.$vu][e._v].push(r(Ea(1.9, ["#2A8B9B"], 2)));
            u[e.$vu][e.OW].push(r(Ea(1.9, ["#0F464C"], 0)));
            u[e.$vu][e.OW].push(r(Ea(2.1, ["#0F464C"], 1)));
            u[e.$vu][e.OW].push(r(Ea(1.9, ["#0F464C"], 2)));
            u[e.QoV] = [];
            u[e.QoV][e._v] = [];
            u[e.QoV][e.OW] = [];
            u[e.QoV][e._v].push(r(xc(0.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
            u[e.QoV][e._v].push(r(xc(1, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
            u[e.QoV][e._v].push(r(xc(1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
            u[e.QoV][e.OW].push(r(xc(0.8, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
            u[e.QoV][e.OW].push(r(xc(1, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
            u[e.QoV][e.OW].push(r(xc(1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
            u[e.WVv] = [];
            u[e.WVv][e._v] = r(pg(0.8, "#1e2021 #B6222A #201851 #342C7C #F4F4F4 #D3D3D3 #6765CE #593CC6 #433BAD #342C7C #052830 #EAEAEA #B6222A #FFFFFF".split(" ")));
            u[e.WVv][e.OW] = r(pg(0.8, "#0c0c0d #462966 #081B2D #342C7C #9AAAAD #72898C #133556 #296D9B #25557C #133556 #0D2A42 #EAEAEA #462966 #72898C".split(" ")));
            u[e.wovQ$] = r(Sh(0.8, ["#B6222A"]));
            u[e.vQv] = [];
            u[e.vQv][e._v] = r(tg(0.8, !0, "#1e2021 #961B1B #702727 #C43B3B #d15151 #B71C1C #E8E8E8 #752E2E #891818".split(" ")));
            u[e.vQv][e.OW] = r(tg(0.8, !0, "#0c0c0d #21112D #281A49 #462966 #321C56 #1C073D #FFFFFF #1C0833 #1B1238".split(" ")));
            u[e.VouVv] = r(Uh(0.8, ["#B6222A"]));
            u[e.WV$QW] = [];
            u[e.WV$QW][e._v] = r(qc(0.4, !0, ["#1e2021", "#db6f26", "#ffffff", "#000000", "#833813"], 0));
            u[e.WV$QW][e.OW] = r(qc(0.4, !0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
            u[e.vO$$U] = [];
            u[e.vO$$U][e._v] = r(qc(0.4, !0, ["#1e2021", "#d35e35", "#ffffff", "#000000", "#000000"], 1));
            u[e.vO$$U][e.OW] = r(qc(0.4, !0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 1));
            u[e.wO$QV] = [];
            u[e.wO$QV][e._v] = r(qc(0.4, !0, "#1e2021 #2973a5 #ffffff #ffff00 #000000 #03243f #f2ec30 #162f6d".split(" "), 0));
            u[e.wO$QV][e.OW] = r(qc(0.4, !0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
            u[e.VUVO0] = r(Vd(0.4, ["#B6222A"]));
            u[e.oQoo$] = r(Vd(0.4, ["#B6222A"]));
            u[e.VuVUv] = r(Vd(0.4, ["#B6222A"]));
            u[e.wuO] = r(Vf(0.35, !0, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"], 1));
            u[e.QOQ] = r(Sf(0.35, !0, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"], 1));
            u[e._U_o$] = [];
            u[e._U_o$][e._v] = r(zd(0.35, !0, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1));
            u[e._U_o$][e.OW] = r(zd(0.35, !0, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1));
            u[e.w$W] = [];
            u[e.w$W][e._v] = r(zd(0.35, !0, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0));
            u[e.w$W][e.OW] = r(zd(0.35, !0, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0));
            u[e._W$VV] = [];
            u[e._W$VV][e._v] = r(uc(0.35, !0, ["#1e2021", "#e45936", "#ffffff"]));
            u[e._W$VV][e.OW] = r(uc(0.35, !0, ["#0c0c0d", "#34255d", "#563f83"]));
            u[e.vUV_0] = [];
            u[e.vUV_0][e._v] = r(vc(0.42, !0, ["#1e2021", "#e45936", "#ffffff"]));
            u[e.vUV_0][e.OW] = r(vc(0.42, !0, ["#0c0c0d", "#34255d", "#563f83"]));
            u[e._Qo$_] = [];
            u[e._Qo$_][e._v] = r(uc(0.35, !0, ["#1e2021", "#e45936", "#B6222A"]));
            u[e._Qo$_][e.OW] = r(uc(0.35, !0, ["#0c0c0d", "#613577", "#462966"]));
            u[e.ouwOV] = [];
            u[e.ouwOV][e._v] = r(vc(0.42, !0, ["#1e2021", "#e45936", "#B6222A"]));
            u[e.ouwOV][e.OW] = r(vc(0.42, !0, ["#0c0c0d", "#613577", "#462966"]));
            u[e.QWW$$] = r(Rf(0.35, ["#B6222A"]));
            u[e.Q_$0Q] = r(uc(0.35, !0, [void 0, "#B6222A"]));
            u[e.$0u_U] = r(vc(0.35, !0, [void 0, "#B6222A"]));
            u[e.uovuO] = r(Rf(0.35, ["#22E066"]));
            u[e.OwUw_] = r(uc(0.35, !0, [void 0, "#22E066"]));
            u[e.V0WOw] = r(vc(0.35, !0, [void 0, "#22E066"]));
            u[e.WV0] = [];
            u[e.WV0][e._v] = r(ke(0.3, !0, "#1e2021 #65A8B7 #2E85A0 #14275B #081826 #1A3163 #0C1944 #89C4CE #2E85A0".split(" ")));
            u[e.WV0][e.OW] = r(ke(0.3, !0, "#0c0c0d #89C9C7 #469E95 #092C38 #072021 #0E343D #071F2D #9FD3D3 #135367".split(" ")));
            u[e.vV$] = [];
            u[e.vV$][e._v] = r(le(0.45, !0, "#C4BC51 #B29C32 #201851 #652D8E #1e2021 #2E85A0".split(" ")));
            u[e.vV$][e.OW] = r(le(0.45, !0, "#235050 #357472 #081B2D #342C7C #0c0c0d #135367".split(" ")));
            u[e.uV$] = [];
            u[e.uV$][e._v] = r(Ve(0.63, !0, ["#1e2021", "#352E1E", "#4C3B19", "#574122"]));
            u[e.uV$][e.OW] = r(Ve(0.63, !0, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
            u[e.OQ$] = [];
            u[e.OQ$][e._v] = r(Ue(1, !0, ["#1e2021", "#332715", "#4C3B19", "#574122"]));
            u[e.OQ$][e.OW] = r(Ue(1, !0, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
            u[e.UWU] = [];
            u[e.UWU][e._v] = o._Vv_o;
            u[e.UWU][e.OW] = o.OuO$O;
            u[e.WoV] = [];
            u[e.WoV][e._v] = r(Td(0.59, !0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
            u[e.WoV][e.OW] = r(Td(0.59, !0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
            u[e.wW_] = [u[e.WoV]];
            u[e.wW_][1] = [];
            u[e.wW_][2] = [];
            u[e.wW_][1][e._v] = r(Df(0.59, !0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
            u[e.wW_][1][e.OW] = r(Df(0.59, !0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
            u[e.wW_][2][e._v] = r(Ef(0.59, !0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
            u[e.wW_][2][e.OW] = r(Ef(0.59, !0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
            u[e._v0] = [];
            u[e._v0][e._v] = r(V(3 - (Math.PI / 2), Gd(0.6, !0, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"])));
            u[e._v0][e.OW] = r(V(3 - (Math.PI / 2), Gd(0.6, !0, "#0c0c0d #07383c #0c4e53 #042b2e #0c5975 #11546c".split(" "))));
            u[e.wQW] = [];
            u[e.wQW][e._v] = r(Lf(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0));
            u[e.wQW][e.OW] = r(Lf(0.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0));
            u[e.W0$V_] = r(qh(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"]));
            u[e.OOVo_] = r(ph(0.3, ["#BB0000"]));
            u[e.wV_Q_] = N(1, [{
                f: ug,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
            }], 0.25, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
            u[e.vWV] = N(1.5, [{
                f: Fd,
                x: 0,
                y: 0,
                a: 1,
                r: 0,
                c: ["#120202", "#750a0a", "#991616", "#120202"]
            }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
            u[e.o0UuV] = Hd(0.35, ["#072428", "#67A242", "#67A242"], 0);
            u[e.UvWvU] = Hd(0.35, "#172130 #649BB2 #FFFFFF #FFFFFF #90C2D3 #649BB2 #84BDD1 #2F5866".split(" "), 1);
            u[e.w0UU0] = Hd(0.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2);
            u[e.Wwow$] = Hd(0.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3);
            u[e.$$w$Q] = u$_Uv ? r(Vh(1)) : r(Wh(1));
            u[e.vwovO] = u$_Uv ? r(bi(0.75)) : r(di(1));
            u[e.Ou0] = u$_Uv ? r(wg(0.75)) : r(wg(1));
            u[e.uwQuw] = r(Dd(0.16, !0, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]));
            u[e.Vosocket] = r(V(5.8, Qf(0.15, !0, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])));
            u[e.VW] = [];
            u[e.VuO_u] = [];
            for (f = 0; f < (F.wVvUw + 2); f++) u[e.VuO_u][f] = Ia(1, "" + (f + 1), 12, "#FFF");
            u[e.uOQ] = [];
            u[e.uOQ].push(r(Ze(0.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"])));
            u[e.uOQ].push(r(Ze(0.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1)));
            u[e.uOQ].push(r(Ze(0.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1)));
            u[e.wuo] = [];
            u[e.wuo].push(r(Ih(0.22)));
            u[e.wuo].push(r(Jh(0.22)));
            u[e.QWOU_] = r(Kh(0.22));
            u[e.w$O] = [];
            u[e.w$O].push(r(Wd(1.5, ["#795026", "#654320", "#eda80d"], 0)));
            u[e.w$O].push(r(Wd(1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1)));
            u[e.w$O].push(r(Wd(1.5, ["#67441f", "#573819", "#9c6e08"], 1)));
            u[e.Voo] = o.Voo;
            u[e.OQUW0] = o.OQUW0;
            u[e._0o0O] = o._0o0O;
            u[e.Q0$_$] = o.Q0$_$;
            u[e.OUvo_] = Ia(1, "Show spectators", 25, "#FFF", void 0, void 0, "#000", 5, 220);
            u[e.Uu$U0] = Ia(1, "Reconnecting...", 30, "#FFF");
            console.log("Load canvas", Date.now() - a);
        };

        function df() {
            var a = tb.time;
           u[e.WOv] && (l.drawImage(u[e.WOv][a][1], X + 480, ea + 190), l.drawImage(u[e.WOv][a][2], X + 180, ea - 430), l.drawImage(u[e.WOv][a][1], X - 855, ea + 100), l.drawImage(u[e.WOv][a][0], X - 550, ea - 300), l.drawImage(u[e.WOv][a][0], X - 1020, ea - 520));
          u[e.uuw] && (l.drawImage(u[e.uuw][a][1], X - 80, ea - 640), l.drawImage(u[e.uuw][a][1], X + 80, ea + 490), l.drawImage(u[e.uuw][a][2], X - 180, ea - 700), l.drawImage(u[e.uuw][a][0], X + 550, ea + 100), l.drawImage(u[e.uuw][a][1], X + 450, ea + 300), l.drawImage(u[e.uuw][a][1], X + 780, ea + 300), l.drawImage(u[e.uuw][a][2], X + 980, ea + 200), l.drawImage(u[e.uuw][a][2], X + 680, ea + 600), l.drawImage(u[e.uuw][a][2], X - 380, ea + 100), l.drawImage(u[e.uuw][a][2], X + 280, ea + 250));
                   u[e.Q$_] && (l.drawImage(u[e.Q$_][a][0], X - 590, ea), l.drawImage(u[e.Q$_][a][0], X + 120, ea - 390), l.drawImage(u[e.Q$_][a][0], X - 270, ea + 340));

            u[e.vU_] && (l.drawImage(u[e.vU_][a][4], X - 700, ea - 600), l.drawImage(u[e.vU_][a][2], X - 970, ea - 250), l.drawImage(u[e.vU_][a][5], X - 720, ea - 200), l.drawImage(u[e.vU_][a][2], X - 1020, ea + 340), l.drawImage(u[e.vU_][a][0], X - 1120, ea - 0), l.drawImage(u[e.vU_][a][1], X - 650, ea - 330), l.drawImage(u[e.vU_][a][4], X - 495, ea - 90), l.drawImage(u[e.vU_][a][3], X - 520, ea + 340), l.drawImage(u[e.vU_][a][2], X + 830, ea - 520));
            if (m && p) {
                var a = m.VQ.x,
                    f = m.VQ.y;
                m.VQ.x = X;
                m.VQ.y = ea;
                var g = p.time;
                p.time = tb.time;
                var d = tb.items;
                d[2].x = 400;
                d[2].y = 100;
                d[2].uW(e.oOQ);
                var c = d[1];
                c.x = -500;
                c.y = 100;
                c.Vw[0].x = c.x - 20.5;
                c.Vw[0].y = c.y - 22.5;
                c.Vw[1].x = c.x - 35.5;
                c.Vw[1].y = c.y + 7.5;
                c.Vw[2].x = c.x + 7.5;
                c.Vw[2].y = c.y - 30;
                c.Vw[3].x = c.x + 22.5;
                c.Vw[3].y = c.y;
                c.Vw[4].x = c.x - 7.5;
                c.Vw[4].y = c.y + 14.5;
                for (var h = 0; h < c.info; h++) c.Vw[h].uW(e.$QO);
                c = d[3];
                c.x = 210;
                c.y = -290;
                c.Vw[0].x = c.x - 20.5;
                c.Vw[0].y = c.y - 22.5;
                c.Vw[1].x = c.x - 35.5;
                c.Vw[1].y = c.y + 7.5;
                c.Vw[2].x = c.x + 7.5;
                c.Vw[2].y = c.y - 30;
                c.Vw[3].x = c.x + 22.5;
                c.Vw[3].y = c.y;
                c.Vw[4].x = c.x - 7.5;
                c.Vw[4].y = c.y + 14.5;
                for (h = 0; h < c.info; h++) c.Vw[h].uW(e.$QO);
                d[0].x = 450;
                d[0].y = -100;
                d[0]._VQ(e.UoV);
                d[0].$WV();
                m.VQ.x = a;
                m.VQ.y = f;
                p.time = g;
            }
        };

        function qd(a, b, e, d, c, f) {
            a = (((24 << ((a >> 24) & 255)) + (32 << ((a >> 16) & 255))) + (16 << ((a >> 8) & 255))) + (8 << ((a >> 32) & 255));
            b = (41551 | b) & ~(b & 41551);
            e = (((24 << ((e >> 24) & 255)) + (16 << ((e >> 32) & 255))) + (8 << ((e >> 16) & 255))) + (32 << ((e >> 8) & 255));
            d = ~(32641 & d) & (32641 | d);
            c = ((214013 * (c + 35582)) + 2531011) % 4294967296;
            f = ~(1090 & f) & (f | 1090);
            var g = nc(a, b, e, d, c, f);
            od(a, b, e, d, c);
            Ra(f, a, b, e);
            a = (~(g & 8077) & 8077) | (~(8077 & g) & g);
            return ~(3708 & a) & (a | 3708);
        };

        function E(a, e, f, d, c, g, h, k, l, m) {
            if (xray) {
                a.globalAlpha = Xray.alpha;
            };
            ctxD = a;
            if ((void 0 === e.vQo) || (1 === e.vQo()))
                if (void 0 !== m) a.drawImage(e, f, d, Math.max(1, c), Math.max(1, g), h, k, l, m);
                else if (void 0 !== g) a.drawImage(e, f, d, c, g);
            else a.drawImage(e, f, d);
        };

        function Wb(a, f) {
            u[e.VW][a] || (u[e.VW][a] = Ia(z, "x" + a, 17, "#FFF"));
            var g = u[e.VW][a],
                d = ((f.info.translate.x + f.info.Vv[0].width) - g.width) - (14 * z),
                c = ((f.info.translate.y + f.info.Vv[0].height) - g.height) - (19 * z);
            (f.info.state == ba) && (c += 5 * z);
            E(l, g, d, c);
        };

        function yg() {
            m._OV.id = -1;
            m._OV.OV_ = -1;
            if (!((m._Ou || m._OV.wait) || m.$_o)) {
                var a = p.oUU[m.v$o],
                    e = F.$uovW;
                if (a)
                    for (var f = 0; f < p.Ww[t.Ww$].length; f++) {
                        var d = p.Ww[t.Ww$][f],
                            c = OQ.U_o(d, a);
                        (c < e) && (e = c, m._OV.id = d.id, m._OV.OV_ = d.OV_, m._OV.info = d.info, m._OV.lock = (d.info & 16) >> 4);
                    }
                a = C.wO0;
                C.wO0 = -1;
                ((-1 == m._OV.OV_) || ((0 != m.uoU.length) && (m.id != m._OV.OV_))) ? (((0 != m.uoU.length) && (m.uoU[0] != m.id)) ? (C.wO0 = sa.QV_uO) : (((0 != m.uoU.length) && (m.uoU[0] == m.id)) ? (C.wO0 = sa.wOVwu) : ((0 != m.uoU.length) && (C.wO0 = sa.QUVQQ)))) : (C.wO0 = ((0 == m.uoU.length) && (8 <= m._OV.info)) ? sa.__$QW : ((0 == m.uoU.length) ? sa.QUVQQ : sa.WvoVo));
                (-1 != C.wO0) && C.oQV[C.wO0].button.uW(l);
                e = document.getElementById("team_box").style;
                if (((-1 != C.wO0) && (C.wO0 != a)) && ("inline-block" == e.display)) C.oQV[C.wO0].action();
            }
        };

        function fi() {
            var a = m.Ow;
            if (!a.W$V && (0 < a.wWV)) {
                var e = p.oUU[m.v$o];
                if (!e) return;
                l.save();
                if ((0 === D[a.wWV].__) && (0 === a.mode)) l.translate(m.VQ.x + e.x, m.VQ.y + e.y), l.rotate(e.angle), l.translate(120, 0);
                else {
                    var f = Math.floor(e.x + (120 * Math.cos(e.angle))),
                        e = Math.floor(e.y + (120 * Math.sin(e.angle))),
                        f = m.VQ.x + ((f - (f % 100)) + 50),
                        e = m.VQ.y + ((e - (e % 100)) + 50);
                    l.translate(f, e);
                }
                f = u[a.wWV][p.time];
                l.globalAlpha = 0.5;
                E(l, f, -f.width / 2, -f.height / 2);
                l.globalAlpha = 1;
                l.restore();
                (0 === D[a.wWV].__) && (a.label[a.mode] || ((0 === a.mode) ? (a.label[0] = Ia(z, k[Wo.VVO], 20, "#e2c340")) : (a.label[1] = Ia(z, k[Wo._Qo], 20, "#e2c340"))), f = a.label[a.mode], E(l, f, X + (-f.width / 2), C.OWW.y - 26));
            }
            if (a.W$V) {
                f = a.timeout.update();
                for (e = 0; e < a._O_.length; e++) {
                    var d = a._O_[e];
                    if (a.id == d.id) {
                        var c = 42 * z;
                        B(l, d.info.translate.x, d.info.translate.y + (c * (1 - a.timeout.o_)), d.info.width, (c * a.timeout.o_) + (17 * z), 10 * z);
                        l.fillStyle = "#55B973";
                        l.fill();
                        l.globalAlpha = 0.8;
                    } else l.globalAlpha = 0.5;
                    d.uW(l);
                    l.globalAlpha = 1;
                }
                f && (a.W$V = !1, a.timeout.o_ = 0, a.timeout.Uo = !1);
                return !0;
            }
            for (e = 0; e < a._O_.length; e++) a._O_[e].uW(l);
            return !1;
        };

        function gi() {
            l.save();
            var a = z;
            (0.25 > m.OWW.wOU.x) && (l.globalAlpha = m.OWW.ovQoo.o_);
            var g = (0 < m.wW.OWU.length) ? -70 : 0;
            if (((((m.O$.open || (m.VO0.open && (-1 != m.wW._Uo(f.vv)))) || (m._oV.open && (-1 != m.wW._Uo(f.OwW)))) || (m.Vw0.open && (-1 != m.wW._Uo(f.vv)))) || (m.WVu.open && (-1 != m.wW._Uo(f.wWQ)))) || (m.V_U.open && ((-1 != m.wW._Uo(f.vv)) || (-1 != m.wW._Uo(f.QQ_))))) g -= 50 * z;
            l.translate((ka - (950 * z)) / 2, g);
            l.fillStyle = "#69A148";
            l.fillRect(this.translate.x + (37 * z), this.translate.y + (17 * z), (178 * m.OWW.wOU.x) * z, 18 * z);

            if (showhp) {
              l.save();
              let text = (~~(window.myHp * 100) * 2) + 'hp';
              let draws;
              let color = `hsl(${rainbow}, 100%, 50%)`
              if(window.MainSetting.Hacks.Others.RainbowColors) {
              draws = Ia(1, text, 32, color, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
              }else{
                  draws = Ia(1, text, 32, ColorTab.HpTimer, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
              }
              l.drawImage(draws, this.translate.x + (-90 * z), this.translate.y + (15 * z -4));
              l.restore();
          };


            if(playerLimit){
                l.save();


                let text = `L:` + myLimit;
                let draws;
                let color = `hsl(${rainbow}, 100%, 50%)`
                if(window.MainSetting.Hacks.Others.RainbowColors) {
                draws = Ia(1, text, 32, color, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                }else{
                    draws = Ia(1, text, 32, ColorTab.HpTimer, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                }
                l.drawImage(draws, this.translate.x  + (+940 * z), this.translate.y + (15 * z-4));
                l.restore();
            }


            l.globalAlpha = 1;
            (0.35 > m.OWW.Uv0.x) && (l.fillStyle = "#8F050A", l.globalAlpha = m.OWW.UUwww.o_, l.fillRect(this.translate.x + (277 * z), this.translate.y + (17 * z), 178 * z, 18 * z), l.globalAlpha = 1);
            l.fillStyle = "#AF352A";
            l.fillRect(this.translate.x + (277 * z), this.translate.y + (17 * z), (178 * m.OWW.Uv0.x) * z, 18 * z);
            (0.35 > m.OWW.QwV.x) && (l.fillStyle = "#366B91", l.globalAlpha = m.OWW.O0QvO.o_, l.fillRect(this.translate.x + (517 * z), this.translate.y + (17 * z), 178 * z, 18 * z), l.globalAlpha = 1);
            l.fillStyle = "#669BB1";
            l.fillRect(this.translate.x + (517 * z), this.translate.y + (17 * z), (178 * m.OWW.QwV.x) * z, 18 * z);
            (0.99 < m.OWW.QwV.x) && ((0.35 > m.OWW.WuV.x) && (l.fillStyle = "#6C4036", l.globalAlpha = m.OWW.VU_Vo.o_, l.fillRect(this.translate.x + (517 * z), this.translate.y + (17 * z), 178 * z, 18 * z), l.globalAlpha = 1), l.fillStyle = "#9C4036", l.fillRect(this.translate.x + (517 * z), this.translate.y + (17 * z), (178 * (1 - m.OWW.WuV.x)) * z, 18 * z));
            (0.35 > m.OWW.uUw.x) && (l.fillStyle = "#001A57", l.globalAlpha = m.OWW.owvvo.o_, l.fillRect(this.translate.x + (757 * z), this.translate.y + (17 * z), 178 * z, 18 * z), l.globalAlpha = 1);
            l.fillStyle = "#074A87";
            l.fillRect(this.translate.x + (757 * z), this.translate.y + (17 * z), (178 * m.OWW.uUw.x) * z, 18 * z);
            z = a;
            E(l, this.Vv, this.translate.x, this.translate.y);
            this.y = this.translate.y + g;
            if (showtimer) {
                l.save();
                var tmArr = window.timer;
                if (tmArr != undefined) {
                  let text = tmArr + `s`;
                  let draws;
                  let color = `hsl(${rainbow}, 100%, 50%)`
                  if(window.MainSetting.Hacks.Others.RainbowColors) {
                  draws = Ia(1, text, 32, color, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                  }else{
                      draws = Ia(1, text, 32, ColorTab.HpTimer, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                  }
                  l.drawImage(draws, this.translate.x  + (453 * z), this.translate.y + (15 * z-4));

                }

                l.restore();
                l.save();
                let text = myHeal + `s`;
                let draws;
                let color = `hsl(${rainbow}, 100%, 50%)`
                if(window.MainSetting.Hacks.Others.RainbowColors) {
                draws = Ia(1, text, 32, color, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                }else{
                    draws = Ia(1, text, 32, ColorTab.HpTimer, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                }
                l.drawImage(draws, this.translate.x  + (+213 * z), this.translate.y + (15 * z-4));



                l.restore();
            };
            l.restore();
            (0.99 > m.OWW.$vW.x) && (a = Math.floor(X - (u[e.Ou0].width / 2)), g += (this.translate.y - u[e.Ou0].height) - (5 * z), l.fillStyle = "#BBE8EF", l.fillRect(a + 5, g + (5 * z), (588 * z) * m.OWW.$vW.x, 10 * z), (0.35 > m.OWW.$vW.x) && (l.fillStyle = "#9BA8AF", l.globalAlpha = m.OWW.QVooQ.o_, l.fillRect(a + 5, g + 5, 588 * z, 10 * z), l.globalAlpha = 1), E(l, u[e.Ou0], a, g), this.y = g);

        };
     /*   function ff(a) {
          l.save();
          l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
          l.rotate(this.angle);
          if (this.uu.update) {
              (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
              var e = (((1 - this.uu.OO.o_) * O) * 600) * z,
                  f = Math.cos(this.uu.angle - this.angle) * e,
                  e = Math.sin(this.uu.angle - this.angle) * e;
          } else e = f = 0;
          Vv = u[a][p.time];
          $w = -Vv.width;
          uQ = -Vv.height;
          if (coloredSpike) {
              switch (this.type) {

                  case 52:
                      Vv = u[a].$Ov = this.o.img;
                      $w = -Vv.width;
                      uQ = -Vv.height;

                      break;

                  case 20:
                      Vv = this.o.img;
                      break;
                  case 14:
                      Vv = this.o.img;
                      break;
                  case 13:
                      Vv = this.o.img;
                      break;

              };
          }

          E(l, Vv, (-$w / 2) + f, (-uQ / 2) + e, $w, uQ);
            E(l, Vv, (-$w / 2) + f, (-uQ / 2) + e, $w, uQ);
          l.restore();
          if (objectInfo) {
              if (this.type === 29) {
                  l.save();
                  this.hack.place ? l.drawImage(this.hack.place, m.VQ.x + this.x - 50, m.VQ.y + this.y - 35) : false;
                  this.hack.owner ? l.drawImage(this.hack.owner, m.VQ.x + this.x - 70, m.VQ.y + this.y - 5) : false;
                  this.hack.lock ? l.drawImage(this.hack.lock, m.VQ.x + this.x - 50, m.VQ.y + this.y + 25) : false;
                  l.restore();
              };
              if (this.type === 35) {
                  l.save();
                  this.hack.uses ? l.drawImage(this.hack.uses, m.VQ.x + this.x - 25, m.VQ.y + this.y) : false;
                  l.restore()
              };

          }
      };*/
        function hi(a) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var e = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * e,
                    e = Math.sin(this.uu.angle - this.angle) * e;
            } else e = f = 0;
            gg = u[a][p.time];
            $w = -gg.width;
            uQ = -gg.height;
            if(coloredSpike) {

                switch(this.type) {
                    case 15: //stonic door
                    case 16: //gold dor
                    case 17: //dia dor
                    case 21: //ame dor
                    case 51:
                    case 10:
                    case 53:
                    case 47:
                    case 48:
                    case 49:
                     //   console.log('spike door?')
                     let imopen = (this.info/2)
                           if(Number.isInteger(imopen)) { // 170 182
                              gg = u[a].$Ov = this.o.img;
                              $w = -gg.width;
                              uQ = -gg.height;

                           }

                        break;

                }
            }
            E(l, gg, (-$w / 2) + f, (-uQ / 2) + e, $w, uQ);
            l.restore();
        };

        function ii() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            Vv = u[e.V$Q][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            (!this.claimed) && (E(l, Vv, (-$w / 2) + f, (-uQ / 2) + a, $w, uQ));
            this.lock && (E(l, oooOoo00, (-$w / 2) + f, (-uQ / 2) + a, $w, uQ));
            l.restore();
            if (viewInChest) {
                if (this.slot.img != null || this.slot.img != undefined) {
                    l.save();
                    l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                    l.rotate(0);
                    ooOoo000(l, this.slot.img, (-60 / 2) + f, (-60 / 2) + a, this);
                    l.restore();
                }
            }
        };

        function ji() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            Vv = u[e.UQOWU][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function ki() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            Vv = u[e.WoowU][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function li() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            Vv = u[e.U_w00][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function mi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            Vv = u[e.V$V][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function ni() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            Vv = u[e.Qo_][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function zg(a) {
            a /= 100;
            if (!(0.8 < a)) {
                l.save();
                l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                l.rotate(this.angle);
                if (this.uu.update) {
                    (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                    var f = (((1 - this.uu.OO.o_) * O) * 600) * z,
                        g = Math.cos(this.uu.angle - this.angle) * f,
                        f = Math.sin(this.uu.angle - this.angle) * f;
                } else f = g = 0;
                l.globalAlpha = 0.5;
                ud(l, g, f, 18 * z, a);
                h(l, null, "#000000", 18 * z);
                l.globalAlpha = 1;
                ud(l, g, f, 18 * z, a);
                h(l, null, e.$Wvu_[p.time], 6 * z);
                l.restore();
            }
        };
        /* spike draw (ef) */
        function ef(a) {
            a /= 100;
            if (!(0.95 < a)) {
                l.save();
                l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                l.rotate(this.angle);
                if (this.uu.update) {
                    (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                    var f = (((1 - this.uu.OO.o_) * O) * 600) * z,
                        g = Math.cos(this.uu.angle - this.angle) * f,
                        f = Math.sin(this.uu.angle - this.angle) * f;
                } else f = g = 0;
                l.globalAlpha = 0.5;
                ud(l, g, f, 28 * z, a);
                h(l, null, "#000000", 18 * z);
                l.globalAlpha = 1;
                ud(l, g, f, 28 * z, a);
                h(l, null, e.uVQvO[p.time], 6 * z);
                l.restore();
            }
        };

        function oi(a) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var f = (((1 - this.uu.OO.o_) * O) * 600) * z;
                a = Math.cos(this.uu.angle - this.angle) * f;
                f *= Math.sin(this.uu.angle - this.angle);
            } else f = a = 0;
            Vv = u[e.wW_][(this.ov + (this.u$ % 2)) % u[e.wW_].length][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            var g = p.oUU[m.v$o];

            this.OUu = Roof.alpha;


            g = l.globalAlpha;
            l.globalAlpha *= this.OUu;
            E(l, Vv, (-$w / 2) + a, (-uQ / 2) + f, $w, uQ);
            l.globalAlpha = g;
            l.restore();
        };

        function pi(a) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var f = (((1 - this.uu.OO.o_) * O) * 600) * z;
                a = Math.cos(this.uu.angle - this.angle) * f;
                f *= Math.sin(this.uu.angle - this.angle);
            } else f = a = 0;
            this.$vV.update() && (this.color += 0.2 + (0.3 * Math.random()));
            Vv = u[e.WWw][Math.floor(this.id + this.color) % 5][p.time];
            $w = -Vv.width * this.$vV.o_;
            uQ = -Vv.height * this.$vV.o_;
            E(l, Vv, (-$w / 2) + a, (-uQ / 2) + f, $w, uQ);
            l.restore();
        };

        function qi(a) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var f = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    g = Math.cos(this.uu.angle - this.angle) * f,
                    f = Math.sin(this.uu.angle - this.angle) * f;
            } else f = g = 0;
            if ((a === e.WOo) && !p.Q$w) {
                for (var d = 0, c = p.Ww[t.uvw], h = 0; h < c.length; h++) {
                    var k = OQ.U_o(c[h], this);
                    if ((140 > k) && (35 < k)) {
                        d = 0;
                        break;
                    } else(35 >= k) && (d = 1);
                }
                this.OUu = (0 === d) ? Math.max(0.5, this.OUu - (O / 1.5)) : Math.min(1, this.OUu + (O / 1.5));
                l.globalAlpha = this.OUu;
            }
            Vv = u[a][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            E(l, Vv, (-$w / 2) + g, (-uQ / 2) + f, $w, uQ);
            l.globalAlpha = 1;
            l.restore();
        };
        /* colored draw ff(a)  cases:  52 red spike ; 5 wood 12 stone;*/
        function ff(a) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var e = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * e,
                    e = Math.sin(this.uu.angle - this.angle) * e;
            } else e = f = 0;
            Vv = u[a][p.time];
            $w = -Vv.width;
            uQ = -Vv.height;
            if (coloredSpike) {
                switch (this.type) {

                    case 52:

                        Vv = u[a].$Ov = this.o.img;
                        $w = -Vv.width;
                        uQ = -Vv.height;

                        break;

                    case 20:
                        Vv = this.o.img;
                        break;
                    case 14:
                        Vv = this.o.img;
                        break;
                    case 13:
                        Vv = this.o.img;
                        break;

                };
            }

            E(l, Vv, (-$w / 2) + f, (-uQ / 2) + e, $w, uQ);
            /*  E(l, Vv, (-$w / 2) + f, (-uQ / 2) + e, $w, uQ); */
            l.restore();
            if (objectInfo) {
                if (this.type === 29) {
                    l.save();
                    this.hack.place ? l.drawImage(this.hack.place, m.VQ.x + this.x - 50, m.VQ.y + this.y - 35) : false;
                    this.hack.owner ? l.drawImage(this.hack.owner, m.VQ.x + this.x - 70, m.VQ.y + this.y - 5) : false;
                    this.hack.lock ? l.drawImage(this.hack.lock, m.VQ.x + this.x - 50, m.VQ.y + this.y + 25) : false;
                    l.restore();
                };
                if (this.type === 35) {
                    l.save();
                    this.hack.uses ? l.drawImage(this.hack.uses, m.VQ.x + this.x - 25, m.VQ.y + this.y) : false;
                    l.restore()
                };

            }
        };

        function ri(a, f, g, d, c, h, k, n, q) {
            for (; a <= f; a++)
                for (k = g; k <= d; k++)
                    if (n = Ka.w$u[a][k], ((void 0 !== n) && (void 0 !== n[h])) && (n = n[h], q = u[c][p.time][n._0vw_], E(l, q, (m.VQ.x + n.x) - (q.width / (4 * uvU)), (m.VQ.y + n.y) - (q.height / (4 * uvU)), q.width / (2 * uvU), q.height / (2 * uvU)), G.WVU))
                        if (q = (((1103515245 * ((1000 * a) + k)) + 12345) % 2147483648) / 2147483648, 0.2 > q) q = Math.floor((5 * u[e.WV][p.time][n._0vw_].length) * q), q = u[e.WV][p.time][n._0vw_][q], E(l, q, (m.VQ.x + n.x) - (q.width / (4 * uvU)), (m.VQ.y + n.y) - (q.height / (4 * uvU)), q.width / (2 * uvU), q.height / (2 * uvU));
                        else if (0 !== n.wuw) {
                q = u[e.oouVU][p.time];
                var r = (Dc + ((a % 2) * 30)) % 60;
                l.globalAlpha = (30 > r) ? (r / 30) : (1 - ((r - 30) / 30));
                E(l, q, (m.VQ.x + n.x) - (q.width / (4 * uvU)), (((m.VQ.y + n.y) - (q.height / (4 * uvU))) - 30) + r, q.width / (2 * uvU), q.height / (2 * uvU));
                l.globalAlpha = 1;
            }
        };

        function si() {
            if (1 === (this.info & 1)) this.OQU = Math.min(this.OQU + O, 2.2);
            else if (this.OQU = Math.max(this.OQU - O, 0), this._Quvv += O, 0.1 < this._Quvv) {
                this._Quvv = 0;
                var a = {
                    x: (this.x + (60 * Math.random())) - 30,
                    y: (this.y + (60 * Math.random())) - 30,
                    a: 0,
                    r: (30 * Math.random()) + 30
                };
                this.uOW.push(a);
            }
            for (var f = 0; f < this.uOW.length; f++) {
                a = this.uOW[f];
                l.save();
                l.translate(m.VQ.x + a.x, m.VQ.y + a.y);
                a.a = Math.min(1, a.a + (O / 2));
                var g = a.a,
                    g = (0.2 > g) ? (5 * g) : ((0.8 < g) ? (5 * (1 - g)) : 1);
                l.globalAlpha = 0.8 * g;
                A(l, 0, 0, a.r);
                h(l, e.UWoVo[p.time]);
                l.restore();
                (1 === a.a) && (this.uOW.splice(f, 1), f--);
            }
        };

        function ti() {
            var a = void 0,
                a = void 0;
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.Oo.update();
            this.rotate.update();
            if ((0.1 <= this.OQU) && (1.1 >= this.OQU)) {
                var f = Math.max(0, Math.min(1, this.OQU - 0.1)),
                    f = (0.2 > f) ? (5 * f) : ((0.8 < f) ? (5 * (1 - f)) : 1),
                    a = u[e.VuQWo][p.time];
                $w = -a.width * this.Oo.o_;
                uQ = -a.height * this.Oo.o_;
                l.globalAlpha = f;
                E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
                a = u[e.wowQu];
            }(0.9 <= this.OQU) && (f = Math.max(0, Math.min(1, this.OQU - 0.9)), f = (0.2 > f) ? (5 * f) : 1, a = u[e.$O$0W][p.time], $w = -a.width * this.Oo.o_, uQ = -a.height * this.Oo.o_, l.globalAlpha = f, E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), a = u[e.QOW_0]);
            ((this.action & Q.VvW) && (void 0 !== a)) && ((this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW), l.globalAlpha = (0.6 - this.uu.o_) * f, $w = -a.width * this.Oo.o_, uQ = -a.height * this.Oo.o_, E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2));
            l.globalAlpha = 1;
            l.restore();
        };

        function ui() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            var a = OQ.U_o(this, this.r);
            this.scale = (350 < a) ? Math.min(this.scale + (O / 2), 1.8) : Math.max(this.scale - O, 1);
            this.Oo.update();
            this.rotate.update();
            this.UWQ = (350 > a) ? Math.max(0, this.UWQ - (2.2 * O)) : Math.min(1, this.UWQ + (2.2 * O));
            a = u[e.$vU][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.globalAlpha = 1 - this.UWQ;
            E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            a = u[e.OUO][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.globalAlpha = this.UWQ;
            E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && ((this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW), l.globalAlpha = (0.6 - this.uu.o_) * (1 - this.UWQ), a = u[e.$0Q], $w = (-a.width * this.Oo.o_) * this.scale, uQ = (-a.height * this.Oo.o_) * this.scale, E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.globalAlpha = (0.6 - this.uu.o_) * this.UWQ, a = u[e.QU0], $w = (-a.width * this.Oo.o_) * this.scale, uQ = (-a.height * this.Oo.o_) * this.scale, E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            a = u[e.Q0V][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.save();
            l.translate(-40 * z, 80 * z);
            l.rotate(this.rotate.o_);
            l.globalAlpha = this.UWQ;
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = (0.6 - this.uu.o_) * this.UWQ, a = u[e.wVU], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            a = u[e.U0w][p.time];
            l.save();
            l.translate(40 * z, 80 * z);
            l.rotate(-this.rotate.o_);
            l.globalAlpha = this.UWQ;
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = (0.6 - this.uu.o_) * this.UWQ, a = u[e.V0V], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.globalAlpha = 1;
            l.restore();
            l.restore();
        };

        function vi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            var a = OQ.U_o(this, this.r);
            this.scale = (350 < a) ? Math.min(this.scale + (O / 2), 1.8) : Math.max(this.scale - O, 1);
            this.Oo.update();
            this.rotate.update();
            this.UWQ = (350 > a) ? Math.max(0, this.UWQ - (2.2 * O)) : Math.min(1, this.UWQ + (2.2 * O));
            a = (0 === (this.info & 1)) ? u[e.$$W][p.time] : u[e._oO][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.globalAlpha = 1 - this.UWQ;
            E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            a = (0 === (this.info & 1)) ? u[e.uU_][p.time] : u[e.o0v][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.globalAlpha = this.UWQ;
            E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && ((this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW), l.globalAlpha = (0.6 - this.uu.o_) * (1 - this.UWQ), a = u[e.v0o], $w = (-a.width * this.Oo.o_) * this.scale, uQ = (-a.height * this.Oo.o_) * this.scale, E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.globalAlpha = (0.6 - this.uu.o_) * this.UWQ, a = u[e.wVv], $w = (-a.width * this.Oo.o_) * this.scale, uQ = (-a.height * this.Oo.o_) * this.scale, E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            a = (0 === (this.info & 1)) ? u[e.$oV][p.time] : u[e.V$_][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.save();
            l.translate(-20 * z, 0 * z);
            l.rotate(this.rotate.o_);
            l.globalAlpha = this.UWQ;
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = (0.6 - this.uu.o_) * this.UWQ, a = u[e.v0O], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            a = (0 === (this.info & 1)) ? u[e._0o][p.time] : u[e.o0O][p.time];
            l.save();
            l.translate(20 * z, 0 * z);
            l.rotate(-this.rotate.o_);
            l.globalAlpha = this.UWQ;
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = (0.6 - this.uu.o_) * this.UWQ, a = u[e._o$], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.globalAlpha = 1;
            l.restore();
            l.restore();
        };

        function wi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            (300 < OQ.U_o(this, this.r)) ? (this.scale = Math.min(this.scale + (O / 2), 1.8)) : (this.scale = Math.max(this.scale - O, 1));
            this.Oo.update();
            this.rotate.update();
            a = (0 === this.info) ? u[e.$ww][p.time] : u[e.OO_uv][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var a = u[e.Uw$];
                E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
                l.globalAlpha = 1;
            }
            a = (0 === this.info) ? u[e.VV$o_][p.time] : u[e.WuV_W][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.save();
            l.translate(-40 * z, 10 * z);
            l.rotate(this.rotate.o_);
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.$_uQ0], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            a = (0 === this.info) ? u[e.WU$wU][p.time] : u[e._oowo][p.time];
            l.save();
            l.translate(40 * z, 10 * z);
            l.rotate(-this.rotate.o_);
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.O0v], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            l.restore();
        };

        function xi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            (300 < OQ.U_o(this, this.r)) ? (this.scale = Math.min(this.scale + (O / 2), 1.8)) : (this.scale = Math.max(this.scale - O, 1));
            this.Oo.update();
            this.rotate.update();
            a = (0 === this.info) ? u[e.$Uo][p.time] : u[e.uwuw$][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var a = u[e.oV0];
                E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
                l.globalAlpha = 1;
            }
            a = (0 === this.info) ? u[e.QOWUQ][p.time] : u[e.uOuvW][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.save();
            l.translate(-40 * z, 10 * z);
            l.rotate(this.rotate.o_);
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.O$VwV], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            a = (0 === this.info) ? u[e.QOwoU][p.time] : u[e._VV0W][p.time];
            l.save();
            l.translate(40 * z, 10 * z);
            l.rotate(-this.rotate.o_);
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.vOv_W], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            l.restore();
        };

        function yi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            (300 < OQ.U_o(this, this.r)) ? (this.scale = Math.min(this.scale + (O / 2), 1.8)) : (this.scale = Math.max(this.scale - O, 1));
            this.Oo.update();
            this.rotate.update();
            a = u[e._u$][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var a = u[e.W$$];
                E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
                l.globalAlpha = 1;
            }
            a = u[e.Wvw_w][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.save();
            l.translate(-60 * z, 20 * z);
            l.rotate(this.rotate.o_);
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.vQ$uo], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            a = u[e.OwUQo][p.time];
            l.save();
            l.translate(60 * z, 20 * z);
            l.rotate(-this.rotate.o_);
            E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.nbirdA], E(l, a, (-$w * z) / 4, (-uQ * z) / 4, $w / 2, uQ / 2), l.globalAlpha = 1);
            l.restore();
            l.restore();
        };

        function zi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            (300 < OQ.U_o(this, this.r)) ? (this.scale = Math.min(this.scale + (O / 2), 1.8)) : (this.scale = Math.max(this.scale - O, 1));
            this.Oo.update();
            this.rotate.update();
            a = u[e._oU][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            E(l, a, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var a = u[e.$u_OV];
                E(l, a, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }
            a = u[e.vo$Q$][p.time];
            $w = (-a.width * this.Oo.o_) * this.scale;
            uQ = (-a.height * this.Oo.o_) * this.scale;
            l.save();
            l.translate(-30 * z, 70 * z);
            l.rotate(this.rotate.o_);
            E(l, a, -10 * z, -40 * z, $w, uQ);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.VUvQ$], E(l, a, -10 * z, -40 * z, $w, uQ), l.globalAlpha = 1);
            l.restore();
            a = u[e.QUUUU][p.time];
            l.save();
            l.translate(30 * z, 70 * z);
            l.rotate(-this.rotate.o_);
            E(l, a, (10 * z) - $w, -40 * z, $w, uQ);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, a = u[e.wuQ$0], E(l, a, (10 * z) - $w, -40 * z, $w, uQ), l.globalAlpha = 1);
            l.restore();
            l.restore();
        };

        function Ai(a, f) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            (a === e.woW) && (a = e.wuv, this.info = 36);
            Vv = u[a][this.info][p.time];
            $w = -Vv.width / 2;
            uQ = -Vv.height / 2;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var g = $c(this.info, Vv, uuo_U);
                E(l, g, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }
            l.restore();
            let shadow = "#000000";
            let color = `hsl(${rainbow}, 100%, 50%)`
            if(window.MainSetting.Hacks.Visual.dropDeadInfo) {
                if(this.type === 82 || this.type === 86) {

                            l.save();
                            if(window.MainSetting.Hacks.Others.RainbowColors) {


                              let dropordead = Ia(1, this.text, 20, color, null, null, null, null, null, shadow,6);
                              l.drawImage(dropordead, m.VQ.x + this.x - 20, m.VQ.y + this.y - 10);
                            }else {

                              let dropordead = Ia(1, this.text, 20, "#ff0000", null, null, null, null, null, shadow,6);
                              l.drawImage(dropordead, m.VQ.x + this.x - 20, m.VQ.y + this.y - 10);
                            }

                            l.restore()
                }
                }
                if(window.MainSetting.Hacks.Others.showhit) {
                    let draws;

                    draws = Ia(1, this.hit, 20, "#ff0000", null, null, null, null, null, shadow, 6);
                    l.drawImage(draws,  m.VQ.x + this.x - 25, m.VQ.y + this.y - 27);
                    l.restore();
                }

        };

        function Bi(a, e) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            f = u[a][p.time];
            $w = -f.width;
            uQ = -f.height;
            E(l, f, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var f = u[e];
                E(l, f, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }
            l.restore();
        };

        function Ci() {
            this.Oo.update();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            a = (0 === this.info) ? u[e.OW$][p.time] : u[e.$_oUW][p.time];
            $w = -a.width * this.Oo.o_;
            uQ = -a.height * this.Oo.o_;
            E(l, a, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var a = u[e.UUUV0];
                E(l, a, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }
            l.restore();
        };

        function Di() {
            this.Oo.update();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            a = (0 === this.info) ? u[e.vuu][p.time] : u[e.wv$vo][p.time];
            $w = -a.width * this.Oo.o_;
            uQ = -a.height * this.Oo.o_;
            E(l, a, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var a = u[e.VUvVO];
                E(l, a, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }
            l.restore();
        };

        function Ei() {
            var a = Math.PI / 2,
                f = Math.PI / 4;
            this.Oo.update();
            this.Qow.update();
            this.uWu.update();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            g = (0 === this.info) ? u[e.vww][p.time] : u[e.uov_w][p.time];
            $w = -g.width * this.Oo.o_;
            uQ = -g.height * this.Oo.o_;
            E(l, g, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var g = u[e.wo_QW];
                E(l, g, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }(this.action & Q.v$V) && ((this.voV.update() && (0 == this.voV.Uo)) && (this.action -= Q.v$V), l.globalAlpha = 0.6 - this.voV.o_, g = u[e._wVWu], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            l.restore();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle + f);
            l.translate(100, 0);
            l.rotate(a);
            g = (0 === this.info) ? u[e.W0O][p.time] : u[e._wWUW][p.time];
            $w = -g.width * this.Qow.o_;
            uQ = -g.height * this.Qow.o_;
            E(l, g, -$w / 2, -uQ / 2, $w, uQ);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, g = u[e.voUV_], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            (this.action & Q.v$V) && (l.globalAlpha = 0.6 - this.voV.o_, g = u[e.$QuWU], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            l.restore();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate((this.angle + a) + f);
            l.translate(100, 0);
            l.rotate(a);
            g = (0 === this.info) ? u[e.voW][p.time] : u[e.QwWVv][p.time];
            $w = -g.width * this.uWu.o_;
            uQ = -g.height * this.uWu.o_;
            E(l, g, -$w / 2, -uQ / 2, $w, uQ);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, g = u[e.v$Q_Q], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            (this.action & Q.v$V) && (l.globalAlpha = 0.6 - this.voV.o_, g = u[e.V_Q$V], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            l.restore();
        };

        function Fi() {
            var a = Math.PI / 2,
                f = Math.PI / 4;
            this.Oo.update();
            this.Qow.update();
            this.uWu.update();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            g = (0 === this.info) ? u[e.w$W][p.time] : u[e._U_o$][p.time];
            $w = -g.width * this.Oo.o_;
            uQ = -g.height * this.Oo.o_;
            E(l, g, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var g = u[e.QWW$$];
                E(l, g, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }(this.action & Q.v$V) && ((this.voV.update() && (0 == this.voV.Uo)) && (this.action -= Q.v$V), l.globalAlpha = 0.6 - this.voV.o_, g = u[e.uovuO], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            l.restore();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle + f);
            l.translate(55, 0);
            l.rotate(a);
            g = (0 === this.info) ? u[e._W$VV][p.time] : u[e._Qo$_][p.time];
            $w = -g.width * this.Qow.o_;
            uQ = -g.height * this.Qow.o_;
            E(l, g, -$w / 2, -uQ / 2, $w, uQ);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, g = u[e.Q_$0Q], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            (this.action & Q.v$V) && (l.globalAlpha = 0.6 - this.voV.o_, g = u[e.OwUw_], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            l.restore();
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate((this.angle + a) + f);
            l.translate(55, 0);
            l.rotate(a);
            g = (0 === this.info) ? u[e.vUV_0][p.time] : u[e.ouwOV][p.time];
            $w = -g.width * this.uWu.o_;
            uQ = -g.height * this.uWu.o_;
            E(l, g, -$w / 2, -uQ / 2, $w, uQ);
            (this.action & Q.VvW) && (l.globalAlpha = 0.6 - this.uu.o_, g = u[e.$0u_U], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            (this.action & Q.v$V) && (l.globalAlpha = 0.6 - this.voV.o_, g = u[e.V0WOw], E(l, g, -$w / 2, -uQ / 2, $w, uQ), l.globalAlpha = 1);
            l.restore();
        };

        function Gi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.vwo = Math.min(1, this.vwo + (2 * O));
            l.globalAlpha = Math.min(1, Math.max(0, OQ.U_o(this, this.r) / 80)) * this.vwo;
            this.Oo.update();
            Vv = u[e.UQQ][p.time][this.U$$];
            (2 > this.U$$) ? ($w = -Vv.width * this.Oo.o_, uQ = -Vv.height * this.Oo.o_) : ((0 === this.Qv$) ? ($w = -Vv.width, uQ = -Vv.height) : ($w = 1.35 * -Vv.width, uQ = 1.35 * -Vv.height));
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.globalAlpha = 1;
            l.restore();
        };

        function Ag(a, e) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.Oo.update();
            f = u[a][p.time];
            $w = -f.width * this.Oo.o_;
            uQ = -f.height * this.Oo.o_;
            E(l, f, -$w / 2, -uQ / 2, $w, uQ);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var f = u[e];
                E(l, f, -$w / 2, -uQ / 2, $w, uQ);
                l.globalAlpha = 1;
            }
            l.restore();
        };

        function Hi(a, e) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.Oo.update();
            f = u[a][p.time];
            $w = -f.width * this.Oo.o_;
            uQ = -f.height * this.Oo.o_;
            E(l, f, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
            if (this.action & Q.VvW) {
                (this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW);
                l.globalAlpha = 0.6 - this.uu.o_;
                var f = u[e];
                E(l, f, -$w / 4, -uQ / 4, $w / 2, uQ / 2);
                l.globalAlpha = 1;
            }
            l.restore();
        };

        function Ii(a, e, f) {
            l.save();
            l.translate(m.VQ.x + e, m.VQ.y + f);
            l.rotate(this.angle);
            l.translate(this.x - e, this.y - f);
            this.Oo.update();
            Vv = u[a][p.time];
            $w = -Vv.width * this.Oo.o_;
            uQ = -Vv.height * this.Oo.o_;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function Bg(a) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.Oo.update();
            Vv = u[a][p.time];
            $w = -Vv.width * this.Oo.o_;
            uQ = -Vv.height * this.Oo.o_;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function Ji() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            var g = this.info & 15;
            if ((10 === this.info) || (0 === g)) {
                l.rotate(this.angle);
                this.uOW.update();
                var g = (this.info & 16) ? u[e.OVV$v][p.time] : u[e.$oWQ$][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
            } else g = (this.info & 16) ? u[e.$OOuv][p.time] : u[e.Vuw][p.time], l.translate(0, g.height / 2), E(l, g, f - (g.width / 2), -g.height + a);
            l.restore();
        };

        function Ki() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            var g = this.info & 15;
            if ((10 === this.info) || (0 === g)) {
                l.rotate(this.angle);
                this.uOW.update();
                var g = (this.info & 16) ? u[e.ou$0W][p.time] : u[e.wWWv$][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
            } else g = (this.info & 16) ? u[e.WUVu0][p.time] : u[e.oOu][p.time], l.translate(0, g.height / 2), E(l, g, f - (g.width / 2), -g.height + a);
            l.restore();
        };

        function Li() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            var g = this.info & 15;
            if ((10 === this.info) || (0 === g)) {
                l.rotate(this.angle);
                this.uOW.update();
                var g = (this.info & 16) ? u[e.W0uV_][p.time] : u[e.QVUO_][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
            } else g = (this.info & 16) ? u[e.U_wvQ][p.time] : u[e.uUu_0][p.time], l.translate(0, g.height / 2), E(l, g, f - (g.width / 2), -g.height + a);
            l.restore();
        };

        function Mi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            var g = this.info & 15;
            if ((10 === this.info) || (0 === g)) {
                l.rotate(this.angle);
                this.uOW.update();
                var g = (this.info & 16) ? u[e._UOw_][p.time] : u[e.w0O0W][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
            } else g = (this.info & 16) ? u[e.$u_$v][p.time] : u[e.wwW][p.time], l.translate(0, g.height / 2), E(l, g, f - (g.width / 2), -g.height + a);
            l.restore();
        };
          let myIp = null;
        function Ni() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            var g = this.info & 15;
            if ((10 === this.info) || (0 === g)) {
                l.rotate(this.angle);
                this.uOW.update();
                var g = (this.info & 16) ? u[e.wWouU][p.time] : u[e.$$oW0][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
            } else g = (this.info & 16) ? u[e.UUvv$][p.time] : u[e._w_][p.time], l.translate(0, g.height / 2), E(l, g, f - (g.width / 2), -g.height + a);
            l.restore();
        };



        function Oi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            var g = this.info & 15;
            if ((10 === this.info) || (0 === g)) {
                l.rotate(this.angle);
                this.uOW.update();
                var g = (this.info & 16) ? u[e.Qwwuo][p.time] : u[e.OUVW_][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
            } else g = (this.info & 16) ? u[e.U0oQo][p.time] : u[e.VWU][p.time], l.translate(0, g.height / 2), E(l, g, f - (g.width / 2), -g.height + a);
            l.restore();
        };

        function Pi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            var g = this.info & 15;
            if ((10 === this.info) || (0 === g)) {
                l.rotate(this.angle);
                this.uOW.update();
                var g = (this.info & 16) ? u[e.Q_u$o][p.time] : u[e._W$][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
            } else this.o_Vou.update(), g = (this.info & 16) ? u[e.___0O][p.time] : u[e.OwW][p.time], l.translate(0, g.height / 2), l.rotate(this.o_Vou.o_), E(l, g, f - (g.width / 2), -g.height + a);
            l.restore();
        };

        function Qi() {
            if (!(10 > this.info)) {
                l.save();
                l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                l.rotate(this.angle);
                if (this.uu.update) {
                    (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                    var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                        f = Math.cos(this.uu.angle - this.angle) * a,
                        a = Math.sin(this.uu.angle - this.angle) * a;
                } else a = f = 0;
                this.uOW.update();
                var g = u[e.W0OQv][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
                l.restore();
            }
        };

        function Ri() {
            if (10 !== this.info) {
                l.save();
                l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                l.rotate(this.angle);
                if (this.uu.update) {
                    (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                    var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                        f = Math.cos(this.uu.angle - this.angle) * a,
                        a = Math.sin(this.uu.angle - this.angle) * a;
                } else a = f = 0;
                var g = (this.info & 16) ? u[e.$0vu$][p.time] : u[e._Ov$U][p.time];
                E(l, g, (-g.width / 2) + f, (-g.width / 2) + a);
                l.restore();
                f = this.info & 15;
                for (a = 0; a < f; a++) this.Vw[a].uW(e.$QO);
            }
        };

        function Si() {
            if (!(10 > this.info)) {
                l.save();
                l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                l.rotate(this.angle);
                if (this.uu.update) {
                    (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                    var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                        f = Math.cos(this.uu.angle - this.angle) * a,
                        a = Math.sin(this.uu.angle - this.angle) * a;
                } else a = f = 0;
                this.uOW.update();
                var g = u[e.WVo_0][p.time],
                    d = -g.width * this.uOW.o_,
                    c = -g.height * this.uOW.o_;
                E(l, g, (-d / 2) + f, (-c / 2) + a, d, c);
                l.restore();
            }
        };

        function Ti() {
            if (10 !== this.info) {
                for (var a = this.info & 15, f = 0; f < a; f++) this.Vw[f].uW(e.UVv, this.x, this.y);
                l.save();
                l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                l.rotate(this.angle);
                this.uu.update ? ((this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1), f = (((1 - this.uu.OO.o_) * O) * 600) * z, a = Math.cos(this.uu.angle - this.angle) * f, f *= Math.sin(this.uu.angle - this.angle)) : (f = a = 0);
                var g = (this.info & 16) ? u[e.U_WV0][p.time] : u[e.OWUW0][p.time];
                E(l, g, (-g.width / 2) + a, (-g.width / 2) + f);
                l.restore();
            }
        };

        function Ui() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            Vv = (2 == this.action) ? u[e.vUVwu][p.time] : u[e.WuOvV][p.time];
            E(l, Vv, (-Vv.width / 2) + f, (-Vv.height / 2) + a);
            l.restore();
            if (objectInfo) {
                l.save();
                this.hack.wood ? l.drawImage(OWood, m.VQ.x + this.x - 35, m.VQ.y + this.y + -40, 72, 72) : false;
                this.hack.wood ? l.drawImage(this.hack.wood, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;


                l.restore();
            }
        };

        function Vi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.uOW.update();
            l.globalAlpha = 0.3;
            var a = u[e.Vvv][p.time],
                f = -a.width * this.uOW.o_,
                g = -a.height * this.uOW.o_;
            E(l, a, -f / 2, -g / 2, f, g);
            l.globalAlpha = 1;
            l.restore();
        };

        function Wi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if ((((this.info & 31) && (this.info & 992)) && (31744 != (this.info & 31744))) && ((0 == this.OO0.length) || (this.OO0[this.OO0.length - 1] <= e.OuWVv))) this.OO0.push(e.QQ_uV);
            for (var a = 0; a < this.OO0.length; a++) {
                this.OO0[a] = Math.max(0, this.OO0[a] - (O * e.QV_Wo));
                l.globalAlpha = this.OO0[a] / 1.3;
                var f = 40 * (1 - this.OO0[a]),
                    g = (35 * (1 - this.OO0[a])) + 10;
                A(l, (-68 * z) + (Math.cos(-this.angle - (Math.PI / 2)) * f), (-20 * z) + (Math.sin(-this.angle - (Math.PI / 2)) * f), g);
                h(l, "#333333");
            }
            l.globalAlpha = 1;
            if ((0 < this.OO0.length) && (0 === this.OO0[0])) this.OO0.shift();
            l.restore();
        };

        function Xi(a) {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.uOW.update();
            l.globalAlpha = 0.3;
            var f = u[e.Vvv][p.time],
                g = -f.width * this.uOW.o_,
                d = -f.height * this.uOW.o_;
            E(l, f, -g / 2, -d / 2, g, d);
            l.globalAlpha = 1;
            this.uu.update ? ((this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1), f = (((1 - this.uu.OO.o_) * O) * 600) * z, g = Math.cos(this.uu.angle - this.angle) * f, d = Math.sin(this.uu.angle - this.angle) * f) : (d = g = 0);
            f = u[a][p.time];
            E(l, f, (-f.width / 2) + g, (-f.height / 2) + d);
            l.restore();
        };

        function Yi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            Vv = (0 === this.info) ? u[e.vuQ][p.time] : u[e.$V$][p.time][this.info - 1];
            E(l, Vv, (-Vv.width / 2) + f, (-Vv.height / 2) + a);
            l.restore();
        };

        function Zi() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    g = Math.sin(this.uu.angle - this.angle) * a;
            } else g = f = 0;
            (((this.info & 31) && (this.info & 992)) && (31744 != (this.info & 31744))) ? (a = u[e.WouWQ][p.time], E(l, a, (-a.width / 2) + f, (-a.height / 2) + g), this.uoQ.update(), a = u[e.vwu0$][p.time], f = -a.width * this.uoQ.o_, g = -a.height * this.uoQ.o_, E(l, a, (-f / 2) + (1 * z), (-g / 2) + (3 * z), f, g)) : (a = u[e.$_uVo][p.time], E(l, a, (-a.width / 2) + f, (-a.height / 2) + g));
            l.restore();
            if (objectInfo) {
                l.save();
                this.hack.bread ? l.drawImage(OBread, m.VQ.x + this.x - 35, m.VQ.y + this.y + -40, 72, 72) : false;
                this.hack.bread ? l.drawImage(this.hack.bread, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;

                l.restore();
            }
        };

        function $i() {
            if (this.uu.update) var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                f = Math.cos(this.uu.angle - this.angle) * a,
                a = Math.sin(this.uu.angle - this.angle) * a;
            else a = f = 0;
            ((this.info & 255) && (65280 != (this.info & 65280))) && (this.rotate = (this.rotate + (0.5 * O)) % (2 * Math.PI));
            l.save();
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.save();
            l.rotate(this.rotate);
            Vv = u[e.UOVQw][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.save();
            l.rotate(this._$ooO);
            Vv = u[e.OWO_V][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.restore();
            if (objectInfo) {
                l.save();

                this.hack.flour ? l.drawImage(OFlour, m.VQ.x + this.x - 35, m.VQ.y + this.y + -40, 72, 72) : false;
                this.hack.flour ? l.drawImage(this.hack.flour, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;

                l.restore();
            }
        };

        function aj() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            l.save();
            ((this.info & 255) && (65280 != (this.info & 65280))) && (f += (2 * Math.random()) - 1, a += (2 * Math.random()) - 1);
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.rotate(this.angle);
            Vv = u[e.u_V][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            ((this.info & 255) && (65280 != (this.info & 65280))) && (this.rotate = (this.rotate + (3 * O)) % (2 * Math.PI));
            l.rotate(this.rotate);
            Vv = u[e.VVuov][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            if (objectInfo) {
                l.save();

                this.hack.res ? l.drawImage(ExStone, m.VQ.x + this.x - 35, m.VQ.y + this.y - 40, 76, 76) : false;
                this.hack.res ? l.drawImage(this.hack.res, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;

                l.restore();
            }
        };

        function bj() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            l.save();
            ((this.info & 255) && (65280 != (this.info & 65280))) && (f += (2 * Math.random()) - 1, a += (2 * Math.random()) - 1);
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.rotate(this.angle);
            Vv = u[e.ouo][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            ((this.info & 255) && (65280 != (this.info & 65280))) && (this.rotate = (this.rotate + (3 * O)) % (2 * Math.PI));
            l.rotate(this.rotate);
            Vv = u[e.wUOuo][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            if (objectInfo) {
                l.save();
                this.hack.res ? l.drawImage(ExGold, m.VQ.x + this.x - 35, m.VQ.y + this.y - 40, 76, 76) : false;
                this.hack.res ? l.drawImage(this.hack.res, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;

                l.restore();
            }
        };

        function cj() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            l.save();
            ((this.info & 255) && (65280 != (this.info & 65280))) && (f += (2 * Math.random()) - 1, a += (2 * Math.random()) - 1);
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.rotate(this.angle);
            Vv = u[e._vU][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            ((this.info & 255) && (65280 != (this.info & 65280))) && (this.rotate = (this.rotate + (3 * O)) % (2 * Math.PI));
            l.rotate(this.rotate);
            Vv = u[e.QuW$_][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            if (objectInfo) {
                l.save();
                this.hack.res ? l.drawImage(ExDiamond, m.VQ.x + this.x - 35, m.VQ.y + this.y - 40, 76, 76) : false;
                this.hack.res ? l.drawImage(this.hack.res, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;

                l.restore();
            }
        };

        function dj() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            l.save();
            ((this.info & 255) && (65280 != (this.info & 65280))) && (f += (2 * Math.random()) - 1, a += (2 * Math.random()) - 1);
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.rotate(this.angle);
            Vv = u[e.V_w][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            ((this.info & 255) && (65280 != (this.info & 65280))) && (this.rotate = (this.rotate + (3 * O)) % (2 * Math.PI));
            l.rotate(this.rotate);
            Vv = u[e.OWVQO][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            if (objectInfo) {
                l.save();
                this.hack.res ? l.drawImage(ExAmethyst, m.VQ.x + this.x - 35, m.VQ.y + this.y - 40, 76, 76) : false;
                this.hack.res ? l.drawImage(this.hack.res, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;
                l.restore();
            }
        };

        function ej() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            l.save();
            ((this.info & 255) && (65280 != (this.info & 65280))) && (f += (2 * Math.random()) - 1, a += (2 * Math.random()) - 1);
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.rotate(this.angle);
            Vv = u[e.W_W][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            ((this.info & 255) && (65280 != (this.info & 65280))) && (this.rotate = (this.rotate + (3 * O)) % (2 * Math.PI));
            l.rotate(this.rotate);
            Vv = u[e.ou$QV][p.time];
            l.restore();
            if (objectInfo) {
                l.save();
                this.hack.res ? l.drawImage(ExReidite, m.VQ.x + this.x - 35, m.VQ.y + this.y - 40, 76, 76) : false;
                this.hack.res ? l.drawImage(this.hack.res, m.VQ.x + this.x - 5, m.VQ.y + this.y + 15) : false;
                l.restore();
            }
        };

        function fj() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            l.save();
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.rotate(this.angle);
            Vv = u[e.U$W][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
        };

        function gj() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            this.U_0 = (this.U_0 + (3 * O)) % (2 * Math.PI);
            this.w_$ = (this.w_$ - (3 * O)) % (2 * Math.PI);
            l.save();
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.save();
            l.rotate(this.angle);
            Vv = u[e.QW$][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.save();
            l.rotate(this.U_0);
            Vv = u[e.U$WvW][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.save();
            l.rotate(this.w_$);
            Vv = u[e.WoUvo][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.restore();
            if (objectInfo) {
                l.save();
                this.hack.owner ? l.drawImage(this.hack.owner, m.VQ.x + this.x - 40, m.VQ.y + this.y - 5) : false;
                l.restore();
            }
        };


        function hj() {
            if (this.uu.update) {
                (this.uu.OO.update() && (0 == this.uu.OO.Uo)) && (this.uu.update = !1);
                var a = (((1 - this.uu.OO.o_) * O) * 600) * z,
                    f = Math.cos(this.uu.angle - this.angle) * a,
                    a = Math.sin(this.uu.angle - this.angle) * a;
            } else a = f = 0;
            this.U_0 = (this.U_0 + (3 * O)) % (2 * Math.PI);
            this.w_$ = (this.w_$ - (3 * O)) % (2 * Math.PI);
            l.save();
            l.translate((m.VQ.x + this.x) + f, (m.VQ.y + this.y) + a);
            l.save();
            l.rotate(this.angle);
            Vv = u[e._UO][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.save();
            l.rotate(this.U_0);
            Vv = u[e._WUQW][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.save();
            l.rotate(this.w_$);
            Vv = u[e.oWuU0][p.time];
            E(l, Vv, -Vv.width / 2, -Vv.height / 2);
            l.restore();
            l.restore();
        };

        function ij() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.$vV.update();
            Vv = u[e.VoO0w][p.time];
            $w = -Vv.width * this.$vV.o_;
            uQ = -Vv.height * this.$vV.o_;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();

        };

        function jj() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.$vV.update();
            Vv = u[e.$$oV_][p.time];
            $w = -Vv.width * this.$vV.o_;
            uQ = -Vv.height * this.$vV.o_;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function kj() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.$vV.update();
            Vv = u[e.o_0][p.time];
            $w = -Vv.width * this.$vV.o_;
            uQ = -Vv.height * this.$vV.o_;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function lj() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            l.rotate(this.angle);
            this.v_Q.update();
            Vv = u[e.$uu][p.time];
            $w = -Vv.width * this.v_Q.o_;
            uQ = -Vv.height * this.v_Q.o_;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            this.$vV.update();
            Vv = u[e.o_0][p.time];
            $w = -Vv.width * this.$vV.o_;
            uQ = -Vv.height * this.$vV.o_;
            E(l, Vv, -$w / 2, -uQ / 2, $w, uQ);
            l.restore();
        };

        function Cg(a, f, g) {
            if (0 <= a) switch (Vv = u[a][p.time], a) {
                case e.oOo:
                case e.QWu:
                case e.OQv:
                case e.$ov:
                case e._v_:
                case e.V_V:
                    ja(a, Vv, (-Vv.width / 2) - (z * (45 + f)), (-Vv.height / 2) + (z * (g + 22)));
                    break;
                case e.WvU:
                case e.QvW:
                case e.$Vu:
                case e.WU_:
                    ra(a, Vv, (-Vv.width / 4) - (z * (47 + f)), (-Vv.height / 4) + (z * (g + 45)));
                    break;
                case e.w$v:
                    ra(a, Vv, (-Vv.width / 4) - (z * (52 + f)), (-Vv.height / 4) + (z * (g + 45)));
                    break;
                case e.VQv:
                    ra(a, Vv, (-Vv.width / 4) - (z * (47 + f)), (-Vv.height / 4) + (z * (g + 44)));
                    break;
                case e.UuV:
                    ja(a, Vv, (-Vv.width / 2) - (z * (47 + f)), (-Vv.height / 2) + (z * (g + 44)));
                    break;
                case e._Wu:
                    ja(a, Vv, (-Vv.width / 2) - (z * (40 + f)), (-Vv.height / 2) + (z * (g + 65)));
                    break;
                case e.$Uu:
                    ra(a, Vv, (-Vv.width / 4) - (z * (37 + f)), (-Vv.height / 4) + (z * (g + 85)));
                    break;
                case e.QUW:
                    ra(a, Vv, (-Vv.width / 4) - (z * (37 + f)), (-Vv.height / 4) + (z * (g + 85)));
                    break;
                case e.OoU:
                case e.UOQ:
                    ra(a, Vv, (-Vv.width / 4) - (z * (26 + f)), (-Vv.height / 4) + (z * (g + 77)));
                    break;
                case e._U0:
                    ra(a, Vv, (-Vv.width / 4) - (z * (37 + f)), (-Vv.height / 4) + (z * (g + 85)));
                    break;
                case e.WWu:
                    ra(a, Vv, (-Vv.width / 4) - (z * (47 + f)), (-Vv.height / 4) + (z * (g + 44)));
                    break;
                case e.VWO:
                case e._vW:
                case e.uuu:
                case e.OQW:
                case e.UwW:
                case e.vOV:
                case e.vvo:
                    ra(a, Vv, (-Vv.width / 4) - (z * (37 + f)), (-Vv.height / 4) + (z * (g + 30)));
                    break;
                case e.OVv:
                    ra(a, Vv, (-Vv.width / 4) - (z * (47 + f)), (-Vv.height / 4) + (z * (g + 35)));
                    break;
                case e.vwO:
                case e.O$O:
                    ra(a, Vv, (-Vv.width / 4) - (z * (47 + f)), (-Vv.height / 4) + (z * (g + 40)));
                    break;
                case e.U_u:
                    ra(a, Vv, (-Vv.width / 4) - (z * (47 + f)), (-Vv.height / 4) + (z * (g + 34)));
                    break;
                case e.$v$:
                case e.ow_:
                case e.wo0:
                case e._uV:
                    ra(a, Vv, (-Vv.width / 4) - (z * (37 + f)), (-Vv.height / 4) + (z * (g + 90)));
                    break;
                case e.QVV:
                    ra(a, Vv, (-Vv.width / 4) - (z * (40 + f)), (-Vv.height / 4) + (z * (g + 85)));
                    break;
                case e.___:
                    ja(a, Vv, (-Vv.width / 2) - (z * (39 + f)), (-Vv.height / 2) + (z * (g + 90)));
                    break;
                case e.oQw:
                case e.UQV:
                case e.wvo:
                case e.$OU:
                case e.VQ0:
                case e.vvV:
                    ja(a, Vv, (-Vv.width / 2) - (z * (46 + f)), (-Vv.height / 2) + (z * (g + 35)));
                    break;
                case e._v0:
                    ja(a, Vv, (-Vv.width / 2) - (z * (47 + f)), (-Vv.height / 2) + (z * (g + 54)));
                    break;
                case e.oVO:
                case e.UwQ:
                case e.OvW:
                case e.oQo:
                    ja(a, Vv, (-Vv.width / 2) - (z * (46 + f)), (-Vv.height / 2) + (z * (g + 35)));
                    break;
                case e.uvV:
                    ja(a, Vv, (-Vv.width / 2) - (z * (47 + f)), (-Vv.height / 2) + (z * (g + 20)));
            }
        };

        function mj() {

            if (!this.QW0 && (0 !== this.QWQ)) {
                if ((this.x != this.r.x) || (this.y != this.r.y)) {
                    var a = (OQ.WQV_O(this.x, this.y, this.r.x, this.r.y) + (Math.PI / 2)) % (2 * Math.PI);
                    this.Uu$ = OQ.VuwQ$(a, this.Uu$);
                    this.Uu$ = OQ._$_(this.Uu$, a, 0.018);
                }
                l.save();
                l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                l.rotate(this.Uu$);
                if (this.QWQ === f.VuU) {
                    if ((50 < this.UUv) || (0 < this.QoU)) this.QoU = (50 < this.UUv) ? Math.min(1, this.QoU + O) : Math.max(0, this.QoU - O), l.globalAlpha = this.QoU, a = u[e.ovw][p.time], ra(e.ovw, a, -a.width / 4, -a.height / 4), l.globalAlpha = 1;
                    a = u[e.VuU][p.time];
                    ra(e.VuU, a, -a.width / 4, -a.height / 4);
                } else if (this.QWQ === f.uU_) this.owW = OQ._$_(this.owW, this.UUv, 0.018), this.QwU.update(), this.QoU = (85 < this.UUv) ? Math.min(1, this.QoU + (O / 4)) : Math.max(0.1, this.QoU - O), a = u[e.$vw][p.time], ra(e.$vw, a, -a.width / 4, -a.height / 4), a = u[e.UWo][p.time], $w = -a.width, uQ = -a.height, l.save(), l.translate(-20 * z, -20 * z), l.rotate(this.QwU.o_ * this.QoU), E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.restore(), a = u[e.v0U][p.time], l.save(), l.translate(20 * z, -20 * z), l.rotate(-this.QwU.o_ * this.QoU), E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.restore();
                else if (this.QWQ === f.$ww) this.owW = OQ._$_(this.owW, this.UUv, 0.018), this.QwU.update(), this.QoU = (85 < this.UUv) ? Math.min(1, this.QoU + (O / 4)) : Math.max(0.1, this.QoU - O), a = u[e.WUU][p.time], ra(e.WUU, a, -a.width / 4, -a.height / 4), a = u[e.QV$vo][p.time], $w = -a.width, uQ = -a.height, l.save(), l.translate(-40 * z, -45 * z), l.rotate(this.QwU.o_ * this.QoU), E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.restore(), a = u[e.U0$Wo][p.time], l.save(), l.translate(40 * z, -45 * z), l.rotate(-this.QwU.o_ * this.QoU), E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.restore();
                else if (this.QWQ === f.$Uo) this.owW = OQ._$_(this.owW, this.UUv, 0.018), this.QwU.update(), this.QoU = (85 < this.UUv) ? Math.min(1, this.QoU + (O / 4)) : Math.max(0.1, this.QoU - O), a = u[e.QWo][p.time], ra(e.QWo, a, -a.width / 4, -a.height / 4), a = u[e.UV_$w][p.time], $w = -a.width, uQ = -a.height, l.save(), l.translate(-40 * z, -45 * z), l.rotate(this.QwU.o_ * this.QoU), E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.restore(), a = u[e.WVWQQ][p.time], l.save(), l.translate(40 * z, -45 * z), l.rotate(-this.QwU.o_ * this.QoU), E(l, a, -$w / 4, -uQ / 4, $w / 2, uQ / 2), l.restore();
                else if (this.QWQ === f.woU) this.owW = OQ._$_(this.owW, this.UUv, 0.018), a = u[e.woU][p.time], ra(e.woU, a, -a.width / 4, -a.height / 4);
                else if (this.QWQ === f.vOv) this.owW = OQ._$_(this.owW, this.UUv, 0.018), a = u[e.vOv][p.time], ra(e.vOv, a, -a.width / 4, -a.height / 4);
                else if (this.QWQ === f.uQW) a = u[e.uQW][p.time], ra(e.uQW, a, -a.width / 4, -a.height / 4);
                else if (this.QWQ === f.OW$) {
                    a = u[e.U$w][p.time];
                    this.QoU = (85 < this.UUv) ? Math.min(1, this.QoU + (O / 4)) : Math.max(0, this.QoU - O);
                    this.oQ0 += 60 * O;
                    (60 < this.oQ0) && (this.oQ0 -= 60);
                    var g = this.QoU * (-6 + (12 * ((30 > this.oQ0) ? (this.oQ0 / 30) : (1 - ((this.oQ0 - 30) / 30)))));
                    ra(e.U$w, a, -a.width / 4, (-a.height / 4) + g);
                } else if (this.QWQ === f.w$U) a = u[e.$$v][p.time], this.QoU = (85 < this.UUv) ? Math.min(1, this.QoU + (O / 4)) : Math.max(0, this.QoU - O), this.oQ0 += 60 * O, (60 < this.oQ0) && (this.oQ0 -= 60), g = this.QoU * (-6 + (12 * ((30 > this.oQ0) ? (this.oQ0 / 30) : (1 - ((this.oQ0 - 30) / 30))))), ra(e.$$v, a, -a.width / 4, (-a.height / 4) + g);
                else if (this.QWQ === f.vww) {
                    var h = Math.PI / 2,
                        d = Math.PI / 4,
                        a = u[e.vu_][p.time];
                    this.QoU = (85 < this.UUv) ? Math.min(1, this.QoU + (O / 4)) : Math.max(0, this.QoU - O);
                    this.oQ0 += 60 * O;
                    (60 < this.oQ0) && (this.oQ0 -= 60);
                    g = this.QoU * (-6 + (12 * ((30 > this.oQ0) ? (this.oQ0 / 30) : (1 - ((this.oQ0 - 30) / 30)))));
                    ra(e.vu_, a, (-a.width / 4) + g, -a.height / 4);
                    l.restore();
                    l.save();
                    l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                    l.rotate((Math.PI + this.Uu$) + d);
                    l.translate(120, g);
                    l.rotate(h);
                    a = u[e.W0O][p.time];
                    $w = -a.width;
                    uQ = -a.height;
                    E(l, a, -$w / 2, -uQ / 2, $w, uQ);
                    l.restore();
                    l.save();
                    l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                    l.rotate(((Math.PI + this.Uu$) + h) + d);
                    l.translate(120, g);
                    l.rotate(h);
                    a = u[e.voW][p.time];
                    $w = -a.width;
                    uQ = -a.height;
                    E(l, a, -$w / 2, -uQ / 2, $w, uQ);
                }
                l.restore();
            }
        };

        function $c(a, e, f) {
            if (1 !== e.vQo()) return e;
            var d = _$$Qu[f][a];
            if (void 0 === d) {
                var d = document.createElement("canvas"),
                    c = d.getContext("2d"),
                    g = e.width,
                    h = e.height;
                d.width = g;
                d.height = h;
                c.drawImage(e, 0, 0);
                c.globalCompositeOperation = "source-in";
                c.fillStyle = Q$vvV[f];
                c.fillRect(0, 0, g, h);
                _$$Qu[f][a] = d;
            }
            return d;
        };


        function nj() {
            var a = 0;
            if (this.OV_ === oQ.player.id) {
                window.MYINFO = this.$Qu;
            };
            switch (this.right) {
                case e.WuO:
                case e.$Ow:
                case e.w$Q:
                case e.wQO:
                case e.VWv:
                case e.wQo:
                    a = 1;
            }
            if (this.QW0)
                for (a = 0; a < this.bubbles.length; a++) {
                    var f = this.bubbles[a];
                    l.globalAlpha = (0.5 < f.wOU) ? (1 - (2 * (f.wOU - 0.5))) : (2 * f.wOU);
                    var g = u[e.$vv][p.time][f.id];
                    E(l, g, (m.VQ.x + f.x) - (g.width / 2), (m.VQ.y + f.y) - (g.height / 2));
                    l.globalAlpha = 1;
                } else {
                    l.save();
                    l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
                    p.vv$VV(this);
                    if ((this.action & Q.VQu) && (0 <= this.right)) switch (this.right) {
                        case e._v0:
                            l.save();
                            var d = (-3 * this.attack.o_) / Math.PI,
                                g = this.attack.Uo ? ((-Math.PI / 3) - (((Math.PI / 3) + this.attack.o_) / 3)) : this.attack.o_;
                            l.rotate((this.angle - (Math.PI / 2)) + g);
                            l.globalAlpha = d / 1.2;
                            A(l, -40 * z, 90 * z, 5 * z);
                            h(l, "#0B6A84");
                            l.globalAlpha = d / 1.2;
                            A(l, -52 * z, 100 * z, 8 * z);
                            h(l, "#0B6A84");
                            l.globalAlpha = d / 1.2;
                            A(l, -30 * z, 95 * z, 4 * z);
                            h(l, "#0B6A84");
                            l.globalAlpha = 1;
                            l.restore();
                            break;
                        case e.oVO:
                        case e.UwQ:
                        case e.OvW:
                        case e.oQo:
                            (1 !== this.Qv$) && (f = (0 < this.QO0) ? e.uVVvO[p.time] : (((0 < this.uO_) || (0 < this.Qou)) ? e.oo_00[p.time] : e._OQ$V[p.time]), d = (-3 * this.attack.o_) / Math.PI, g = this.attack.Uo ? Math.max((0.5 - (d / 2)) + 0.5, 0) : Math.max(d / 2, 0), (0 === g) && (this.Uvu0v = this.angle), l.save(), l.rotate(this.Uvu0v - (Math.PI / 2)), l.globalAlpha = d, d = (25 * z) + (25 * g), A(l, d, 80 * z, 15 * z), h(l, f), A(l, -d, 80 * z, 15 * z), h(l, f), l.globalAlpha = 1, l.restore());
                    }
                    l.save();
                    l.rotate(this.angle - (Math.PI / 2));
                    if (!(this.action & Q.VQu))
                        if ((this.action & Q.IDLE) || (0 !== this.QWQ)) this.$oOoo.update();
                        else if (this.action & Q.oQU) this.OoV.update();
                    var f = this.$oOoo.o_,
                        d = this.OoV.o_,
                        c;
                    (this.$Qu === e.$wo) ? (g = u[e.Ww0][p.time], c = e.Ww0) : ((this.$Qu === e._ov) ? (g = u[e.$oo][p.time], c = e.$oo) : ((this.$Qu === e._vo) ? (g = u[e.Oo$][p.time], c = e.Oo$) : ((this.$Qu === e.U$v) ? (g = u[e.Q_V][p.time], c = e.Q_V) : (this.ooW ? (g = u[e.Qu0][p.time], c = e.Qu0) : (g = u[e.$O_][this.vWO][p.time], c = e.$O_)))));
                    Q_w = u[e.wu0][p.time];
                    var k = g,
                        n = c;
                    if (this.action & Q.VQu) {
                        (this.attack.update() && (0 == this.attack.Uo)) && (this.voo = !this.voo, this.action -= Q.VQu, (this.v$o == m.v$o) && (m.control.$u = 0));
                        (0 <= this.right) && (this.voo = !0);
                        var q = this.voo ? this.attack.o_ : (-this.attack.o_ / 3),
                            r = this.voo ? (this.attack.o_ / 3) : -this.attack.o_;
                        this.ooW ? (l.save(), l.rotate(q), ja(c, g, (-g.width / 2) - (z * (66 + f)), (-g.height / 2) + ((5 + d) * z)), l.restore(), l.save(), l.rotate(r), ja(c, g, (-g.width / 2) + (z * (66 + f)), (-g.height / 2) + ((5 + d) * z)), l.restore()) : ((0 === a) && ((this.right === e.VWO) && (q = -OQ.ouU(-q)), l.save(), l.rotate(q), ja(e.wu0, Q_w, (-Q_w.width / 2) - (z * (49 + f)), (-Q_w.height / 2) + ((15 + d) * z)), (this.right === e.Q_$) ? (q = u[this.right][this.QwO][p.time], ob(this.right, this.QwO, q, (-q.width / 4) - (z * (62 + f)), (-q.height / 4) + (z * (d + 18)))) : Cg(this.right, f, d), (c >= e.$oo) ? ra(c, g, (-g.width / 4) - (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ((c !== e.Ww0) ? ob(c, this.vWO, g, (-g.width / 4) - (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ja(c, g, (-g.width / 2) - (z * (49 + f)), (-g.height / 2) + ((11 + d) * z))), l.restore(), l.save(), l.rotate(r), ja(e.wu0, Q_w, (-Q_w.width / 2) + (z * (49 + f)), (-Q_w.height / 2) + ((15 + d) * z)), (c >= e.$oo) ? ra(c, g, (-g.width / 4) + (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ((c !== e.Ww0) ? ob(c, this.vWO, g, (-g.width / 4) + (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ja(c, g, (-g.width / 2) + (z * (49 + f)), (-g.height / 2) + ((11 + d) * z))), l.restore()));
                    } else this.ooW ? (ja(c, g, (-g.width / 2) - (z * (66 + f)), (-g.height / 2) + ((5 + d) * z)), ja(c, g, (-g.width / 2) + (z * (66 + f)), (-g.height / 2) + ((5 + d) * z))) : ((0 === a) && (ja(e.wu0, Q_w, (-Q_w.width / 2) - (z * (49 + f)), (-Q_w.height / 2) + ((15 + d) * z)), (this.right === e.Q_$) ? (q = u[this.right][this.QwO][p.time], ob(this.right, this.QwO, q, (-q.width / 4) - (z * (62 + f)), (-q.height / 4) + (z * (d + 18)))) : Cg(this.right, f, d), (c >= e.$oo) ? ra(c, g, (-g.width / 4) - (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ((c !== e.Ww0) ? ob(c, this.vWO, g, (-g.width / 4) - (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ja(c, g, (-g.width / 2) - (z * (49 + f)), (-g.height / 2) + ((11 + d) * z))), ja(e.wu0, Q_w, (-Q_w.width / 2) + (z * (49 + f)), (-Q_w.height / 2) + ((15 + d) * z)), (c >= e.$oo) ? ra(c, g, (-g.width / 4) + (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ((c !== e.Ww0) ? ob(c, this.vWO, g, (-g.width / 4) + (z * (49 + f)), (-g.height / 4) + ((11 + d) * z)) : ja(c, g, (-g.width / 2) + (z * (49 + f)), (-g.height / 2) + ((11 + d) * z)))));
                    (this.Vou && (1 > this.$Qu)) && (g = u[e.Uwv][this.vuW][p.time], ob(e.Uwv, this.vuW, g, -g.width / 4, (-g.height / 4) - (39 * z)));
                    this.ooW ? (g = u[e.uvW][p.time], ja(e.uvW, g, -g.width / 2, -g.height / 2), this._VOvo.update(), g = u[e.OOW][p.time], ja(e.OOW, g, -g.width / 2, (-g.height / 2) + this._VOvo.o_)) : (g = u[e.vWW][this.vWO][p.time], (this.$Qu !== e.$wo) && (ob(e.vWW, this.vWO, g, -g.width / 4, -g.height / 4), (0 < this.VVw) && (g = u[e.wwV][this.VVw][p.time], ob(e.wwV, this.VVw, g, -g.width / 4, -g.height / 4))));
                    (this.action & Q.V0O) && ((this.voV.update() && (0 == this.voV.Uo)) && (this.action -= Q.V0O), l.globalAlpha = 0.6 - this.voV.o_, this.ooW ? (g = u[e.VWuvW], E(l, g, -g.width / 2, -g.height / 2)) : (g = $c(this.vWO, u[e.vWW][this.vWO][0], o$ouU), E(l, g, g.width / 4, g.height / 4, -g.width / 2, -g.height / 2)), l.globalAlpha = 1);
                    (this.action & Q.VV_) && ((this._0W.update() && (0 == this._0W.Uo)) && (this.action -= Q.VV_), l.globalAlpha = 0.6 - this._0W.o_, g = u[e.VV_], E(l, g, -g.width / 2, -g.height / 2), l.globalAlpha = 1);
                    (this.action & Q.VvW) && ((this.uu.update() && (0 == this.uu.Uo)) && (this.action -= Q.VvW), l.globalAlpha = 0.6 - this.uu.o_, this.ooW ? (g = u[e.OQWO0], E(l, g, -g.width / 2, -g.height / 2)) : (g = $c(this.vWO, u[e.vWW][this.vWO][0], uwU_W), E(l, g, g.width / 4, g.height / 4, -g.width / 2, -g.height / 2)), l.globalAlpha = 1);
                    (this.action & Q.v$V) && ((this.freeze.update() && (0 == this.freeze.Uo)) && (this.action -= Q.v$V), l.globalAlpha = 0.6 - this.freeze.o_, g = $c(this.vWO, u[e.vWW][this.vWO][0], QQV0V), E(l, g, g.width / 4, g.height / 4, -g.width / 2, -g.height / 2), l.globalAlpha = 1);
                    (this.action & Q.QQV) && ((this.W__.update() && (0 == this.W__.Uo)) && (this.action -= Q.QQV), l.globalAlpha = 0.6 - this.W__.o_, this.ooW ? (g = u[e.vOoWo], E(l, g, -g.width / 2, -g.height / 2)) : (g = $c(this.vWO, u[e.vWW][this.vWO][0], uVOwv), E(l, g, g.width / 4, g.height / 4, -g.width / 2, -g.height / 2)), l.globalAlpha = 1);
                    g = this.$Qu;
                    if (0 < g) switch (c = u[g][p.time], g) {
                        case e._U$:
                            ja(g, c, (-c.width / 2) + (2 * z), (-c.height / 2) - (5 * z));
                            break;
                        case e._UQ:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (18 * z));
                            break;
                        case e.u$w:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (10 * z));
                            break;
                        case e.oo0:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (19 * z));
                            break;
                        case e.$uv:
                            ra(g, c, -c.width / 4, (-c.height / 4) - (20 * z));
                            break;
                        case e.vOO:
                            ja(g, c, (-c.width / 2) - (1 * z), (-c.height / 2) - (23 * z));
                            break;
                        case e.uou:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (5 * z));
                            break;
                        case e._O$:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (2 * z));
                            break;
                        case e.wOu:
                            ja(g, c, (-c.width / 2) + (1.5 * z), (-c.height / 2) - (1 * z));
                            break;
                        case e.vQ$:
                        case e._ov:
                        case e._vo:
                        case e.U$v:
                        case e.O__:
                        case e.o_v:
                        case e.VUO:
                        case e._$0:
                        case e.$$w:
                        case e.QwQ:
                        case e.oOO:
                            ra(g, c, -c.width / 4, (-c.height / 4) + (2 * z));
                            break;
                        case e.oO0:
                        case e.o$$:
                            ja(g, c, (-c.width / 2) - (5 * z), (-c.height / 2) - (2 * z));
                            break;
                        case e.vvW:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (2 * z));
                            break;
                        case e.$wo:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (2 * z));
                            break;
                        case e.WV0:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (2 * z));
                            break;
                        case e.vV$:
                            ja(g, c, (-c.width / 2) + (2 * z), -c.height / 2);
                            break;
                        case e.$$Q:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (5 * z));
                            break;
                        case e.w_v:
                        case e.uWU:
                        case e.VwO:
                            ja(g, c, (-c.width / 2) - (1 * z), -c.height / 2);
                            break;
                        case e.VoU:
                            ja(g, c, -c.width / 2, (-c.height / 2) + (2 * z));
                            break;
                        case e.o_Q:
                        case e.ow$:
                            ja(g, c, -c.width / 2, (-c.height / 2) + (8 * z));
                            break;
                        case e.VUW:
                            ja(g, c, -c.width / 2, (-c.height / 2) - (4 * z));
                    }
                    if ((1 === a) && ((this.action & Q.VQu) && (f += 15 * this.attack.o_), ja(e.wu0, Q_w, (-Q_w.width / 2) - (26 * z), (-Q_w.height / 2) + (((31 + d) + f) * z)), (n >= e.$oo) ? ra(n, k, (-k.width / 4) - (26 * z), (-k.height / 4) + (((27 + d) + f) * z)) : ((n !== e.Ww0) ? ob(n, this.vWO, k, (-k.width / 4) - (26 * z), (-k.height / 4) + (((27 + d) + f) * z)) : ja(n, k, (-k.width / 2) - (26 * z), (-k.height / 2) + (((27 + d) + f) * z))), ja(e.wu0, Q_w, (-Q_w.width / 2) + (26 * z), (-Q_w.height / 2) + (((31 + d) + f) * z)), (n >= e.$oo) ? ra(n, k, (-k.width / 4) + (26 * z), (-k.height / 4) + (((27 + d) + f) * z)) : ((n !== e.Ww0) ? ob(n, this.vWO, k, (-k.width / 4) + (26 * z), (-k.height / 4) + (((27 + d) + f) * z)) : ja(n, k, (-k.width / 2) + (26 * z), (-k.height / 2) + (((27 + d) + f) * z))), a = this.right, f = d + f, 0 <= a)) switch (Vv = u[a][p.time], a) {
                        case e.WuO:
                        case e.$Ow:
                        case e.w$Q:
                            ra(a, Vv, (-Vv.width / 4) - (0 * z), (-Vv.height / 4) + (z * (f + 35)));
                            break;
                        case e.wQO:
                            ra(a, Vv, (-Vv.width / 4) - (1 * z), (-Vv.height / 4) + (z * (f + 45)));
                            break;
                        case e.VWv:
                        case e.wQo:
                            ra(a, Vv, (-Vv.width / 4) - (1 * z), (-Vv.height / 4) + (z * (f + 40)));
                    }
                    l.restore();
                    if (hoodn) {
                        ((0 < this.QO0) ? (this.ow.Vuu0u || (this.ow.Vuu0u = Ia(z, this.ow.woV, 20, "#187484", "#000", 2, null, null, 300 * z)), g = this.ow.Vuu0u) : (this.ow.label || (this.ow.label = Ia(z, this.ow.woV, 20, "#FFF", "#000", 2, null, null, 300 * z)), g = this.ow.label), (p.V_ == e.OW) && (l.globalAlpha = 0.5), f = Math.floor(-g.width / 2), d = Math.floor((-g.height / 2) - (70 * z)), E(l, g, f, d), (0 < this.ow.level) && (a = (f + g.width) + 5, (void 0 === vOU$U[this.ow.level]) && (vOU$U[this.ow.level] = Ia(z, ("[" + this.ow.level) + "]", 20, "#F9E8A2", "#000", 2, null, null, 50 * z)), E(l, vOU$U[this.ow.level], a, d)), l.globalAlpha = 1);
                    } else {
                        ((this.$Qu !== e.VoU) && (this.$Qu !== e.$wo)) ? ((0 < this.QO0) ? (this.ow.Vuu0u || (this.ow.Vuu0u = Ia(z, this.ow.woV, 20, "#187484", "#000", 2, null, null, 300 * z)), g = this.ow.Vuu0u) : (this.ow.label || (this.ow.label = Ia(z, this.ow.woV, 20, "#FFF", "#000", 2, null, null, 300 * z)), g = this.ow.label), (p.V_ == e.OW) && (l.globalAlpha = 0.5), f = Math.floor(-g.width / 2), d = Math.floor((-g.height / 2) - (70 * z)), E(l, g, f, d), (0 < this.ow.level) && (a = (f + g.width) + 5, (void 0 === vOU$U[this.ow.level]) && (vOU$U[this.ow.level] = Ia(z, ("[" + this.ow.level) + "]", 20, "#F9E8A2", "#000", 2, null, null, 50 * z)), E(l, vOU$U[this.ow.level], a, d)), l.globalAlpha = 1) : (d = Math.floor(-70 * z), f = Math.floor(u[e.vOUQu].width / 1.5));
                    }
                    m.UVW$W(this.OV_) && (g = (this.OV_ == m.uoU[0]) ? u[e.QuOuw] : u[e.vOUQu], E(l, g, (f - g.width) - 5, d - 6));
                    l.restore();
                };

              if(window.MainSetting.Hacks.Others.showhit) {

                  let text = this.hit, draws,color = `hsl(${rainbow}, 100%, 50%)`;
                  if(window.MainSetting.Hacks.Others.RainbowColors) {
                    if(this.OV_ == oQ.player.id){
                    draws = Ia(1, text, 22, "#00a900", null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                    }else {
                    draws = Ia(1, text, 22, color, null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                    }
                  }else{
                    if(this.OV_ == oQ.player.id){
                        draws = Ia(1, text, 22, "#00a900", null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                    }else {
                        draws = Ia(1, text, 22, "#ff0000", null, null, null, null, null, oldColorIndex["hptimerlimitshadow"].hex, 8);
                    }

                  }
                  l.drawImage(draws, (this.x + m.VQ.x ) - 25, (this.y + m.VQ.y) - 35);
                  l.restore();
                  if(this.OV_ == oQ.player.id && ((window.myHp * 100) * 2) == 200) {
                         this.hit = 0;
                  }
                  if(this.hit > 25) {
                      this.hit = 0;

                  }
              }
        };

        function oj() {
            if (this.enabled && (0 <= this.Vu$)) {
                var a = (new Date).getTime() - this.Vu$,
                    e = (a % 1000) / 1000,
                    e = (0.5 < e) ? (1 - (2 * (e - 0.5))) : (2 * e),
                    a = Math.floor(a / 1000);
                (a < F.$WW_0) && (a = F.$WW_0 - a, this.label || (this.label = Ia(z, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000", 10)), ((this.now == a) && this._0Wwv) || (this.now = a, this._0Wwv = Ia(z, "" + a, 40, "#660000", null, null, null, null, null, "#000", 10)), E(l, this.label, (ka - this.label.width) / 2, 100 * z), l.globalAlpha = e, E(l, this._0Wwv, (((ka - this.label.width) / 2) - this._0Wwv.width) + (15 * z), 100 * z), l.globalAlpha = 1);
            }
        };

        function pj() {
            (void 0 !== this.message) && E(l, this.message, 0, (ta - this.message.height) + ((0 < m.wW.OWU.length) ? -95 : 0));
        };

        function qj(a, e) {
            this.text && (l.globalAlpha = this.timeout.Uo ? (1 - this.timeout.o_) : 1, this.label || (this.label = Ia(z, this.text, 40, a, null, null, null, null, null, e, 10)), E(l, this.label, (ka - this.label.width) / 2, 50 * z), l.globalAlpha = 1, (this.timeout.update() && (0 == this.timeout.Uo)) && (this.text = this.list.shift(), this.label = null));
        };

        function rj() {
            l.save();
            l.translate(m.VQ.x + this.x, m.VQ.y + this.y);
            if (0 < this.text.length) {
                for (var a = 0;
                    (a < this.text.length) && (2 > a); a++) {
                    if (!this.label[a]) {
                        var e = this.label,
                            f = a,
                            d = z,
                            c = this.text[a],
                            g = document.createElement("canvas"),
                            k = g.getContext("2d"),
                            p = Math.floor(28 * d),
                            n = Math.floor(20 * d);
                        k.font = n + "px Baloo Paaji";
                        var q = 8 * d,
                            r = k.measureText(c).width + (2 * q);
                        g.width = r;
                        g.height = p;
                        B(k, 0, 0, r, p, 10 * d);
                        k.globalAlpha = 0.5;
                        h(k, "#000");
                        k.globalAlpha = 1;
                        k.textBaseline = "middle";
                        k.font = n + "px Baloo Paaji";
                        k.beginPath();
                        k.fillStyle = "#FFF";
                        k.fillText(c, q, p / 2);
                        e[f] = g;
                        this.wvO[a] = 0;
                        this.w0U0W[a] = 0;
                    }(1 === a) && (this.w0U0W[0] = 30 * OQ.wuQ(this.oWv));
                }
                this.wvO[0] += O;
                (1 < this.text.length) && (this.oWv = Math.min(this.oWv + O, 1), ((1 < this.wvO[0]) && (0.5 < this.oWv)) && (this.wvO[1] += O));
                for (a = 0;
                    (a < this.text.length) && (2 > a); a++) e = this.wvO[a], (0 < e) && (l.globalAlpha = (0.25 > e) ? (4 * e) : ((3.75 < e) ? Math.max(4 * (4 - e), 0) : 1), E(l, this.label[a], -this.label[a].width / 2, (-this.w0U0W[a] + (-this.label[a].height / 2)) - (110 * z)));
                (4 < this.wvO[0]) && (this.wvO.shift(), this.text.shift(), this.w0U0W.shift(), this.label.shift(), this.oWv = 0);
            }
            l.restore();
        };

        function Dg(a, e, f, d, c, g, h, k) {
            for ((void 0 === k) && (k = 0); h >= k; h--)
                for (var n = a; n <= e; n++)
                    for (var q = f; q <= d; q++) {
                        var r = Ka.w$u[n][q];
                        if ((r && r[g]) && (r = r[g][h], void 0 !== r))
                            for (var t = 0; t < r.length; t++) {
                                var Y = r[t],
                                    Da = u[c][p.time][h],
                                    z = (Hb + (3 * (n + q))) % 60,
                                    z = (30 > z) ? (z / 30) : (1 - ((z - 30) / 30)),
                                    A = -Da.width * (1 + ((0.9 * z) / 30)),
                                    B = -Da.height * (1 + ((0.9 * z) / 30)),
                                    z = (Hb + (7 * (n + q))) % 60,
                                    z = (30 > z) ? (z / 30) : (1 - ((z - 30) / 30)),
                                    y = l.globalAlpha;
                                l.globalAlpha = (0.9 + (0.1 * z)) * y;
                                E(l, Da, (m.VQ.x + Y.x) - (A / 2), (m.VQ.y + Y.y) - (B / 2), A, B);
                                l.globalAlpha = y;
                            }
                    }
        };

        function Id(a, e, f, d, c, g, h, k) {
            (void 0 === k) && (k = 0);
            for (p.Oo[c].update(); h >= k; h--)
                for (var n = a; n <= e; n++)
                    for (var q = f; q <= d; q++) {
                        var r = Ka.w$u[n][q];
                        if ((r && r[g]) && (r = r[g][h], void 0 !== r))
                            for (var t = 0; t < r.length; t++) {
                                var Y = r[t];
                                if (Y.update) {
                                    (Y.uu.update() && (0 == Y.uu.Uo)) && (Y.update = !1);
                                    var Da = (((1 - Y.uu.o_) * O) * 600) * z,
                                        Ma = Math.cos(Y.angle) * Da,
                                        Da = Math.sin(Y.angle) * Da;
                                } else Da = Ma = 0;
                                var A = u[c][p.time][h],
                                    B = -A.width * p.Oo[c].o_,
                                    y = -A.height * p.Oo[c].o_;
                                E(l, A, ((m.VQ.x + Y.x) - (B / 2)) + Ma, ((m.VQ.y + Y.y) - (y / 2)) + Da, B, y);
                            }
                    }
        };

        function fa(a, e, f, d, c, g, h, k, n) {
            for ((void 0 === k) && (k = 0); h >= k; h--)
                for (var q = a; q <= e; q++)
                    for (var r = f; r <= d; r++)
                        if (!((0 < n) && (1 === gf[(q + (r * n)) % gf.length]))) {
                            var t = Ka.w$u[q][r];
                            if (((void 0 !== t) && (void 0 !== t[g])) && (t = t[g][h], void 0 !== t))
                                for (var Y = 0; Y < t.length; Y++) {
                                    var Da = t[Y];
                                    if (Da.update) {
                                        (Da.uu.update() && (0 == Da.uu.Uo)) && (Da.update = !1);
                                        var Ma = (((1 - Da.uu.o_) * O) * 600) * z,
                                            A = Math.cos(Da.angle) * Ma,
                                            Ma = Math.sin(Da.angle) * Ma;
                                    } else Ma = A = 0;
                                    var B = u[c][p.time][h];
                                    E(l, B, ((m.VQ.x + Da.x) - (B.width / (2 * uvU))) + A, ((m.VQ.y + Da.y) - (B.height / (2 * uvU))) + Ma, B.width / uvU, B.height / uvU);
                                }
                        }
        };

        function sj(a, e, f, d, c, g, h, k, n) {
            for (; a <= e; a++)
                for (h = f; h <= d; h++)
                    if (k = Ka.w$u[a][h], ((void 0 !== k) && (void 0 !== k[g])) && (k = k[g], void 0 !== k))
                        if (1 === k.scale) n = u[c][p.time][k.VoO], l.save(), l.translate(m.VQ.x + k.x, m.VQ.y + k.y), l.rotate(k.angle), E(l, n, -n.width / 4, -n.height / 4, n.width / 2, n.height / 2), l.restore();
                        else if (3 === k.scale)
                for (var q = 0; q < k.QQ.length; q++) l.save(), l.translate(m.VQ.x + k.x, m.VQ.y + k.y), l.rotate(k.QQ[q].angle), n = u[c][p.time][k.QQ[q].VoO], E(l, n, (-n.width / 3) + k.QQ[q].x, (-n.height / 3) + k.QQ[q].y, n.width / 1.5, n.height / 1.5), l.restore();
            else n = u[c][p.time][k.VoO], l.save(), l.translate(m.VQ.x + k.x, m.VQ.y + k.y), l.rotate(k.angle), E(l, n, -n.width / 2, -n.height / 2, n.width, n.height), l.restore();
        };

        function tj(a, f, g, d, c, h, k, n, q) {
            (void 0 === n) && (n = 0);
            for (c = k; c >= n; c--)
                for (k = a; k <= f; k++)
                    for (q = g; q <= d; q++) {
                        var r = Ka.w$u[k][q];
                        if (((void 0 !== r) && (void 0 !== r[h])) && (r = r[h][c], void 0 !== r))
                            for (var t = 0; t < r.length; t++) {
                                var Oa = r[t];
                                if (Oa.update) {
                                    (Oa.uu.update() && (0 == Oa.uu.Uo)) && (Oa.update = !1);
                                    var Y = (((1 - Oa.uu.o_) * O) * 600) * z,
                                        Da = Math.cos(Oa.angle) * Y,
                                        Y = Math.sin(Oa.angle) * Y;
                                } else Y = Da = 0;
                                for (var Ma = 0; Ma < ovWoo[c].VVW; Ma++) {
                                    (p.uu_[Ma].vv0 !== bb) && (p.uu_[Ma].update(), p.uu_[Ma].vv0 = bb);
                                    var A = u[e.oOv][p.time][ovWoo[c].Uu[Ma].wU],
                                        B = -A.width * p.uu_[Ma].o_,
                                        y = -A.height * p.uu_[Ma].o_;
                                    E(l, A, (((m.VQ.x + Oa.x) - (B / 4)) + Da) + ovWoo[c].Uu[Ma].x, (((m.VQ.y + Oa.y) - (y / 4)) + Y) + ovWoo[c].Uu[Ma].y, B / 2, y / 2);
                                }
                            }
                    }
        };

        function Db(a, e) {
            p.Q$w ? (l.globalAlpha = 1, a._VQ(e), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, a._VQ(e), p.time = p.time ? 0 : 1, l.globalAlpha = 1) : a._VQ(e);
        };

        function Eb(a, e) {
            p.Q$w ? (l.globalAlpha = 1, a.$WV(e), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, a.$WV(e), p.time = p.time ? 0 : 1, l.globalAlpha = 1) : a.$WV(e);
        };

        function ja(a, e, f, d) {
            p.Q$w ? (l.globalAlpha = 1, E(l, u[a][p.time], f, d), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, E(l, u[a][p.time], f, d), p.time = p.time ? 0 : 1, l.globalAlpha = 1) : E(l, e, f, d);
        };

        function ob(a, e, f, d, c) {
            var g = f.width;
            f = f.height;
            var h = Math.floor(g / 2),
                k = Math.floor(f / 2);
            p.Q$w ? (l.globalAlpha = 1, E(l, u[a][e][p.time], 0, 0, g, f, d, c, h, k), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, E(l, u[a][e][p.time], 0, 0, g, f, d, c, h, k), p.time = p.time ? 0 : 1, l.globalAlpha = 1) : E(l, u[a][e][p.time], 0, 0, g, f, d, c, h, k);
        };

        function ra(a, e, f, d) {
            var c = e.width,
                g = e.height,
                h = Math.floor(c / 2),
                k = Math.floor(g / 2);
            p.Q$w ? (l.globalAlpha = 1, E(l, u[a][p.time], 0, 0, c, g, f, d, h, k), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, E(l, u[a][p.time], 0, 0, c, g, f, d, h, k), p.time = p.time ? 0 : 1, l.globalAlpha = 1) : E(l, e, 0, 0, c, g, f, d, h, k);
        };

        function hf(a, e, f, d, c) {
            (p.Q$w && (1 == c)) ? (l.globalAlpha = 1, E(l, u[a][p.time][e], f, d), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, E(l, u[a][p.time][e], f, d), p.time = p.time ? 0 : 1) : (l.globalAlpha = c, E(l, u[a][p.time][e], f, d));
            l.globalAlpha = 1;
        };

        function R(a, e, f) {
            p.Q$w ? (l.globalAlpha = 1, a.uW(e, f), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, a.uW(e, f), p.time = p.time ? 0 : 1, l.globalAlpha = 1) : a.uW(e, f);
        };

        function na(a, e, f, d, c, g, h, k, m, n) {
            p.Q$w ? (l.globalAlpha = 1, a(e, f, d, c, g, h, k, m, n), p.time = p.time ? 0 : 1, l.globalAlpha = 1 - p.V$.o_, a(e, f, d, c, g, h, k, m, n), p.time = p.time ? 0 : 1, l.globalAlpha = 1) : a(e, f, d, c, g, h, k, m, n);
        };

        function pa(a, e, f, d, c, g, h) {
            var k = "#";
            a = Math.floor((d * h) + ((1 - h) * a));
            k += (16 > a) ? ("0" + a.toString(16)) : a.toString(16);
            a = Math.floor((c * h) + ((1 - h) * e));
            k += (16 > a) ? ("0" + a.toString(16)) : a.toString(16);
            a = Math.floor((g * h) + ((1 - h) * f));
            return k += (16 > a) ? ("0" + a.toString(16)) : a.toString(16);
        };

        function Eg(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2,
                q = d.w3;
            a = (m.VQ.x + a) - 700;
            f = Math.max(m.VQ.y + f, 0);
            g = Math.max(((-m.VQ.y + ta) - g) - 100, 0);
            g = (ta - f) - g;
            var r = h ? d.wU(k).x : k.r.x,
                k = a + F.vUo,
                k = k + ((r + F.oQ$) - 2),
                r = h ? d.wU(n).x : n.r.x,
                n = ((a + F.v_U) - k) + r,
                k = k + (n - 2),
                t = k - 2,
                r = h ? d.wU(q).x : q.r.x,
                n = ((a + F.WQ0) - k) + r,
                k = (t < ((k + n) - 3)) ? (k + (n - 2)) : t,
                n = (a + F.v_O) - k;
            ((0 < h) && (1 === c.QQo)) ? (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 77, 72, 252, 239, 187, d)) : (l.fillStyle = e.Wuw$U[p.time])) : (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(c.u0[0], c.u0[1], c.u0[2], c.V_[0], c.V_[1], c.V_[2], d)) : (l.fillStyle = c.VU0[p.time]));
            l.fillRect(k, f, n, g);
        };

        function Fg(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2;
            c = d.w3;
            a = (m.VQ.x + a) - 700;
            f = Math.max(m.VQ.y + f, 0);
            g = Math.max(((-m.VQ.y + ta) - g) - 100, 0);
            g = (ta - f) - g;
            var q = h ? d.wU(k) : k.r,
                r = a + F.vUo,
                k = r,
                t = q.x + F.oQ$,
                z = r += (q.x + F.oQ$) - 2,
                q = h ? d.wU(n) : n.r,
                q = ((a + F.v_U) - r) + q.x,
                n = r,
                Y = q,
                r = r + (q - 2),
                Da = r - 2,
                q = h ? d.wU(c) : c.r,
                q = ((a + F.WQ0) - r) + q.x;
            if (Da < ((r + q) - 3)) {
                c = !0;
                var Ma = r,
                    A = f,
                    B = q,
                    y = g,
                    r = r + (q - 2);
            } else c = !1, r = -1;
            p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]);
            l.fillRect(k, f, t, g);
            h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 70, 76, 42, 139, 155, q)) : (l.fillStyle = e.QQ_o0[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]));
            l.fillRect(n, f, Y, g);
            c && (h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(17, 94, 96, 169, 214, 211, q)) : (l.fillStyle = e.u0_vo[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time])), l.fillRect(Ma, A, B, y));
            (G.WVU && h) && d.QoVvO(Da, r, z, a, -m.VQ.y + f, (-m.VQ.y + f) + g);
        };

        function Gg(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2,
                q = d.w3;
            a = (m.VQ.y + a) - 700;
            f = Math.max(m.VQ.x + f, 0);
            g = Math.max(((-m.VQ.x + ka) - g) - 100, 0);
            g = (ka - f) - g;
            var r = h ? d.wU(k).x : k.r.x,
                k = a + F.vUo,
                k = k + ((r + F.oQ$) - 2),
                r = h ? d.wU(n).x : n.r.x,
                n = ((a + F.v_U) - k) + r,
                k = k + (n - 2),
                t = k - 2,
                r = h ? d.wU(q).x : q.r.x,
                n = ((a + F.WQ0) - k) + r,
                k = (t < ((k + n) - 3)) ? (k + (n - 2)) : t,
                n = (a + F.v_O) - k;
            ((0 < h) && (1 === c.QQo)) ? (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 77, 72, 252, 239, 187, d)) : (l.fillStyle = e.Wuw$U[p.time])) : (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(c.u0[0], c.u0[1], c.u0[2], c.V_[0], c.V_[1], c.V_[2], d)) : (l.fillStyle = c.VU0[p.time]));
            l.fillRect(f, k, g, n);
        };

        function Hg(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2;
            c = d.w3;
            a = (m.VQ.y + a) - 700;
            f = Math.max(m.VQ.x + f, 0);
            g = Math.max(((-m.VQ.x + ka) - g) - 100, 0);
            g = (ka - f) - g;
            var q = h ? d.wU(k) : k.r,
                r = a + F.vUo,
                k = r,
                t = q.x + F.oQ$,
                z = r += (q.x + F.oQ$) - 2,
                q = h ? d.wU(n) : n.r,
                q = ((a + F.v_U) - r) + q.x,
                n = r,
                Y = q,
                r = r + (q - 2),
                Da = r - 2,
                q = h ? d.wU(c) : c.r,
                q = ((a + F.WQ0) - r) + q.x;
            if (Da < ((r + q) - 3)) {
                c = !0;
                var Ma = r,
                    A = f,
                    B = q,
                    y = g,
                    r = r + (q - 2);
            } else c = !1, r = -1;
            p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]);
            l.fillRect(f, k, g, t);
            h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 70, 76, 42, 139, 155, q)) : (l.fillStyle = e.QQ_o0[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]));
            l.fillRect(f, n, g, Y);
            c && (h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(17, 94, 96, 169, 214, 211, q)) : (l.fillStyle = e.u0_vo[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time])), l.fillRect(A, Ma, y, B));
            (G.WVU && h) && d.WUO$U(Da, r, z, a, -m.VQ.x + f, (-m.VQ.x + f) + g);
        };

        function Ig(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2,
                q = d.w3;
            a = (m.VQ.x + a) + 820;
            f = Math.max(m.VQ.y + f, 0);
            g = Math.max(((-m.VQ.y + ta) - g) - 100, 0);
            g = (ta - f) - g;
            var r = h ? d.wU(k).x : k.r.x,
                k = a + F.vUo,
                k = k + ((-r + F.oQ$) + 2),
                r = h ? d.wU(n).x : n.r.x,
                n = ((a - F.v_U) - k) - r,
                k = k + (n + 2),
                t = k - 2,
                r = h ? d.wU(q).x : q.r.x,
                n = ((a - F.WQ0) - k) - r,
                k = (t > (k + n)) ? (k + (n + 2)) : t,
                n = (a - F.v_O) - k;
            ((0 < h) && (1 === c.QQo)) ? (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 77, 72, 252, 239, 187, d)) : (l.fillStyle = e.Wuw$U[p.time])) : (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(c.u0[0], c.u0[1], c.u0[2], c.V_[0], c.V_[1], c.V_[2], d)) : (l.fillStyle = c.VU0[p.time]));
            l.fillRect(k, f, n, g);
        };

        function Jg(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2;
            c = d.w3;
            a = (m.VQ.x + a) + 820;
            f = Math.max(m.VQ.y + f, 0);
            g = Math.max(((-m.VQ.y + ta) - g) - 100, 0);
            g = (ta - f) - g;
            var q = h ? d.wU(k) : k.r,
                r = a + F.vUo,
                k = r,
                t = -q.x + F.oQ$,
                z = r += (-q.x + F.oQ$) + 2,
                q = h ? d.wU(n) : n.r,
                q = ((a - F.v_U) - r) - q.x,
                n = r,
                Y = q,
                r = r + (q + 2),
                Da = r - 2,
                q = h ? d.wU(c) : c.r,
                q = ((a - F.WQ0) - r) - q.x;
            if (Da > (r + q)) {
                c = !0;
                var Ma = r,
                    A = f,
                    B = q,
                    y = g,
                    r = r + (q + 2);
            } else c = !1, r = -1;
            p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]);
            l.fillRect(k, f, t, g);
            h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 70, 76, 42, 139, 155, q)) : (l.fillStyle = e.QQ_o0[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]));
            l.fillRect(n, f, Y, g);
            c && (h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(17, 94, 96, 169, 214, 211, q)) : (l.fillStyle = e.u0_vo[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time])), l.fillRect(Ma, A, B, y));
            (G.WVU && h) && d._uWv_(Da, r, z, a, -m.VQ.y + f, (-m.VQ.y + f) + g);
        };

        function Kg(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2,
                q = d.w3;
            a = (m.VQ.y + a) + 710;
            f = Math.max(m.VQ.x + f, 0);
            g = Math.max(((-m.VQ.x + ka) - g) - 100, 0);
            g = (ka - f) - g;
            var r = h ? d.wU(k).x : k.r.x,
                k = a + F.vUo,
                k = k + ((-r + F.oQ$) + 2),
                r = h ? d.wU(n).x : n.r.x,
                n = ((a - F.v_U) - k) - r,
                k = k + (n + 2),
                t = k - 2,
                r = h ? d.wU(q).x : q.r.x,
                n = ((a - F.WQ0) - k) - r,
                k = (t > (k + n)) ? (k + (n + 2)) : t,
                n = (a - F.v_O) - k;
            ((0 < h) && (1 === c.QQo)) ? (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 77, 72, 252, 239, 187, d)) : (l.fillStyle = e.Wuw$U[p.time])) : (p.Q$w ? (d = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(c.u0[0], c.u0[1], c.u0[2], c.V_[0], c.V_[1], c.V_[2], d)) : (l.fillStyle = c.VU0[p.time]));
            l.fillRect(f, k, g, n);
        };

        function Lg(a, f, g, d, c, h) {
            var k = d.w1,
                n = d.w2;
            c = d.w3;
            a = (m.VQ.y + a) + 710;
            f = Math.max(m.VQ.x + f, 0);
            g = Math.max(((-m.VQ.x + ka) - g) - 100, 0);
            g = (ka - f) - g;
            var q = h ? d.wU(k) : k.r,
                r = a + F.vUo,
                k = r,
                t = -q.x + F.oQ$,
                z = r += (-q.x + F.oQ$) + 2,
                q = h ? d.wU(n) : n.r,
                q = ((a - F.v_U) - r) - q.x,
                n = r,
                Y = q,
                r = r + (q + 2),
                Da = r - 2,
                q = h ? d.wU(c) : c.r,
                q = ((a - F.WQ0) - r) - q.x;
            if (Da > (r + q)) {
                c = !0;
                var Ma = r,
                    A = f,
                    B = q,
                    y = g,
                    r = r + (q + 2);
            } else c = !1, r = -1;
            p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]);
            l.fillRect(f, k, g, t);
            h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(15, 70, 76, 42, 139, 155, q)) : (l.fillStyle = e.QQ_o0[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time]));
            l.fillRect(f, n, g, Y);
            c && (h ? (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(17, 94, 96, 169, 214, 211, q)) : (l.fillStyle = e.u0_vo[p.time])) : (p.Q$w ? (q = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(9, 55, 63, 11, 106, 132, q)) : (l.fillStyle = e.OOo[p.time])), l.fillRect(A, Ma, y, B));
            (G.WVU && h) && d.uWoo$(Da, r, z, a, -m.VQ.x + f, (-m.VQ.x + f) + g);
        };

        function Ec(a, e) {
            var f = a.getBoundingClientRect();
            return {
                x: e.clientX - f.left,
                y: e.clientY - f.top
            };
        };

        function pb(a, e, f, d, c, g, h, k, l, m, p, n, q, r, t) {
            (0 === a.length) && (a = " ");
            (void 0 === h) && (h = 0);
            (void 0 === k) && (k = 0);
            (void 0 === l) && (l = 0);
            (void 0 === r) && (r = 0);
            var z = document.createElement("canvas"),
                A = z.getContext("2d");
            A.textBaseline = "middle";
            A.font = ((((void 0 !== t) ? (t + " ") : "") + d) + "px ") + e;
            c = (void 0 !== c) ? Math.min(A.measureText(a).width, c) : A.measureText(a).width;
            z.width = c + h;
            z.height = d + k;
            if (void 0 !== g) {
                (void 0 !== p) && (A.globalAlpha = p);
                A.fillStyle = g;
                if (void 0 !== n) WUU0w(A, l + 2, l, ((c + h) - (2 * l)) - 4, (d + k) - (2 * l), n), A.fill();
                else A.fillRect(l, l, (c + h) - (2 * l), (d + k) - (2 * l));
                A.globalAlpha = 1;
                (0 !== l) && (A.lineWidth = l, A.strokeStyle = m, A.stroke());
            }
            A.textBaseline = "middle";
            A.font = ((((void 0 !== t) ? (t + " ") : "") + d) + "px ") + e;
            (void 0 !== q) && (A.strokeStyle = q, A.lineWidth = r, A.lineJoin = "miter", A.miterLimit = 2, A.strokeText(a, Math.floor(h / 2), Math.floor(k / 2) + Math.floor(d / 2), c));
            A.fillStyle = f;
            A.fillText(a, Math.floor(h / 2), Math.floor(k / 2) + Math.floor(d / 2), c);
            z.w2 = z.width / 2;
            z.$UQ = z.height / 2;
            return z;
        };

        function n(a, e, f, d, c, g, h, k, l, m, p) {
            (void 0 === l) && (l = 0);
            (void 0 === k) && (k = 0);
            (void 0 === m) && (m = 0);
            (void 0 === p) && (p = 1);
            c = (3 === c) ? 3 : ((1 === c) ? 2 : 1);
            (1 !== g) && (g = 0);
            if (d) var n = d;
            var q = {
                    width: a,
                    height: e,
                    Vv: n,
                    state: 0,
                    translate: {
                        x: k,
                        y: l,
                        oVo: k,
                        u_w: l
                    },
                    VoQQ$: g,
                    Oo: 0,
                    callback: h,
                    position: m,
                    active: p
                },
                r = function(a) {
                    var d = q.translate;
                    if ((0 === q.width) || (0 === q.height)) q.width = q.Vv[0].width, q.height = q.Vv[0].height;
                    return (((a.x > d.x) && (a.x < (d.x + (q.width / c)))) && (a.y > d.y)) && (a.y < (d.y + (q.height / c)));
                };
            g = function() {
                var a = 0;
                (1 === q.VoQQ$) && (((1 === q.state) || (q.state === ba)) ? (q.Oo = (q.Oo + (1000 * O)) % 1000) : (((0 < q.Oo) && (q.Oo = (500 < q.Oo) ? (q.Oo + (1000 * O)) : (q.Oo - (1000 * O)), (0 > q.Oo) || (1000 < q.Oo))) && (q.Oo = 0)), a = 0.2 * OQ.wuQ((500 < q.Oo) ? ((1000 - q.Oo) / 500) : (q.Oo / 500)));
                return a;
            };
            (2 === c) ? (a = function(a) {
                var c = 1 + g(),
                    d = (q.width * c) / 2,
                    c = (q.height * c) / 2;
                E(a, q.Vv[q.state], q.translate.x - ((d - (q.width / 2)) / 2), q.translate.y - ((c - (q.height / 2)) / 2), d, c);
            }) : ((3 === c) ? (a = function(a) {
                var c = q.width,
                    d = q.height;
                E(a, q.Vv[q.state], q.translate.x - ((c - q.width) / 2), q.translate.y - ((d - q.height) / 2), c, d);
            }, c = 1) : (a = function(a) {
                E(a, q.Vv[q.state], q.translate.x, q.translate.y);
            }));
            return {
                info: q,
                UQu: function(a, c, d) {
                    if (r(c)) return (1 == d) ? (q.state = ba) : ((2 == d) ? (q.state = 1) : (((0 == d) && (q.state != ba)) && (q.state = 1))), !0;
                    q.state = 0;
                    return !1;
                },
                uW: a,
                VwW: r
            };
        };

        function aa(a, e, f, d, c) {
            var g = {
                x: f,
                y: d,
                oVo: f,
                u_w: d
            };
            return {
                translate: g,
                uW: function(c) {
                    E(c, a, g.x, g.y, a.width / 2, a.height / 2);
                },
                active: e,
                position: c
            };
        };

        function jd(a, b, e, d, c) {
            a = (2147483587 + (2147483629 * (a + 64762))) % 2147483647;
            b = ((214013 * (18197 + b)) + 2531011) % 4294967296;
            e = (2531011 + (214013 * (22845 + e))) % 4294967296;
            d = (((32 << ((d >> 16) & 255)) + (16 << ((d >> 8) & 255))) + (8 << ((d >> 32) & 255))) + (24 << ((d >> 24) & 255));
            c = (~(c & 11999) & c) | (~(c & 11999) & 11999);
            var f = Kb(a, b, e, d, c, a);
            b = qd(b, e, d, c, a, b);
            Ra(e, d, c, a);
            return ((((8 << (((f ^ b) >> 24) & 255)) + (16 << (((f ^ b) >> 16) & 255))) + (24 << (((f ^ b) >> 8) & 255))) + (32 << (((f ^ b) >> 32) & 255))) ^ 35444;
        };

        function uj() {
            this.woV = "";
            this.vUQ = this.V_W = this.QwO = this.vuW = this.Vou = this.VVw = this.vWO = 0;
            this.level = 0;
            this.oVO_V = this.Vuu0u = this.label = null;
            this.W$w = !1;
            this.UOV = 0;
        };

        function ad(a, e, g, d, c, h, k, l, m, n) {
            this.type = a;
            this.OV_ = e;
            this.id = g;
            this.x = d;
            this.y = c;
            this.U$Q = this.angle = h;
            this.action = k;
            this.info = l;
            this.uOo = n;
            this.hit = 0;

            this.r = {
                x: d,
                y: c
            };
            if(playerLimit) {

                myLimit = g;

            }

            this.UUv = m;
            p && (this.v$o = (e * p.wV_) + g);

            let woo = ~~(this.info & 255);
            let roo = ~~(this.info & 65280) >> 8;
            let breadoven = this.info & 31,
                breadoven2 = (this.info & 992) >> 5,
                breadoven3 = (this.info & 31744) >> 10;
            let wheat = this.info & 255,
                flour = (this.info & 65280) >> 8;

                switch (a) {
                case t.uvw:
                    this.ow = p.UO[this.OV_];
                    this.vWO = this.ow.vWO;
                    this.vuW = this.ow.vuW;
                    this.QwO = this.ow.QwO;
                    this.VVw = this.ow.VVw;
                    this.QQw = this.uO_ = this.OuW = this.Qou = this.QO0 = this.oww = this.w$o = -1000000;
                    this.$_o = ((p.mode === F.wQ_) && (this.vWO === F.$0w)) ? !0 : !1;
                    this.UVw_o = ((p.mode === F.Uov) && (this.vWO === F.V_v)) ? !0 : !1;
                    this.ooW = (this.$_o && ("  " === this.ow.woV)) ? !0 : !1;
                    this._o0 = [];
                    this.QO$ = 0;
                    this.v$Q = !0;
                    this.lastWeapon = null;
                    this.Qv$ = this.uWVOO = 0;
                    this.wow = [];
                    this.r = {
                        x: d,
                        y: c
                    };
                    this.uW = nj;

                    this.vo_ = mj;
                    this.oQ0 = this.Uu$ = this.QoU = 0;
                    this.QwU = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.oUO = this.owW = 0;
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    this.voV = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    this.freeze = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    this.W__ = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    this.$oOoo = new OQ.Uw(!0, 0, 2.25, -1.5, 3.75, 7.5);
                    this.OoV = new OQ.Uw(!0, 0, 7.5, -3, 22.5, 33.75);
                    this.attack = new OQ.Uw(!1, 0, 0, -Math.PI / 3, 6, 9);
                    this.$VO$$ = 0;
                    this._0W = new OQ.Uw(!1, 0.6, 0.6, 0, 1, 3);
                    this._VOvo = this.ooW ? (new OQ.Uw(!0, 0, 2.25, -1.5, 2.75, 5.5)) : 0;
                    this.oWv = this.Uvu0v = 0;
                    this.wvO = [];
                    this.w0U0W = [];
                    this.text = [];
                    this.label = [];
                    this.$V_VU = rj;
                    this.voo = !0;
                    this.QWQ = this.right = -1;
                    this.action = Q.IDLE;
                    this.WVvV$ = !1;
                    this.$Qu = 0;
                    this.QW0 = !1;
                    this.bubbles = [];
                    this.Vou = 0;
                    this.uw_ = -1;
                    this.update = function(a) {
                        (this.info & 32768) ? (this.WVvV$ = !0, this.info &= -32769) : (this.WVvV$ = !1);
                        (this.info & 16384) ? (this.info &= -16385, this.Vou = 1) : (this.Vou = 0);
                        this.$Qu = Math.floor(this.info / 128);
                        this.info -= 128 * this.$Qu;
                        this.right = ((this.info === f.$O_) || this.ooW) ? -1 : this.info;
                        this.QO$ = p.UQwOu(Math.floor(this.r.y / 100), Math.floor(this.r.x / 100));
                        this.QWQ = this.uOo & 255;
                        this.QW0 = (this.right === F.$_W0o) ? !0 : !1;
                        if (this.OV_ === oQ.player.id) {
                            window.isGhost = this.QW0
                        }
                        this.vuo = xa[this.right] ? !0 : !1;
                        (a & Q.VV_) ? (this._0W.Uo = !1, this._0W.o_ = 0.6) : ((a & Q.v$V) ? (this.freeze.Uo = !1, this.freeze.o_ = 0.6) : ((a & Q.V0O) && (this.voV.Uo = !1, this.voV.o_ = 0.6)));
                        (a & Q.QQV) && (this.W__.Uo = !1, this.W__.o_ = 0.6);
                        (a & Q.VvW) && (this.uu.Uo = !1, this.uu.o_ = 0.6);
                        (a & Q.VQu) && (this.$VO$$ = sa.Qo_$V, (U.ooU && (-1 !== this.uw_)) && U.UO[this.uw_].U$wwo(ha[this.right]));
                    };
                    this.update();
                    break;
                case t.QW$:
                    this.hack = {
                        owner: Ia(1, p.UO[this.OV_].woV, 22, '#fff', null, null, null, null, null, '#000000', 8)
                    };
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this._VQ = ij;
                    this.$WV = gj;
                    this.$vV = new OQ.Uw(!1, 1, 1.23, 1.18, 0.01, 0.01);
                    this.w_$ = this.U_0 = 0;
                    this.Vuo = ef;
                    break;
                case t._UO:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this._VQ = jj;
                    this.$WV = hj;
                    this.$vV = new OQ.Uw(!1, 1, 1.23, 1.18, 0.01, 0.01);
                    this.w_$ = this.U_0 = 0;
                    break;
                case t.$uu:
                case t.$ow:
                    this._VQ = Xi;
                    this.$WV = lj;
                    this.v_Q = new OQ.Uw(!1, 1, 1.03, 0.98, 0.3, 0.3);
                    this.uOW = new OQ.Uw(!1, 1, 1.23, 1.18, 0.01, 0.01);
                    this.$vV = new OQ.Uw(!1, 1, 1.23, 1.18, 0.01, 0.01);
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.QvU:
                    this._VQ = Si;
                    this.$WV = Ti;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.Vw = [];
                    for (a = 0; 3 > a; a++) this.Vw.push({
                        uW: Ii,
                        Oo: new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2)
                    });
                    this.Vw[0].x = this.x - 16.5;
                    this.Vw[0].y = this.y - 15.5;
                    this.Vw[0].angle = this.angle;
                    this.Vw[1].x = this.x + 36;
                    this.Vw[1].y = this.y + 17;
                    this.Vw[1].angle = this.angle;
                    this.Vw[2].x = this.x - 18.5;
                    this.Vw[2].y = this.y + 39;
                    this.Vw[2].angle = this.angle;
                    break;
                case t.vUu:
                    this._VQ = Qi;
                    this.$WV = Ri;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.Vw = [];
                    for (a = 0; 3 > a; a++) this.Vw.push({
                        uW: Bg,
                        Oo: new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2)
                    });
                    this.Vw[0].x = this.x - 16.5;
                    this.Vw[0].y = this.y - 15.5;
                    this.Vw[1].x = this.x - 5.5;
                    this.Vw[1].y = this.y + 7.5;
                    this.Vw[2].x = this.x + 18;
                    this.Vw[2].y = this.y - 5;
                    break;
                case t.OW$:
                    this.uW = Ci;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.vuu:
                    this.uW = Di;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.vww:
                    this.uW = Ei;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.Qow = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uWu = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    this.voV = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.w$W:
                    this.uW = Fi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.Qow = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uWu = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    this.voV = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.vv_:
                    this.uW = Hi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.v$v:
                    this.uW = Ag;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.5, 0.5);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.UQQ:
                    this.U$$ = this.info & 15;
                    this.Qv$ = this.uOo & 1;
                    this.vwo = 0;
                    this.x = this.info;
                    this.y = this.uOo;
                    this.uW = Gi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.6, 0.6);
                    break;
                case t._$o:
                case t._Q$:
                case t.uVQ:
                case t.uOV:
                case t.W$o:
                case t.Qvo:
                case t.vQv:
                case t.WVv:
                case t.Q$W:
                    this.uW = Ag;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.vuQ:

                    this.uW = Yi;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.VUQ:
                    this.hack = {
                        wood: (breadoven > 0) ? genImg2(Ia(1, 'x' + breadoven, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        flour: (breadoven2 > 0) ? genImg2(Ia(1, 'x' + breadoven2, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        bread: (breadoven3 > 0) ? genImg2(Ia(1, 'x' + breadoven3, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false
                    };
                    this.$WV = Wi;
                    this.uW = Zi;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uoQ = new OQ.Uw(!1, 1, 1.03, 0.98, 0.1, 0.1);
                    this.OO0 = [];
                    break;
                case t.woW:
                    this.angle = (Math.random() * Math.PI) / 2;
                case t.wuv:

                case t.wQW:

                    if(this.type == 82){
                        this.text = "Dead";
                    }else {
                        this.text = "Drop";
                    }
                    this.uW = Ai;
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.wWO:
                    this.uW = Bi;
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t._u$:
                    this.scale = 1;
                    this.uW = yi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.rotate = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.Vvu:
                    this.OQU = 0;
                    this.uOW = [];
                    this._Quvv = 0;
                    this.QOUvu = si;
                    this.uW = ti;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.rotate = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.wQQ:
                    this.x = this.info;
                    this.y = this.uOo;
                    this.scale = 1;
                    this.UWQ = 0;
                    this.uW = ui;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.rotate = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.uU_:
                    this.x = this.info;
                    this.y = this.uOo;
                    this.scale = 1;
                    this.UWQ = 0;
                    this.uW = vi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.rotate = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.$ww:
                    this.scale = 1;
                    this.uW = wi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.rotate = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.$Uo:
                    this.scale = 1;
                    this.uW = xi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.rotate = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t._oU:
                    this.scale = 1;
                    this.uW = zi;
                    this.Oo = new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2);
                    this.rotate = new OQ.Uw(!1, 0, 0, -Math.PI / 6, 0.5, 1);
                    this.uu = new OQ.Uw(!1, 0.6, 0.6, 0, 5, 3);
                    break;
                case t.$QO:
                    this.Vw = [];
                    for (a = 0; 5 > a; a++) this.Vw.push({
                        uW: Bg,
                        Oo: new OQ.Uw(!1, 0.9 + (0.15 * Math.random()), 1.05, 0.9, 0.2, 0.2)
                    });
                    switch (this.id % 3) {
                        case 0:
                            this.Vw[0].x = this.x - 20.5;
                            this.Vw[0].y = this.y - 22.5;
                            this.Vw[1].x = this.x - 35.5;
                            this.Vw[1].y = this.y + 7.5;
                            this.Vw[2].x = this.x + 7.5;
                            this.Vw[2].y = this.y - 30;
                            this.Vw[3].x = this.x + 22.5;
                            this.Vw[3].y = this.y;
                            this.Vw[4].x = this.x - 7.5;
                            this.Vw[4].y = this.y + 14.5;
                            break;
                        case 1:
                            this.Vw[0].x = this.x - 30.5;
                            this.Vw[0].y = this.y - 22.5;
                            this.Vw[1].x = this.x - 15.5;
                            this.Vw[1].y = this.y + 7.5;
                            this.Vw[2].x = this.x + 15.5;
                            this.Vw[2].y = this.y - 30;
                            this.Vw[3].x = this.x + 12.5;
                            this.Vw[3].y = this.y + 5;
                            this.Vw[4].x = this.x - 40.5;
                            this.Vw[4].y = this.y + 14.5;
                            break;
                        case 2:
                            this.Vw[0].x = this.x - 20.5, this.Vw[0].y = this.y - 20.5, this.Vw[1].x = this.x - 35.5, this.Vw[1].y = this.y + 15.5, this.Vw[2].x = this.x + 7.5, this.Vw[2].y = this.y - 17, this.Vw[3].x = this.x + 22.5, this.Vw[3].y = this.y + 5, this.Vw[4].x = this.x - 7.5, this.Vw[4].y = this.y + 1.5;
                    }
                    break;
                case t._W$:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uW = Pi;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    this.o_Vou = new OQ.Uw(!1, 0, Math.PI / 30, -Math.PI / 30, 0.06, 0.06);
                    break;
                case t.W_u:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uW = Ji;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    break;
                case t.Q$u:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uW = Ki;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    break;
                case t.oQW:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uW = Ni;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    break;
                case t.$v0:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uW = Li;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    break;
                case t.vVW:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uW = Mi;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    break;
                case t.Wv$:
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.uW = Oi;
                    this.uOW = new OQ.Uw(!1, 0.9, 1.05, 0.9, 0.2, 0.2);
                    break;
                case t.u_V:
                    this.hack = {
                        wood: (woo > 0) ? genImg2(Ia(1, 'x' + woo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        res: (roo > 0) ? genImg2(Ia(1, 'x' + roo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false
                    };

                    this.uW = aj;
                    this.rotate = 0;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.ouo:
                    this.hack = {
                        wood: (woo > 0) ? genImg2(Ia(1, 'x' + woo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        res: (roo > 0) ? genImg2(Ia(1, 'x' + roo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false
                    };
                    this.uW = bj;
                    this.rotate = 0;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t._vU:
                    this.hack = {
                        wood: (woo > 0) ? genImg2(Ia(1, 'x' + woo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        res: (roo > 0) ? genImg2(Ia(1, 'x' + roo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false
                    };
                    this.uW = cj;
                    this.rotate = 0;

                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.V_w:
                    this.hack = {
                        wood: (woo > 0) ? genImg2(Ia(1, 'x' + woo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        res: (roo > 0) ? genImg2(Ia(1, 'x' + roo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false
                    };
                    this.uW = dj;
                    this.rotate = 0;

                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.W_W:
                    this.hack = {
                        wood: (woo > 0) ? genImg2(Ia(1, 'x' + woo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        res: (roo > 0) ? genImg2(Ia(1, 'x' + roo, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false
                    };
                    this.uW = ej;
                    this.rotate = 0;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.U$W:
                    this.hack = {
                        wheat: (wheat > 0) ? genImg2(Ia(1, 'x' + wheat, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                        flour: (flour > 0) ? genImg2(Ia(1, 'x' + flour, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false
                    };
                    this._VQ = fj;
                    this.$WV = $i;
                    this.rotate = 0;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.WoV:
                    this.uW = oi;
                    this.ov = Math.floor(this.x / 100);
                    this.u$ = Math.floor(this.y / 100);
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.OUu = 1;
                    this.Vuo = zg;
                    break;
                case t.Qww:
                    this.uW = pi;
                    this.$vV = new OQ.Uw(!1, 1, 1.15, 1, 0.3, 0.3);
                    this.color = 0;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.uV$:
                case t.oOQ:
                case t.UWU:
                case t.wo$:
                case t.Ww$:
                    var d = !1;
                    this.hack = {
                        owner: 0,
                        lock: 0,
                        place: 0,
                        uses: 0
                    };
                    this.hack.owner = this.OV_ ? Ia(1, p.UO[this.OV_].woV, 22, '#fff', null, null, null, null, null, '#000000', 8) : false;
                    this.hack.lock = (this.info >= 17) ? Ia(1, 'Lock', 20, '#ff0000', null, null, null, null, null, '#000000', 8) : false;
                    this.hack.place = this.hack.lock ? (d = lookbetter(this), this.hack.place = Ia(1, 'P:' + d, 20, (d === 8) ? '#ff0000' : '#fff', null, null, null, null, null, '#000000', 8)) : this.info != 0 ? this.hack.place = Ia(1, 'P:' + this.info, 20, (this.info == 8) ? '#ff0000' : '#fff', null, null, null, null, null, '#000000', 8) : this.hack.place = false;
                    this.hack.uses = (this.info > 0) ? Ia(1, 'x' + this.info, 20, '#fff', null, null, null, null, null, '#000000', 8) : false;
                    this.uW = ff;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    break;
                case t.OQ$:
                    this.uW = ff;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.Vuo = zg;
                    break;
                case t._OW:
                case t.OwO:
                case t.uVv:
                case t.Wvw:
                case t.$wu:
                case t.oWQ:
                case t.oV_:
                case t.wuW:
                case t.uuo:
                case t._w0:
                case t.QwW:
                case t.uQu:
                    this.a = {
                        type: 0
                    };
                    this.a.type = BuildingType(e, this)
                    this.o = {
                        img: genImg(this)
                    };
                    this.uW = ff;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.Vuo = ef;
                    break;
                case t.Wwv:
                    this.uW = qi;
                    this.OUu = 1;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    a = this.angle % (Math.PI / 2);
                    this.angle = (a < (Math.PI / 4)) ? (this.angle - a) : (this.angle + ((Math.PI / 2) - a));
                    break;
                case t.Qo_:
                    this.uW = ni;
                    this.angle = (Math.random() * Math.PI) * 2;
                    break;
                case t.UV$:
                    this.uW = mi;
                    this.angle = (Math.random() * Math.PI) * 2;
                    break;
                case t.o0O_0:
                    this.uW = li;
                    this.angle = (Math.random() * Math.PI) * 2;
                    break;
                case t.uV$Qw:
                    this.uW = ki;
                    this.angle = (Math.random() * Math.PI) * 2;
                    break;
                case t.QV_wo:
                    this.uW = ji;
                    this.angle = (Math.random() * Math.PI) * 2;
                    break;
                case t.V$Q:
                    this.slot = {
                        img: null,
                        width: null,
                        height: null
                    };
                    this.update = function(a) {
                        this.lock = (this.info & 8192) ? 1 : 0;
                        this.info &= 8191;
                        this.action = a;
                    };
                    this.uW = ii;
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.lock = 0;
                    this.update(this.action);
                    break;
                case t.vwQ:
                case t.v$_:
                case t.owo:
                case t.$W0:
                case t.Q$o:
                case t.$VU:
                case t.Vw_:
                case t.wvV:
                case t.u_v:
                case t.vO0:
                case t.VuQ:
                case t.wUO:
                    this.uW = hi;
                    this.a = {
                      type: 0
                  };
                  this.a.type = BuildingType(e, this)
                    this.o = {
                      img: genImg(this)
                  };
                    this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    };
                    this.Vuo = ef;
                    break;
                case t.UoQ:
                    this.hack = {
                        wood: Ia(1, 'x' + this.info, 19, '#fff', null, null, null, null, null, '#000000', 8)
                    };
                    this._VQ = Vi, this.uW = Ui, this.$WV = kj, this.uOW = new OQ.Uw(!1, 1, 1.23, 1.18, 0.02, 0.02), this.$vV = new OQ.Uw(!1, 1, 1.23, 1.18, 0.04, 0.04), this.uu = {
                        OO: new OQ.Uw(!1, 1, 1, 0, 10, 10),
                        update: !1,
                        angle: 0
                    }, this.update = function(a) {
                        this.action = a;
                    };
            }
        };

        function vj(a) {
            function g(a, c, d, e, f, h, k, l) {
                var p = Math.floor(k / 2);
                k = Math.max(1, Math.floor(k / 2));
                var w = Math.floor(l / 2);
                l = Math.max(1, Math.floor(l / 2));
                for (var n = 0; n < d; n++) {
                    for (var q = a - w; q < (a + l); q++)
                        for (var ia = c - p; ia < (c + k); ia++)
                            if (1 === m(q, ia, "wtb", 0, 1)) h.push([q, ia, 1]);
                    a += e;
                    c += f;
                }
            };

            function h(a, c) {
                for (var d = p.wUv[a], e = Math.floor(d.y1 / 100), f = Math.floor(d.x1 / 100), k = Math.floor(d.uQ / 100), l = Math.floor(d.w / 100), d = f + l, w = 2, n = e, q = (f + 10) + Math.floor((l - 20) * p.uwU.get()), l = q - 4; l < (q + 4); l++) m(e - 1, l, "wtb", 0, 1);
                for (; 0 < k;)
                    if (2 === w) {
                        for (e = 10; 1 < e; e--) g(n, q, 1, 1, 0, c, e, 1), --k, n += 1;
                        w = 0;
                    } else if (10 > k)
                    for (e = 1; 0 < k; e++) g(n, q, 1, 1, 0, c, e, 1), --k, n += 1;
                else(1 === w) ? (e = Math.min(k, Math.floor(1 + (4 * p.uwU.get()))), l = 1 + Math.floor(4 * p.uwU.get()), g(n, q, e, 1, 0, c, l, l), w = 0, k -= e, n += e) : (w = 1, e = Math.floor(1 + (2 * p.uwU.get())), l = 1 + Math.floor(4 * p.uwU.get()), (q < (f + 16)) ? (g(n, q, e, 0, 1, c, l, l), q += e) : ((q > (d - 16)) ? (g(n, q, e, 0, -1, c, l, l), q -= e) : ((0.5 < p.uwU.get()) ? (g(n, q, e, 0, 1, c, l, l), q += e) : (g(n, q, e, 0, -1, c, l, l), q -= e))));
                for (l = q - 1; l < (q + 2); l++) m(n, l, "wtb", 0, 1);
            };

            function d(a, c) {
                for (var d = 0; d < c.length; d++) {
                    var e = c[d][0],
                        f = c[d][1],
                        g = a,
                        h = c[d][2];
                    if (l(e, f) && (w$u = Ka.w$u, (void 0 === w$u[e][f]) && (w$u[e][f] = {}), void 0 === w$u[e][f].r)) {
                        var k = 0;
                        ((l(e - 1, f) && (void 0 !== w$u[e - 1][f])) && (void 0 !== w$u[e - 1][f].wtb)) && (k += 2);
                        ((l(e, f - 1) && (void 0 !== w$u[e][f - 1])) && (void 0 !== w$u[e][f - 1].wtb)) && (k += 8);
                        ((l(e, f + 1) && (void 0 !== w$u[e][f + 1])) && (void 0 !== w$u[e][f + 1].wtb)) && (k += 16);
                        ((l(e + 1, f) && (void 0 !== w$u[e + 1][f])) && (void 0 !== w$u[e + 1][f].wtb)) && (k += 64);
                        (((l(e - 1, f - 1) && (10 === (k & 10))) && (void 0 !== w$u[e - 1][f - 1])) && (void 0 !== w$u[e - 1][f - 1].wtb)) && (k += 1);
                        (((l(e - 1, f + 1) && (18 === (k & 18))) && (void 0 !== w$u[e - 1][f + 1])) && (void 0 !== w$u[e - 1][f + 1].wtb)) && (k += 4);
                        (((l(e + 1, f - 1) && (72 === (k & 72))) && (void 0 !== w$u[e + 1][f - 1])) && (void 0 !== w$u[e + 1][f - 1].wtb)) && (k += 32);
                        (((l(e + 1, f + 1) && (80 === (k & 80))) && (void 0 !== w$u[e + 1][f + 1])) && (void 0 !== w$u[e + 1][f + 1].wtb)) && (k += 128);
                        w$u[e][f].r = {};
                        w$u[e][f].r._0vw_ = k;
                        w$u[e][f].r.wuw = h;
                        w$u[e][f].r.U_o = p.UuQ(g, (100 * f) + 50, (100 * e) + 50) - 400;
                        w$u[e][f].r.x = (100 * f) + 50;
                        w$u[e][f].r.y = (100 * e) + 50;
                    }
                }
            };

            function c(a) {
                a = p.wUv[a];
                m(-3 + Math.floor(a.y2 / 100), -1 + Math.floor(a.x2 / 100), "s", 0, 0);
                m(3 + Math.floor(a.y1 / 100), -1 + Math.floor(a.x2 / 100), "s", 0, 0);
                m(-3 + Math.floor(a.y2 / 100), 1 + Math.floor(a.x1 / 100), "s", 0, 0);
                m(3 + Math.floor(a.y1 / 100), 1 + Math.floor(a.x1 / 100), "s", 0, 0);
            };

            function k(a, c, d, e, f) {
                var g = p.wUv[a],
                    h = Math.floor(g.x1 / 100),
                    l = Math.floor(g.y1 / 100),
                    w = Math.floor(g.w / 100),
                    g = Math.floor(g.uQ / 100);
                (void 0 !== f) && (f = 1 - f, h += Math.floor((w * f) / 2), l += Math.floor((g * f) / 2), w -= Math.floor(w * f), g -= Math.floor(g * f));
                f = Ka.w$u;
                for (var n = 0, q = 0;
                    (n < e) && !(50000 < q); q++) {
                    var ia = l + Math.floor(p.uwU.get() * g),
                        r = h + Math.floor(p.uwU.get() * w);
                    if (!(400 > p.UuQ(a, (100 * r) + 50, (100 * ia) + 50))) {
                        var t = f[ia][r + 1];
                        if (((void 0 === t) || (void 0 === t[c])) || (void 0 === t[c][d]))
                            if (t = f[ia][r - 1], ((void 0 === t) || (void 0 === t[c])) || (void 0 === t[c][d]))
                                if (t = f[ia + 1][r], ((void 0 === t) || (void 0 === t[c])) || (void 0 === t[c][d]))
                                    if (t = f[ia - 1][r], ((void 0 === t) || (void 0 === t[c])) || (void 0 === t[c][d]))
                                        if (t = f[ia + 1][r - 1], ((void 0 === t) || (void 0 === t[c])) || (void 0 === t[c][d]))
                                            if (t = f[ia - 1][r + 1], ((void 0 === t) || (void 0 === t[c])) || (void 0 === t[c][d]))
                                                if (t = f[ia + 1][r + 1], ((void 0 === t) || (void 0 === t[c])) || (void 0 === t[c][d])) t = f[ia - 1][r - 1], ((((void 0 !== t) && (void 0 !== t[c])) && (void 0 !== t[c][d])) || (void 0 !== f[ia][r])) || (m(ia, r, c, d, 1), n++);
                    }
                }
            };

            function l(a, b) {
                return (((0 <= a) && (0 <= b)) && (a < p.WV_)) && (b < p.$$$);
            };

            function m(a, c, d, e, f) {
                if (!((((0 > a) || (0 > c)) || (a >= p.WV_)) || (c >= p.$$$))) {
                    w$u = Ka.w$u;
                    (void 0 === w$u[a][c]) && (w$u[a][c] = {});
                    if (void 0 !== w$u[a][c][d]) return 0;
                    w$u[a][c][d] = [];
                    w$u[a][c][d][e] = [{
                        x: (100 * c) + 50,
                        y: (100 * a) + 50
                    }];
                    if (1 === f) td.push([d, e, a, c]);
                    return 1;
                }
            };

            function n(a, c, d) {
                if (a[c])
                    for (hb = 0; hb < a[c].length; hb++)
                        if (a[c][hb])
                            for (QU = 0; QU < a[c][hb].length; QU++) a[c][hb][QU].uu = d, a[c][hb][QU].update = !1, a[c][hb][QU].time = 0, a[c][hb][QU].angle = 0;
            };
            this.mode = F.VOo;
            this.wV_ = a;
            this.wVW = 0;
            this.u0Ouu = 6;
            this.UO = [];
            this.Ww = [];
            this.Ww[t.uvw] = [];
            this.Ww[t.$QO] = [];
            this.Ww[t._$o] = [];
            this.Ww[t._Q$] = [];
            this.Ww[t.w$W] = [];
            this.Ww[t.vuu] = [];
            this.Ww[t.OW$] = [];
            this.Ww[t.vww] = [];
            this.Ww[t.$Uo] = [];
            this.Ww[t.$ww] = [];
            this.Ww[t.uU_] = [];
            this.Ww[t.vQv] = [];
            this.Ww[t.WVv] = [];
            this.Ww[t.uOV] = [];
            this.Ww[t.Q$W] = [];
            this.Ww[t.UQQ] = [];
            this.Ww[t.v$v] = [];
            this.Ww[t.W$o] = [];
            this.Ww[t.Qvo] = [];
            this.Ww[t._oU] = [];
            this.Ww[t._u$] = [];
            this.Ww[t.vv_] = [];
            this.Ww[t.Qo_] = [];
            this.Ww[t.UV$] = [];
            this.Ww[t.o0O_0] = [];
            this.Ww[t.uV$Qw] = [];
            this.Ww[t.QV_wo] = [];
            this.Ww[t.wWO] = [];
            this.Ww[t.wQW] = [];
            this.Ww[t.wuv] = [];
            this.Ww[t.VUQ] = [];
            this.Ww[t.vuQ] = [];
            this.Ww[t.uVQ] = [];
            this.Ww[t.oOQ] = [];
            this.Ww[t.$uu] = [];
            this.Ww[t.$ow] = [];
            this.Ww[t.vUu] = [];
            this.Ww[t.oV_] = [];
            this.Ww[t.wuW] = [];
            this.Ww[t.uuo] = [];
            this.Ww[t._w0] = [];
            this.Ww[t.QwW] = [];
            this.Ww[t.uQu] = [];
            this.Ww[t._OW] = [];
            this.Ww[t.OwO] = [];
            this.Ww[t.uVv] = [];
            this.Ww[t.Wvw] = [];
            this.Ww[t.$wu] = [];
            this.Ww[t.oWQ] = [];
            this.Ww[t.Wwv] = [];
            this.Ww[t.Vw_] = [];
            this.Ww[t.wvV] = [];
            this.Ww[t.u_v] = [];
            this.Ww[t.vO0] = [];
            this.Ww[t.VuQ] = [];
            this.Ww[t.wUO] = [];
            this.Ww[t.vwQ] = [];
            this.Ww[t.v$_] = [];
            this.Ww[t.owo] = [];
            this.Ww[t.$W0] = [];
            this.Ww[t.Q$o] = [];
            this.Ww[t.$VU] = [];
            this.Ww[t.UoQ] = [];
            this.Ww[t.Ww$] = [];
            this.Ww[t.UWU] = [];
            this.Ww[t.V$Q] = [];
            this.Ww[t._UO] = [];
            this.Ww[t.QW$] = [];
            this.Ww[t.OQ$] = [];
            this.Ww[t.WoV] = [];
            this.Ww[t.uV$] = [];
            this.Ww[t._W$] = [];
            this.Ww[t.$v0] = [];
            this.Ww[t.Wv$] = [];
            this.Ww[t.QvU] = [];
            this.Ww[t.oQW] = [];
            this.Ww[t.vVW] = [];
            this.Ww[t.Q$u] = [];
            this.Ww[t.W_u] = [];
            this.Ww[t.U$W] = [];
            this.Ww[t.u_V] = [];
            this.Ww[t.ouo] = [];
            this.Ww[t._vU] = [];
            this.Ww[t.V_w] = [];
            this.Ww[t.W_W] = [];
            this.Ww[t.wo$] = [];
            this.Ww[t.woW] = [];
            this.Ww[t.Qww] = [];
            this.oUU = [];
            this.WV_ = this.$$$ = 260;
            this.OQo = this.oUw = 100;
            this.w = this.$$$ * this.oUw;
            this.uQ = this.WV_ * this.OQo;
            this.uwU = new Oc.$wWQ0;
            this.wUv = [];
            this.V$ = new OQ.Uw(!1, 0, 1, 0, 1, 1);
            this.Q$w = !1;
            this.Uw_ = [];
            this.vWo = 0;
            this.wV$ = 1;
            this.uQ$ = 2;
            this.u_u = 3;
            this.__$ = 4;
            this.$oW = 10;
            this.Uw_[this.vWo] = {
                QQo: 1,
                V_: [19, 58, 43],
                u0: [4, 43, 48],
                VU0: ["#133a2b", "#042b30"]
            };
            this.Uw_[this.__$] = {
                QQo: 0,
                V_: [11, 106, 132],
                u0: [9, 55, 63],
                VU0: ["#0B6A84", "#09373F"]
            };
            this.Uw_[this.wV$] = {
                QQo: 0,
                V_: [235, 242, 240],
                u0: [19, 97, 103],
                VU0: ["#EBF2F0", "#136167"]
            };
            this.Uw_[this.uQ$] = {
                QQo: 0,
                V_: [45, 32, 23],
                u0: [3, 28, 30],
                VU0: ["#2D2017", "#031C1E"]
            };
            this.Uw_[this.u_u] = {
                QQo: 0,
                V_: [74, 74, 74],
                u0: [24, 61, 60],
                VU0: ["#4A4A4A", "#183D3C"]
            };
            this.Uw_[this.$oW] = {
                QQo: 0,
                V_: [235, 216, 166],
                u0: [9, 61, 56],
                VU0: ["#EBD8A6", "#093D38"]
            };
            this.wv$ = function(a, c, d, e, f, g) {
                this.x1 = 100 * c;
                this.y1 = 100 * d;
                this.w = 100 * e;
                this.uQ = 100 * f;
                this.x2 = 100 * (c + e);
                this.y2 = 100 * (d + f);
                this.wU = a;
                this.o_ = (void 0 === g) ? 15 : g;
            };
            this.QQw = this.OuW = this.w$o = this.oww = this.Qou = this.QO0 = this.oVw = -1000000;
            this.vv$VV = function(a) {
                var c = a.r.x,
                    d = a.r.y,
                    e = Math.floor(d / 100),
                    f = Math.floor(c / 100);
                a.QO0 = p.oVw;
                a.Qou = p.oVw;
                a.oww = p.oVw;
                a.w$o = p.oVw;
                a.QQw = p.oVw;
                a.uO_ = p.oVw;
                for (var g = 0; p.wUv[g].wU !== p.__$; g++)
                    if (p.wUv[g].wU === p.vWo) {
                        var h = p.UuQ(g, c, d);
                        a.w$o = Math.max(a.w$o, h);
                        ((0 < h) && (1 === p.WUQoU(g, c, d))) && (a.uO_ = 1);
                    } else(p.wUv[g].wU === p.wV$) ? (a.QO0 = Math.max(a.QO0, p.UuQ(g, c, d))) : ((p.wUv[g].wU === p.$oW) ? (a.Qou = Math.max(a.Qou, p.UuQ(g, c, d))) : ((p.wUv[g].wU === p.uQ$) ? (a.oww = Math.max(a.oww, p.UuQ(g, c, d))) : ((p.wUv[g].wU === p.u_u) && (a.QQw = Math.max(a.QQw, p.UuQ(g, c, d))))));
                Ka.w$u[e][f].iblk && (a.uO_ = 1);
                p.vw$Q_(f, e) ? (a.OuW = a.oVw) : (a.OuW = (Ka.w$u[e][f].wtb || ((((((0 > a.QO0) && (0 > a.oww)) && (0 > a.w$o)) && (0 > a.uO_)) && (0 > a.QQw)) && (0 > a.Qou))) ? 1 : a.oVw);
            };
            this.UUW$Q = function(a, c) {
                p.QO0 = p.oVw;
                p.Qou = p.oVw;
                p.oww = p.oVw;
                p.QQw = p.oVw;
                p.w$o = p.oVw;
                for (var d = 0; p.wUv[d].wU !== p.__$; d++)(p.wUv[d].wU === p.vWo) ? (p.w$o = Math.max(p.w$o, p.UuQ(d, a, c))) : ((p.wUv[d].wU === p.wV$) ? (p.QO0 = Math.max(p.QO0, p.UuQ(d, a, c))) : ((p.wUv[d].wU === p.$oW) ? (p.Qou = Math.max(p.Qou, p.UuQ(d, a, c))) : ((p.wUv[d].wU === p.uQ$) ? (p.oww = Math.max(p.oww, p.UuQ(d, a, c))) : ((p.wUv[d].wU === p.u_u) && (p.QQw = Math.max(p.QQw, p.UuQ(d, a, c)))))));
                p.OuW = (((((0 > p.QO0) && (0 > p.QQw)) && (0 > p.w$o)) && (0 > p.QQw)) && (0 > p.Qou)) ? 1 : p.oVw;
            };
            this.WUQoU = function(a, c, d) {
                a = p.wUv[a];
                var e = 0;
                wV0 = (a.x1 + 30) + ((0 === (a.o_ & F.Uou)) ? 150 : 0);
                var f = c - wV0;
                (((0 < (a.o_ & F.Uou)) && (0 < f)) && (320 > f)) && (e = 1);
                WOU = (a.y1 + 250) + ((0 === (a.o_ & F._Q0)) ? 150 : 0);
                f = d - WOU;
                (((0 < (a.o_ & F._Q0)) && (0 < f)) && (320 > f)) && (e = 1);
                WOV = (a.x2 + 80) + ((0 === (a.o_ & F.oOV)) ? -200 : 0);
                f = WOV - c;
                (((0 < (a.o_ & F.oOV)) && (0 < f)) && (320 > f)) && (e = 1);
                UQ0 = (a.y2 - 200) + ((0 === (a.o_ & F.ouW)) ? -200 : 0);
                f = UQ0 - d;
                (((0 < (a.o_ & F.ouW)) && (0 < f)) && (320 > f)) && (e = 1);
                return ((((c >= wV0) && (c <= WOV)) && (d >= WOU)) && (d <= UQ0)) ? e : 0;
            };
            this.UuQ = function(a, c, d) {
                a = p.wUv[a];
                wV0 = a.x1 + 30;
                WOU = a.y1 + 250;
                WOV = a.x2 + 80;
                UQ0 = a.y2 - 200;
                if ((((c >= wV0) && (c <= WOV)) && (d >= WOU)) && (d <= UQ0)) return Math.min(c - wV0, WOV - c, d - WOU, UQ0 - d);
                a = -1000000;
                (0 > (c - wV0)) ? (a = Math.max(a, c - wV0)) : ((0 > (WOV - c)) && (a = Math.max(a, WOV - c)));
                vWw = -1000000;
                if ((d < WOU) || (d > UQ0)) vWw = (0 > (d - WOU)) ? Math.max(vWw, d - WOU) : Math.max(vWw, UQ0 - d), a = ((-1000000 !== a) && (-1000000 !== vWw)) ? Math.min(a, vWw) : vWw;
                return a;
            };
            this.VU$VQ = function(a, b, c) {
                m(c, b, "isl", a, 1);
                for (var d = 0; 4 > d; d++)
                    for (var e = 0; 3 > e; e++) m(c - e, b - d, "iblk", 0), m(c + e, b - d, "iblk", 0), m(c + e, b + d, "iblk", 0), m(c - e, b + d, "iblk", 0);
                if (0 === a) {
                    for (d = 0; 2 > d; d++) m(c - d, b - 4, "iblk", 0), m(c + d, b - 4, "iblk", 0), m(c - d, b + 4, "iblk", 0), m(c + d, b + 4, "iblk", 0);
                    for (d = 0; 3 > d; d++) m(c - 3, b + d, "iblk", 0), m(c + 3, b + d, "iblk", 0), m(c - 3, b - d, "iblk", 0), m(c + 3, b - d, "iblk", 0);
                    m(c - 2, b - 4, "iblk", 0);
                    m(c - 3, b - 3, "iblk", 0);
                    m(c + 2, b + 4, "iblk", 0);
                    m(c + 3, b + 3, "iblk", 0);
                } else if (1 === a) {
                    for (d = 0; 3 > d; d++) m(c - d, b - 4, "iblk", 0), m(c + d, b - 4, "iblk", 0), m(c - d, b + 4, "iblk", 0), m(c + d, b + 4, "iblk", 0);
                    for (d = 0; 4 > d; d++) m(c - 3, b + d, "iblk", 0), m(c + 3, b + d, "iblk", 0), m(c - 3, b - d, "iblk", 0), m(c + 3, b - d, "iblk", 0);
                } else if (2 === a) {
                    for (d = 0; 2 > d; d++) m(c - d, b - 4, "iblk", 0), m(c + d, b - 4, "iblk", 0), m(c - d, b + 4, "iblk", 0), m(c + d, b + 4, "iblk", 0);
                    for (d = 0; 3 > d; d++) m(c - 3, b + d, "iblk", 0), m(c + 3, b + d, "iblk", 0), m(c - 3, b - d, "iblk", 0), m(c + 3, b - d, "iblk", 0);
                }
            };
            this.$socketO = function(a) {
                for (var c = 0;
                    (c < p.wUv.length) && (0 < a); c++) {
                    var d = p.wUv[c];
                    if (((d.wU === p.__$) && (1800 < d.w)) && (1000 < d.uQ)) {
                        var e = Math.floor((d.x1 + (d.w / 2)) / 100),
                            d = Math.floor((d.y1 + (d.uQ / 2)) / 100);
                        p.VU$VQ(a % 3, e, d);
                        for (var f = 0; 3 > f; f++) {
                            var g = (d - 2) + Math.floor(4 * p.uwU.get()),
                                h = (e - 3) + Math.floor(6 * p.uwU.get());
                            (void 0 === Ka.w$u[g][h].s) && m(g, h, "plm", f);
                            g = (d - 2) + Math.floor(4 * p.uwU.get());
                            h = (e - 3) + Math.floor(6 * p.uwU.get());
                            (void 0 === Ka.w$u[g][h].plm) && m(g, h, "s", f);
                        }
                        g = (d - 2) + Math.floor(4 * p.uwU.get());
                        h = (e - 3) + Math.floor(6 * p.uwU.get());
                        ((void 0 === Ka.w$u[g][h].plm) && (void 0 === Ka.w$u[g][h].s)) && m(g, h, "p", 0, 1);
                        a--;
                    }
                }
            };
            this.QvWoO = function(a) {
                p.uwU.UvU(a);
                for (var e = 0;;) {
                    e++;
                    if (10000 < e) return;
                    p.wUv = [];
                    ((0 !== p.wVW) || (((p.mode !== F.Uov) && (p.mode !== F._Vo)) && (p.mode !== F.VOo))) || (p.wVW = wj);
                    if (p.mode === F.wQ_) p.wUv.push(new p.wv$(p.vWo, 2, 2, 80, 80, 15));
                    else if (p.mode === F.U$O) p.wUv.push(new p.wv$(p.vWo, 2, 2, 150, 150, 15));
                    else if (((0 !== p.wVW) && (0 < p.wVW.length)) && (3 < p.wVW[0].length))
                        for (a = 0; a < p.wVW.length; a++) {
                            var f = p.wVW[a];
                            if (0 === f[0]) {
                                var g = F.vWo;
                                switch (f[1]) {
                                    case "FOREST":
                                        g = p.vWo;
                                        break;
                                    case "WINTER":
                                        g = p.wV$;
                                        break;
                                    case "DESERT":
                                        g = p.$oW;
                                        break;
                                    case "LAVA":
                                        g = p.uQ$;
                                        break;
                                    case "DRAGON":
                                        g = p.u_u;
                                }
                                p.wUv.push(new p.wv$(g, f[2], f[3], f[4], f[5], f[6], f[7]));
                            } else break;
                        } else if (0 !== p.wVW) {
                            for (a = 0; a < p.wVW.length; a++) {
                                f = p.wVW[a];
                                g = F.vWo;
                                switch (f[0]) {
                                    case "FOREST":
                                        g = p.vWo;
                                        break;
                                    case "WINTER":
                                        g = p.wV$;
                                        break;
                                    case "DESERT":
                                        g = p.$oW;
                                        break;
                                    case "LAVA":
                                        g = p.uQ$;
                                        break;
                                    case "DRAGON":
                                        g = p.u_u;
                                }
                                for (var l = f[1], f = f[2], n = 10 * (a + 1), q = 0; q < n; q++) {
                                    var ia;
                                    b: {
                                        ia = g;
                                        for (var r = f, t = l + Math.floor(0 * p.uwU.get()), r = r + Math.floor(0 * p.uwU.get()), z = 10 + Math.floor(p.uwU.get() * ((p.$$$ - t) - 20)), A = 10 + Math.floor(p.uwU.get() * ((p.WV_ - r) - 20)), B = z + t, C = A + r, E = 0; E < p.wUv.length; E++) {
                                            var D = p.wUv[E];
                                            if (1 === OQ.vUoQQ(z, B, A, C, (D.x1 / 100) - 8, (D.x2 / 100) + 8, (D.y1 / 100) - 8, (D.y2 / 100) + 8)) {
                                                ia = 0;
                                                break b;
                                            }
                                        }
                                        p.wUv.push(new p.wv$(ia, z, A, t, r, 15));ia = 1;
                                    }
                                    if (1 === ia) break;
                                }
                                f = (q === n) ? 0 : 1;
                                if (0 === f) break;
                            }
                            if (a !== p.wVW.length) continue;
                        } break;
                }
                OWwwU();
                e = [];
                for (a = 0; a < p.WV_; a++)
                    for (e[a] = Array(p.$$$), f = 0; f < p.$$$; f++) e[a][f] = 0;
                for (a = 0; a < p.wUv.length; a++)
                    for (f = p.wUv[a], n = f.x2 / 100, q = f.y2 / 100, g = f.x1 / 100; g <= n; g++)
                        for (l = f.y1 / 100; l <= q; l++) e[l][g] = 1;
                for (l = 0; l < p.WV_; l++)
                    for (g = 0; g < p.$$$; g++)
                        if (0 === e[l][g]) {
                            a = e;
                            f = g;
                            n = l;
                            q = f;
                            for (ia = n; ia < p.WV_; ia++) {
                                for (t = f; t < p.$$$; t++) {
                                    (ia === n) && (q = Math.max(t, q));
                                    if (t > q) break;
                                    if (1 === a[ia][t]) break;
                                    a[ia][t] = 1;
                                }
                                if (t < q) break;
                            }
                            p.wUv.push(new p.wv$(p.__$, f, n, (q - f) + 1, ia - n, 15));
                        } Ka = {
                    w: p.$$$,
                    uQ: p.WV_,
                    w$u: []
                };
                for (a = 0; a < p.WV_; a++) Ka.w$u[a] = [];
                if (((0 !== p.wVW) && (0 < p.wVW.length)) && (3 < p.wVW[0].length))
                    for (a = 0; a < p.wVW.length; a++) f = p.wVW[a], ("isl" === f[1]) && p.VU$VQ(f[2], f[3], f[4]);
                else p.$socketO(p.u0Ouu);
                if (((0 !== p.wVW) && (0 < p.wVW.length)) && (3 < p.wVW[0].length)) {
                    e = [];
                    for (a = 0; a < p.wVW.length; a++) f = p.wVW[a], (1 === f[0]) && (("r" === f[1]) ? (m(f[3], f[2], "wtb", 0, 1), e.push([f[3], f[2], f[4]])) : m(f[4], f[3], f[1], f[2], f[5]));
                    d(0, e);
                } else
                    for (a = 0; a < p.wUv.length; a++)
                        if (f = p.wUv[a], p.mode === F.U$O) {
                            if (f.wU === p.vWo) {
                                e = a;
                                f = f.w / 10000;
                                for (g = 0; 6 > g; g++) k(e, "t", g, Math.floor(80 * f));
                                for (g = 0; 4 > g; g++) k(e, "b", g, Math.floor(80 * f));
                                for (g = 0; 3 > g; g++) k(e, "s", g, Math.floor(50 * f));
                                l = [];
                                for (g = 0; 6 > g; g++) h(e, l);
                                d(e, l);
                                k(e, "p", 0, Math.floor(28 * f));
                                for (g = 0; 3 > g; g++) k(e, "g", g, Math.floor(7 * f));
                                for (g = 0; 3 > g; g++) k(e, "d", g, Math.floor(2 * f));
                                for (g = 0; 3 > g; g++) k(e, "a", g, Math.floor(1 * f));
                                for (g = 0; 3 > g; g++) k(e, "m", g, Math.floor(1 * f));
                                k(e, "a", 0, Math.floor(1 * f));
                                c(e);
                            }
                        } else {
                            if (f.wU === p.vWo) {
                                e = a;
                                g = f.w / 10000;
                                for (l = 0; 6 > l; l++) k(e, "t", l, Math.floor(20 * g));
                                for (l = 0; 4 > l; l++) k(e, "b", l, Math.floor(20 * g));
                                for (l = 0; 3 > l; l++) k(e, "s", l, Math.floor(20 * g));
                                l = [];
                                h(e, l);
                                d(e, l);
                                k(e, "p", 0, Math.floor(24 * g));
                                for (l = 0; 3 > l; l++) k(e, "g", l, Math.floor(5 * g));
                                if (p.mode === F.wQ_) {
                                    for (l = 0; 3 > l; l++) k(e, "d", l, Math.floor(3 * g));
                                    for (l = 0; 3 > l; l++) k(e, "a", l, Math.floor(2 * g));
                                }
                                c(e);
                            }
                            if (f.wU === p.uQ$) {
                                e = a;
                                g = f.w / 10000;
                                l = 80 * g;
                                n = e;
                                q = p.wUv[n];
                                for (t = ia = 0;
                                    (ia < l) && (10000 > t); t++)
                                    if (r = q.y1 + (p.uwU.get() * q.uQ), z = q.x1 + (p.uwU.get() * q.w), r = Math.floor(r / 100), z = Math.floor(z / 100), !(600 > p.UuQ(n, (100 * z) + 50, (100 * r) + 50))) {
                                        A = 1;
                                        for (B = r - 4;
                                            (1 === A) && (B <= (r + 4)); B++)
                                            for (C = z - 4;
                                                (1 === A) && (C <= (z + 4)); C++)(void 0 !== Ka.w$u[B][C]) && (A = 0);
                                        (0 !== A) && (m(r, z, "la", ia % 6, 0), ia++);
                                    } for (l = 0; 3 > l; l++) k(e, "s", l, Math.floor(12 * g));
                                for (l = 0; 3 > l; l++) k(e, "g", l, Math.floor(6 * g));
                                for (l = 0; 3 > l; l++) k(e, "re", l, Math.max(1, Math.floor(1 * g)), 0.2);
                                for (l = 0; 3 > l; l++) k(e, "a", l, Math.max(1, Math.floor(2 * g)));
                                c(e);
                            }
                            if (f.wU === p.wV$) {
                                e = a;
                                g = f.w / 10000;
                                for (l = 0; 3 > l; l++) k(e, "s", l, Math.floor(18 * g));
                                for (l = 0; 3 > l; l++) k(e, "f", l, Math.floor(24 * g));
                                for (l = 0; 3 > l; l++) k(e, "d", l, Math.max(1, Math.floor(2 * g)), 0.3);
                                for (l = 0; 3 > l; l++) k(e, "g", l, Math.floor(6 * g));
                                c(e);
                            }
                            if (f.wU === p.$oW) {
                                e = a;
                                g = f.w / 10000;
                                for (l = 0; 3 > l; l++) k(e, "s", l, Math.floor(12 * g));
                                for (l = 0; 3 > l; l++) k(e, "m", l, Math.max(1, Math.floor(1 * g)), 0.2);
                                k(e, "c", 0, Math.floor(36 * g));
                                l = g = [];
                                t = p.wUv[e];
                                n = Math.floor(t.y1 / 100);
                                q = Math.floor(t.x1 / 100);
                                ia = Math.floor(t.uQ / 100);
                                t = Math.floor(t.w / 100);
                                n += Math.floor(ia / 2);
                                q += Math.floor(t / 2);
                                for (ia = 0; 3 > ia; ia++) t = Math.floor((n - 3) + (6 * p.uwU.get())), r = Math.floor((q - 3) + (6 * p.uwU.get())), m(t, r, "plm", ia, 1);
                                for (ia = 0; 80 > ia; ia++)
                                    if (t = Math.floor((n - 3) + (6 * p.uwU.get())), r = Math.floor((q - 3) + (6 * p.uwU.get())), 1 === m(t, r, "wtb", 0, 1)) l.push([t, r, 0]);
                                d(e, g);
                            }
                            if (f.wU === p.u_u) {
                                f = a;
                                for (e = 0; 3 > e; e++) k(f, "s", e, 15);
                                for (e = 0; 3 > e; e++) k(f, "a", e, 1);
                                for (e = 0; 3 > e; e++) k(f, "d", e, 1);
                                c(f);
                            }
                        } eb("isl", 1);
                eb("wtb", 20);
                eb("la", 1);
                eb("c", 1);
                eb("s", 1);
                eb("f", 1);
                eb("p", 1);
                eb("g", 1);
                eb("d", 1);
                eb("a", 1);
                eb("re", 1);
                eb("m", 1);
                td = [];
                p.o0vv_(Ka);
            };
            this.uvO = m;
            this.o0vv_ = function(a) {
                for (var c = 0; c < this.WV_; c++)
                    for (var d = 0; d < this.$$$; d++)
                        if (a.w$u[c] || (a.w$u[c] = []), a.w$u[c][d]) {
                            var e = a.w$u[c][d];
                            if (e.de && (0 < e.de.length))
                                for (var f = 0; f < e.de.length; f++)
                                    if (e.de[f] && (0 < e.de[f].length))
                                        if (e.de = e.de[f][0], (41 <= f) && (49 >= f)) {
                                            e.de.scale = 3;
                                            var g = Math.floor((3 * Math.random()) + 1);
                                            e.de.QQ = [];
                                            for (var h = 0; h < g; h++) e.de.QQ.push({
                                                x: (120 * Math.random()) - 60,
                                                y: (120 * Math.random()) - 60,
                                                angle: (Math.random() * Math.PI) * 2,
                                                VoO: 41 + Math.floor(9 * Math.random())
                                            });
                                        } else if ((19 <= f) && (26 >= f))
                                for (e.de.scale = 3, g = Math.floor((3 * Math.random()) + 1), e.de.QQ = [], h = 0; h < g; h++) e.de.QQ.push({
                                    x: (120 * Math.random()) - 60,
                                    y: (120 * Math.random()) - 60,
                                    angle: (Math.random() * Math.PI) * 2,
                                    VoO: 19 + Math.floor(8 * Math.random())
                                });
                            else((15 >= f) || ((27 <= f) && (40 >= f))) ? (e.de.angle = 0, e.de.scale = 2) : (e.de.angle = (Math.random() * Math.PI) * 2, e.de.scale = 1), e.de.VoO = f;
                            n(e, "p", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "t", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "s", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "g", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "d", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "b", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "f", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "sw", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "gw", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "dw", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "a", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "cs", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "plm", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "re", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "c", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                            n(e, "m", new OQ.Uw(!1, 1, 1, 0, 10, 10));
                        } else a.w$u[c][d] = [];
            };
            this.time = e._v;
            this.OOO = {
                translate: {
                    x: 0,
                    y: 0
                },
                UvU: 0,
                ow0: 0,
                now: 0
            };
            this.ooVOU = function() {
                this.oUU = [];
                this.Ww[t.uvw] = [];
                this.Ww[t.oOQ] = [];
                this.Ww[t.$uu] = [];
                this.Ww[t.$ow] = [];
                this.Ww[t.vUu] = [];
                this.Ww[t.oV_] = [];
                this.Ww[t.wuW] = [];
                this.Ww[t.uuo] = [];
                this.Ww[t._w0] = [];
                this.Ww[t.QwW] = [];
                this.Ww[t.uQu] = [];
                this.Ww[t.OQ$] = [];
                this.Ww[t.UWU] = [];
                this.Ww[t.WoV] = [];
                this.Ww[t.uV$] = [];
                this.Ww[t._W$] = [];
                this.Ww[t.$v0] = [];
                this.Ww[t.Wv$] = [];
                this.Ww[t.QvU] = [];
                this.Ww[t.oQW] = [];
                this.Ww[t.vVW] = [];
                this.Ww[t.Q$u] = [];
                this.Ww[t.W_u] = [];
                this.Ww[t.U$W] = [];
                this.Ww[t.u_V] = [];
                this.Ww[t.ouo] = [];
                this.Ww[t._vU] = [];
                this.Ww[t.V_w] = [];
                this.Ww[t.W_W] = [];
                this.Ww[t.wo$] = [];
                this.Ww[t._OW] = [];
                this.Ww[t.OwO] = [];
                this.Ww[t.uVv] = [];
                this.Ww[t.Wvw] = [];
                this.Ww[t.$wu] = [];
                this.Ww[t.oWQ] = [];
                this.Ww[t.Wwv] = [];
                this.Ww[t.Vw_] = [];
                this.Ww[t.wvV] = [];
                this.Ww[t.u_v] = [];
                this.Ww[t.vO0] = [];
                this.Ww[t.VuQ] = [];
                this.Ww[t.wUO] = [];
                this.Ww[t.vwQ] = [];
                this.Ww[t.v$_] = [];
                this.Ww[t.owo] = [];
                this.Ww[t.$W0] = [];
                this.Ww[t.Q$o] = [];
                this.Ww[t.$VU] = [];
                this.Ww[t.UoQ] = [];
                this.Ww[t.Ww$] = [];
                this.Ww[t.UWU] = [];
                this.Ww[t.V$Q] = [];
                this.Ww[t._UO] = [];
                this.Ww[t.QW$] = [];
                this.Ww[t.$QO] = [];
                this.Ww[t._$o] = [];
                this.Ww[t._Q$] = [];
                this.Ww[t.w$W] = [];
                this.Ww[t.vuu] = [];
                this.Ww[t.OW$] = [];
                this.Ww[t.vww] = [];
                this.Ww[t.$Uo] = [];
                this.Ww[t.$ww] = [];
                this.Ww[t.uU_] = [];
                this.Ww[t.vQv] = [];
                this.Ww[t.WVv] = [];
                this.Ww[t.uOV] = [];
                this.Ww[t.Q$W] = [];
                this.Ww[t.UQQ] = [];
                this.Ww[t.v$v] = [];
                this.Ww[t.W$o] = [];
                this.Ww[t.Qvo] = [];
                this.Ww[t.wQQ] = [];
                this.Ww[t.Vvu] = [];
                this.Ww[t._oU] = [];
                this.Ww[t._u$] = [];
                this.Ww[t.vv_] = [];
                this.Ww[t.Qo_] = [];
                this.Ww[t.UV$] = [];
                this.Ww[t.o0O_0] = [];
                this.Ww[t.uV$Qw] = [];
                this.Ww[t.QV_wo] = [];
                this.Ww[t.wWO] = [];
                this.Ww[t.wQW] = [];
                this.Ww[t.wuv] = [];
                this.Ww[t.VUQ] = [];
                this.Ww[t.vuQ] = [];
                this.Ww[t.uVQ] = [];
                this.Ww[t.woW] = [];
                this.Ww[t.Qww] = [];
            };
           this.WO$uO = function(a) {
            if (this.oUU[a]) {
                $Q$ = this.oUU[a].type;
                this.oUU[a] = null;
                for (var c = this.Ww[$Q$], d = 0; d < c.length; d++)
                    if (c[d].v$o == a) {
                        c.splice(d, 1);
                        break;
                    }
            }
        };
            this.UQwOu = function(a, c) {
                for (var d = 0; d < this.Ww[t.UWU].length; d++) {
                    var e = this.Ww[t.UWU][d];
                    if ((Math.floor(e.x / 100) === c) && (Math.floor(e.y / 100) === a)) return 1;
                }
                return 0;
            };
            this.vw$Q_ = function(a, c) {
                for (var d = 0; d < this.Ww[t.OQ$].length; d++) {
                    var e = this.Ww[t.OQ$][d];
                    if ((Math.floor(e.x / 100) == a) && (Math.floor(e.y / 100) == c)) return !0;
                }
                return !1;
            };
            this.u__ = function(a) {
                for (var c = 0; c < a.length; c++) {
                    _W = a[c];
                    if (_W.angle != _W.U$Q) {
                        var d = 2 * Math.PI;
                        _W.angle = (_W.angle + d) % d;
                        _W.U$Q = (_W.U$Q + d) % d;
                        if (_W.angle != _W.U$Q) {
                            var g = _W.U$Q - _W.angle,
                                h = Math.abs(g);
                            (h > Math.PI) && (h = (2 * Math.PI) - h);
                            h = (((h / Math.PI) * 3) * F.oW_OW) * O;
                            _W.angle = (g > Math.PI) ? (_W.angle - h) : ((g < -Math.PI) ? (_W.angle + h) : ((0 > g) ? (_W.angle - h) : (_W.angle + h)));
                            _W.angle = (_W.angle + d) % d;
                            (Math.abs(_W.angle - _W.U$Q) < h) && (_W.angle = _W.U$Q);
                        }
                    }
                    Math.floor(_W.r.y / 100);
                    Math.floor(_W.r.x / 100);
                    if ((_W.x != _W.r.x) || (_W.y != _W.r.y))(_W.action & Q.IDLE) && (_W.action -= Q.IDLE), _W.action |= Q.oQU, d = OQ.$oVvo(_W, _W.r) + Math.PI, d = OQ.wQU$U(O * _W.UUv, d), (OQ.Q0W0_(d) < OQ.Q0W0_(OQ._vw0_(_W, _W.r))) ? OQ.vUu00(_W, d) : ((_W.action & Q.oQU) && (_W.action -= Q.oQU), _W.action |= Q.IDLE, OQ._uwOQ(_W.r, _W));
                    if (_W.QW0) {
                        g = _W.bubbles;
                        d = g.length;
                        if ((0 === d) || ((d < e.u0uwO) && (0.95 > g[d - 1].wOU))) g.push({
                            id: Math.floor(Math.random() * u[e.$vv][0].length),
                            x: Math.floor((_W.x + (80 * Math.random())) - 40),
                            y: Math.floor((_W.y + (80 * Math.random())) - 40),
                            wOU: 1
                        });
                        for (var k = 0; k < d; k++) g[k].wOU = Math.max(0, g[k].wOU - O);
                        for (k = 0; k < d; k++)
                            if (0 === g[k].wOU) {
                                g.splice(k, 1);
                                break;
                            }
                    }
                    g = 0;
                    if (_W.v$Q && G.WVU) {
                        h = _W.wow;
                        d = h.length;
                        if ((((((((0 < _W.OuW) && (_W.QWQ !== f.$Uo)) && (_W.QWQ !== f.$ww)) && (_W.QWQ !== f.vOv)) && (_W.QWQ !== f.uU_)) && (_W.QWQ !== f.woU)) && !_W.QW0) && (g = 1, (0 === d) || (OQ.U_o(h[d - 1], _W) > e.v_WoO))) {
                            var k = -_W.angle,
                                l = (45 * Math.sin(k)) * z,
                                m = (45 * Math.cos(k)) * z;
                            h.push({
                                x: _W.x + l,
                                y: _W.y + m,
                                r: 8,
                                alpha: 0.8
                            });
                            h.push({
                                x: _W.x - l,
                                y: _W.y - m,
                                r: 8,
                                alpha: 0.8
                            });
                            h.push({
                                x: _W.x,
                                y: _W.y,
                                r: 24,
                                alpha: 1
                            });
                        }
                        for (k = 0; k < d; k++) h[k].alpha = Math.max(0, h[k].alpha - (O / 2.2)), h[k].r += 20 * O;
                        if ((0 < h.length) && (0 === h[0].alpha)) h.splice(0, 1);
                        var h = _W._o0,
                            d = h.length,
                            k = -1,
                            l = Math.max(0, Math.sign(_W.uO_)),
                            p = Math.max(0, Math.sign(_W.QO0));
                        Math.max(0, Math.sign(_W.Qou));
                        var m = Math.max(0, Math.sign(_W.oww)),
                            w = Math.max(0, Math.sign(_W.QQw));
                        ((0 < _W.uO_) || (0 < _W.Qou)) ? (k = e.OUVuV) : ((0 < _W.QQw) ? (k = e.ow_$$) : ((0 < _W.QO0) ? (k = e.$OoQU) : ((0 < _W.oww) && (k = e.uowOo))));
                        ((_W.QWQ === f.w$U) && (1 === (((l | p) | m) | w))) ? (k = e.O_U, p = _W.Uu$ - (Math.PI / 2), m = 15, w = 11, l = e.ow$O$) : (((_W.QWQ === f.OW$) && (1 === (((l | p) | m) | w))) ? (k = e.$OV, p = _W.Uu$ - (Math.PI / 2), m = 21, w = 16, l = e.ow$O$) : (((_W.QWQ === f.vww) && (1 === (((l | p) | m) | w))) ? (k = e.U_$, p = _W.Uu$ - (Math.PI / 2), l = 50 * Math.random(), m = 10 + l, w = 0 + l, l = 0.9 * e.ow$O$) : (p = _W.angle, m = 15, w = 11, l = e.ow$O$)));
                        if ((((((_W.QWQ !== f.$Uo) && (_W.QWQ !== f.$ww)) && (_W.QWQ !== f.woU)) && (_W.QWQ !== f.uU_)) && (_W.QWQ !== f.vOv)) && !_W.QW0)
                            if (_W.QWQ === f.uQW) {
                                if ((0 === d) || (OQ.U_o(h[d - 1], _W) > e.V$UQo)) h.push({
                                    x: _W.x,
                                    y: _W.y,
                                    angle: _W.Uu$,
                                    alpha: 1,
                                    id: e.ovO
                                });
                            } else(((-1 != k) && (0 === g)) && ((0 === d) || (OQ.U_o(h[d - 1], _W) > l))) && (_W.uWVOO++, ((1 < Math.abs(_W.x - _W.r.x)) && (1 < Math.abs(_W.y - _W.r.y))) ? ((((_W.r.x > _W.x) && (_W.r.y < _W.y)) || ((_W.r.x < _W.x) && (_W.r.y > _W.y))) ? ((_W.uWVOO % 2) ? (l = -w * z, m = -w * z) : (m = w * z, l = w * z)) : ((_W.uWVOO % 2) ? (l = w * z, m = -w * z) : (m = w * z, l = -w * z))) : ((_W.uWVOO % 2) ? (l = (Math.sin(p) * m) * z, m = (Math.cos(p) * m) * z) : (l = (-Math.sin(p) * m) * z, m = (-Math.cos(p) * m) * z)), h.push({
                                x: _W.x + l,
                                y: _W.y + m,
                                angle: p + (Math.PI / 2),
                                alpha: 1,
                                id: k
                            }));
                        for (k = 0; k < d; k++) h[k].alpha = (h[k].id === e.ovO) ? Math.max(0, h[k].alpha - (1.5 * O)) : Math.max(0, h[k].alpha - (O / 2.85));
                        if ((0 < h.length) && (0 === h[0].alpha)) h.splice(0, 1);
                    }
                }
            };
            this.update = function() {
                this.u__(this.Ww[t.uvw]);
                this.u__(this.Ww[t._$o]);
                this.u__(this.Ww[t._Q$]);
                this.u__(this.Ww[t.w$W]);
                this.u__(this.Ww[t.vuu]);
                this.u__(this.Ww[t.OW$]);
                this.u__(this.Ww[t.vww]);
                this.u__(this.Ww[t.$Uo]);
                this.u__(this.Ww[t.$ww]);
                this.u__(this.Ww[t.uU_]);
                this.u__(this.Ww[t.uVQ]);
                this.u__(this.Ww[t.uOV]);
                this.u__(this.Ww[t.Q$W]);
                this.u__(this.Ww[t.UQQ]);
                this.u__(this.Ww[t.v$v]);
                this.u__(this.Ww[t.W$o]);
                this.u__(this.Ww[t.Qvo]);
                this.u__(this.Ww[t.wQQ]);
                this.u__(this.Ww[t.Vvu]);
                this.u__(this.Ww[t._oU]);
                this.u__(this.Ww[t.vv_]);
                this.u__(this.Ww[t.vQv]);
                this.u__(this.Ww[t.WVv]);
                this.u__(this.Ww[t._u$]);
            };
            this.Oo = [];
            this.Oo[e.u_W] = new OQ.Uw(!1, 1, 1.05, 1, 0.008, 0.008);
            this.Oo[e.W$O] = new OQ.Uw(!1, 1, 1.08, 1, 0.006, 0.006);
            this.Oo[e.$QU] = new OQ.Uw(!1, 1, 1.02, 1, 0.008, 0.008);
            this.Oo[e.$vu] = new OQ.Uw(!1, 1, 1.08, 1, 0.006, 0.006);
            this.uu_ = [];
            this.uu_[0] = new OQ.Uw(!1, 0.1, 1, 0, 0.6, 0.6);
            this.uu_[1] = new OQ.Uw(!1, 0.4, 1, 0, 0.6, 0.6);
            this.uu_[2] = new OQ.Uw(!1, 0.3, 1, 0, 0.6, 0.6);
            this.uu_[3] = new OQ.Uw(!1, 0.8, 1, 0, 0.6, 0.6);
            this.uu_[4] = new OQ.Uw(!1, 0.3, 1, 0, 0.6, 0.6);
            this.uu_[5] = new OQ.Uw(!1, 0.8, 1, 0, 0.6, 0.6);
            this.uu_[6] = new OQ.Uw(!1, 0.5, 1, 0, 0.6, 0.6);
            this.uu_[7] = new OQ.Uw(!1, 0.9, 1, 0, 0.6, 0.6);
            this.uu_[8] = new OQ.Uw(!1, 0.6, 1, 0, 0.6, 0.6);
            this.uu_[9] = new OQ.Uw(!1, 0.2, 1, 0, 0.6, 0.6);
            this.uu_[10] = new OQ.Uw(!1, 0.6, 1, 0, 0.6, 0.6);
            this.uu_[11] = new OQ.Uw(!1, 0.4, 1, 0, 0.6, 0.6);
            this.uu_[12] = new OQ.Uw(!1, 0.8, 1, 0, 0.6, 0.6);
            this.uu_[13] = new OQ.Uw(!1, 0.2, 1, 0, 0.6, 0.6);
            this.uu_[14] = new OQ.Uw(!1, 0.7, 1, 0, 0.6, 0.6);
        };

        function mc(a, b, e, d) {
            a = (2147483587 + (2147483629 * (37418 + a))) % 2147483647;
            b ^= 57623;
            e = (~(e & 40280) & e) | (~(e & 40280) & 40280);
            d = (~(d & 24601) & d) | (~(d & 24601) & 24601);
            var c = pd(a, b);
            pd(e, d);
            kd(a, b, e, d, a);
            a = (~(43902 & c) & 43902) | (~(43902 & c) & c);
            return (8862 | a) & ~(8862 & a);
        };

        function jf(a, e, f, d) {
            this.id = a;
            this.UUv = 8 * (a + 5);
            this.wOU = ka / 1366;
            this.x = e;
            this.y = f;
            this.c = Math.cos(d);
            this.$vO = Math.sin(d);
            this.alpha = 0;
        };

        function xj() {
            function a() {
                this.seed = 1;
                this.W_w = 2;
                this._Uu = 3;
                this.wv$$U = 1;
                this.O$$Uo = 2;
                this.wuUVV = 3;
                this.o00 = function(a) {
                    this.seed = 2 + Math.floor(Math.random() * F.vUu);
                };
                this.VOw = function(a) {
                    this.W_w = 2 + Math.floor(Math.random() * F.vUu);
                };
                this.$_UWO = function(a) {
                    this._Uu = 2 + Math.floor(Math.random() * F.vUu);
                };
                this.WWvOQ = function(a) {
                    this.wv$$U = 2 + Math.floor(Math.random() * F.vUu);
                };
                this.u_$QW = function(a) {
                    this.O$$Uo = 2 + Math.floor(Math.random() * F.vUu);
                };
                this.VOW$O = function(a) {
                    this.wuUVV = 2 + Math.floor(Math.random() * F.vUu);
                };
                this.ov0 = function(a, c, f, g, h, k, w) {
                    for (var n = 1; n < w;) {
                        var q = (n * f) % _WQVw,
                            ia = $OW[q];
                        if (0.1 > ia) r += 50, n += 50;
                        else {
                            var r = Math.floor((ia * g) + h);
                            if ((n > k) && (n < w)) {
                                var ia = (0.5 < Math.random()) ? (-10 * O) : (10 * O),
                                    t = r * c;
                                this.wOQuo[q] = Math.max(-F.O$_, Math.min(F.O$_, this.wOQuo[q] + ia));
                                this.UuUWo[q] = Math.max(-F.Vv0, Math.min(F.Vv0, this.UuUWo[q] + ia));
                                (0 < t) && (l.beginPath(), l.arc((n + m.VQ.x) + this.UuUWo[q], (a + this.wOQuo[q]) - (0.8 * F.O$_), t, 0, 2 * Math.PI), l.fillStyle = p.Q$w ? pa(83, 156, 160, 236, 247, 249, p.time ? (1 - p.V$.o_) : p.V$.o_) : e.$oWV$[p.time], l.fill());
                            }
                            n += 2 * r;
                        }
                    }
                };
                this.Vo0 = function(a, c, f, g, h, k, w) {
                    for (var n = 1; n < w;) {
                        var q = (n * f) % _WQVw,
                            ia = $OW[q];
                        if (0.1 > ia) r += 50, n += 50;
                        else {
                            var r = Math.floor((ia * g) + h);
                            if ((n > k) && (n < w)) {
                                var ia = (0.5 < Math.random()) ? (-10 * O) : (10 * O),
                                    t = r * c;
                                this.OOQ[q] = Math.max(-F.O$_, Math.min(F.O$_, this.OOQ[q] + ia));
                                this.OuU[q] = Math.max(-F.Vv0, Math.min(F.Vv0, this.OuU[q] + ia));
                                (0 < t) && (l.beginPath(), l.arc((a + this.OOQ[q]) - (0.8 * F.O$_), (n + m.VQ.y) + this.OuU[q], t, 0, 2 * Math.PI), l.fillStyle = p.Q$w ? pa(83, 156, 160, 236, 247, 249, p.time ? (1 - p.V$.o_) : p.V$.o_) : e.$oWV$[p.time], l.fill());
                            }
                            n += 2 * r;
                        }
                    }
                };
                this.uWoo$ = function(a, c, e, f, g, h) {
                    g -= 30;
                    h += 30;
                    var k = -((((e - F.vUo) - f) - 2) / F.$O$);
                    (0 === k) && this.$_UWO();
                    l.globalAlpha = OQ.wuQ(k);
                    this.ov0(e, k, this._Uu, 18, 16, g, h);
                    l.globalAlpha = 1;
                    k = -((((a - F.v_U) - f) + 500) / F.$0v);
                    (0 === k) && this.o00();
                    l.globalAlpha = OQ.wuQ(k);
                    this.ov0(a, k, this.seed, 12, 10, g, h);
                    l.globalAlpha = 1;
                    (-1 !== c) && (k = -((((c - F.WQ0) - f) + 698) / F.wQU), (0.01 >= k) && this.VOw(), l.globalAlpha = OQ.wuQ(k), this.ov0(c, k, this.W_w, 6, 6, g, h), l.globalAlpha = 1);
                };
                this.WUO$U = function(a, c, e, f, g, h) {
                    g -= 30;
                    h += 30;
                    var k = -((((-e + F.vUo) + f) + 2) / F.$O$);
                    (0 === k) && this.$_UWO();
                    l.globalAlpha = OQ.wuQ(k);
                    this.ov0(e, k, this._Uu, 18, 16, g, h);
                    l.globalAlpha = 1;
                    k = -(((-a + F.v_U) + f) / F.$0v);
                    (0 === k) && this.o00();
                    l.globalAlpha = OQ.wuQ(k);
                    this.ov0(a, k, this.seed, 12, 10, g, h);
                    l.globalAlpha = 1;
                    (-1 !== c) && (k = -(((-c + F.WQ0) + f) / F.wQU), (0.01 >= k) && this.VOw(), l.globalAlpha = OQ.wuQ(k), this.ov0(c, k, this.W_w, 6, 6, g, h), l.globalAlpha = 1);
                };
                this.QoVvO = function(a, c, e, f, g, h) {
                    g -= 30;
                    h += 30;
                    var k = -((((-e + F.vUo) + f) + 2) / F.$O$);
                    (0 === k) && this.$_UWO();
                    l.globalAlpha = OQ.wuQ(k);
                    this.Vo0(e, k, this._Uu, 18, 16, g, h);
                    l.globalAlpha = 1;
                    k = -(((-a + F.v_U) + f) / F.$0v);
                    (0 === k) && this.o00();
                    l.globalAlpha = OQ.wuQ(k);
                    this.Vo0(a, k, this.seed, 12, 10, g, h);
                    l.globalAlpha = 1;
                    (-1 !== c) && (k = -(((-c + F.WQ0) + f) / F.wQU), (0.01 >= k) && this.VOw(), l.globalAlpha = OQ.wuQ(k), this.Vo0(c, k, this.W_w, 6, 6, g, h), l.globalAlpha = 1);
                };
                this._uWv_ = function(a, c, e, f, g, h) {
                    g -= 30;
                    h += 30;
                    var k = -((((e - F.vUo) - f) - 2) / F.$O$);
                    (0 === k) && this.$_UWO();
                    l.globalAlpha = OQ.wuQ(k);
                    this.Vo0(e, k, this._Uu, 18, 16, g, h);
                    l.globalAlpha = 1;
                    k = -((((a - F.v_U) - f) + 500) / F.$0v);
                    (0 === k) && this.o00();
                    l.globalAlpha = OQ.wuQ(k);
                    this.Vo0(a, k, this.seed, 12, 10, g, h);
                    l.globalAlpha = 1;
                    (-1 !== c) && (k = -((((c - F.WQ0) - f) + 698) / F.wQU), (0.01 >= k) && this.VOw(), l.globalAlpha = OQ.wuQ(k), this.Vo0(c, k, this.W_w, 6, 6, g, h), l.globalAlpha = 1);
                };
                this.w1 = {
                    r: new OQ.Ou_(OQ._W$uU, 0, 10, F.oQ$, F.oQ$, F.$O$),
                    QU: new OQ.Ou_(OQ.VvU$o, 0, 10, F.$O$, F.$O$, F.oQ$)
                };
                this.w2 = {
                    r: new OQ.Ou_(OQ.$o$Wu, 0, 10, F.U_vv0, F.U_vv0, F.$0v),
                    QU: new OQ.Ou_(OQ.wuQ, 0, 10, F.$0v, F.$0v, F.U_vv0)
                };
                this.w3 = {
                    r: new OQ.Ou_(OQ.UQ$0U, 0, 10, F.V_W_$, F.V_W_$, F.wQU),
                    QU: new OQ.Ou_(OQ.wuQ, 0, 10, F.wQU, F.wQU, F.V_W_$)
                };
                this._QVvQ = function(a) {
                    return (a.r.x === a.r.$_V) ? ((a.QU.x === a.QU.$_V) ? a.r : a.QU) : a.r;
                };
                this.wU = function(a) {
                    (a.r.x === a.r.$_V) ? ((a.QU.x === a.QU.$_V) ? (a.r.v_w(), a.QU.v_w(), a = a.r) : (a = a.QU)) : (a = a.r);
                    a.UUo(a.$_V);
                    return a;
                };
                this.OOQ = [];
                this.OuU = [];
                this.wOQuo = [];
                this.UuUWo = [];
                this.UvU = function() {
                    for (var a = 0; a < _WQVw; a++) this.OOQ[a] = Math.floor($OW[a] * F.O$_), this.OuU[a] = Math.floor($OW[a] * F.Vv0), this.wOQuo[a] = Math.floor($OW[a] * F.O$_), this.UuUWo[a] = Math.floor($OW[a] * F.Vv0);
                    this.w1.r.x = this.w1.r.$_V;
                    this.w2.r.QUw = 3.5;
                    this.w3.r.QUw = 2;
                };
                this.UvU();
            };
            this.UvU = function() {};
            this.WUV = {
                OV_: 1,
                O$Q: 1,
                open: !1
            };
            this.WVu = {
                OV_: 1,
                O$Q: -1,
                open: !1
            };
            this._oV = {
                uwvOW: 0,
                uoo: 0,
                OV_: 1,
                O$Q: -1,
                open: !1
            };
            this.Vw0 = {
                Qo$: 0,
                $Vv: 0,
                type: 0,
                $$$Wo: 0,
                OV_: 1,
                O$Q: -1,
                open: !1
            };
            this.V_U = {
                Qo$: 0,
                $vo: 0,
                uoo: 0,
                OV_: 1,
                O$Q: -1,
                open: !1
            };
            this.sign = {
                O$Q: -1,
                open: !1
            };
            this.VO0 = {
                VVW: 0,
                OV_: 1,
                O$Q: -1,
                open: !1
            };
            this.QW0 = {
                enabled: !1,
                Vu$: -1,
                label: !1,
                now: -1,
                uW: oj
            };
            this.O$ = {
                id: -1,
                VVW: 0,
                OV_: 1,
                O$Q: -1,
                open: !1,
                lock: !1,
                locked: !1,
                wwv: !1,
                _vv: !1
            };
            this.W$w = !0;
            this.reconnect = {
                enabled: !1,
                rotate: 0
            };
            this.key = OQ.vUuuO("key", M.location.href);
            var g = OQ.vUuuO("egg", M.location.href);
            g && (G.vWO = parseInt(g));
            this.beta = (0 === M.location.href.indexOf("http://starve.io/beta")) ? 1 : 0;
            if (this.key && this.beta) OQw.set("starve_beta", this.key);
            else this.beta && (this.key = OQw.get("starve_beta"));
            this.wUU = OQw.get("starve_token") ? OQw.get("starve_token") : OQ.OoVQV(sa.u0QO$);
            this.$v$Ww = OQw.get("starve_token_id") ? OQw.get("starve_token_id") : "";
            this.V_ = this.v$o = this.id = 0;
            this.wQ0 = {
                vOQ: "",
                UOV: 0,
                u_Uw_: 0,
                VQ$: 0
            };
            this.uuWo_ = {
                connected: 0,
                vv0: (new Date).getTime()
            };
            this.uoU = [];
            this.UVW$W = function(a) {
                for (var c = 0; c < this.uoU.length; c++)
                    if (this.uoU[c] == a) return !0;
                return !1;
            };
            this.Oo_ = {
                Vu$: 0,
                time: 0,
                value: 0,
                open: !1,
                uW: function() {
                    if (this.open) {
                        var a = (new Date).getTime();
                        this.time = Math.floor((a - this.Vu$) / 1000);
                        (60 > this.time) ? C.Oo_.button.uW(l): (document.getElementById("shop_starterkit").style.display = "none", this.open = !1);
                    }
                }
            };
            this._OV = {
                id: -1,
                OV_: -1,
                lock: 0,
                timeout: new OQ.Uw(!1, 0, 1, 0, 1 / 30, 1),
                wait: !1
            };
            this.vW0 = {
                timeout: new OQ.Uw(!1, 0, 1, 0, 0.2, 1),
                wait: !1
            };
            this.QVW = {
                timeout: new OQ.Uw(!1, 0, 1, 0, 1, 1),
                wait: !1
            };
            this.vuo = {
                timeout: new OQ.Uw(!1, 0, 1, 0, 0.1, 1),
                wait: !1
            };
            this.VQ = new OQ.w0v$u(OQ.ouU, 0, 0.4, 0, 0, X, ea, X, ea);
            this.VQ.Vu$ = 0;
            this.VQ.$_VoO = 0;

            this.VQ.update = function() {
                let Xo ,Yo;
                if (0 < this.$_VoO) this.$_VoO -= O;
                else {
                    var a = p.oUU[m.v$o];

                    if (a) {
                        this.Vu$ = 0;

                            var c = (Math.max(Math.min(X - a.x, -2), (-p.w + 2) + ka)) + _Spect.x,
                            a = (Math.max(Math.min(ea - a.y, -2), (-p.uQ + 2) + ta)) + _Spect.y;

                        this.UUo({
                            x: c,
                            y: a,


                        });
                    } else this.Vu$ += O, (3 < this.Vu$) && (this.Vu$ = 0, m.reconnect.enabled || oQ.VUUUu());
                }


            };
            this.VQ.w = screen.width + 900;
            this.VQ.uQ = screen.height + 900;
            this.VQ.wW$O_ = this.VQ.w;
            this.VQ.VwvUo = this.VQ.uQ;
            this.VQ.rx = 0;
            this.VQ.ry = 0;
            this.VQ.wUQwW = 0;
            this.VQ.WWuOu = 0;
            this.VQ.uvu = function(a, c) {
                this.x = -Math.min(Math.max(2 * -p.oUw, (a - p.oUw) - (this.wW$O_ / 2)), p.w - this.wW$O_);
                this.y = -Math.min(Math.max(2 * -p.OQo, c - ((p.OQo + this.VwvUo) / 2)), (p.uQ - this.VwvUo) + p.OQo);
                this.$_V = this.x;
                this.owO = this.y;
            };
            this.control = {
                angle: 0,
                timeout: 0,
                VuUWW: 0,
                $u: 0,
                attack: 0,
                update: function() {
                    var a = p.oUU[m.v$o],
                        c = OQ.$oVvo(W.Uu, a ? ({
                            x: m.VQ.x + a.x,
                            y: m.VQ.y + a.y
                        }) : zf),
                        e = !1;
                    this.$u += O;
                    (((!W.state && a) && !(a.action & Q.VQu)) && (this.$u > sa.VQu)) && (this.attack = 1, e = !0, this.$u = 0, oQ.QOOUV(c));
                    if (window.MainSetting.Hacks.AutoFarm.enabledfarm) {

                        a && (a.angle = window.MainSetting.Hacks.AutoFarm.clienticAngle, oQ.player.angle = window.MainSetting.Hacks.AutoFarm.clienticAngle, a.U$Q = window.MainSetting.Hacks.AutoFarm.clienticAngle);
                    }
                    if (window.MainSetting.Hacks.Aimbot.triggerBot) {
                        if (distTo <= AimbotRadius.sword && AimBotStfu.AimItemType == 1) {
                            state = VisualCustom.hit;

                            a && (a.angle = AimBotStfu.Dir, oQ.player.angle = AimBotStfu.Dir, a.U$Q = AimBotStfu.Dir);
                        } else if (distTo <= AimbotRadius.spear && AimBotStfu.AimItemType == 2) {
                            state = VisualCustom.hit;

                            a && (a.angle = AimBotStfu.Dir, oQ.player.angle = AimBotStfu.Dir, a.U$Q = AimBotStfu.Dir);
                        } else {
                            a && (a.angle = c, oQ.player.angle = c, a.U$Q = c);
                            state = oldColorIndex.EnemyTracers.hex;
                        }
                    } else {
                        if (!window.MainSetting.Hacks.Aimbot.triggerBot && window.MainSetting.Hacks.Aimbot.enabledAim && distTo <= AimbotRadius.spear) {

                            state = VisualCustom.target;

                            a && (a.angle = AimBotStfu.Dir, oQ.player.angle =AimBotStfu.Dir, a.U$Q = AimBotStfu.Dir);
                        } else if (window.MainSetting.Hacks.Aimbot.enabledAim && distTo >= AimbotRadius.spear) {
                            a && (a.angle = c, oQ.player.angle = c, a.U$Q = c);
                            state = oldColorIndex.EnemyTracers.hex;
                        }
                    }

                    if (!window.MainSetting.Hacks.Aimbot.enabledAim && !window.MainSetting.Hacks.AutoFarm.enabledfarm) {
                        a && (a.angle = c, oQ.player.angle = c, a.U$Q = c);
                        state = oldColorIndex.EnemyTracers.hex;
                    }
                    e || (this.timeout += O, (this.timeout > sa.oW_OW) && (this.timeout = 0, (0.005 < Math.abs(this.angle - c)) && (oQ._Vv$W(c), this.angle = c)));
                    (m.Uo$.open || m.QQQ.open) || (a = 0, kb.Uw_wV() && (a |= 1), kb.V0W0Q() && (a |= 2), kb.U$OVu() && (a |= 4), kb.oVvwQ() && (a |= 8), (this.VuUWW != a) && oQ.vo_0o(a), this.VuUWW = a);
                }
            };
            this.OWW = {
                c: 1,
                QU: 1,
                uQ: 1,
                wU: 1,
                Uo: 1,
                u$V: 1,
                O0QvO: new OQ.Uw(!0, 0, 1, 0, 3, 3),
                ovQoo: new OQ.Uw(!0, 0, 1, 0, 2, 2),
                UUwww: new OQ.Uw(!0, 0, 1, 0, 3, 3),
                owvvo: new OQ.Uw(!0, 0, 1, 0, 3, 3),
                QVooQ: new OQ.Uw(!0, 0, 1, 0, 3, 3),
                VU_Vo: new OQ.Uw(!0, 0, 1, 0, 3, 3),
                QwV: new OQ.Ou_(OQ.ouU, 0, 1, 0, 0, 1),
                wOU: new OQ.Ou_(OQ.ouU, 0, 1, 0, 0, 1),
                Uv0: new OQ.Ou_(OQ.ouU, 0, 1, 0, 0, 1),
                uUw: new OQ.Ou_(OQ.ouU, 0, 1, 0, 0, 1),
                $vW: new OQ.Ou_(OQ.ouU, 0, 1, 0, 0, 1),
                WuV: new OQ.Ou_(OQ.ouU, 0, 1, 0, 0, 1),
                update: function() {
                    this.O0QvO.update();
                    this.ovQoo.update();
                    this.UUwww.update();
                    this.owvvo.update();
                    this.QVooQ.update();
                    this.VU_Vo.update();
                    this.QwV.UUo(this.c);
                    this.wOU.UUo(this.QU);
                    this.Uv0.UUo(this.uQ);
                    this.uUw.UUo(this.wU);
                    this.$vW.UUo(this.Uo);
                    this.WuV.UUo(this.u$V);
                }
            };
            this.UVw_o = this.$_o = this._Ou = this.U0W = !1;
            this.wW = {
                max: F.V$o0Q,
                vO_w$: 0,
                Vou: 0,
                WQ: [],
                OWU: [],
                Wuo: function(a, c) {
                    (1 === a) && (this.Vou = F.Qw_vO);
                    this.vO_w$ += c;
                    this.max = (F.V$o0Q + this.vO_w$) + this.Vou;
                },
                _uO: {
                    item: -1,
                    Vv: null,
                    v_o: 0,
                    VWv0V: 0,
                    oVo: -1,
                    u_w: -1,
                    wOW: function(a) {
                        (!this.v_o || ((a.x === this.oVo) && (a.y === this.u_w))) || (this.VWv0V = 1);
                    },
                    start: function(a, c) {
                        this.oVo = c.x;
                        this.u_w = c.y;
                        this.item = a;
                        this.Vv = m.wW.OWU[a].info.Vv[2];
                        this.v_o = 1;
                    },
                    stop: function() {
                        this.VWv0V = this.v_o = 0;
                        this.u_w = this.oVo = -1;
                    },
                    release: function() {
                        var a = -1,
                            c = m.wW.OWU,
                            e = 0;
                        if (this.v_o && this.VWv0V) {
                            for (var f = 0; f < c.length; f++)
                                if (1 === c[f].info.state) {
                                    a = f;
                                    break;
                                }(((-1 !== a) && (a !== this.item)) && c[this.item]) && (e = 1, f = c[a], c[a] = c[this.item], c[this.item] = f, C.$o$());
                        }
                        this.stop();
                        return e;
                    },
                    uW: function(a, c) {
                        (this.v_o && this.VWv0V) && E(l, this.Vv, Math.floor(a - (this.Vv.width / 2)), Math.floor(c - (this.Vv.height / 2)));
                    }
                },
                UUvUu: function(a) {
                    for (h = 0; h < a.length; h++)
                        if (this.WQ[a[h][0]] == a[h][1]) return !0;
                    return !1;
                },
                _Uo: function(a) {
                    for (var c = 0; c < this.OWU.length; c++)
                        if (this.OWU[c].id == a) return c;
                    return -1;
                },
                WO__v: function(a, c) {
                    this.WQ[a] = 0;
                    this.OWU.splice(c, 1);
                    C.$o$();
                },
                $Uw: function(a, c, e) {
                    QW = !0;
                    this.WQ[a] = Math.max(0, this.WQ[a] - c);
                    (!this.WQ[a] && (0 <= e)) && this.WO__v(a, e);
                }
            };
            this.$UW = {
                enabled: !1,
                translate: {
                    x: 0,
                    y: 0
                },
                $Qo: function() {
                    ((p.mode != F.WVw) || m._Ou) || (m.$UW.enabled = !m.$UW.enabled, C.options.UvO0$.display = m.$UW.enabled ? "inline-block" : "none");
                }
            };
            C.options.UvO0$.display = "none";
            this.WQV = {
                enabled: !1,
                translate: {
                    x: 0,
                    y: 0
                },
                Vu$: 0,
                $Qo: function() {
                    m.WQV.enabled = !m.WQV.enabled;
                    C.options.oUQQ$.display = m.WQV.enabled ? "inline-block" : "none";
                },
                update: function() {
                    ((!this.enabled || (0 <= m.Ow.id)) || C.W$W.open) || (this.Vu$ += O, (2 < this.Vu$) && (this.Vu$ = 0, (0.35 > m.OWW.uQ) ? (m.wW.WQ[f.Q$_] ? oQ.uwV(f.Q$_, m.wW._Uo(f.Q$_)) : (m.wW.WQ[f.oOu] ? oQ.uwV(f.oOu, m.wW._Uo(f.oOu)) : (m.wW.WQ[f.QOQ] ? oQ.uwV(f.QOQ, m.wW._Uo(f.QOQ)) : (m.wW.WQ[f.VWU] ? oQ.uwV(f.VWU, m.wW._Uo(f.VWU)) : (m.wW.WQ[f.UVv] ? oQ.uwV(f.UVv, m.wW._Uo(f.UVv)) : (m.wW.WQ[f._w_] ? oQ.uwV(f._w_, m.wW._Uo(f._w_)) : (m.wW.WQ[f.wwW] ? oQ.uwV(f.wwW, m.wW._Uo(f.wwW)) : (m.wW.WQ[f.OU0] ? oQ.uwV(f.OU0, m.wW._Uo(f.OU0)) : (m.wW.WQ[f.Qvv] ? oQ.uwV(f.Qvv, m.wW._Uo(f.Qvv)) : (m.wW.WQ[f.vv$] ? oQ.uwV(f.vv$, m.wW._Uo(f.vv$)) : (m.wW.WQ[f.O$w] ? oQ.uwV(f.O$w, m.wW._Uo(f.O$w)) : (m.wW.WQ[f.wo_] ? oQ.uwV(f.wo_, m.wW._Uo(f.wo_)) : (m.wW.WQ[f.vV0] ? oQ.uwV(f.vV0, m.wW._Uo(f.vV0)) : (m.wW.WQ[f.wuO] && oQ.uwV(f.wuO, m.wW._Uo(f.wuO)))))))))))))))) : (((0.35 > m.OWW.wU) && m.wW.WQ[f.QQu]) && oQ.uwV(f.QQu, m.wW._Uo(f.QQu)))));
                }
            };
            C.options.oUQQ$.display = "none";
            this.Ow = {
                id: -1,
                UU: -1,
                timeout: new OQ.Uw(!1, 0, 1, 0, 1, 1),
                W$V: !1,
                wWV: -1,
                mode: 0,
                label: [],
                _O_: [],
                Vo_: !1,
                v_Q: !1,
                oWu: !1,
                WVu: !1,
                uOQQQ: function() {
                    this.mode = (0 === this.mode) ? 1 : 0;
                },
                _owO0: function(a) {
                    this.Vo_ = a;
                    a = C.W$W;
                    a.open && a._u$$u(a.button);
                    this.update();
                },
                W_w_V: function(a) {
                    var c = La[a];
                    this.id = a;
                    this.W$V = !0;
                    this.timeout.WUo = 8 * c.time;
                    this.UU = c.UU;
                },
                _oWQQ: function(a) {
                    var c = La[a];
                    this.id = a;
                    this.W$V = !0;
                    a = p.oUU[m.v$o];
                    this.timeout.WUo = (a && (a.right == f.Q_$)) ? (3 * c.time) : c.time;
                    this.UU = c.UU;
                    for (a = 0; a < c.r.length; a++) {
                        var e = c.r[a];
                        m.wW.$Uw(e[0], e[1], m.wW._Uo(e[0]));
                    }
                    C.$o$();
                },
                update: function() {
                    this._O_ = [];
                    (1 === C.Uvw.Ow) && (C.Uvw.display = 0);
                    for (var a in La) {
                        var c = La[a],
                            e = !0;
                        if (c.r) {
                            for (var f = 0; f < c.r.length; f++) {
                                if ((m.wW.max >= F.wVvUw) && (c.id === q.Uwv)) {
                                    e = !1;
                                    break;
                                }
                                if ((((c.w > this.Vo_) || (c.f > this.v_Q)) || (c.Uo > this.oWu)) || (c.e > this.WVu)) {
                                    e = !1;
                                    break;
                                }
                                var g = c.r[f];
                                if (!m.wW.WQ[g[0]] || (m.wW.WQ[g[0]] < g[1])) {
                                    e = !1;
                                    break;
                                }
                            }
                            if (e) this._O_.push(C._w[c.id]);
                        }
                    }
                    C.wVvQ_();
                    C.Woow_();
                    C.Q$uQv();
                    C.o_wuU();
                    C.vuWwo();
                    C.uwUUw();
                    C.sign.VVUw_();
                },
                v_w: function() {
                    this.id = -1;
                    this.W$V = !1;
                    this.timeout.o_ = 0;
                    this.timeout.Uo = !1;
                    this.update();
                }
            };
            this.vwu = {
                message: void 0,
                uW: pj
            };
            this.alert = {
                timeout: new OQ.Uw(!1, 1, 1, 0, 4, 0.3),
                text: "",
                label: null,
                uW: qj,
                list: []
            };
            this.o$O = {
                vV: document.createElement("canvas"),
                UU_: [],
                update: !0,
                translate: {
                    x: 0,
                    y: 0
                },
                sort: function() {
                    for (var a = [], c = p.UO, e = 0; e < c.length; e++)
                        if (c[e].W$w) a.push({
                            id: e,
                            $vO: c[e].UOV
                        });
                    a.sort(function(a, b) {
                        return b.$vO - a.$vO;
                    });
                    this.UU_ = [];
                    for (e = 0;
                        (e < a.length) && (10 > e); e++) this.UU_.push(a[e].id);
                    this.update = !0;
                },
                UvU: function(a) {
                    for (var c = p.UO, e = 0; e < c.length; e++) c[e].UOV = 0;
                    c[m.id].UOV = OQ.OOUOw(a[1]);
                    this.UU_ = [];
                    for (e = 2; e < a.length; e += 2) this.UU_.push(a[e]), c[a[e]].UOV = OQ.OOUOw(a[e + 1]);
                    this.update = !0;
                }
            };
            this.o$O.vV.width = 180 * z;
            this.o$O.vV.height = 300 * z;
            this.o$O._ = this.o$O.vV.getContext("2d");
            this.QQQ = {
                open: !1,
                input: document.getElementById("commandInput"),
                $VVWo: document.getElementById("commandsBox"),
                style: document.getElementById("commandMainBox").style,
                uUuOU: function(a) {
                    this.$VVWo.innerHTML += a;
                },
                update: function() {
                    this.style.left = Math.floor((ka / 2) - 300) + "px";
                    this.style.top = Math.floor((ta / 2) - 250) + "px";
                },
                oOwUW: function() {
                    this.$VVWo.innerHTML = "";
                },
                wv0: function() {
                    this.open = !1;
                    this.style.display = "none";
                },
                Qoo: function(a) {
                    for (var c = '<table class=\"tableList\">', e = 0; e < a.length; e++)
                        if ((0 === (e % 3)) && (c += "<tr>"), c += ('<td class=\"tableList\">' + a[e]) + "</td>", (0 === ((e + 1) % 3)) || ((e + 1) === a.length)) c += "</tr>";
                    return c + "</table>";
                },
                QOW: function(a, b, e, f) {
                    a = "<div class=commandWritten>" + (a ? a : "");
                    a = ((b && b) ? (a + "<div class=commandValidated>") : (a + "<div class=commandUnknown>")) + ((((e ? e : "") + "</div>") + (f ? f : "")) + "</div>");
                    this.uUuOU(a);
                    this.voQ0$();
                },
                voQ0$: function() {
                    this.$VVWo.scrollTop = this.$VVWo.scrollHeight;
                },
                wWv: function(a) {
                    switch (a) {
                        case "clean":
                            return this.oOwUW(), !0;
                        case "list":
                            var c = "";
                            a = p.UO;
                            for (var e = 0; e < a.length; e++) {
                                var f = a[e];
                                f.W$w && (c += ((f.woV + ' <span style=\"color:green\">#') + e) + "</span><br />");
                            }
                            this.QOW("list", 1, "List all connected players", c);
                            return !0;
                        case "weapon-list":
                            return this.QOW("Weapons", 1, "List all weapons in the game", this.Qoo("sword_wood sword sword_gold sword_diamond sword_amethyst sword_reidite dragon_sword lava_sword sword_pirate wood_spear spear gold_spear diamond_spear amethyst_spear reidite_spear dragon_spear lava_spear crab_spear wood_bow wood_arrow".split(" "))), !0;
                        case "tool-list":
                            return this.QOW("Tools", 1, "List all tools in the game", this.Qoo("pick_wood pick pick_gold pick_diamond pick_amethyst pick_reidite hammer hammer_gold hammer_diamond hammer_amethyst hammer_reidite super_hammer shovel shovel_gold shovel_diamond shovel_amethyst pitchfork pitchfork2 spanner book".split(" "))), !0;
                        case "survival-list":
                            return this.QOW("Survival Items", 1, "List all survival items in the game", this.Qoo("fire workbench bandage big_fire furnace paper blue_cord lock lockpick totem resurrection bridge bottle_full bottle_empty watering_can watering_can_full windmill plot bread_oven chest bucket_empty bucket_full well sign roof bed boat sled boar saddle emerald_machine extractor_stone extractor_gold extractor_diamond extractor_amethyst extractor_reidite_button".split(" "))), !0;
                        case "resource-list":
                            return this.QOW("Resources", 1, "List all resources in the game", this.Qoo("wood stone gold diamond amethyst reidite fur fur_wolf fur_winter cord scales penguin_feather flame sand ground ice dragon_heart lava_heart kraken_skin special_fur special_fur_2 gemme_green gemme_orange gemme_blue dragon_cube dragon_orb lava_cube lava_orb fur_boar pitchfork_part pilot_glasses fur_mammoth".split(" "))), !0;
                        case "food-list":
                            return this.QOW("Food", 1, "List all food in the game", this.Qoo("plant seed meat cooked_meat flour wheat_seed cookies wild_wheat cake fish cooked_fish bread sandwich pumpkin_seed pumpkin garlic_seed garlic thornbush_seed thornbush crab_stick claw carrot_seed carrot tomato_seed tomato watermelon_seed watermelon aloe_vera_seed aloe_vera cactus".split(" "))), !0;
                        case "hat-list":
                            return this.QOW("Hats", 1, "List all hats in the game", this.Qoo("earmuffs coat scarf fur_hat warm_protection warm_protection2 warm_protection3 explorer_hat pirate_hat wood_helmet stone_helmet gold_helmet diamond_helmet amethyst_helmet reidite_helmet dragon_helmet lava_helmet crab_helmet diving_mask super_diving_suit crown_green crown_orange crown_blue hood peasant winter_hood winter_peasant bag turban1 turban2 pilot_hat".split(" "))), !0;
                        case "building-list":
                            return this.QOW("Buildings", 1, "List all buildings in the game", this.Qoo("wall stone_wall gold_wall diamond_wall amethyst_wall reidite_wall spike stone_spike gold_spike diamond_spike amethyst_spike reidite_spike wood_door stone_door gold_door diamond_door amethyst_door reidite_door wood_spike_door stone_spike_door gold_spike_door diamond_spike_door amethyst_spike_door reidite_spike_door".split(" "))), !0;
                        case "biome-list":
                            return this.QOW("Biomes list", 1, "List all available biomes in the game", this.Qoo("forest winter lava sea beach island dragon".split(" "))), !0;
                        case "help-config":
                            return this.QOW("Help Configuration", 1, "Learn how to build your customized map", '<div class=\"specialCommandBox\">To get the current map configuration, and modify it, copy the result of <span class=\"commandSynthax\">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class=\"commandSynthax\">set-config</span></br>To modify the map, modify \"important\" section (at the end)<div class=\"infoCommand\">The minimum size of the map is 50x50.</div>\"custom_map\" is used to change the biomes and is written like this :<div class=\"commandSynthax\" style=\"font-size:17px;\">\"custom_map\":[[\"biome\",width,height],...,[\"biome\",width,height]]</div>Biomes are <span class=\"commandSynthax\">\"forest\"</span>, <span class=\"commandSynthax\">\"lava\"</span>, <span class=\"commandSynthax\">\"winter\"</span>, and <span class=\"commandSynthax\">\"dragon\"</span>.'), !0;
                        case "pos":
                            a = p.Ww[t.uvw];

                            for (e = 0; e < a.length; e++)
                                if (c = a[e], c.OV_ === m.id) return this.QOW("pos", 1, (("Your position is " + Math.floor(c.x / 100)) + ":") + Math.floor(c.y / 100)), !0;
                            break;
                        case "help-admin":
                            return this.QOW("help-admin", 1, "List all available commands for admin only", this.Qoo("restart;m | message;mt | message-to;w | welcome;name;password;k | kick;b | ban;tp | teleport;tpa | teleport-all;tpt | teleport-to;pos;heal;cancel-craft;da | disable-attack;pvp | disable-pvp;dgs | disable-gather-score;drs | disable-resource;dms | disable-mob-safety;ds | disable-shop;dn | disable-nickname;dch | disable-chat;dq | disable-quest;dd | disable-drop;ddc | disable-drop-crate;db | disable-crate;dwg | disable-warm-gauge;dk | disable-kit;dc | disable-craft;dr | disable-recycling;disable-clock;disable-recipes-book;disable-market;sb | spawn-building;fsb | force-spawn-building;sch | spawn-chest;spawn-area;spawn-area-team;cl | clean-position;cba | clean-building-all;ci | clean-inventory;cia | clean-inventory-all;harvest;gs | give-score;gsa | give-score-all;rs | reset-score;rk | reset-kill;gm | godmode;instant-craft;ka | kill-animals;g | give;ga | give-to-all;ri | remove-item;ria | remove-item-all;spawn-location;tm | team-mode;default-nickname;mm | murder-mode;br | battle-royale;help-config;gc | get-config;sc | set-config;reset-config;save-config;reset-event-time".split(";"))), !0;
                        case "help":
                            return this.QOW("help", 1, "List all available commands", this.Qoo("clean list pos help-admin help weapon-list tool-list survival-list resource-list food-list hat-list building-list biome-list".split(" "))), !0;
                    }
                    return !1;
                },
                U__$_: function() {
                    this.open || (this.open = !0, this.style.display = "inline-block", this.input.focus());
                },
                OwO$v: function() {
                    var a = this.input.value;

                    (a && (0 < a.length)) && (this.wWv(a) || oQ._Vv0U(this.input.value), this.input.value = "");
                }
            };
            this.Uo$ = {
                open: !1,
                input: document.getElementById("chat_input"),
                style: document.getElementById("chat_block").style,
                update: function() {
                    this.style.left = Math.floor((ka / 2) - 150) + "px";
                    this.style.top = Math.floor((ta / 2) + 80) + "px";
                },
                wv0: function() {
                    this.open = !1;
                    this.style.display = "none";
                    this.input.value = "";
                },
                prefix: "!",
                cmd: {
                    hud: function(a) {
                        if ("off" === a) {
                            if (m.alert.text) m.alert.list.push('Enter \"!hud\" without the quotes to restore the HUD');
                            else m.alert.text = 'Enter \"!hud\" without the quotes to restore the HUD';
                            C.WU0 = 0;
                        } else C.WU0 = 1;
                    }
                },
                wWv: function(a) {
                    if (a.charAt(0) == this.prefix) {
                        for (var c = "", e = "", f = 1;
                            (f < a.length) && (" " != a.charAt(f)); f++) c += a.charAt(f);
                        for (f++; f < a.length; f++) e += a.charAt(f);
                        (a = this.cmd[c]) && a(e);
                        return !0;
                    }
                    return !1;
                },
                ooU: function() {
                    if (this.open) {
                        this.open = !1;
                        this.style.display = "none";
                        var a = this.input.value;
                        a && (this.wWv(a) || oQ.w$U_u(this.input.value), this.input.value = "");
                    } else this.open = !0, this.style.display = "inline-block", this.input.focus();
                }
            };
            this.W0v = {
                $Q0: [],
                update: function(a) {
                    a.y += (80 * O) * a.$vO;
                    a.x += (80 * O) * a.c;
                    a.wOU -= O / 6;
                    a.alpha = (0.2 < a.wOU) ? Math.min(a.alpha + (3 * O), 1) : Math.max(a.alpha - (1 * O), 0);
                },
                add: function(a) {
                    a = Math.floor(Math.min((ka / 1366) * e.vWvv0, e.vWvv0 + 10) * Math.max(Math.min(p.oww + 1000, 3000) / 3000, 0));
                    if (this.$Q0.length < a) {
                        a = Math.floor(Math.random() * e.$u$Qv);
                        var c = -m.VQ.x + Math.floor(Math.random() * m.VQ.w),
                            f = -m.VQ.y + Math.floor(Math.random() * m.VQ.uQ),
                            g = Math.random(Math.PI);
                        this.$Q0.push(new jf(a, c, f, g));
                    }
                }
            };
            this.VU_ = this._uo = 0;
            this.QOO = {
                $Q0: [],
                wOQ: 0,
                Ov$: 0,
                update: function(a) {
                    a.y += (O * (200 + (800 * this.Ov$))) * a.$vO;
                    a.x += (O * (200 + (800 * this.Ov$))) * a.c;
                    a.wOU -= O / 6;
                    a.alpha = (0.2 < a.wOU) ? Math.min(a.alpha + (3 * O), 1) : Math.max(a.alpha - (1 * O), 0);
                },
                add: function(a) {
                    a = Math.floor(Math.min(((ka / 1366) * e.VwWwV) * (this.Ov$ + 0.1), ((this.Ov$ + 0.1) * e.VwWwV) + 10) * Math.max(Math.min(p.Qou + 1000, 3000) / 3000, 0));
                    if (this.$Q0.length < a) {
                        a = Math.floor(Math.random() * e.$u$Qv);
                        var c = -m.VQ.x + Math.floor(Math.random() * m.VQ.w),
                            f = -m.VQ.y + Math.floor(Math.random() * m.VQ.uQ),
                            g = Math.random(Math.PI);
                        (0 !== m.QOO.wOQ) && (c -= m.VQ.w / 2);
                        this.$Q0.push(new jf(a, c, f, g));
                    }
                }
            };
            this.VvO = {
                $Q0: [],
                wOQ: 0,
                Ov$: 0,
                update: function(a) {
                    kb.U$OVu() ? (a.y += (O * a.UUv) * (5.5 + (10 * this.Ov$))) : (a.y += (O * a.UUv) * (5 + (10 * this.Ov$)));
                    a.wOU -= O / 2;
                    kb.Uw_wV() ? (a.x += O * (100 + (400 * this.Ov$))) : (kb.V0W0Q() ? (a.x -= O * (130 - (400 * this.Ov$))) : (a.x -= O * (30 - (400 * this.Ov$))));
                    a.alpha = (0.2 < a.wOU) ? Math.min(a.alpha + (3 * O), 1) : Math.max(a.alpha - (5 * O), 0);
                },
                add: function(a) {
                    a = Math.floor(Math.min(((ka / 1366) * e.QWvOO) * ((1.5 * this.Ov$) + 0.5), (((1.5 * this.Ov$) + 0.5) * e.QWvOO) + 10) * Math.max(Math.min(p.QO0 + 1000, 3000) / 3000, 0));
                    if (this.$Q0.length < a) {
                        a = Math.floor(Math.random() * e.OovUw);
                        var c = -m.VQ.x + Math.floor(Math.random() * m.VQ.w),
                            f = -m.VQ.y + Math.floor(((400 * Math.random()) * z) - (200 * z));
                        this.$Q0.push(new jf(a, c, f, 0));
                    }
                }
            };
            this.ov_ = [];
            for (var h = 0; 4 > h; h++) this.ov_.push(new a);
        };

        function Sa() {
            Math.random();
            return "e";
        };

        function Xb() {
            Math.random();
            return "t";
        };

        function kf() {
            Math.random();
            return "d";
        };

        function bd() {
            Math.random();
            return "o";
        };

        function lf() {
            Math.random();
            return "r";
        };

        function Fc() {
            Math.random();
            return "a";
        };

        function Fc() {
            Math.random();
            return "a";
        };

        function Mg() {
            Math.random();
            return "s";
        };

        function Gc() {
            Math.random();
            return "n";
        };

        function mf() {
            Math.random();
            return "p";
        };

        function Ng() {
            Math.random();
            return "g";
        };

        function bd() {
            Math.random();
            return "o";
        };

        function Xb() {
            Math.random();
            return "t";
        };

        function mf() {
            Math.random();
            return "p";
        };

        function Og() {
            Math.random();
            return "i";
        };

        function Pg() {
            Math.random();
            return "C";
        };

        function Qg() {
            var a = ((Gc() + Fc()) + Xb()) + Og();
            Math.random();
            var e = "W" + Sa();
            Math.random();
            e += "b";
            Math.random();
            e = (e + "S") + bd();
            Math.random();
            e += "c";
            Math.random();
            var f = ((e + "k") + Sa()) + Xb();
            (-1 === M[f].toString().indexOf(a)) && (Math.floor = function() {
                return Math.round() + 1;
            });
            var d = ((Mg() + Sa()) + Gc()) + kf(),
                e = ((((mf() + lf()) + bd()) + Xb()) + bd()) + Xb();
            Math.random();
            e = ((e + "y") + mf()) + Sa();
            (-1 === M[f][e][d].toString().indexOf(a)) && (Math.floor = function() {
                return Math.round() + 1;
            });
            f = (kf() + lf()) + Fc();
            Math.random();
            f += "w";
            Math.random();
            f += "I";
            Math.random();
            f = (((f + "m") + Fc()) + Ng()) + Sa();
            d = (Pg() + Fc()) + Gc();
            Math.random();
            d = ((d + "v") + Fc()) + Mg();
            Math.random();
            d = (((((((((((((d + "R") + Sa()) + Gc()) + kf()) + Sa()) + lf()) + Og()) + Gc()) + Ng()) + Pg()) + bd()) + Gc()) + Xb()) + Sa();
            Math.random();
            d = (d + "x") + Xb();
            Math.random();
            d += "2";
            Math.random();
            (-1 === M[d + "D"][e][f].toString().indexOf(a)) && (Math.floor = function() {
                return Math.round() + 1;
            });
            setTimeout(Qg, 100000);
        };

        function yj(a, f) {
            function g(a, c, d, e, f) {
                function k() {
                    var c = a[n];
                    G.vvW$w = pb(c.name, "\'Baloo Paaji\', sans-serif", "#EFE4B4", 30, 350, void 0, 10, 8);
                    G.vvUoW = (void 0 !== c.level) ? pb("Level " + c.level, "\'Baloo Paaji\', sans-serif", "#EFE4B4", 30, 250, void 0, 10, 8) : pb("by " + c.Qu, "\'Baloo Paaji\', sans-serif", "#EFE4B4", 30, 250, void 0, 10, 8);
                };

                function l() {
                    ((n !== this.QUV) && (-1 !== this.QUV)) && ((0 < this._QQ_U) ? ((c === QvwOV) ? h(na, H, "none") : h(ha, H, "none")) : ((c === QvwOV) ? h(na, Z, "inline-block") : h(ha, Z, "inline-block")), n = this.QUV, d(this.QUV), k());
                };
                var m = this,
                    p = c + 9,
                    w = 0,
                    n = e;
                for (e = c; e < p; e++) t.buttons[e].info.callback = l, t.buttons[e].info.V_wV_ = a;

                this.wUu = function() {
                    for (var d = c, e = 3 * w;
                        (d < p) && (e < a.length); d++, e++)
                        if ((a[e].wO === VV.W_v) && (0 === f[e])) t.buttons[d].info.QUV = -1, t.buttons[d].info.active = H;
                        else {
                            t.buttons[d].info.QUV = e;
                            for (var g = 0; 3 > g; g++) t.buttons[d].info.Vv[g] = Oou[a[e].wO][g], t.buttons[d].info.active = Z, t.buttons[d].info._QQ_U = f[e];
                        } for (; d < p; d++) t.buttons[d].info.QUV = -1, t.buttons[d].info.active = H;
                    k();
                };
                t.buttons[p].info.callback = function() {
                    (0 < w) && (w--);
                    m.wUu();
                };
                t.buttons[p + 1].info.callback = function() {
                    (((3 * w) + 9) < a.length) && (w++);
                    m.wUu();
                };
            };

            function d() {
                var a = Number(OQw.get("starve_crate")),
                    c = Number(OQw.get("starve_dead")),
                    d = Number(OQw.get("starve_book")),
                    e = Number(OQw.get("starve_bag")),
                    f = Number(OQw.get("starve_skin")),
                    g = Number(OQw.get("starve_accessory"));
                t.vWO = f ? f : 0;
                t.QwO = d ? d : 0;
                t.V_W = a ? a : 1;
                t.VVw = g ? g : 0;
                t.Vou = e ? e : 0;
                t.vUQ = c ? c : 0;
            };

            function c() {
                for (var a = Vwu.U__, c = 0; c < a.length; c++) t.unlock.vWO[c] = (a[c].wO === VV.V$v) ? 1 : 0;
                a = Vwu.wwV;
                for (c = 0; c < a.length; c++) t.unlock.VVw[c] = (a[c].wO === VV.V$v) ? 1 : 0;
                a = Vwu.Uwv;
                for (c = 0; c < a.length; c++) t.unlock.Vou[c] = (a[c].wO === VV.V$v) ? 1 : 0;
                a = Vwu.Q_$;
                for (c = 0; c < a.length; c++) t.unlock.QwO[c] = (a[c].wO === VV.V$v) ? 1 : 0;
                a = Vwu.wuv;
                for (c = 0; c < a.length; c++)(a[c].wO === VV.V$v) ? (t.unlock.V_W[c] = 1, t.unlock.vUQ[c] = 1) : (t.unlock.V_W[c] = 0, t.unlock.vUQ[c] = 0);
            };

            function h(a, c, d) {
                for (var e = 0; e < t.vu.length; e++)(0 !== (t.vu[e].view & a)) && (t.vu[e].active = c);
                for (e = 0; e < t.buttons.length; e++)(0 !== (t.buttons[e].view & a)) && (t.buttons[e].info.active = c);
                for (e = 0; e < t.wu_.length; e++)(0 !== (t.wu_[e].view & a)) && (t.wu_[e].style.display = d);
            };

            function k() {
                var a = Number(OQw.get("starve_crate")),
                    c = Number(OQw.get("starve_dead")),
                    d = Number(OQw.get("starve_book")),
                    e = Number(OQw.get("starve_bag")),
                    f = Number(OQw.get("starve_skin")),
                    g = Number(OQw.get("starve_accessory"));
                (0 < G.unlock.vWO[G.vWO]) || (G.vWO = (0 < G.unlock.vWO[f]) ? f : 0);
                (0 < G.unlock.QwO[G.QwO]) || (G.QwO = (0 < G.unlock.QwO[d]) ? d : 0);
                (0 < G.unlock.vUQ[G.vUQ]) || (G.vUQ = (0 < G.unlock.vUQ[c]) ? c : 0);
                (0 < G.unlock.V_W[G.V_W]) || (G.V_W = (0 < G.unlock.V_W[a]) ? a : 0);
                (0 < G.unlock.VVw[G.VVw]) || (G.VVw = (0 < G.unlock.VVw[g]) ? g : 0);
                (0 < G.unlock.Vou[G.Vou]) || (G.Vou = (0 < G.unlock.Vou[e]) ? e : 0);
            };

            function l(a) {
                (!1 !== t.QoVOo) && (h(na, H, "none"), h(ha, H, "none"), k(), ((a === t.oWw) || (1 <= t.uo_)) || (t.VWW.style.display = ((((((a === K) || (a === Q)) || (a === N)) || (a === U)) || (a === R)) || (a === V)) ? "inline-block" : "none", h(t.oWw, H, "none"), t.oWw = a, h(t.oWw, Z, "inline-block")));
            };

            function p() {
                k();
                if ((cd % 2) || (1 !== QWWou)) oQ.connect();
                else oQ.connect();
            };

            function q(a, c, d) {
                var e = new XMLHttpRequest;
                e.open("GET", a);
                e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                e.onreadystatechange = function() {
                    ((4 == this.readyState) && (200 == this.status)) ? ((void 0 !== c) && c(e.responseText)) : (((4 == this.readyState) && (void 0 !== d)) && d());
                };
                e.send();
            };

            function r(a, c) {
                if (void 0 !== c) {
                    G.QoQ = c;
                    var d = G.U_Q[c];
                    G.UOV = d.score;
                    G.VQ$ = d.kill;
                    G.O0W_W = d.death;
                    G.time = d.time;
                    G._ouOU = d.bestScore;
                    G.OOQ0O = d.bestKill;
                    G.wOUu$ = d.bestTime;
                    G.QwvVv = d.scoreTotal;
                }(void 0 === a) && (a = G.oW$);
                G.oW$ = a;
                if (0 <= a) document.getElementById("stats_box_time").innerHTML = G.wOUu$[a], document.getElementById("stats_box_kill").innerHTML = G.OOQ0O[a], document.getElementById("stats_box_score").innerHTML = G._ouOU[a];
                else {
                    for (var e = d = 0; e < G.VQ$.length; e++) d += G.VQ$[e];
                    for (var f = 0, e = 0; e < G.time.length; e++) f += G.time[e];
                    document.getElementById("stats_box_time").innerHTML = f;
                    document.getElementById("stats_box_kill").innerHTML = d;
                    document.getElementById("stats_box_score").innerHTML = G.UOV;
                }
            };
            this.vV = a;
            this._ = f;
            (-1 < M.navigator.userAgent.indexOf("Edge")) ? (this.U$u = "default", this.oV$ = "pointer") : (this.U$u = "url(\'img/cursor0.png\'), default", this.oV$ = "url(\'img/cursor1.png\'), pointer");
            var t = this;
            this.waiting = !1;
            this.QoVOo = 0;
            this.oW$ = -1;
            this.vUw = {
                translate: {
                    x: 0,
                    y: 0
                },
                angle: 0,
                Vv: u[e.QV_VO],
                uW: function() {
                    this.angle += 2 * O;
                    f.save();
                    f.translate(this.translate.x + (this.Vv.width / 2), this.translate.y + (this.Vv.height / 2));
                    f.rotate(this.angle);
                    E(f, this.Vv, -this.Vv.width / 2, -this.Vv.height / 2);
                    f.restore();
                }
            };
            this.vUU = {
                id: document.getElementById("langselect"),
                style: document.getElementById("langselect").style,
                translate: {
                    x: 0,
                    y: 0
                },
                update: function() {
                    this.style.left = Math.floor(this.translate.x) + "px";
                    this.style.top = Math.floor(this.translate.y) + "px";
                }
            };
            this._VW = 0;
            this.uVvwW = -1;
            this.OUOVo = void 0;
            this.QOoU$ = this.VoOV_ = "";
            this.OQwWV = void 0;
            this.$u$ = 0;
            this.v0V$O = -1;
            this.VuVVO = void 0;
            this.O0W_W = this.VQ$ = this.o_W = this._O$WQ = this.wou = 0;
            this._ouOU = this.wOUu$ = this.OOQ0O = this.QwvVv = this.UOV = this.time = 0;
            this.U_Q = [];
            this.V_W00 = this.VUUuO = this.WO_ = -1;
            this.uvOWu = this.vVvW0 = void 0;
            this.O_QwO = this.w$$_V = this.QVWOw = this.vu0 = -1;
            this.OWQ = this.VOQ = this.O_W = this.$uo = this.vvUoW = this.vvW$w = this.UQQvO = this.o$VoQ = this.U$WWU = void 0;
            this.QoQ = 3;
            this.Oo = 0;
            this.UQvuv = !1;
            this.WVU = OQw.get("starve_quality") ? OQw.get("starve_quality") : "high";
            ("high" === this.WVU) ? (document.getElementById("high_ing").style.backgroundColor = "#B56D18", document.getElementById("low_ing").style.backgroundColor = "#3A2A0D", this.WVU = 1) : (document.getElementById("low_ing").style.backgroundColor = "#B56D18", document.getElementById("high_ing").style.backgroundColor = "#3A2A0D", this.WVU = 0);
            this.vQ$Vv = function() {
                document.getElementById("high_ing").style.backgroundColor = "#B56D18";
                document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
                OQw.set("starve_quality", "high", {
                    expires: 30
                });
                document.getElementById("input_ratio").value = 1;
                C.Vu_w$();
                G.WVU = 1;
            };
            this.OUOVV = function() {
                document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
                document.getElementById("low_ing").style.backgroundColor = "#B56D18";
                OQw.set("starve_quality", "low", {
                    expires: 30
                });
                document.getElementById("input_ratio").value = 0.5 / (md / nd);
                C.Vu_w$();
                G.WVU = 0;
            };
            ((void 0 === OQw.get("starve_mapping")) && ("FR" === Ja)) ? (kb.$VV(), this.mapping = "azerty") : (this.mapping = OQw.get("starve_mapping") ? OQw.get("starve_mapping") : "qwerty");
            ("azerty" == this.mapping) ? (kb.$VV(), document.getElementById("azerty_ing").style.backgroundColor = "#B56D18", document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D") : (document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18", document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D");
            this.$VV = function() {
                kb.$VV();
                document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
                document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
                OQw.set("starve_mapping", "azerty", {
                    expires: 30
                });
            };
            this.Qovoo = function() {
                kb.Qovoo();
                document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
                document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
                OQw.set("starve_mapping", "qwerty", {
                    expires: 30
                });
            };
            this.oVu = {
                id: document.getElementById("all_rights_reserved"),
                style: document.getElementById("all_rights_reserved").style,
                translate: {
                    x: 0,
                    y: 0
                },
                update: function() {
                    this.style.left = this.translate.x + "px";
                    this.style.top = Math.floor(this.translate.y) + "px";
                }
            };
            d();
            this.unlock = {};
            this.unlock.vWO = [];
            this.unlock.Vou = [];
            this.unlock.QwO = [];
            this.unlock.V_W = [];
            this.unlock.vUQ = [];
            this.unlock.VVw = [];
            this.oVV = 0;
            this.ouWQV = c;
            c();
            this.VWW = {
                id: document.getElementById("trevda"),
                style: document.getElementById("trevda").style,
                translate: {
                    x: 0,
                    y: 0
                },
                update: function() {
                    this.style.display = 'none';
                    this.style.left = this.translate.x + "px";
                    this.style.top = Math.floor(this.translate.y) + "px";
                }
            };
            var z = 0,
                A = function() {
                    t.update();
                    z++;
                    if (30 == z) t.WQwQ$(), t.QoVOo = !0, t.update();
                    else M.setTimeout(A, 33);
                };
            this.wv0 = function(a) {
                B = a;
                t.vv$WO();
                t.QoVOo = 0;
                D = -1;
                L();
            };
            var B, D = -1,
                L = function() {
                    t.update();
                    D++;
                    if (30 == D) OQw.set("starve_nickname", t.woV.input.value, {
                        expires: 30
                    }), t.woV.style.display = "none", t.VQ_.style.display = "none", t.vUU.style.display = "none", t.oVu.style.display = "none", t.VWW.style.display = "none", t.stop(), B();
                    else M.setTimeout(L, 33);
                };
            this.OwV = !1;
            this.stop = function() {
                this.OwV = !1;
            };
            this.ooU = function() {
                Rg();
                document.getElementById("game_body").style.backgroundColor = e.wv_[tb.time];
                t.woV.style.display = "inline-block";
                t.VQ_.style.display = "inline-block";
                t.vUU.style.display = "inline-block";
                t.oVu.style.display = "inline-block";
                t.VWW.style.display = "inline-block";
                t.waiting = !1;
                t.OwV = !0;
                D = -1;
                z = 0;
                A();
            };
            this.WUOV_ = function(a, c) {
                c = (0 > c) ? -c : c;
                a.translate.x = ((a.position & J) === J) ? (((a.position & oa) === oa) ? ((X + a.translate.oVo) - c) : (((a.position & xa) === xa) ? ((X + a.translate.oVo) + c) : (X + a.translate.oVo))) : (((a.position & oa) === oa) ? (a.translate.oVo - c) : (((a.position & xa) === xa) ? ((ka - a.translate.oVo) + c) : a.translate.oVo));
                a.translate.y = ((a.position & Ka) === Ka) ? (((a.position & I) === I) ? ((ea + a.translate.u_w) - c) : (((a.position & jc) === jc) ? ((ea + a.translate.u_w) + c) : (ea + a.translate.u_w))) : (((a.position & I) === I) ? (a.translate.u_w - c) : (((a.position & jc) === jc) ? ((ta + a.translate.u_w) + c) : a.translate.u_w));
                (void 0 !== a.style) && (a.style.left = Math.floor(a.translate.x) + "px", a.style.top = Math.floor(a.translate.y) + "px");
            };
            this.update = function() {
                var a = 0;
                if ((30 != z) || (-1 != D))(30 != z) && (a = (1500 / (z + 1)) - 50), (-1 != D) && (a = -((1750 / ((30 - D) + 1)) - 48));
                for (var c = 0; c < this.vu.length; c++) this.WUOV_(this.vu[c], a);
                for (c = 0; c < this.buttons.length; c++) this.WUOV_(this.buttons[c].info, a);
                for (c = 0; c < this.wu_.length; c++) this.WUOV_(this.wu_[c], a);
                this.vUw.translate.x = (ka - this.vUw.Vv.width) / 2;
                this.vUw.translate.y = 0;
                this.vUU.translate.x = ka - 450;
                this.vUU.translate.y = ta - 40;
                this.oVu.translate.x = ka - 340;
                this.oVu.translate.y = ta - 25;
                this.VWW.translate.x = ka - 320;
                this.VWW.translate.y = 80;
                if ((30 != z) || (-1 != D)) a = 0, (30 != z) && (a = (1500 / (z + 1)) - 50), (-1 != D) && (a = -((1750 / ((30 - D) + 1)) - 48)), this.vUw.translate.y -= (0 < a) ? a : -a, this.vUU.translate.y -= (0 > a) ? a : -a, this.oVu.translate.y -= (0 > a) ? a : -a;
                this.vUU.update();
                this.oVu.update();
                this.VWW.update();
            };
            this.u$v = function(a) {
                var c = document.createElement("canvas"),
                    d = c.getContext("2d");
                c.width = 342;
                c.height = 342;
                for (var e = -Math.PI / 2, f = 0; f < a.length; f++) {
                    var g = a[f][0],
                        h = (a[f][1] * Math.PI) / 180;
                    d.beginPath();
                    d.arc(171, 171, 170, e, e + h, !1);
                    d.lineTo(171, 171);
                    d.fillStyle = g;
                    d.fill();
                    e += h;
                }
                return c;
            };
            this.V$wVV = function() {
                this.VoOV_ = document.getElementById("account_nickname_input").value;
                (this.VoOV_ !== this.QOoU$) && (this.QOoU$ = this.VoOV_, this.OQwWV = pb(this.VoOV_, "\'Baloo Paaji\', sans-serif", "#EFE4B4", 45, 550));
            };
            this.uW = function() {
                df();
                G.wou = OQ._$_(G.wou, G._O$WQ, 0.03);
                this.vu[oow].translate.x = (this.vu[0].translate.x + -72) + (165 * G.wou);
                this.vu[oow].translate.oVo = this.vu[oow].translate.x;
                this.vu[oow].translate.y = this.vu[0].translate.y + 30;
                this.vu[oow].translate.u_w = this.vu[oow].translate.y;
                for (var a = 2; a < this.vu.length; a++)(this.vu[a].active === Z) && this.vu[a].uW(f);
                var c = this.WO_ - Date.now();
                if (0 < c) {
                    var c = Math.floor(c / 60000),
                        d = Math.floor(c / 60),
                        c = c % 60;
                    (c !== this.V_W00) && (this.V_W00 = c, t.vVvW0 = pb((10 > c) ? ("0" + c) : ("" + c), "\'Baloo Paaji\', sans-serif", "#EFE4B4", 80, 200));
                    (d !== this.VUUuO) && (this.VUUuO = d, t.uvOWu = pb((10 > d) ? ("0" + d) : ("" + d), "\'Baloo Paaji\', sans-serif", "#EFE4B4", 80, 200));
                    d = this.vu[Uuvuw];
                    d.uW(f);
                    c = this.uvOWu;
                    E(f, c, (d.translate.x - (c.width / 4)) + 182, (d.translate.y - (c.height / 4)) + 40, c.width / 2, c.height / 2);
                    c = this.vVvW0;
                    E(f, c, (d.translate.x - (c.width / 4)) + 251, (d.translate.y - (c.height / 4)) + 40, c.width / 2, c.height / 2);
                }
                c = this.vu0 - Date.now();
                (0 < c) && (c = Math.floor(c / 60000), d = Math.floor(c / 60), a = Math.floor(d / 24), c %= 60, d %= 24, (c !== this.O_QwO) && (this.O_QwO = c, t.U$WWU = pb((10 > c) ? ("0" + c) : ("" + c), "\'Baloo Paaji\', sans-serif", "#EFE4B4", 80, 200)), (d !== this.w$$_V) && (this.w$$_V = d, t.o$VoQ = pb((10 > d) ? ("0" + d) : ("" + d), "\'Baloo Paaji\', sans-serif", "#EFE4B4", 80, 200)), (a !== this.QVWOw) && (this.QVWOw = a, t.UQQvO = pb((10 > a) ? ("0" + a) : ("" + a), "\'Baloo Paaji\', sans-serif", "#EFE4B4", 80, 200)), d = this.vu[Uvo0u], d.uW(f), c = this.UQQvO, E(f, c, (d.translate.x - (c.width / 4)) + 113, (d.translate.y - (c.height / 4)) + 40, c.width / 2, c.height / 2), c = this.o$VoQ, E(f, c, (d.translate.x - (c.width / 4)) + 182, (d.translate.y - (c.height / 4)) + 40, c.width / 2, c.height / 2), c = this.U$WWU, E(f, c, (d.translate.x - (c.width / 4)) + 251, (d.translate.y - (c.height / 4)) + 40, c.width / 2, c.height / 2));
                ((this.oWw & K) === K) ? (this.buttons[ov$OW].info.state = ba) : (((this.oWw & U) === U) ? (this.buttons[$$O_W].info.state = ba) : (((this.oWw & R) === R) ? (this.buttons[U_O].info.state = ba) : (((this.oWw & N) === N) ? (this.buttons[UO_].info.state = ba) : (((this.oWw & V) === V) ? (this.buttons[O_U$w].info.state = ba) : (((this.oWw & P) === P) ? (this.buttons[vOU].info.state = ba) : (((this.oWw & Q) === Q) ? (this.buttons[vVw].info.state = ba) : (((this.oWw & ma) === ma) ? (this.buttons[vVw].info.state = ba) : (((this.oWw & ra) === ra) ? (this.buttons[vVw].info.state = ba) : (((this.oWw & ec) === ec) ? (this.buttons[vVw].info.state = ba) : (((this.oWw & fc) === fc) ? (this.buttons[vVw].info.state = ba) : (((this.oWw & gc) === gc) ? (this.buttons[vVw].info.state = ba) : (((this.oWw & hc) === hc) ? (this.buttons[vVw].info.state = ba) : (((this.oWw & ca) === ca) ? (this.buttons[U_O].info.state = ba) : (((this.oWw & qb) === qb) ? (this.buttons[U_O].info.state = ba) : (((this.oWw & x) === x) ? (this.buttons[U_O].info.state = ba) : (((this.oWw & T) === T) ? (this.buttons[U_O].info.state = ba) : (((this.oWw & fa) === fa) ? (this.buttons[U_O].info.state = ba) : (((this.oWw & pa) === pa) ? (this.buttons[U_O].info.state = ba) : (((this.oWw & rb) === rb) ? (this.buttons[VvO0U].info.state = ba) : (((this.oWw & za) === za) ? (this.buttons[VvO0U].info.state = ba) : (((this.oWw & ua) === ua) ? (this.buttons[VvO0U].info.state = ba) : (((this.oWw & Ia) === Ia) && (this.buttons[UO_].info.state = ba)))))))))))))))))))))));
                ((this.oWw & U) === U) && ((this.O_W === this.v$U) ? (this.$uo = this.oWO, this.buttons[this.oWO].info.active = H, this.buttons[this.O$v].info.active = H, this.buttons[this.$wv].info.active = H) : (this.buttons[this.oWO].info.active = Z, this.buttons[this.O$v].info.active = Z, this.buttons[this.$wv].info.active = Z), (this.O_W === this.vUuUW) ? (this.buttons[this.vUuUW].info.state = ba) : ((this.O_W === this.ovv_$) ? (this.buttons[this.ovv_$].info.state = ba) : ((this.O_W === this.v$U) ? (this.buttons[this.v$U].info.state = ba) : ((this.O_W === this.UQ$0u) ? (this.buttons[this.UQ$0u].info.state = ba) : ((this.O_W === this.vQVuu) && (this.buttons[this.vQVuu].info.state = ba))))), (this.$uo === this.oWO) ? (this.buttons[this.oWO].info.state = ba) : ((this.$uo === this.O$v) ? (this.buttons[this.O$v].info.state = ba) : ((this.$uo === this.$wv) && (this.buttons[this.$wv].info.state = ba))), (this.VOQ === this.$$_vv) ? (this.buttons[this.$$_vv].info.state = ba) : ((this.VOQ === this.$Vw) ? (this.buttons[this.$Vw].info.state = ba) : ((this.VOQ === this.vQW$V) && (this.buttons[this.vQW$V].info.state = ba))), (this.OWQ === this.Q$W_v) ? (this.buttons[this.Q$W_v].info.state = ba) : ((this.OWQ === this.QOO_0) ? (this.buttons[this.QOO_0].info.state = ba) : ((this.OWQ === this.UovwQ) ? (this.buttons[this.UovwQ].info.state = ba) : ((this.OWQ === this.voV0w) ? (this.buttons[this.voV0w].info.state = ba) : ((this.OWQ === this.VO$U$) && (this.buttons[this.VO$U$].info.state = ba))))));
                ((this.oWw & N) === N) && ((-1 === this.oW$) ? (this.buttons[Ca].info.state = ba) : ((this.oW$ === F.VOo) ? (this.buttons[Ya].info.state = ba) : ((this.oW$ === F.wQ_) ? (this.buttons[Wa].info.state = ba) : ((this.oW$ === F.Uov) ? (this.buttons[ab].info.state = ba) : ((this.oW$ === F.U$O) && (this.buttons[$a].info.state = ba))))), (0 === this.QoQ) ? (this.buttons[Qa].info.state = ba) : ((1 === this.QoQ) ? (this.buttons[da].info.state = ba) : ((2 === this.QoQ) ? (this.buttons[La].info.state = ba) : ((3 === this.QoQ) ? (this.buttons[Bj].info.state = ba) : ((4 === this.QoQ) && (this.buttons[fb].info.state = ba))))));
                (((this.oWw & K) === K) && (0 === oQ.vvu)) && (this.buttons[Ea].VwW(W.Uu) ? (this.buttons[Ea].hint = Math.min(1, this.buttons[Ea].hint + (1.5 * O))) : (this.buttons[Ea].hint = Math.max(0, this.buttons[Ea].hint - (1.5 * O))), this.buttons[Ba].VwW(W.Uu) ? (this.buttons[Ba].hint = Math.min(1, this.buttons[Ba].hint + (1.5 * O))) : (this.buttons[Ba].hint = Math.max(0, this.buttons[Ba].hint - (1.5 * O))), this.buttons[Fa].VwW(W.Uu) ? (this.buttons[Fa].hint = Math.min(1, this.buttons[Fa].hint + (1.5 * O))) : (this.buttons[Fa].hint = Math.max(0, this.buttons[Fa].hint - (1.5 * O))), this.buttons[Yb].VwW(W.Uu) ? (this.buttons[Yb].hint = Math.min(1, this.buttons[Yb].hint + (1.5 * O))) : (this.buttons[Yb].hint = Math.max(0, this.buttons[Yb].hint - (1.5 * O))), this.buttons[S].VwW(W.Uu) ? (this.buttons[S].hint = Math.min(1, this.buttons[S].hint + (1.5 * O))) : (this.buttons[S].hint = Math.max(0, this.buttons[S].hint - (1.5 * O))), this.buttons[Zb].VwW(W.Uu) ? (this.buttons[Zb].hint = Math.min(1, this.buttons[Zb].hint + (1.5 * O))) : (this.buttons[Zb].hint = Math.max(0, this.buttons[Zb].hint - (1.5 * O))));
                d = 1;
                (1 < (this.oWw & (((((ma | ra) | ec) | fc) | gc) | hc))) && (c = o._uOo_, f.save(), f.translate(X, Aa + (c.height / 4)), (1 === this.uo_) && (this.ouV += O / 3, d = this.$UO0O - (100 / Math.pow(1 + this.ouV, 1 + this.ouV)), f.rotate(d)), E(f, c, -c.width / 4, -c.height / 4, c.width / 2, c.height / 2), f.restore());
                (0 === oQ.vvu) && ((oQ.$wV === F.VOo) ? (this.buttons[Ea].info.state = ba) : ((oQ.$wV === F.U$O) ? (this.buttons[Ba].info.state = ba) : ((oQ.$wV === F.wQ_) ? (this.buttons[S].info.state = ba) : ((oQ.$wV === F.Uov) ? (this.buttons[Zb].info.state = ba) : ((oQ.$wV === F.$o_) ? (this.buttons[Fa].info.state = ba) : ((oQ.$wV === F._Vo) && (this.buttons[Yb].info.state = ba)))))));
                for (a = 1; a < this.buttons.length; a++)(this.buttons[a].info.active === Z) && this.buttons[a].uW(f);
                this.vu[0].uW(f);
                (0 < (this.oWw & (va | sa))) && (c = this.OQwWV, E(f, c, X - (c.width / 4), 138, c.width / 2, c.height / 2));
                c = Math.max(1, Math.min(18, Math.floor((G.$u$ + 3) / 2)));
                this.vu[c].active = Z;
                this.vu[c].uW(f);
                this.vu[c].active = H;
                this.buttons[0].uW(f);
                if (1 < (this.oWw & ((((R | qb) | T) | ca) | fa))) {
                    var g = (1 < (this.oWw & (((qb | T) | ca) | fa))) ? -190 : 0,
                        c = u[e.Uwv][this.Vou][this.oVV];
                    E(f, c, (X - (c.width / 4)) + g, 183, c.width / 2, c.height / 2);
                    this.Oo = (this.Oo + (1000 * O)) % 2000;
                    a = (4.5 * (1000 > this.Oo)) ? (this.Oo / 1000) : ((2000 - this.Oo) / 1000);
                    c = u[e.Q_$][this.QwO][this.oVV];
                    E(f, c, (((X - (c.width / 4)) - 62) + a) + g, 240, c.width / 2, c.height / 2);
                    c = u[e.$O_][this.vWO][this.oVV];
                    E(f, c, (((X - (c.width / 4)) - 54) + a) + g, 272, c.width / 2, c.height / 2);
                    E(f, c, (((X - (c.width / 4)) + 54) - a) + g, 272, c.width / 2, c.height / 2);
                    c = u[e.vWW][this.vWO][this.oVV];
                    E(f, c, (X - (c.width / 4)) + g, 222, c.width / 2, c.height / 2);
                    c = u[e.wwV][this.VVw][this.oVV];
                    E(f, c, (X - (c.width / 4)) + g, 222, c.width / 2, c.height / 2);
                }((this.oWw & R) === R) && (c = u[e.wuv][this.V_W][this.oVV], E(f, c, (X - (c.width / 4)) - 61, 406 - (c.height / 4), c.width / 2, c.height / 2), c = u[e.wuv][this.vUQ][this.oVV], E(f, c, (X - (c.width / 4)) + 53, 406 - (c.height / 4), c.width / 2, c.height / 2));
                ((this.oWw & x) === x) && (c = u[e.wuv][this.vUQ][this.oVV], E(f, c, (X - (c.width / 4)) - 200, 268 - (c.height / 4), c.width / 2, c.height / 2));
                ((this.oWw & pa) === pa) && (c = u[e.wuv][this.V_W][this.oVV], E(f, c, (X - (c.width / 4)) - 200, 268 - (c.height / 4), c.width / 2, c.height / 2));
                if (1 < (this.oWw & (((((qb | T) | ca) | fa) | x) | pa))) {
                    for (a = 1; a < this.buttons.length; a++)(0 !== (this.buttons[a].view & this.oWw)) && (g = this.buttons[a].info, (0 <= g.QUV) && (c = g.V_wV_[g.QUV].V_, E(f, c, (g.translate.x - (c.width / 8)) + 44.5, (g.translate.y - (c.height / 8)) + 45.5, c.width / 4, c.height / 4), (1 !== g._QQ_U) && (c = o.wWuou, E(f, c, (g.translate.x - (c.width / 4)) + 44.5, (g.translate.y - (c.height / 4)) + 44.5, c.width / 2, c.height / 2))));
                    c = this.vvW$w;
                    E(f, c, X - 312, 375, c.width / 2, c.height / 2);
                    c = this.vvUoW;
                    E(f, c, X - 312, 395, c.width / 2, c.height / 2);
                }(this._VW !== this.uVvwW) && (this.uVvwW = this._VW, this.OUOVo = pb("" + this._VW, "\'Baloo Paaji\', sans-serif", "#EFE4B4", 60, 250));
                E(f, this.OUOVo, this.vu[0].translate.x + 350, 15, this.OUOVo.w2, this.OUOVo.$UQ);
                (this.$u$ !== this.v0V$O) && (this.v0V$O = this.$u$, this.VuVVO = pb("LVL " + (this.$u$ + 1), "\'Baloo Paaji\', sans-serif", "#EFE4B4", 50, 250, void 0, 30, 24, void 0, void 0, void 0, void 0, "#3F3019", 20));
                E(f, this.VuVVO, this.vu[0].translate.x + 94, 0, this.VuVVO.w2, this.VuVVO.$UQ);
                (0 === oQ.vvu) && (a = this.buttons[Ea].hint, (0 < a) && (c = o.voUU$, E(f, c, X - (c.width / 4), -36 - ((c.height * OQ.wuQ(1 - a)) / 2), c.width / 2, c.height / 2)), a = this.buttons[Ba].hint, (0 < a) && (c = o.QV$Vv, E(f, c, X - (c.width / 4), -36 - ((c.height * OQ.wuQ(1 - a)) / 2), c.width / 2, c.height / 2)), a = this.buttons[Fa].hint, (0 < a) && (c = o.uVw$Q, E(f, c, X - (c.width / 4), -36 - ((c.height * OQ.wuQ(1 - a)) / 2), c.width / 2, c.height / 2)), a = this.buttons[Yb].hint, (0 < a) && (c = o.uU_0v, E(f, c, X - (c.width / 4), -36 - ((c.height * OQ.wuQ(1 - a)) / 2), c.width / 2, c.height / 2)), a = this.buttons[Zb].hint, (0 < a) && (c = o.u_Ov0, E(f, c, X - (c.width / 4), -36 - ((c.height * OQ.wuQ(1 - a)) / 2), c.width / 2, c.height / 2)), a = this.buttons[S].hint, (0 < a) && (c = o.QQVuO, E(f, c, X - (c.width / 4), -36 - ((c.height * OQ.wuQ(1 - a)) / 2), c.width / 2, c.height / 2)));
                ((1 === this.uo_) && (0.006 > Math.abs(d - this.$UO0O))) && (f.globalAlpha = Math.min(1, 3 * this.WQQ), c = o.QvOo0, f.save(), f.translate(X, 260), this.WQQ += O, f.rotate(this.WQQ), E(f, c, -c.width / 2, -c.height / 2, c.width, c.height), f.restore(), a = 1.05 + (0.05 * Math.sin(5 * this.WQQ)), (0 === this.v$O) ? (c = Vwu.U__[this.VuV].V_, d = a * c.width, g = a * c.height, E(f, c, X - (d / 2), 260 - (g / 2), d, g)) : ((1 === this.v$O) ? (c = Vwu.U__[0].V_, d = a * c.width, g = a * c.height, E(f, c, X - (d / 2), 260 - (g / 2), d, g), c = Vwu.wwV[this.VuV].V_, d = a * c.width, g = a * c.height, E(f, c, X - (d / 2), 260 - (g / 2), d, g)) : ((2 === this.v$O) ? (c = Vwu.Uwv[this.VuV].V_, d = a * c.width, g = a * c.height, E(f, c, X - (d / 2), 180 - (g / 2), d, g), c = Vwu.U__[0].V_, d = a * c.width, g = a * c.height, E(f, c, X - (d / 2), 260 - (g / 2), d, g)) : ((3 === this.v$O) ? (c = Vwu.Q_$[this.VuV].V_, d = a * c.width, g = a * c.height, f.save(), f.translate(X, 260), f.rotate(Math.PI), E(f, c, -d / 2, -g / 2, d, g), f.restore()) : ((4 === this.v$O) && (c = Vwu.wuv[this.VuV].V_, d = a * c.width, g = a * c.height, E(f, c, X - (d / 2), 260 - (g / 2), d, g)))))), c = this.VO_WU, E(f, c, X - (c.width / 4), 340, c.width / 2, c.height / 2), c = this._0$uv, E(f, c, X - (c.width / 4), 365, c.width / 2, c.height / 2), (6 < this.WQQ) && (this.uo_ = 0, l(Q)), f.globalAlpha = 1);
                m.alert.uW("#FFF", "#000");
                t.waiting && this.vUw.uW();
            };
            var y = 0,
                K = Math.pow(2, y++),
                N = Math.pow(2, y++);
            this.vwW = N;
            var P = Math.pow(2, y++),
                R = Math.pow(2, y++),
                Q = Math.pow(2, y++),
                V = Math.pow(2, y++),
                U = Math.pow(2, y++),
                ja = Math.pow(2, y++);
            this.Ov_ = ja;
            var na = Math.pow(2, y++),
                ha = Math.pow(2, y++),
                ma = Math.pow(2, y++),
                ra = Math.pow(2, y++),
                ec = Math.pow(2, y++),
                fc = Math.pow(2, y++),
                gc = Math.pow(2, y++),
                hc = Math.pow(2, y++),
                ca = Math.pow(2, y++),
                x = Math.pow(2, y++),
                qb = Math.pow(2, y++),
                T = Math.pow(2, y++),
                fa = Math.pow(2, y++),
                pa = Math.pow(2, y++),
                sa = Math.pow(2, y++),
                va = Math.pow(2, y++),
                rb = Math.pow(2, y++);
            this.OVV = rb;
            var za = Math.pow(2, y++);
            this.wWo = za;
            var ua = Math.pow(2, y++);
            this.o$W = ua;
            var Ia = Math.pow(2, y++);
            this.oWw = K;
            this.oOO_u = 0;
            this.__V = l;
            this._wQW_ = function() {
                t.waiting = false;
                false === t.waiting && (m.reconnect.enabled = false, t.waiting = true, m.QoO_O ? p() : q("https://token.starve.io/token", function(a) {
                    try {
                        var c = a.split("_"),
                            d = c[0] + "_",
                            e = Math.abs(ih(Number(c[1]), 8260, 46947, 8004, 37330, 5330));
                        m.QoO_O = d + e;
                    } catch (f) {}
                    p();
                }, function() {
                    t.waiting = !1;
                }));
            };
            var oa = 1,
                xa = 2,
                I = 4,
                jc = 8,
                J = 16,
                Ka = 32,
                H = 0,
                Z = 1;
            this.woV = (1300 > M.innerWidth) ? ({
                id: document.getElementById("nickname_block"),
                style: document.getElementById("nickname_block").style,
                input: document.getElementById("nickname_input"),
                active: Z,
                position: I | oa,
                view: K,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: 200,
                    u_w: 184
                }
            }) : ({
                id: document.getElementById("nickname_block"),
                style: document.getElementById("nickname_block").style,
                input: document.getElementById("nickname_input"),
                active: Z,
                position: I | J,
                view: K,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: -180,
                    u_w: 184
                }
            });
            this.woV.id.addEventListener("keyup", function(a) {
                a.preventDefault();
                (((13 != a.keyCode) || t.waiting) || t.UQvuv) || t._wQW_();
            });
            this.woV.input.value = OQw.get("starve_nickname") ? OQw.get("starve_nickname") : "";
            this.Uw__U = {
                id: document.getElementById("account_nickname_block"),
                style: document.getElementById("account_nickname_block").style,
                input: document.getElementById("account_nickname_input"),
                active: H,
                position: I | J,
                view: N,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: -122,
                    u_w: 110
                }
            };
            this.VQ_ = (1300 > M.innerWidth) ? ({
                id: document.getElementById("servselect"),
                style: document.getElementById("servselect").style,
                active: Z,
                position: I | oa,
                view: K,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: 208,
                    u_w: 225
                }
            }) : ({
                id: document.getElementById("servselect"),
                style: document.getElementById("servselect").style,
                active: Z,
                position: I | J,
                view: K,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: -180,
                    u_w: 225
                }
            });
            this.uvQ = {
                id: document.getElementById("leaderboard"),
                style: document.getElementById("leaderboard").style,
                active: H,
                position: I | J,
                view: U,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: -294.5,
                    u_w: 190
                }
            };
            this.QO_OW = {
                id: document.getElementById("stats_box"),
                style: document.getElementById("stats_box").style,
                active: H,
                position: I | J,
                view: N,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: 125,
                    u_w: 187
                }
            };
            this._$Wwo = {
                id: document.getElementById("serverAddressBlock"),
                style: document.getElementById("serverAddressBlock").style,
                input: document.getElementById("serverAddressInput"),
                active: H,
                position: I | J,
                view: ua,
                translate: {
                    x: 0,
                    y: 0,
                    oVo: -220,
                    u_w: 350
                }
            };
            y = 0;
            this.wu_ = [];
            this.wu_[y++] = this.woV;
            this.wu_[y++] = this.VQ_;
            this.wu_[y++] = this.uvQ;
            this.wu_[y++] = this.Uw__U;
            this.wu_[y++] = this.QO_OW;
            this.wu_[y++] = this._$Wwo;
            y = 0;
            this.vu = [];
            this.vu[y++] = aa(o.$VWwV, Z, 0, 0, oa);
            this.vu[y++] = aa(o.uvwoO, H, 0, 0, oa);
            this.vu[y++] = aa(o.uQo0u, H, 0, 0, oa);
            this.vu[y++] = aa(o.$Q_vw, H, 0, 0, oa);
            this.vu[y++] = aa(o.wVw0_, H, 0, 0, oa);
            this.vu[y++] = aa(o.ouUw_, H, 0, 0, oa);
            this.vu[y++] = aa(o.u0_ov, H, 0, 0, oa);
            this.vu[y++] = aa(o.UWVoQ, H, 0, 0, oa);
            this.vu[y++] = aa(o._VOVU, H, 0, 0, oa);
            this.vu[y++] = aa(o.WUU_0, H, 0, 0, oa);
            this.vu[y++] = aa(o.VOU_0, H, 0, 0, oa);
            this.vu[y++] = aa(o.u$$w_, H, 0, 0, oa);
            this.vu[y++] = aa(o.UooU_, H, 0, 0, oa);
            this.vu[y++] = aa(o._vUuU, H, 0, 0, oa);
            this.vu[y++] = aa(o.QUuwv, H, 0, 0, oa);
            this.vu[y++] = aa(o.$oU$Q, H, 0, 0, oa);
            this.vu[y++] = aa(o.UwQ_V, H, 0, 0, oa);
            this.vu[y++] = aa(o.VVQO_, H, 0, 0, oa);
            this.vu[y++] = aa(o.uuUW_, H, 0, 0, oa);
            this.vu[y] = (1300 > M.innerWidth) ? aa(o.Uw$uo, Z, 200, 100, I | oa) : aa(o.Uw$uo, Z, -188.25, 100, I | J);
            this.vu[y++].view = K;
            this.vu[y++] = aa(o.wv_oV, Z, 353, -10, xa);
            (1300 < M.innerWidth) && (this.vu[y] = aa(o.w0wwv, Z, -221.25, -159.5, jc | J), this.vu[y++].view = K);
            this.vu[y] = aa(o.QW__u, H, -323.25, 100, I | J);
            this.vu[y++].view = N;
            this.vu[y] = aa(o.$QO$V, H, -356.25, 100, I | J);
            this.vu[y++].view = R;
            this.vu[y] = aa(o.o$V$U, H, -226.25, 50, I | J);
            this.vu[y++].view = P;
            this.vu[y] = aa(o.vuwWw, H, -402, 130, I | J);
            this.vu[y++].view = Q;
            this.vu[y] = aa(o.oO_0v, H, -405.5, 300, I | J);
            this.vu[y++].view = Q;
            this.vu[y] = aa(o.QQVQU, H, -279.25, 130, I | J);
            this.vu[y++].view = rb;
            this.vu[y] = aa(o.wQU0V, H, -305.5, 130, I | J);
            this.vu[y++].view = za;
            this.vu[y] = aa(o.wvWQv, H, -305.5, 100, I | J);
            this.vu[y++].view = ua;
            this.vu[y] = aa(o.WOOWV, H, (-o.WOOWV.width / 4) - 350, -15, I | J);
            this.vu[y++].view = Ia;
            this.vu[y] = aa(o.VowvO, H, -374.25, 110, I | J);
            this.vu[y++].view = V;
            this.vu[y] = aa(o.UOWUw, H, -306.5, 100, I | J);
            this.vu[y++].view = U;
            this.vu[y] = aa(o.u0uuV, H, -345.25, 80, I | J);
            this.vu[y++].view = ja;
            this.vu[y] = aa(o.VOWQQ, H, -385.5, 150, I | J);
            this.vu[y++].view = ma;
            var la = this.u$v([
                ["#25c5d6", 10.8],
                ["#e2cf27", 36],
                ["#afac98", 108],
                ["#d88e23", 3.6 * 57]
            ]);
            this.vu[y] = aa(la, H, -la.width / 4, 178, I | J);
            this.vu[y++].view = ma;
            this.V0VWo = function(a, c, d) {
                t.uo_ = 1;
                t.ouV = 0;
                t.WQQ = 0;
                t.$UO0O = a;
                t.v$O = c;
                var e;
                a = 0;
                if (0 === c) {
                    for (a = 0;
                        (a < Vwu.U__.length) && (d !== Vwu.U__[a].id); a++);
                    e = Vwu.U__[a];
                    t.unlock.vWO[a] = 1;
                } else if (1 === c) {
                    for (a = 0;
                        (a < Vwu.wwV.length) && (d !== Vwu.wwV[a].id); a++);
                    e = Vwu.wwV[a];
                    t.unlock.VVw[a] = 1;
                } else if (2 === c) {
                    for (a = 0;
                        (a < Vwu.Uwv.length) && (d !== Vwu.Uwv[a].id); a++);
                    e = Vwu.Uwv[a];
                    t.unlock.Vou[a] = 1;
                } else if (3 === c) {
                    for (a = 0;
                        (a < Vwu.Q_$.length) && (d !== Vwu.Q_$[a].id); a++);
                    e = Vwu.Q_$[a];
                    t.unlock.QwO[a] = 1;
                } else if (4 === c) {
                    for (a = 0;
                        (a < Vwu.wuv.length) && (d !== Vwu.wuv[a].id); a++);
                    e = Vwu.wuv[a];
                    t.unlock.V_W[a] = 1;
                    t.unlock.vUQ[a] = 1;
                }
                t.VuV = a;
                t._0$uv = pb("by " + e.Qu, "\'Baloo Paaji\', sans-serif", "#EFE4B4", 40, 500, void 0, 30, 24, void 0, void 0, void 0, void 0, "#000000", 24);
                t.VO_WU = pb(e.name, "\'Baloo Paaji\', sans-serif", "#EFE4B4", 60, 600, void 0, 30, 24, void 0, void 0, void 0, void 0, "#000000", 20);
            };
            this.WQQ = this.v$O = this.$UO0O = this.ouV = this.uo_ = 0;
            this.VO_WU = this._0$uv = void 0;
            var Aa = 197;
            this.vu[y] = aa(o.VQwOo, H, -385.5, 150, I | J);
            this.vu[y++].view = gc;
            la = this.u$v([
                ["#d45ce5", 10.8],
                ["#25c5d6", 36],
                ["#e2cf27", 108],
                ["#afac98", 3.6 * 57]
            ]);
            this.vu[y] = aa(la, H, -la.width / 4, 178, I | J);
            this.vu[y++].view = gc;
            this.vu[y] = aa(o.wWWWO, H, -385.5, 150, I | J);
            this.vu[y++].view = ec;
            la = this.u$v([
                ["#d33a2a", 10.8],
                ["#d45ce5", 36],
                ["#25c5d6", 108],
                ["#e2cf27", 3.6 * 57]
            ]);
            this.vu[y] = aa(la, H, -la.width / 4, 178, I | J);
            this.vu[y++].view = ec;
            this.vu[y] = aa(o.OUowv, H, -385.5, 150, I | J);
            this.vu[y++].view = fc;
            la = this.u$v([
                ["#25c5d6", 10.8],
                ["#e2cf27", 36],
                ["#afac98", 108],
                ["#d88e23", 3.6 * 57]
            ]);
            this.vu[y] = aa(la, H, -la.width / 4, 178, I | J);
            this.vu[y++].view = fc;
            this.vu[y] = aa(o._$oVo, H, -385.5, 150, I | J);
            this.vu[y++].view = ra;
            la = this.u$v([
                ["#d45ce5", 10.8],
                ["#25c5d6", 36],
                ["#e2cf27", 108],
                ["#afac98", 3.6 * 57]
            ]);
            this.vu[y] = aa(la, H, -la.width / 4, 178, I | J);
            this.vu[y++].view = ra;
            this.vu[y] = aa(o.__UOo, H, -385.5, 150, I | J);
            this.vu[y++].view = hc;
            la = this.u$v([
                ["#d33a2a", 10.8],
                ["#d45ce5", 36],
                ["#25c5d6", 108],
                ["#e2cf27", 3.6 * 57]
            ]);
            this.vu[y] = aa(la, H, -la.width / 4, 178, I | J);
            this.vu[y++].view = hc;
            this.vu[y] = aa(o.WuOvO, H, -341.5, 100, I | J);
            this.vu[y++].view = ca;
            this.vu[y] = aa(o.owVu$, H, -341.5, 100, I | J);
            this.vu[y++].view = fa;
            this.vu[y] = aa(o._$ouw, H, -341.5, 100, I | J);
            this.vu[y++].view = qb;
            this.vu[y] = aa(o.Qou_v, H, -341.5, 100, I | J);
            this.vu[y++].view = T;
            this.vu[y] = aa(o.WwwvQ, H, -341.5, 100, I | J);
            this.vu[y++].view = x;
            this.vu[y] = aa(o.UQ$OO, H, -341.5, 100, I | J);
            this.vu[y++].view = pa;
            Uuvuw = y++;
            this.vu[Uuvuw] = aa(o.Uuvuw, H, 484, 0, I);
            Uvo0u = y++;
            this.vu[Uvo0u] = aa(o.Uvo0u, H, 812.5, 0, I);
            this.vu[y] = aa(o.vuOOu, H, -189.5, -5, I | J);
            this.vu[y++].view = ha;
            this.vu[y] = aa(o.v0OV_, H, -189.5, -5, I | J);
            this.vu[y++].view = na;
            oow = y++;
            this.vu[oow] = aa(o.UuoQu, Z, 93, 30, I);
            this.vu[y] = aa(o.VUwQW, H, -173, 110, I | J);
            this.vu[y++].view = sa;
            this.vu[y] = aa(o.vQwWV, H, -173, 110, I | J);
            this.vu[y++].view = va;
            y = 0;
            this.buttons = [];
            this.buttons[y++] = n(50, 57, "", [o.v0VVU, o._QvOv, o._O$vO], 1, 0, function() {
                t.Q_v() ? l(ja) : l(P);
            }, 320, 0, oa, Z);
            this.buttons[y] = (1300 > M.innerWidth) ? n(202, 97, "", [o.UwUVU, o.w0vVw, o.wWWU$], 1, 0, this._wQW_, 462, 235, I | oa, Z) : n(202, 97, "", [o.UwUVU, o.w0vVw, o.wWWU$], 1, 0, this._wQW_, 74, 235, I | J, Z);
            this.buttons[y++].view = K;
            (1300 < M.innerWidth) && (this.buttons[y] = n(355, 168, "", [o.Wv$$_, o.Wv$$_, o.Wv$$_], 1, 0, function() {
                M.open("./changelog.html", "_blank");
            }, -195, -115, jc | J, Z), this.buttons[y++].view = K, this.buttons[y] = n(355, 168, "", [o.U0UVw, o.U0UVw, o.U0UVw], 1, 0, function() {
                M.open("https://devast.io", "_blank");
            }, 20, -115, jc | J, Z), this.buttons[y++].view = K);

            $$O_W = y++;
            this.buttons[$$O_W] = n(232, 142, "", [o.vuwww, o._vOu_, o.w$wW$], 1, 0, function() {
                l(U);
                cb(G.oWO, G.v$U, G.$Vw, G.VO$U$);
            }, -5, 573, oa, Z);
            this.buttons[y++] = n(236, 165, "", [o._vvo0, o._vvo0, o._vvo0], 1, 1, function() {
                l(U);
            }, -5, 566, oa, Z);
            O_U$w = y++;
            this.buttons[O_U$w] = n(236, 165, "", [o.OWw, o.v$$, o.uW$], 1, 0, function() {
                l(V);
            }, -5, 494, oa, Z);
            this.buttons[y++] = n(236, 165, "", [o._O$wU, o._O$wU, o._O$wU], 1, 1, function() {
                l(V);
            }, -5, 494, oa, Z);
            VvO0U = y++;
            this.buttons[VvO0U] = n(236, 165, "", [o.OWw, o.v$$, o.uW$], 1, 0, function() {
                t.Q_v() ? ((0 < (G.vu0 - Date.now())) ? l(ua) : l(rb)) : l(P);
            }, -5, 415, oa, Z);
            this.buttons[y++] = n(236, 165, "", [o.W$$_v, o.W$$_v, o.W$$_v], 1, 1, function() {
                t.Q_v() ? ((0 < (G.vu0 - Date.now())) ? l(ua) : l(rb)) : l(P);
            }, -5, 415, oa, Z);
            vVw = y++;
            this.buttons[vVw] = n(236, 165, "", [o.OWw, o.v$$, o.uW$], 1, 0, function() {
                l(Q);
            }, -5, 336, oa, Z);
            this.buttons[y++] = n(236, 165, "", [o.OQOUU, o.OQOUU, o.OQOUU], 1, 1, function() {
                l(Q);
            }, -5, 336, oa, Z);
            U_O = y++;
            this.buttons[U_O] = n(236, 165, "", [o.OWw, o.v$$, o.uW$], 1, 0, function() {
                l(R);
            }, -5, 257, oa, Z);
            this.buttons[y++] = n(236, 165, "", [o.OWw_V, o.OWw_V, o.OWw_V], 1, 1, function() {
                l(R);
            }, -5, 257, oa, Z);
            ov$OW = y++;
            this.buttons[ov$OW] = n(236, 165, "", [o.OWw, o.v$$, o.uW$], 1, 0, function() {
                l(K);
            }, -5, 178, oa, Z);
            this.buttons[y++] = n(236, 165, "", [o.wvv_o, o.wvv_o, o.wvv_o], 1, 1, function() {
                l(K);
            }, -5, 178, oa, Z);
            this.vOU = vOU = y++;
            this.buttons[vOU] = n(324, 222, "", [o.uw$OV, o.wWvU_, o.U0uvQ], 1, 0, function() {
                l(P);
            }, 0, 70, oa, Z);
            UO_ = y++;
            o0u = y++;
            this.UO_ = UO_;
            this.o0u = o0u;
            this.buttons[UO_] = n(324, 222, "", [o.$WvOu, o.VO_QU, o.oWOow], 1, 0, function() {
                l(N);
                r(-1);
            }, 0, 70, oa, H);
            this.buttons[o0u] = n(324, 222, "", [o.uwU$w, o.uwU$w, o.uwU$w], 1, 1, function() {
                l(N);
                r(-1);
            }, 0, 70, oa, H);
            if (0 === oQ.vvu) {
                var Ea = y++;
                this.buttons[Ea] = (1300 > M.innerWidth) ? n(266, 176, "", [o.u0vwU, o.UvQVU, o.VV_$$], 1, 0, function() {
                    oQ._Vu(F.VOo);
                }, 150, 300, oa | I, Z) : n(266, 176, "", [o.u0vwU, o.UvQVU, o.VV_$$], 1, 0, function() {
                    oQ._Vu(F.VOo);
                }, -340, 100, J | I, Z);
                this.buttons[Ea].view = K;
                this.buttons[Ea].hint = 0;
                var Ba = y++;
                this.buttons[Ba] = (1300 > M.innerWidth) ? n(266, 176, "", [o.uQ_vu, o.V$$uU, o.ouUwv], 1, 0, function() {
                    oQ._Vu(F.U$O);
                }, 150, 400, oa | I, Z) : n(266, 176, "", [o.uQ_vu, o.V$$uU, o.ouUwv], 1, 0, function() {
                    oQ._Vu(F.U$O);
                }, -340, 200, J | I, Z);
                this.buttons[Ba].view = K;
                this.buttons[Ba].hint = 0;
                var Fa = y++;
                this.buttons[Fa] = (1300 > M.innerWidth) ? n(266, 176, "", [o.owQOo, o._wWUo, o.vuwU0], 1, 0, function() {
                    oQ._Vu(F.$o_);
                }, 450, 300, oa | I, Z) : n(266, 176, "", [o.owQOo, o._wWUo, o.vuwU0], 1, 0, function() {
                    oQ._Vu(F.$o_);
                }, -340, 300, J | I, Z);
                this.buttons[Fa].view = K;
                this.buttons[Fa].hint = 0;
                var S = y++;
                this.buttons[S] = (1300 > M.innerWidth) ? n(266, 176, "", [o.WVV$v, o.QOWwO, o.Wv$_V], 1, 0, function() {
                    oQ._Vu(F.wQ_);
                }, 300, 300, oa | I, Z) : n(266, 176, "", [o.WVV$v, o.QOWwO, o.Wv$_V], 1, 0, function() {
                    oQ._Vu(F.wQ_);
                }, 204, 100, J | I, Z);
                this.buttons[S].view = K;
                this.buttons[S].hint = 0;
                var Zb = y++;
                this.buttons[Zb] = (1300 > M.innerWidth) ? n(266, 176, "", [o._0_VO, o.OVOoo, o.WOVQV], 1, 0, function() {
                    oQ._Vu(F.Uov);
                }, 300, 400, oa | I, Z) : n(266, 176, "", [o._0_VO, o.OVOoo, o.WOVQV], 1, 0, function() {
                    oQ._Vu(F.Uov);
                }, 204, 200, J | I, Z);
                this.buttons[Zb].view = K;
                this.buttons[Zb].hint = 0;
                var Yb = y++;
                this.buttons[Yb] = n(266, 176, "", [o.uVW$v, o.UOvQw, o._OWUW], 1, 0, function() {
                    oQ._Vu(F._Vo);
                }, (1300 > M.innerWidth) ? 450 : 204, (1300 > M.innerWidth) ? 400 : 300, ((1300 > M.innerWidth) ? oa : J) | I, Z);
                this.buttons[Yb].view = K;
                this.buttons[Yb].hint = 0;
            }
            this.buttons[y] = n(87, 78, "", [o._0uWQ, o.uVowo, o.ouQ_W], 1, 0, function() {
                G.V$wVV();
                (0 === G.o_W) ? l(va): l(sa);
            }, 127, 110, J | I, H);
            this.buttons[y++].view = N;
            this.buttons[y] = n(87, 78, "", [o.QuO$w, o.QU_Uv, o._0o$$], 1, 0, function() {
                ((Qb === nf) && M.FB.getUserID()) && M.FB.logout();
                ((Qb === Sg) && (void 0 !== $b)) && ($b = void 0);
                Qb = Pa = Ta = void 0;
                G.WO_ = 0;
                G._VW = 0;
                G.UOV = 0;
                G.ouWQV();
                uUWw0();
            }, 255, 110, J | I, H);
            this.buttons[y++].view = N;
            this.buttons[y] = n(58, 64, "", [o.VQuu$, o._oW0w, o.Q$UO0], 1, 0, function() {
                l(K);
            }, 189, 118, J | I, H);
            this.buttons[y++].view = P;
            this.buttons[y] = n(497, 72, "", [o.wu_W0, o.vVQ00, o.oVuuQ], 1, 0, function() {
                M.gapi.auth2.getAuthInstance().signIn();
            }, -130, 390, J | I, H);
            this.buttons[y++].view = P;
            this.buttons[y] = n(497, 72, "", [o.WuWOv, o.wUUuU, o.VuQU$], 1, 0, function() {
                Cj();
            }, -130, 430, J | I, H);
            this.buttons[y++].view = P;
            OQOo0 = 20000;
            this.wQWWu = function(a) {
                var b = G.VWo(a),
                    c = (b * b) * OQOo0,
                    b = (((b + 1) * (b + 1)) * OQOo0) - c;
                return (a - c) / b;
            };
            this.VWo = function(a) {
                return Math.floor(Math.sqrt(a / OQOo0));
            };
            this._$_$v = function(a) {
                G.$u$ = G.VWo(a);
                G._O$WQ = G.wQWWu(a);
                G.wou = 0;
                G.UOV = a;
            };
            this.O0OVw = function(a) {
                G.buttons[G.vOU].info.active = 0;
                G.buttons[G.UO_].info.active = 1;
                G.buttons[G.o0u].info.active = 1;
                d();
                (-1 === a.name.indexOf("Starver#")) ? (document.getElementById("account_nickname_input").value = M.decodeURIComponent(M.escape(M.atob(a.name)))) : (document.getElementById("account_nickname_input").value = a.name);
                G._VW = a.bread;
                var c = a.seasons,
                    e = c[c.length - 1];
                G.U_Q = c;
                t._$_$v(e.score);
                G.UOV = e.score;
                G.VQ$ = e.kill;
                G.O0W_W = e.death;
                G.time = e.time;
                G._ouOU = e.bestScore;
                G.OOQ0O = e.bestKill;
                G.wOUu$ = e.bestTime;
                G.QwvVv = e.scoreTotal;
                G.o_W = a.firstName;
                document.getElementById("serverAddressInput").value = "https://starve.io/?server=" + a.privateServer;
                (void 0 === G.o_W) && (G.o_W = 0);
                G.vu0 = Date.now() + a.privateServerTime;
                (0 < Number(a.privateServerTime)) && (G.vu0 = Date.now() + Number(a.privateServerTime));
                G.WO_ = Date.now() + a.kit;
                (0 < Number(a.kit)) && (G.WO_ = Date.now() + Number(a.kit));
                c = Vwu.U__;
                for (e = 0; e < a.skins.length; e++) {
                    var f = a.skins[e];
                    if (0 < f)
                        for (f = 0; f < c.length; f++)(c[f].id === e) && (t.unlock.vWO[f] = 1);
                }
                c = Vwu.wwV;
                for (e = 0; e < a.accessories.length; e++)
                    if (f = a.accessories[e], 0 < f)
                        for (f = 0; f < c.length; f++)(c[f].id === e) && (t.unlock.VVw[f] = 1);
                c = Vwu.Q_$;
                for (e = 0; e < a.books.length; e++)
                    if (f = a.books[e], 0 < f)
                        for (f = 0; f < c.length; f++)(c[f].id === e) && (t.unlock.QwO[f] = 1);
                c = Vwu.Uwv;
                for (e = 0; e < a.bags.length; e++)
                    if (f = a.bags[e], 0 < f)
                        for (f = 0; f < c.length; f++)(c[f].id === e) && (t.unlock.Vou[f] = 1);
                c = Vwu.wuv;
                for (e = 0; e < a.crates.length; e++)
                    if (f = a.crates[e], 0 < f)
                        for (f = 0; f < c.length; f++)(c[f].id === e) && (t.unlock.V_W[f] = 1, t.unlock.vUQ[f] = 1);
            };
            this.OovO0 = function() {
                M.u_Q = function() {
                    l(K);
                    Dj(t.O0OVw);
                };
                (1 === Tg) && M.u_Q();
            };
            M.uUWw0 = function() {
                G.buttons[G.vOU].info.active = 1;
                G.buttons[G.UO_].info.active = 0;
                G.buttons[G.o0u].info.active = 0;
                l(K);
                M.location = "https://starve.io";
            };
            this.Q_v = function() {
                return G.buttons[G.UO_].info.active;
            };
            this.buttons[y] = n(461, 105, "", [o.woUVv, o.w$WU$, o.UWQQU], 1, 0, function() {
                t.Q_v() ? l(ja) : l(P);
            }, -100, 80, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(157, 158, "", [o.o_oVu, o.Vuo0_, o.uoUvO], 1, 0, function() {
                M.open("https://starveiopro.wikia.com/wiki/", "_blank");
            }, -35, 125, J | I, H);
            this.buttons[y++].view = V;
            this.buttons[y] = n(66, 73, "", [o.UVwVU, o.OWOv$, o.UUWv0], 1, 0, void 0, -68, 340, J | I, H);
            this.buttons[y++].view = V;
            this.buttons[y] = n(66, 73, "", [o.OOuVW, o.nbirdA, o.$o$Vu], 1, 0, void 0, -30, 340, J | I, H);
            this.buttons[y++].view = V;
            this.buttons[y] = n(97, 66, "", [o.OVQ_0, o.wQQQQ, o.VWvWu], 1, 0, void 0, -14, 151, J | I, H);
            this.buttons[y++].view = U;
            this.$$_vv = y;
            this.buttons[y] = n(135, 66, "", [o.QuOUU, o.u_$oV, o.VVWwO], 1, 0, function() {
                cb(void 0, void 0, G.$$_vv);
            }, 37.5, 151, J | I, H);
            this.buttons[y++].view = U;
            this.vQW$V = y;
            this.buttons[y] = n(160, 66, "", [o.oO$Uo, o.uWU_Q, o.U0UWU], 1, 0, function() {
                cb(void 0, void 0, G.vQW$V);
            }, 107.5, 151, J | I, H);
            this.buttons[y++].view = U;
            this.$Vw = y;
            this.buttons[y] = n(207, 66, "", [o.wOWvQ, o.uWWQv, o.OQWo$], 1, 0, function() {
                cb(void 0, void 0, G.$Vw);
            }, 190.5, 151, J | I, H);
            this.buttons[y++].view = U;
            this.$wv = y;
            this.buttons[y] = n(144, 66, "", [o.Q0_$V, o.ovu$U, o.W0Wow], 1, 0, function() {
                cb(G.$wv);
            }, 103.5, 110, J | I, H);
            this.buttons[y++].view = U;
            this.O$v = y;
            this.buttons[y] = n(124, 66, "", [o.o_O_U, o.$$OWW, o.ovoo$], 1, 0, function() {
                cb(G.O$v);
            }, 177.5, 110, J | I, H);
            this.buttons[y++].view = U;
            this.oWO = y;
            this.buttons[y] = n(104, 66, "", [o.u$$OV, o.VVovV, o.WwVVW], 1, 0, function() {
                cb(G.oWO);
            }, 242, 110, J | I, H);
            this.buttons[y++].view = U;
            this.Q$W_v = y;
            this.buttons[y] = n(183, 66, "", [o.U$oOv, o.QVwuW, o.wuo$w], 1, 0, function() {
                cb(void 0, void 0, void 0, G.Q$W_v);
            }, -290, 521, J | I, H);
            this.buttons[y++].view = U;
            this.QOO_0 = y;
            this.buttons[y] = n(183, 66, "", [o.v_w__, o.VOWv$, o.wwQvV], 1, 0, function() {
                cb(void 0, void 0, void 0, G.QOO_0);
            }, -185, 521, J | I, H);
            this.buttons[y++].view = U;
            this.UovwQ = y;
            this.buttons[y] = n(183, 66, "", [o.Qu_wO, o.WQQWU, o.QovQ_], 1, 0, function() {
                cb(void 0, void 0, void 0, G.UovwQ);
            }, -80, 521, J | I, H);
            this.buttons[y++].view = U;
            this.voV0w = y;
            this.buttons[y] = n(183, 66, "", [o._Q__o, o.$_uw$, o.UVvVW], 1, 0, function() {
                cb(void 0, void 0, void 0, G.voV0w);
            }, 25, 521, J | I, H);
            this.buttons[y++].view = U;
            this.VO$U$ = y;
            this.buttons[y] = n(183, 66, "", [o.Q$wOW, o.uOwvU, o.QoWvv], 1, 0, function() {
                cb(void 0, void 0, void 0, G.VO$U$);
            }, 130, 521, J | I, H);
            this.buttons[y++].view = U;
            this.buttons[y] = n(232, 352, "", [o.$ovVu, o.V_OUu, o.vWuoQ], 1, 0, function() {
                Ib(300);
            }, -330, 135, J | I, H);
            this.buttons[y++].view = ja;
            this.buttons[y] = n(232, 352, "", [o.UQQou, o.wWvoQ, o.VvQ_v], 1, 0, function() {
                Ib(600);
            }, -195, 135, J | I, H);
            this.buttons[y++].view = ja;
            this.buttons[y] = n(243, 374, "", [o.uOWvV, o._v$Vw, o.uUW$v], 1, 0, function() {
                Ib(2600);
            }, -60, 130, J | I, H);
            this.buttons[y++].view = ja;
            this.buttons[y] = n(232, 352, "", [o.WVQ_$, o.WV$O$, o._$$QW], 1, 0, function() {
                Ib(7000);
            }, 78, 135, J | I, H);
            this.buttons[y++].view = ja;
            this.buttons[y] = n(243, 374, "", [o._WvO0, o.wwO$w, o.wuWwu], 1, 0, function() {
                Ib(20000);
            }, 213, 130, J | I, H);
            this.buttons[y++].view = ja;
            this.buttons[y] = n(58, 64, "", [o.VQuu$, o._oW0w, o.Q$UO0], 1, 0, function() {
                l(Q);
            }, 300, 88, J | I, H);
            this.buttons[y++].view = ja;
            this.buttons[y] = n(323, 112, "", [o.$0u_W, o.__oVu, o._ov$u], 1, 0, function() {
                l(ca);
                bb.wUu();
            }, -315, 185, J | I, H);
            this.buttons[y++].view = R;
            this.buttons[y] = n(323, 112, "", [o.U0wV0, o.$ouoo, o.V0Qw$], 1, 0, function() {
                l(fa);
                ob.wUu();
            }, -315, 321, J | I, H);
            this.buttons[y++].view = R;
            this.buttons[y] = n(323, 112, "", [o.Qo$WQ, o.$VV0$, o.oWvvw], 1, 0, function() {
                l(qb);
                Ra.wUu();
            }, 153, 185, J | I, H);
            this.buttons[y++].view = R;
            this.buttons[y] = n(323, 112, "", [o.w0vO_, o.w0UuW, o.QwQUW], 1, 0, function() {
                l(T);
                eb.wUu();
            }, 153, 321, J | I, H);
            this.buttons[y++].view = R;
            this.buttons[y] = n(323, 112, "", [o.U$ouw, o.WQuoo, o.V$$VU], 1, 0, function() {
                l(x);
                jb.wUu();
            }, 153, 463, J | I, H);
            this.buttons[y++].view = R;
            this.buttons[y] = n(323, 112, "", [o.U0UQw, o._vWvU, o.VouW0], 1, 0, function() {
                l(pa);
                Xa.wUu();
            }, -315, 463, J | I, H);
            this.buttons[y++].view = R;
            this.buttons[y] = n(327, 117, "", [o.wwQVv, o.uuwQv, o.$WOoO], 1, 0, function() {
                l(Ia);
            }, 155, 70, oa, Z);
            this.buttons[y++].view = K;
            this.buttons[y] = n(130, 129, "", [o.$O$uv, o.VQUuO, o.wOVUv], 1, 0, function() {
                h(na, H, "none");
                l(Q);
            }, 10, 40, J | I, H);
            this.buttons[y++].view = na;
            this.buttons[y] = n(130, 129, "", [o.$O$uv, o.VQUuO, o.wOVUv], 1, 0, function() {
                h(ha, H, "none");
                l(Q);
            }, 10, 40, J | I, H);
            this.buttons[y++].view = ha;
            this.buttons[y] = n(390, 278, "", [o.VuQo$, o.u_vVW, o.QQw$V], 1, 0, function() {
                t.Q_v() ? l(rb) : l(P);
            }, -385, 388, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(Q);
            }, 200, 140, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.VOoV$, o.$_V$Q, o.vvOUo], 1, 0, function() {
                db("Atlanta");
            }, -265, 300, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.v0OUW, o.QvOoQ, o.$OU0$], 1, 0, function() {
                db("Dallas");
            }, -130, 300, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.W_Ouv, o.$QQWw, o.OvQwv], 1, 0, function() {
                db("Fremont");
            }, 5, 300, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.u_w00, o.V_uwW, o.uWOvQ], 1, 0, function() {
                db("Newark");
            }, 140, 300, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.U_Ou$, o.v0WU$, o.O$Q$U], 1, 0, function() {
                db("London");
            }, -265, 365, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.UwU$Q, o.$V_Qv, o._W$_w], 1, 0, function() {
                db("Frankfurt");
            }, -130, 365, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.wwV_v, o.U0wUo, o.VU$WU], 1, 0, function() {
                db("Singapore");
            }, 5, 365, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.uOV_0, o.u$ovo, o.QoWVv], 1, 0, function() {
                db("Tokyo");
            }, 140, 365, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.wOV__, o.V_QVo, o.$_uwO], 1, 0, function() {
                db("Toronto");
            }, -265, 430, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(253, 110, "", [o.vWW_W, o.OwQuQ, o.v0voO], 1, 0, function() {
                db("Mumbai");
            }, -130, 430, J | I, H);
            this.buttons[y++].view = rb;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(rb);
            }, 230, 140, J | I, H);
            this.buttons[y++].view = za;
            this.buttons[y] = n(230, 352, "", [o.$QQ0U, o.QvQ0v, o.WVQ_v], 1, 0, function() {
                Ib(350);
            }, -280, 240, J | I, H);
            this.buttons[y++].view = za;
            this.buttons[y] = n(230, 352, "", [o.w$$$$, o.UvvUo, o.O_wvw], 1, 0, function() {
                Ib(700);
            }, -130, 240, J | I, H);
            this.buttons[y++].view = za;
            this.buttons[y] = n(230, 352, "", [o.w0V$u, o.oU_ou, o.u_u0u], 1, 0, function() {
                Ib(1400);
            }, 20, 240, J | I, H);
            this.buttons[y++].view = za;
            this.buttons[y] = n(230, 352, "", [o.U0_W$, o.WVQ$U, o._o$W0], 1, 0, function() {
                Ib(3000);
            }, 170, 240, J | I, H);
            this.buttons[y++].view = za;
            this.buttons[y] = n(105, 119, "", [o.Q_Wu0, o.UOu0U, o.VWu0w], 1, 0, function() {
                document.getElementById("serverAddressInput").select();
                document.execCommand("copy");
            }, 170, 310, J | I, H);
            this.buttons[y++].view = ua;
            this.buttons[y] = n(105, 119, "", [o.WWV_w, o.UUWU_, o.V0Vv0], 1, 0, function() {
                Ej();
            }, 235, 310, J | I, H);
            this.buttons[y++].view = ua;
            this.buttons[y] = n(204, 115, "", [o.uUuu_, o.wUvQ_, o.W0_ou], 1, 0, function() {
                M.open("./commands.html", "_blank");
            }, -265, 490, J | I, H);
            this.buttons[y++].view = ua;
            this.buttons[y] = n(145, 69, "", [o.UQu0$, o.ovOOO, o.uoQw0], 1, 0, function() {
                l(ma);
            }, -210, 170, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(145, 69, "", [o.Qo_ov, o.wU_0W, o._UQuV], 1, 0, function() {
                l(fc);
            }, 70, 170, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(145, 69, "", [o.$UUV$, o._WW0w, o.UwVUW], 1, 0, function() {
                l(ra);
            }, 70, 204, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(145, 69, "", [o.O$W$w, o.WvU_v, o.wuQ_$], 1, 0, function() {
                l(gc);
            }, -210, 204, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(145, 69, "", [o.O$W$w, o.WvU_v, o.wuQ_$], 1, 0, function() {
                l(hc);
            }, 70, 238, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(145, 69, "", [o.O$W$w, o.WvU_v, o.wuQ_$], 1, 0, function() {
                t.Q_v() ? Ug(0, 300) : l(P);
            }, 307, 205, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(145, 69, "", [o.V0$O_, o.__Q0U, o.o0_UU], 1, 0, function() {
                l(ec);
            }, -210, 238, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(145, 69, "", [o.V0$O_, o.__Q0U, o.o0_UU], 1, 0, function() {
                t.Q_v() ? Ug(1, 600) : l(P);
            }, 307, 239, J | I, H);
            this.buttons[y++].view = Q;
            this.buttons[y] = n(192, 101, "", [o.O_UUW, o.QwWou, o.VWw_U], 1, 0, function() {
                Vg();
            }, -100, 250, J | I, H);
            this.buttons[y++].view = va;
            this.buttons[y] = n(192, 104, "", [o.U$$uV, o.__U$o, o.Ow$UO], 1, 0, function() {
                Vg();
            }, -100, 239, J | I, H);
            this.buttons[y++].view = sa;
            this.buttons[y] = n(192, 101, "", [o.VWQ_W, o.Uvv0o, o.UVQQ0], 1, 0, function() {
                l(N);
            }, 10, 250, J | I, H);
            this.buttons[y++].view = va;
            this.buttons[y] = n(192, 104, "", [o.wouQv, o.UW$_$, o.vov_u], 1, 0, function() {
                l(N);
            }, 10, 239, J | I, H);
            this.buttons[y++].view = sa;
            Oou = [];
            Oou[VV.V$v] = [o.V$$Q$, o.OvQW_, o.VOv_Q];
            Oou[VV.vv] = [o.vw$, o.$$U, o._$U];
            Oou[VV.V0] = [o.uVWV_, o._0Vvw, o.W_uv_];
            Oou[VV.$U] = [o.$oovU, o.WUw0O, o.VV$QV];
            Oou[VV.v$] = [o.uQuoQ, o.uWvww, o._Qw_o];
            Oou[VV.$W] = [o.o0OoQ, o.VV$O0, o.wo_O_];
            Oou[VV.w_] = [o._v_wu, o.$UwuV, o.UV$$o];
            Oou[VV.ouv] = [o.WoO_w, o.wQoW$, o.v_Vou];
            Oou[VV.W_v] = [o.UQVw$, o._vW$v, o.wOOvQ];
            QvwOV = y;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 205, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 300, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 395, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 205, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 300, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 395, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 205, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 300, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 395, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(39, 122, "", [o.vuv, o.u$W, o.VW$], 1, 0, void 0, -61, 315, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(39, 122, "", [o.OV$, o.www, o.O_0], 1, 0, void 0, 260, 315, J | I, H);
            this.buttons[y++].view = ca;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(R);
            }, -320, 470, J | I, H);
            this.buttons[y++].view = ca;
            uwVVV = y;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 205, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 300, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 395, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 205, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 300, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 395, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 205, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 300, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 395, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(39, 122, "", [o.vuv, o.u$W, o.VW$], 1, 0, void 0, -61, 315, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(39, 122, "", [o.OV$, o.www, o.O_0], 1, 0, void 0, 260, 315, J | I, H);
            this.buttons[y++].view = fa;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(R);
            }, -320, 470, J | I, H);
            this.buttons[y++].view = fa;
            vOvoQ = y;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 205, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 300, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 395, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 205, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 300, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 395, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 205, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 300, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 395, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(39, 122, "", [o.vuv, o.u$W, o.VW$], 1, 0, void 0, -61, 315, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(39, 122, "", [o.OV$, o.www, o.O_0], 1, 0, void 0, 260, 315, J | I, H);
            this.buttons[y++].view = pa;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(R);
            }, -320, 470, J | I, H);
            this.buttons[y++].view = pa;
            $OWO$ = y;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 205, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 300, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 395, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 205, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 300, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 395, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 205, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 300, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 395, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(39, 122, "", [o.vuv, o.u$W, o.VW$], 1, 0, void 0, -61, 315, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(39, 122, "", [o.OV$, o.www, o.O_0], 1, 0, void 0, 260, 315, J | I, H);
            this.buttons[y++].view = qb;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(R);
            }, -320, 470, J | I, H);
            this.buttons[y++].view = qb;
            $oQoO = y;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 205, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 300, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 395, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 205, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 300, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 395, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 205, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 300, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 395, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(39, 122, "", [o.vuv, o.u$W, o.VW$], 1, 0, void 0, -61, 315, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(39, 122, "", [o.OV$, o.www, o.O_0], 1, 0, void 0, 260, 315, J | I, H);
            this.buttons[y++].view = T;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(R);
            }, -320, 470, J | I, H);
            this.buttons[y++].view = T;
            OVWvV = y;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 205, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 300, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, -29, 395, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 205, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 300, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 65, 395, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 205, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 300, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(178, 182, "", [o.vw$, o.$$U, o._$U], 1, 0, void 0, 159, 395, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(39, 122, "", [o.vuv, o.u$W, o.VW$], 1, 0, void 0, -61, 315, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(39, 122, "", [o.OV$, o.www, o.O_0], 1, 0, void 0, 260, 315, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(R);
            }, -320, 470, J | I, H);
            this.buttons[y++].view = x;
            this.buttons[y] = n(260, 260, "", [o.VwQWv, o.wOu0u, o.VQoOo], 1, 0, function() {
                t.Q_v() ? Hc(3, 50) : l(P);
            }, -65, 197, J | I, H);
            this.buttons[y++].view = fc;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(Q);
            }, 309, 180, J | I, H);
            this.buttons[y++].view = fc;
            this.buttons[y] = n(260, 260, "", [o.wvvoU, o._uowu, o.oQVvO], 1, 0, function() {
                t.Q_v() ? Hc(0, 100) : l(P);
            }, -65, 197, J | I, H);
            this.buttons[y++].view = ma;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(Q);
            }, 309, 180, J | I, H);
            this.buttons[y++].view = ma;
            this.buttons[y] = n(260, 260, "", [o.V$O0O, o.__OuO, o.vowUU], 1, 0, function() {
                t.Q_v() ? Hc(4, 150) : l(P);
            }, -65, 197, J | I, H);
            this.buttons[y++].view = ra;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(Q);
            }, 309, 180, J | I, H);
            this.buttons[y++].view = ra;
            this.buttons[y] = n(260, 260, "", [o.WUwWO, o.U$Q_u, o.wUwvu], 1, 0, function() {
                t.Q_v() ? Hc(1, 300) : l(P);
            }, -65, 197, J | I, H);
            this.buttons[y++].view = gc;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(Q);
            }, 309, 180, J | I, H);
            this.buttons[y++].view = gc;
            this.buttons[y] = n(260, 260, "", [o.$WVUo, o._W_Ow, o.ov$UV], 1, 0, function() {
                t.Q_v() ? Hc(2, 600) : l(P);
            }, -65, 197, J | I, H);
            this.buttons[y++].view = ec;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(Q);
            }, 309, 180, J | I, H);
            this.buttons[y++].view = ec;
            this.buttons[y] = n(260, 260, "", [o.WUwWO, o.U$Q_u, o.wUwvu], 1, 0, function() {
                t.Q_v() ? Hc(5, 300) : l(P);
            }, -65, 197, J | I, H);
            this.buttons[y++].view = hc;
            this.buttons[y] = n(115, 73, "", [o.$wQ, o.UV0, o.ovv], 1, 0, function() {
                l(Q);
            }, 309, 180, J | I, H);
            this.buttons[y++].view = hc;
            var Qa = y;
            this.buttons[y] = n(205, 67, "", [o.W0$QV, o.OvVvO, o.VuQVu], 1, 0, function() {
                r(void 0, 0);
            }, -305, 125, J | I, H);
            this.buttons[y++].view = N;
            var da = y;
            this.buttons[y] = n(205, 67, "", [o.QoV$Q, o.v$_v0, o.oVQu_], 1, 0, function() {
                r(void 0, 1);
            }, -305, 170, J | I, H);
            this.buttons[y++].view = N;
            var La = y;
            this.buttons[y] = n(205, 67, "", [o.OQWuO, o.oQV$V, o.$Qoo0], 1, 0, function() {
                r(void 0, 2);
            }, -305, 215, J | I, H);
            this.buttons[y++].view = N;
            var Bj = y;
            this.buttons[y] = n(205, 67, "", [o.wUsocket, o.uwUov, o.ouQOV], 1, 0, function() {
                r(void 0, 3);
            }, -305, 260, J | I, H);
            this.buttons[y++].view = N;
            var fb = y;
            this.buttons[y] = n(205, 67, "", [o.OQOuO, o.WWQoV, o.uUowW], 1, 0, function() {
                r(void 0, 3);
            }, -305, 305, J | I, H);
            this.buttons[y++].view = N;
            var Ca = y;
            this.buttons[y] = n(460, 73, "", [o.wWQUV, o.w$Quu, o.QwOuV], 1, 0, function() {
                r(-1);
            }, -180, 170, J | I, H);
            this.buttons[y++].view = N;
            var Ya = y;
            this.buttons[y] = n(222, 68, "", [o._u_U_, o.OQuV_, o.V$wVo], 1, 0, function() {
                r(F.VOo);
            }, -180, 215, J | I, H);
            this.buttons[y++].view = N;
            var $a = y;
            this.buttons[y] = n(222, 68, "", [o.w$O$v, o.QVQQv, o.Ovu$0], 1, 0, function() {
                r(F.U$O);
            }, -180, 260, J | I, H);
            this.buttons[y++].view = N;
            var Wa = y;
            this.buttons[y] = n(222, 68, "", [o.u_o0V, o.WVw_V, o._QOvw], 1, 0, function() {
                r(F.wQ_);
            }, -60, 215, J | I, H);
            this.buttons[y++].view = N;
            var ab = y;
            this.buttons[y] = n(222, 68, "", [o.W$vUo, o.uwo0O, o.QvVow], 1, 0, function() {
                r(F.Uov);
            }, -60, 260, J | I, H);
            this.buttons[y++].view = N;
            this.v$U = y;
            this.buttons[y] = n(143, 66, "", [o.$U_UO, o.UouQu, o.wQUOV], 1, 0, function() {
                cb(void 0, G.v$U);
            }, -298, 110, J | I, H);
            this.buttons[y++].view = U;
            this.vUuUW = y;
            this.buttons[y] = n(104, 66, "", [o.OouvQ, o.uVQu0, o.VoW_0], 1, 0, function() {
                cb(void 0, G.vUuUW);
            }, -223, 110, J | I, H);
            this.buttons[y++].view = U;
            this.vQVuu = y;
            this.buttons[y] = n(110, 66, "", [o.u_Ov_, o.W$VUU, o.Wuwu$], 1, 0, function() {
                cb(void 0, G.vQVuu);
            }, -168, 110, J | I, H);
            this.buttons[y++].view = U;
            this.UQ$0u = y;
            this.buttons[y] = n(88, 66, "", [o.U_wUo, o.WQ_OQ, o._UvQV], 1, 0, function() {
                cb(void 0, G.UQ$0u);
            }, -110, 110, J | I, H);
            this.buttons[y++].view = U;
            this.ovv_$ = y;
            this.buttons[y] = n(88, 66, "", [o.Uuv_o, o.OVUuU, o.UUQQo], 1, 0, function() {
                cb(void 0, G.ovv_$);
            }, -63, 110, J | I, H);
            this.buttons[y++].view = U;
            this.buttons[y] = n(86, 44, "", [o.Uvoov, o.wvUQO, o.uwOuV], 1, 0, function() {
                M.open("./terms.html", "_blank");
            }, 349, 290, J | I, H);
            this.buttons[y++].view = Q;
            var bb = new g(Vwu.U__, QvwOV, function(a) {
                    G.vWO = a;
                    if (1 === G.unlock.vWO[a]) OQw.set("starve_skin", "" + a, {
                        expires: 30
                    });
                }, this.vWO, this.unlock.vWO),
                Ra = new g(Vwu.Uwv, $OWO$, function(a) {
                    G.Vou = a;
                    if (1 === G.unlock.Vou[a]) OQw.set("starve_bag", "" + a, {
                        expires: 30
                    });
                }, this.Vou, this.unlock.Vou),
                eb = new g(Vwu.Q_$, $oQoO, function(a) {
                    G.QwO = a;
                    if (1 === G.unlock.QwO[a]) OQw.set("starve_book", "" + a, {
                        expires: 30
                    });
                }, this.QwO, this.unlock.QwO),
                jb = new g(Vwu.wuv, OVWvV, function(a) {
                    G.vUQ = a;
                    if (1 === G.unlock.vUQ[a]) OQw.set("starve_dead", "" + a, {
                        expires: 30
                    });
                }, this.vUQ, this.unlock.vUQ),
                Xa = new g(Vwu.wuv, vOvoQ, function(a) {
                    G.V_W = a;
                    if (1 === G.unlock.V_W[a]) OQw.set("starve_crate", "" + a, {
                        expires: 30
                    });
                }, this.V_W, this.unlock.V_W),
                ob = new g(Vwu.wwV, uwVVV, function(a) {
                    G.VVw = a;
                    if (1 === G.unlock.VVw[a]) OQw.set("starve_accessory", "" + a, {
                        expires: 30
                    });
                }, this.VVw, this.unlock.VVw);
            this.Qw_ = function(a) {
                W.Uu = Ec(t.vV, a);
                for (a = 0; a < t.buttons.length; a++)(t.buttons[a].info.active === Z) && t.buttons[a].UQu(t.vV, W.Uu, 1);
            };
            this.QuQ = function(a) {
                W.Uu = Ec(t.vV, a);
                for (a = 0; a < t.buttons.length; a++) {
                    var c = t.buttons[a];
                    if ((c.info.active === Z) && c.UQu(t.vV, W.Uu, 2)) {
                        c.info.callback();
                        break;
                    }
                }
            };
            this.QOw = !1;
            this.WO0 = function(c) {
                W.Uu = Ec(t.vV, c);
                c = !1;
                for (var d = 0; d < t.buttons.length; d++)(t.buttons[d].info.active === Z) && (c |= t.buttons[d].UQu(t.vV, W.Uu, 0));
                (t.QOw !== c) && (t.QOw = c, a.style.cursor = c ? t.oV$ : t.U$u);
            };
            this.WQwQ$ = function() {
                M.addEventListener("mousedown", this.Qw_, !1);
                M.addEventListener("mouseup", this.QuQ, !1);
                M.addEventListener("mousemove", this.WO0, !1);
            };
            this.vv$WO = function() {
                M.removeEventListener("mousedown", this.Qw_, !1);
                M.removeEventListener("mouseup", this.QuQ, !1);
                M.removeEventListener("mousemove", this.WO0, !1);
            };
        };

        function rd(a, b, e, d, c) {
            a ^= 62008;
            b = (((24 << ((b >> 32) & 255)) + (8 << ((b >> 16) & 255))) + (32 << ((b >> 8) & 255))) + (16 << ((b >> 24) & 255));
            e = ((22695477 * (e + 46531)) + 1) % 4294967296;
            d = (~(d & 1884) & 1884) | (~(1884 & d) & d);
            var f = (~(c & 55588) & 55588) | (~(55588 & c) & c);
            c = Pd(a, b, e, d, f);
            nc(a, b, e, d, f, a);
            a = kd(b, e, d, f, a);
            return ((1664525 * (((c ^ 57467) ^ a) + 3037)) + 1013904223) % 4294967296;
        };

        function Fj(a, g) {
            var w = this;
            this.vV = a;
            this._ = g;
            (-1 < M.navigator.userAgent.indexOf("Edge")) ? (this.U$u = "default", this.oV$ = "pointer") : (this.U$u = "url(\'img/cursor0.png\'), default", this.oV$ = "url(\'img/cursor1.png\'), pointer");
            this.UUV = this.WUw = this.oOQ$w = this.WU0 = 1;
            this.UvuvV = {
                id: document.getElementById("team_box"),
                style: document.getElementById("team_box").style,
                update: function() {
                    this.style.left = Math.floor(X - 125) + "px";
                    this.style.top = "110px";
                }
            };
            this._V$ = {
                WQ_: n(60, 60, "", u[e.Q__]),
                uU0: n(60, 60, "", u[e.VvQ])
            };
            this.sign = {
                open: !1,
                Q_u$$: 0,
                $Vv_u: document.getElementById("sign_object"),
                $uV: 0,
                id: document.getElementById("sign_window"),
                style: document.getElementById("sign_window").style,
                button: n(60, 60, "", u[e._wW]),
                VVUw_: function() {
                    var a = Math.floor((Math.floor((3 + m.Ow._O_.length) / 4) * (10 + u[e.UQw][0].width)) + 35);
                    this.button.info.translate.x = a;
                    this.button.info.translate.y = 22;
                },
                update: function() {
                    this.style.left = Math.floor(X - 150) + "px";
                    this.style.top = Math.floor(ea - 115) + "px";
                },
                wv0: function() {
                    C.sign.style.display = "none";
                    C.sign.open = !1;
                },
                select: function() {
                    C.sign.open = !C.sign.open;
                    C.sign.style.display = C.sign.open ? "inline-block" : "none";
                },
                ok: function() {
                    oQ.U_QQO(m.sign.O$Q, C.sign.$uV);
                    C.sign.select();
                },
                uoQ: function() {
                    C.sign.$uV = (0 === C.sign.$uV) ? (sa.$$woV - 1) : (C.sign.$uV - 1);
                    C.sign.$Vv_u.src = ("./img/sign" + C.sign.$uV) + ".png";
                },
                uwW: function() {
                    C.sign.$uV = (C.sign.$uV + 1) % sa.$$woV;
                    C.sign.$Vv_u.src = ("./img/sign" + C.sign.$uV) + ".png";
                }
            };
            document.getElementById("quit_sign").addEventListener("mouseup", this.sign.select, !1);
            document.getElementById("ok_sign").addEventListener("mouseup", this.sign.ok, !1);
            document.getElementById("sign_up").addEventListener("mouseup", this.sign.uoQ, !1);
            document.getElementById("sign_down").addEventListener("mouseup", this.sign.uwW, !1);
            this.vO$ = {
                open: !1,
                id: document.getElementById("shop_market"),
                style: document.getElementById("shop_market").style,
                items: [{
                    id: 0,
                    name: "wood",
                    Uu0: 1,
                    b: 1,
                    a: 3,
                    OuV: e.UQw
                }, {
                    id: 1,
                    name: "stone",
                    Uu0: 1,
                    b: 1,
                    a: 4,
                    OuV: e.O_$
                }, {
                    id: 2,
                    name: "gold",
                    Uu0: 1,
                    b: 1,
                    a: 6,
                    OuV: e.__O
                }, {
                    id: 3,
                    name: "diamond",
                    Uu0: 4,
                    b: 4,
                    a: 1,
                    OuV: e.V$W
                }, {
                    id: 4,
                    name: "amethyst",
                    Uu0: 8,
                    b: 8,
                    a: 1,
                    OuV: e.uO0
                }, {
                    id: 5,
                    name: "reidite",
                    Uu0: 16,
                    b: 16,
                    a: 1,
                    OuV: e.wvQ
                }, {
                    id: 6,
                    name: "pumpkin_seed",
                    Uu0: 10,
                    b: 10,
                    a: 1,
                    OuV: e.w_U
                }, {
                    id: 7,
                    name: "carrot_seed",
                    Uu0: 16,
                    b: 16,
                    a: 1,
                    OuV: e.vVU
                }, {
                    id: 8,
                    name: "tomato_seed",
                    Uu0: 20,
                    b: 20,
                    a: 1,
                    OuV: e.socket
                }, {
                    id: 9,
                    name: "thornbush_seed",
                    Uu0: 30,
                    b: 30,
                    a: 1,
                    OuV: e._QQ
                }, {
                    id: 10,
                    name: "garlic_seed",
                    Uu0: 40,
                    b: 40,
                    a: 1,
                    OuV: e.u$O
                }, {
                    id: 11,
                    name: "watermelon_seed",
                    Uu0: 60,
                    b: 60,
                    a: 1,
                    OuV: e.oQQ
                }],
                button: n(60, 60, "", u[e.o_o]),
                update: function() {
                    this.style.left = Math.floor(X - 450) + "px";
                    this.style.top = Math.floor(ea - 270) + "px";
                },
                select: function() {
                    C.vO$.open = !C.vO$.open;
                    C.vO$.style.display = C.vO$.open ? "inline-block" : "none";
                },
                wv0: function() {
                    C.vO$.style.display = "none";
                    C.vO$.open = !1;
                },
                o_Qow: function() {
                    oQ.O0_Vv(this.$ou);
                },
                uvu: function() {
                    var a = (1 === this.$ou.a) ? Math.floor(Number(this.value) * this.$ou.b) : Math.floor(Number(this.value) / this.$ou.a);
                    this.$ou.Uu0 = a;
                    document.getElementById(this.$ou.name + "_trad_number").innerHTML = a + "";
                }
            };
            document.getElementById("quit_market").addEventListener("mouseup", this.vO$.wv0, !1);
            for (var d = [
                    ["mouseup", this.vO$.o_Qow, "buy_"],
                    ["click", this.vO$.uvu, ""],
                    ["change", this.vO$.uvu, ""],
                    ["keypress", this.vO$.keypress, ""]
                ], c = 0; c < this.vO$.items.length; c++) {
                var r = this.vO$.items[c];
                document.getElementById(r.name + "_market").src = (void 0 === u[r.OuV][0].$Ov) ? u[r.OuV][0].src : u[r.OuV][0].$Ov;
                (1 === r.a) ? (document.getElementById(r.name + "_trad_number").innerHTML = r.b, document.getElementById(r.name + "_number").value = 1, document.getElementById(r.name + "_number").step = 1, document.getElementById(r.name + "_number").min = 1, document.getElementById(r.name + "_number").max = Math.floor(255 / r.b)) : (document.getElementById(r.name + "_trad_number").innerHTML = 1, document.getElementById(r.name + "_number").value = r.a, document.getElementById(r.name + "_number").step = r.a, document.getElementById(r.name + "_number").min = r.a);
                document.getElementById(("buy_" + r.name) + "_number").$ou = r;
                document.getElementById(r.name + "_number").$ou = r;
                for (var L = 0; L < d.length; L++) document.getElementById((d[L][2] + r.name) + "_number").addEventListener(d[L][0], d[L][1], !1);
            }
            $("[type=\'number\']").keypress(function(a) {
                a.preventDefault();
            });
            this.options = {
                open: !1,
                id: document.getElementById("option_in_game"),
                style: document.getElementById("option_in_game").style,
                QuW: document.getElementById("agree_ing").style,
                voUoV: document.getElementById("cancel_agree_ing").style,
                O0QUW: document.getElementById("quest_agree_ing").style,
                UvO0$: document.getElementById("spectator_agree_ing").style,
                oUQQ$: document.getElementById("auto_feed_agree_ing").style,
                wvVQ0: document.getElementById("info_agree_ing").style,
                _OVv0: document.getElementById("pixelated_agree_ing").style,
                button: n(60, 60, "", u[e.w$O]),
                QuVUQ: function() {
                    C.options.open = !C.options.open;
                    C.options.style.display = C.options.open ? "inline-block" : "none";
                },
                UvUuO: function() {
                    G.$VV();
                },
                QQQvu: function() {
                    G.Qovoo();
                },
                high: function() {
                    G.vQ$Vv();
                },
                low: function() {
                    G.OUOVV();
                },
                $wW: function() {
                    C.W$W.$wW();
                },
                Oo$uu: function() {
                    C.vvO.$wW();
                },
                uuoWw: function() {
                    C.oWo.$wW();
                },
                UoWWU: function() {
                    m.$UW.$Qo();
                },
                O0Wuu: function() {
                    m.WQV.$Qo();
                },
                wv0: function() {
                    C.options.style.display = "none";
                    C.options.open = !1;
                },
                update: function() {
                    this.style.left = Math.floor(X - 235) + "px";
                    this.style.top = Math.floor(ea - 170) + "px";
                }
            };
            document.getElementById("azerty_ing").addEventListener("mouseup", this.options.UvUuO, !1);
            document.getElementById("qwerty_ing").addEventListener("mouseup", this.options.QQQvu, !1);
            document.getElementById("low_ing").addEventListener("mouseup", this.options.low, !1);
            document.getElementById("high_ing").addEventListener("mouseup", this.options.high, !1);
            document.getElementById("quit_opt").addEventListener("mouseup", this.options.wv0, !1);
            document.getElementById("case_agree_opt").addEventListener("mouseup", this.options.$wW, !1);
            document.getElementById("quest_case_agree_opt").addEventListener("mouseup", this.options.uuoWw, !1);
            document.getElementById("cancel_case_agree_opt").addEventListener("mouseup", this.options.Oo$uu, !1);
            document.getElementById("spectator_case_agree_opt").addEventListener("mouseup", this.options.UoWWU, !1);
            document.getElementById("auto_feed_case_agree_opt").addEventListener("mouseup", this.options.O0Wuu, !1);
            this.vvO = {
                open: !1,
                _wO: OQw.get("starve_cancel") ? (("0" === OQw.get("starve_cancel")) ? 0 : 1) : 1,
                id: document.getElementById("cancel_sure_delete"),
                style: document.getElementById("cancel_sure_delete").style,
                QuW: document.getElementById("cancel_agree").style,
                button: 0,
                u$: 0,
                wv0: function() {
                    C.vvO.style.display = "none";
                    C.vvO.open = !1;
                },
                VoUw0: function() {
                    m.Ow.W$V && oQ.VWoUV();
                    C.vvO.wv0();
                },
                $wW: function() {
                    C.vvO._wO ? (OQw.set("starve_cancel", "0"), C.vvO.QuW.display = "inline-block", C.options.voUoV.display = "none") : (OQw.set("starve_cancel", "1"), C.vvO.QuW.display = "none", C.options.voUoV.display = "inline-block");
                    C.vvO._wO = !C.vvO._wO;
                },
                _u$$u: function() {
                    this._wO ? (this.style.display = "inline-block", this.open = !0) : this.VoUw0();
                },
                update: function() {
                    this.style.left = Math.floor(X - 235) + "px";
                    this.style.top = Math.floor(ea - 130) + "px";
                }
            };
            this.vvO.id.oncontextmenu = function() {
                return !1;
            };
            this.vvO.QuW.display = "none";
            this.options.voUoV.display = this.vvO._wO ? "inline-block" : "none";
            document.getElementById("cancel_yes_delete").addEventListener("mouseup", this.vvO.VoUw0, !1);
            document.getElementById("cancel_no_delete").addEventListener("mouseup", this.vvO.wv0, !1);
            document.getElementById("cancel_case_agree").addEventListener("mouseup", this.vvO.$wW, !1);
            document.addEventListener("cancel_sure_delete", function(a) {
                a.preventDefault();
            }, !1);
            this.uUW = {
                _wO: OQw.get("starve_aliasing") ? (("0" === OQw.get("starve_aliasing")) ? 0 : 1) : 1,
                WVO$0: function(a) {
                    a ? (document.getElementById("game_canvas").style.WouWO = "pixelated") : (document.getElementById("game_canvas").style.WouWO = "auto");
                },
                $wW: function() {
                    (0 === C.uUW._wO) ? (OQw.set("starve_aliasing", "1"), C.uUW.WVO$0(1), C.options._OVv0.display = "inline-block") : (OQw.set("starve_aliasing", "0"), C.uUW.WVO$0(0), C.options._OVv0.display = "none");
                    C.uUW._wO = (C.uUW._wO + 1) % 2;
                }
            };
            (1 === this.uUW._wO) ? (this.options._OVv0.display = "inline-block") : (this.uUW.WVO$0(0), this.options._OVv0.display = "none");
            document.getElementById("pixelated_case_agree_opt").addEventListener("mouseup", this.uUW.$wW, !1);
            this.Uvw = {
                _wO: OQw.get("starve_info_box") ? (("0" === OQw.get("starve_info_box")) ? 0 : 1) : 1,
                display: 0,
                x: 0,
                y: 0,
                id: 0,
                Ow: 0,
                $wW: function() {
                    (0 === C.Uvw._wO) ? (OQw.set("starve_info_box", "1"), C.options.wvVQ0.display = "inline-block") : (OQw.set("starve_info_box", "0"), C.options.wvVQ0.display = "none");
                    C.Uvw._wO = (C.Uvw._wO + 1) % 2;
                },
                UQu: function(a, c, d) {
                    (a && this._wO) && (this.display = 1, this.id = (0 === d) ? c.id : La[c.id].UU, this.x = c.info.translate.x + 80, this.y = c.info.translate.y, this.Ow = d);
                    return a;
                }
            };
            this.options.wvVQ0.display = (1 === this.Uvw._wO) ? "inline-block" : "none";
            document.getElementById("info_case_agree_opt").addEventListener("mouseup", this.Uvw.$wW, !1);
            OQw.get("starve_scale") && (Va = Number(OQw.get("starve_scale")), document.getElementById("input_ratio").value = Va, Va *= md / nd, ld());
            this.Vu_w$ = function() {
                OQw.set("starve_scale", "" + document.getElementById("input_ratio").value);
                Va = document.getElementById("input_ratio").value * (md / nd);
                ld();
            };
            document.getElementById("input_ratio").addEventListener("input", this.Vu_w$, !1);
            this.W$W = {
                open: !1,
                _wO: OQw.get("starve_safe") ? (("0" === OQw.get("starve_safe")) ? 0 : 1) : 1,
                id: document.getElementById("sure_delete"),
                style: document.getElementById("sure_delete").style,
                QuW: document.getElementById("agree").style,
                button: 0,
                u$: 0,
                wv0: function() {
                    C.W$W.style.display = "none";
                    C.W$W.open = !1;
                },
                all: function() {
                    m.QVW.wait || ((((0 > m.Ow.wWV) && (0 > m.Ow.id)) && !m.QW0.enabled) && oQ.U$$uU(C.W$W.button), C.W$W.wv0());
                },
                wV: function() {
                    (m.Ow.Vo_ && !m.QVW.wait) && ((((0 > m.Ow.wWV) && (0 > m.Ow.id)) && !m.QW0.enabled) && oQ.UOO_Q(C.W$W.button), C.W$W.wv0());
                },
                OU_U_: function() {
                    m.QVW.wait || ((((0 > m.Ow.wWV) && (0 > m.Ow.id)) && !m.QW0.enabled) && oQ.oUowU(C.W$W.button), C.W$W.wv0());
                },
                $wW: function() {
                    C.W$W._wO ? (OQw.set("starve_safe", "0"), C.W$W.QuW.display = "inline-block", C.options.QuW.display = "none") : (OQw.set("starve_safe", "1"), C.W$W.QuW.display = "none", C.options.QuW.display = "inline-block");
                    C.W$W._wO = !C.W$W._wO;
                },
                _u$$u: function(a) {
                    this.button = a;
                    document.getElementById("item_to_del").src = (void 0 === u[D[a].Vv][0].$Ov) ? u[D[a].Vv][0].src : u[D[a].Vv][0].$Ov;
                    ((D[a].wV && !m.$_o) && m.Ow.Vo_) ? (document.getElementById("recycle_delete").style.display = "inline-block") : (document.getElementById("recycle_delete").style.display = "none");
                    if (this._wO) this.style.display = "inline-block", this.open = !0;
                    else this.all();
                },
                update: function() {
                    this.style.left = Math.floor(X - 235) + "px";
                    this.style.top = Math.floor(ea - 175) + "px";
                }
            };
            this.W$W.QuW.display = "none";
            this.options.QuW.display = this.W$W._wO ? "inline-block" : "none";
            document.getElementById("one_delete").addEventListener("mouseup", this.W$W.OU_U_, !1);
            document.getElementById("yes_delete").addEventListener("mouseup", this.W$W.all, !1);
            document.getElementById("recycle_delete").addEventListener("mouseup", this.W$W.wV, !1);
            document.getElementById("no_delete").addEventListener("mouseup", this.W$W.wv0, !1);
            document.getElementById("case_agree").addEventListener("mouseup", this.W$W.$wW, !1);
            this.Oo_ = {
                open: !1,
                WO_: -1,
                button: n(60, 60, "", u[e.uo$]),
                id: document.getElementById("shop_starterkit"),
                style: document.getElementById("shop_starterkit").style,
                update: function() {
                    this.style.left = Math.floor(X - 300) + "px";
                    this.style.top = Math.floor(ea - 215) + "px";
                },
                wv0: function() {
                    C.Oo_.open = !1;
                    C.Oo_.style.display = "none";
                },
                select: function() {
                    C.Oo_.open = !C.Oo_.open;
                    C.Oo_.style.display = C.Oo_.open ? "inline-block" : "none";
                },
                o_Qow: function() {
                    (0 <= C.Oo_.WO_) && (oQ.Uwu0U(C.Oo_.WO_), C.Oo_.wv0(), ga && ga("send", "event", "Game", "kit", "" + C.Oo_.WO_));
                },
                UvU: function() {
                    var a = m.Oo_.value;
                    document.getElementById("points_bank").innerHTML = OQ.$w$(a) + " points";
                    for (var c = 0; c < Jd.length; c++)(Jd[c].uO$ > a) ? (document.getElementById("starter" + (c + 1)).style.opacity = "0.4") : (document.getElementById("starter" + (c + 1)).style.opacity = "1");
                    for (c = 1; 13 > c; c++) document.getElementById("inv_shop" + c).src = "./img/empty-shop.png", document.getElementById("amount_shop" + c).innerHTML = "";
                    document.getElementById("buy_kit").style.opacity = "0.2";
                },
                Wu$U_: function() {
                    var a = (8 < this.id.length) ? Number(this.id.charAt(7) + this.id.charAt(8)) : Number(this.id.charAt(7)),
                        c = Jd[a - 1];
                    (m.Oo_.value >= c.uO$) ? (C.Oo_.WO_ = a, document.getElementById("buy_kit").style.opacity = "1") : (C.Oo_.WO_ = -1, document.getElementById("buy_kit").style.opacity = "0.2");
                    for (var c = c.items, d = a = 1; a < (c.length + 1); a++)(c[a - 1][1] !== f.Uwv) && (document.getElementById("inv_shop" + d).style.display = "inline-block", document.getElementById("inv_shop" + d).src = (void 0 === u[D[c[a - 1][1]].Vv][0].$Ov) ? u[D[c[a - 1][1]].Vv][0].src : u[D[c[a - 1][1]].Vv][0].$Ov, document.getElementById("amount_shop" + d).innerHTML = "" + c[a - 1][0], d++);
                    for (; 13 > d; d++) document.getElementById("inv_shop" + d).src = "./img/empty-shop.png", document.getElementById("amount_shop" + d).innerHTML = "";
                }
            };
            document.getElementById("quit3").addEventListener("mouseup", this.Oo_.wv0, !1);
            document.getElementById("buy_kit").addEventListener("mouseup", this.Oo_.o_Qow, !1);
            for (L = 1; 11 > L; L++) document.getElementById("starter" + L).addEventListener("mouseup", this.Oo_.Wu$U_, !1);
            this.oWo = {
                open: !1,
                _wO: OQw.get("starve_quests") ? (("1" === OQw.get("starve_quests")) ? 1 : 0) : 0,
                button: n(60, 60, "", u[e.wVO]),
                id: document.getElementById("chronoquest"),
                style: document.getElementById("chronoquest").style,
                update: function() {
                    this.style.left = Math.floor(X - 420) + "px";
                    this.style.top = Math.floor(ea - 270) + "px";
                },
                wv0: function() {
                    C.oWo.style.display = "none";
                    C.oWo.open = !1;
                },
                select: function() {
                    C.oWo.open = !C.oWo.open;
                    C.oWo.style.display = C.oWo.open ? "inline-block" : "none";
                },
                list: [],
                reset: function() {
                    for (var a = 0; a < Kd.length; a++) this.list[a] = 1, document.getElementById("timeremain_" + a).style.display = "inline-block", document.getElementById("time_finished_" + a).style.display = "none", document.getElementById("claim_reward_" + a).style.display = "none";
                },
                QWuu_: 0,
                vwo: 0,
                WooUO: function() {
                    if (C.oWo.open) {
                        var a = (new Date).getTime();
                        if (!(1000 > (a - this.QWuu_))) {
                            this.QWuu_ = a;
                            for (var c = 0; c < Kd.length; c++)
                                if (C.oWo.list[c]) {
                                    var d = Kd[c].time - ((a - p.OOO.UvU) + C.oWo.vwo);
                                    (960000 < d) ? (document.getElementById("timeremain_" + c).innerHTML = Math.floor(d / 480000) + " days") : ((480000 < d) ? (document.getElementById("timeremain_" + c).innerHTML = Math.floor(d / 480000) + " day") : ((60000 < d) ? (document.getElementById("timeremain_" + c).innerHTML = Math.floor(d / 60000) + " min") : (document.getElementById("timeremain_" + c).innerHTML = Math.floor(d / 1000) + " sec")));
                                }
                        }
                    }
                },
                restore: function(a) {
                    for (var c = 0; c < a.length; c++)(1 != a[c]) && C.oWo.Q_VUW(c, a[c]);
                },
                Q_VUW: function(a, c) {
                    ((3 !== c) || ((11 !== a) && (12 !== a))) || (m.wW.Wuo(0, 1), C.$o$());
                    document.getElementById("timeremain_" + a).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
                    (1 < c) ? (document.getElementById("time_finished_" + a).innerHTML = "SUCCEED", document.getElementById("timeremain_" + a).style.display = "none") : ((0 === c) && (document.getElementById("time_finished_" + a).innerHTML = "FAILED", document.getElementById("timeremain_" + a).style.display = "none"));
                    (2 === c) ? (document.getElementById("claim_reward_" + a).style.display = "inline-block") : (document.getElementById("claim_reward_" + a).style.display = "none");
                    document.getElementById("time_finished_" + a).style.display = "inline";
                    C.oWo.list[a] = 0;
                },
                modify: function(a, c) {
                    C.oWo.Q_VUW(a, c);
                    C.oWo._wO && (C.oWo.open = !0, C.oWo.style.display = "inline-block");
                },
                $wW: function() {
                    C.oWo._wO ? (OQw.set("starve_quests", "0"), C.options.O0QUW.display = "none") : (OQw.set("starve_quests", "1"), C.options.O0QUW.display = "inline-block");
                    C.oWo._wO = !C.oWo._wO;
                },
                $_Ow$: function() {
                    var a = Number(this.id.charAt(13)),
                        c = Number(this.id.charAt(14));
                    ((("" !== this.id.charAt(14)) && (0 <= c)) && (9 >= c)) && (a = (10 * a) + c);
                    oQ.U_OWO(a);
                }
            };
            this.options.O0QUW.display = this.oWo._wO ? "inline-block" : "none";
            document.getElementById("quit_chronoquest").addEventListener("mouseup", this.oWo.wv0, !1);
            for (L = 0; L < Kd.length; L++) document.getElementById("claim_reward_" + L).addEventListener("mouseup", this.oWo.$_Ow$, !1);
            this.uVO = {
                open: !1,
                button: n(60, 60, "", u[e.uOQ]),
                list: {
                    id: document.getElementById("recipe_craft"),
                    style: document.getElementById("recipe_craft").style,
                    vWu: [],
                    u0$: 0,
                    update: function() {
                        this.style.left = Math.floor(X - 335) + "px";
                        this.style.top = Math.floor(ea - 215) + "px";
                    },
                    wv0: function() {
                        document.getElementById("recipe_craft").style.display = "none";
                        C.uVO.open = !1;
                    },
                    VuUWW: function() {
                        document.getElementById("recipe_craft").style.display = "none";
                        document.getElementById("home_craft").style.display = "inline-block";
                    },
                    ovo: function(a) {
                        var c = this.vWu[a];
                        c.Uo ? (document.getElementById("watercraft").style.display = "inline-block") : (document.getElementById("watercraft").style.display = "none");
                        c.f ? (document.getElementById("firecraft").style.display = "inline-block") : (document.getElementById("firecraft").style.display = "none");
                        c.w ? (document.getElementById("workcraft").style.display = "inline-block") : (document.getElementById("workcraft").style.display = "none");
                        c.e ? (document.getElementById("wellcraft").style.display = "inline-block") : (document.getElementById("wellcraft").style.display = "none");
                        c = c.r;
                        a = 0;
                        for (var d = 1; a < c.length; a++) document.getElementById("inv" + d).style.display = "inline-block", document.getElementById("inv" + d).src = (void 0 === u[D[c[a][0]].Vv][0].$Ov) ? u[D[c[a][0]].Vv][0].src : u[D[c[a][0]].Vv][0].$Ov, document.getElementById("numb" + d).innerHTML = "" + c[a][1], d++;
                        for (; 6 > d; d++) document.getElementById("inv" + d).style.display = "none", document.getElementById("numb" + d).innerHTML = "";
                    },
                    select: function(a) {
                        this.u0$ = a;
                        document.getElementById("home_craft").style.display = "none";
                        document.getElementById("workcraft").style.display = "none";
                        document.getElementById("firecraft").style.display = "none";
                        document.getElementById("watercraft").style.display = "none";
                        document.getElementById("wellcraft").style.display = "none";
                        document.getElementById("recipe_craft").style.display = "inline-block";
                        document.getElementById("inv1").style.display = "none";
                        document.getElementById("inv2").style.display = "none";
                        document.getElementById("inv3").style.display = "none";
                        document.getElementById("inv4").style.display = "none";
                        document.getElementById("inv5").style.display = "none";
                        document.getElementById("numb1").innerHTML = "";
                        document.getElementById("numb2").innerHTML = "";
                        document.getElementById("numb3").innerHTML = "";
                        document.getElementById("numb4").innerHTML = "";
                        document.getElementById("numb5").innerHTML = "";
                        for (var c = 0, d = 0; c < La.length; c++) {
                            var e = La[c];
                            (a === e.wU) && (this.vWu[d] = e, d++, document.getElementById("img_" + d).style.display = "inline-block", document.getElementById("img_" + d).src = (void 0 === u[D[e.UU].Vv][0].$Ov) ? u[D[e.UU].Vv][0].src : u[D[e.UU].Vv][0].$Ov);
                        }
                        for (d++; 49 > d; d++) document.getElementById("img_" + d).style.display = "none";
                    }
                },
                VQuuW: {
                    id: document.getElementById("home_craft"),
                    style: document.getElementById("home_craft").style,
                    update: function() {
                        this.style.left = Math.floor(X - 285) + "px";
                        this.style.top = Math.floor(ea - 170) + "px";
                    },
                    wv0: function() {
                        document.getElementById("home_craft").style.display = "none";
                        C.uVO.open = !1;
                    }
                },
                QvQu0: function() {
                    this.open = !this.open;
                    this.open ? (document.getElementById("home_craft").style.display = "inline-block") : (document.getElementById("home_craft").style.display = "none", document.getElementById("recipe_craft").style.display = "none");
                }
            };
            document.getElementById("quit").addEventListener("mouseup", this.uVO.VQuuW.wv0, !1);
            document.getElementById("quitmenu").addEventListener("mouseup", this.uVO.list.wv0, !1);
            document.getElementById("backhome").addEventListener("mouseup", this.uVO.list.VuUWW, !1);
            document.getElementById("hatcategory").addEventListener("mouseup", function() {
                C.uVO.list.select(K.QVo);
            }, !1);
            document.getElementById("weaponcategory").addEventListener("mouseup", function() {
                C.uVO.list.select(K.VO$);
            }, !1);
            document.getElementById("toolcategory").addEventListener("mouseup", function() {
                C.uVO.list.select(K.$WO);
            }, !1);
            document.getElementById("foodcategory").addEventListener("mouseup", function() {
                C.uVO.list.select(K.uU$);
            }, !1);
            document.getElementById("placeablecategory").addEventListener("mouseup", function() {
                C.uVO.list.select(K.UvQ);
            }, !1);
            document.getElementById("constructioncategory").addEventListener("mouseup", function() {
                C.uVO.list.select(K.Vuu);
            }, !1);
            document.getElementById("img_1").addEventListener("mousedown", function() {
                C.uVO.list.ovo(0);
            }, !1);
            document.getElementById("img_2").addEventListener("mousedown", function() {
                C.uVO.list.ovo(1);
            }, !1);
            document.getElementById("img_3").addEventListener("mousedown", function() {
                C.uVO.list.ovo(2);
            }, !1);
            document.getElementById("img_4").addEventListener("mousedown", function() {
                C.uVO.list.ovo(3);
            }, !1);
            document.getElementById("img_5").addEventListener("mousedown", function() {
                C.uVO.list.ovo(4);
            }, !1);
            document.getElementById("img_6").addEventListener("mousedown", function() {
                C.uVO.list.ovo(5);
            }, !1);
            document.getElementById("img_7").addEventListener("mousedown", function() {
                C.uVO.list.ovo(6);
            }, !1);
            document.getElementById("img_8").addEventListener("mousedown", function() {
                C.uVO.list.ovo(7);
            }, !1);
            document.getElementById("img_9").addEventListener("mousedown", function() {
                C.uVO.list.ovo(8);
            }, !1);
            document.getElementById("img_10").addEventListener("mousedown", function() {
                C.uVO.list.ovo(9);
            }, !1);
            document.getElementById("img_11").addEventListener("mousedown", function() {
                C.uVO.list.ovo(10);
            }, !1);
            document.getElementById("img_12").addEventListener("mousedown", function() {
                C.uVO.list.ovo(11);
            }, !1);
            document.getElementById("img_13").addEventListener("mousedown", function() {
                C.uVO.list.ovo(12);
            }, !1);
            document.getElementById("img_14").addEventListener("mousedown", function() {
                C.uVO.list.ovo(13);
            }, !1);
            document.getElementById("img_15").addEventListener("mousedown", function() {
                C.uVO.list.ovo(14);
            }, !1);
            document.getElementById("img_16").addEventListener("mousedown", function() {
                C.uVO.list.ovo(15);
            }, !1);
            document.getElementById("img_17").addEventListener("mousedown", function() {
                C.uVO.list.ovo(16);
            }, !1);
            document.getElementById("img_18").addEventListener("mousedown", function() {
                C.uVO.list.ovo(17);
            }, !1);
            document.getElementById("img_19").addEventListener("mousedown", function() {
                C.uVO.list.ovo(18);
            }, !1);
            document.getElementById("img_20").addEventListener("mousedown", function() {
                C.uVO.list.ovo(19);
            }, !1);
            document.getElementById("img_21").addEventListener("mousedown", function() {
                C.uVO.list.ovo(20);
            }, !1);
            document.getElementById("img_22").addEventListener("mousedown", function() {
                C.uVO.list.ovo(21);
            }, !1);
            document.getElementById("img_23").addEventListener("mousedown", function() {
                C.uVO.list.ovo(22);
            }, !1);
            document.getElementById("img_24").addEventListener("mousedown", function() {
                C.uVO.list.ovo(23);
            }, !1);
            document.getElementById("img_25").addEventListener("mousedown", function() {
                C.uVO.list.ovo(24);
            }, !1);
            document.getElementById("img_26").addEventListener("mousedown", function() {
                C.uVO.list.ovo(25);
            }, !1);
            document.getElementById("img_27").addEventListener("mousedown", function() {
                C.uVO.list.ovo(26);
            }, !1);
            document.getElementById("img_28").addEventListener("mousedown", function() {
                C.uVO.list.ovo(27);
            }, !1);
            document.getElementById("img_29").addEventListener("mousedown", function() {
                C.uVO.list.ovo(28);
            }, !1);
            document.getElementById("img_30").addEventListener("mousedown", function() {
                C.uVO.list.ovo(29);
            }, !1);
            document.getElementById("img_31").addEventListener("mousedown", function() {
                C.uVO.list.ovo(30);
            }, !1);
            document.getElementById("img_32").addEventListener("mousedown", function() {
                C.uVO.list.ovo(31);
            }, !1);
            document.getElementById("img_33").addEventListener("mousedown", function() {
                C.uVO.list.ovo(32);
            }, !1);
            document.getElementById("img_34").addEventListener("mousedown", function() {
                C.uVO.list.ovo(33);
            }, !1);
            document.getElementById("img_35").addEventListener("mousedown", function() {
                C.uVO.list.ovo(34);
            }, !1);
            document.getElementById("img_36").addEventListener("mousedown", function() {
                C.uVO.list.ovo(35);
            }, !1);
            document.getElementById("img_37").addEventListener("mousedown", function() {
                C.uVO.list.ovo(36);
            }, !1);
            document.getElementById("img_38").addEventListener("mousedown", function() {
                C.uVO.list.ovo(37);
            }, !1);
            document.getElementById("img_39").addEventListener("mousedown", function() {
                C.uVO.list.ovo(38);
            }, !1);
            document.getElementById("img_40").addEventListener("mousedown", function() {
                C.uVO.list.ovo(39);
            }, !1);
            document.getElementById("img_41").addEventListener("mousedown", function() {
                C.uVO.list.ovo(40);
            }, !1);
            document.getElementById("img_42").addEventListener("mousedown", function() {
                C.uVO.list.ovo(41);
            }, !1);
            document.getElementById("img_43").addEventListener("mousedown", function() {
                C.uVO.list.ovo(42);
            }, !1);
            document.getElementById("img_44").addEventListener("mousedown", function() {
                C.uVO.list.ovo(43);
            }, !1);
            document.getElementById("img_45").addEventListener("mousedown", function() {
                C.uVO.list.ovo(44);
            }, !1);
            document.getElementById("img_46").addEventListener("mousedown", function() {
                C.uVO.list.ovo(45);
            }, !1);
            document.getElementById("img_47").addEventListener("mousedown", function() {
                C.uVO.list.ovo(46);
            }, !1);
            document.getElementById("img_48").addEventListener("mousedown", function() {
                C.uVO.list.ovo(47);
            }, !1);
            this._u_ = {
                translate: {
                    x: 0,
                    y: 0
                },
                _Wo: {
                    x: -1,
                    y: -1
                },
                UO: [],
                focus: function(a) {
                    var c = this.translate.y + ((0 < m.wW.OWU.length) ? -120 : -50);
                    ((((a.x > this.translate.x) && (a.x < (this.translate.x + 193))) && (a.y > c)) && (a.y < (c + 193))) && (this._Wo.x = a.x - this.translate.x, this._Wo.y = a.y - c);
                }
            };
            this.uvQ = {
                translate: {
                    x: 0,
                    y: 0
                },
                Vv: u[e.$$w$Q],
                vV: document.createElement("canvas")
            };
            this.uvQ.vV.width = this.uvQ.Vv.width;
            this.uvQ.vV.height = this.uvQ.Vv.height;
            this.uvQ._ = this.uvQ.vV.getContext("2d");
            this.OWW = {
                translate: {
                    x: 0,
                    y: 0
                },
                Vv: u[e.vwovO],
                uW: gi,
                y: 0
            };
            this.VQO$V = function() {
                _wV = document.getElementById("team_box");
                _wV.innerHTML = "";
                _wV.innerHTML += ('<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>' + p.UO[m.uoU[0]].woV) + "</div";
                for (var a = 1; a < m.uoU.length; a++) _wV.innerHTML += ('<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">' + p.UO[m.uoU[a]].woV) + "</div></div>";
                _wV.innerHTML += '<div id=\"leave\" style=\"display:inline-block;\">LEAVE</div></div>';
                _wV.style.display = "inline-block";
                document.getElementById("leave").addEventListener("click", oQ.VQO$V, !1);
            };
            this.VOvVW = function() {
                _wV = document.getElementById("team_box");
                _wV.innerHTML = "";
                _wV.innerHTML += ('<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>' + p.UO[m.uoU[0]].woV) + "</div";
                for (var a = 1; a < m.uoU.length; a++) _wV.innerHTML += ('<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">' + p.UO[m.uoU[a]].woV) + "</div></div>";
                _wV.innerHTML += "</div>";
                _wV.style.display = "inline-block";
            };
            this.vvQuu = function() {
                _wV = document.getElementById("team_box");
                _wV.innerHTML = "";
                _wV.innerHTML += ('<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>' + p.UO[m.uoU[0]].woV) + "</div";
                for (var a = 1; a < m.uoU.length; a++) _wV.innerHTML += ((('<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">' + p.UO[m.uoU[a]].woV) + '</div><div class=\"eject_member\" id=\"eject_member') + a) + '\"><img src=\"./img/close-team.png\" style=\"width:20px;padding:5px;\"></img></div>';
                _wV.innerHTML = (0 === m._OV.lock) ? (_wV.innerHTML + '<div id=\"lock_team\" style=\"display:inline-block;\">LOCK</div></div>') : (_wV.innerHTML + '<div id=\"lock_team\" style=\"display:inline-block;\">UNLOCK</div></div>');
                document.getElementById("lock_team").addEventListener("click", oQ._VWU$, !1);
                _wV.style.display = "inline-block";
                for (a = 1; a < m.uoU.length; a++) switch (a) {
                    case 1:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(1);
                        }, !1);
                        break;
                    case 2:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(2);
                        }, !1);
                        break;
                    case 3:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(3);
                        }, !1);
                        break;
                    case 4:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(4);
                        }, !1);
                        break;
                    case 5:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(5);
                        }, !1);
                        break;
                    case 6:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(6);
                        }, !1);
                        break;
                    case 7:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(7);
                        }, !1);
                        break;
                    case 8:
                        document.getElementById("eject_member" + a).addEventListener("click", function() {
                            oQ.UOW(8);
                        }, !1);
                }
            };
            this.oQV = [];
            this.oQV[sa.QV_uO] = {
                button: n(60, 60, "", u[e._VO]),
                action: this.VQO$V
            };
            this.oQV[sa.QUVQQ] = {
                button: n(60, 60, "", u[e._VO]),
                action: oQ.uU$wW
            };
            this.oQV[sa.WvoVo] = {
                button: n(60, 60, "", u[e.WvW]),
                action: this.vvQuu
            };
            this.oQV[sa.wOVwu] = {
                button: n(60, 60, "", u[e.WuU]),
                action: this.VOvVW
            };
            this.oQV[sa.__$QW] = {
                button: n(60, 60, "", u[e.O_Q]),
                action: function() {}
            };
            this.wO0 = -1;
            this.QVU = n(60, 60, "", u[e.wQVvw]);
            this.Ouu = n(60, 60, "", u[e.QQuwO]);
            this.$OWUU = n(60, 60, "", u[e.wV_Q_]);
            this.W0OW0 = n(60, 60, "", u[e.UUwwQ]);
            this.vQw = n(60, 60, "", u[e.wV_Q_]);
            this.uVOwo = n(60, 60, "", u[e.UQw]);
            this.vVV = n(60, 60, "", u[e.O_$]);
            this.wvu = n(60, 60, "", u[e.__O]);
            this.VUv = n(60, 60, "", u[e.V$W]);
            this.Qwv = n(60, 60, "", u[e.uO0]);
            this._wQ = n(60, 60, "", u[e.wvQ]);
            this.vuoOv = n(60, 60, "", u[e.oO_v0]);
            this.OvQ = n(60, 60, "", u[e.VUV]);
            this.VUo = n(60, 60, "", u[e._Wv]);
            this._u_$$ = n(60, 60, "", u[e.__W]);
            this.WUV = n(120, 120, "", u[e.WQw]);
            this.WUV.info.translate.x = 10;
            this.WUV.info.translate.y = 10;
            this.wv = [];
            this.wv[f.QvW] = n(68, 68, "", u[e.vw$wV], 3);
            this.wv[f.QvW].id = f.QvW;
            this.wv[f.oOo] = n(68, 68, "", u[e.$_$Qw], 3);
            this.wv[f.oOo].id = f.oOo;
            this.wv[f.V0] = n(68, 68, "", u[e.vuuwv], 3);
            this.wv[f.V0].id = f.V0;
            this.wv[f.vv] = n(68, 68, "", u[e.$WOOv], 3);
            this.wv[f.vv].id = f.vv;
            this.wv[f.Q$_] = n(68, 68, "", u[e.oOwOU], 3);
            this.wv[f.Q$_].id = f.Q$_;
            this.wv[f.VWw] = n(68, 68, "", u[e.V$uWw], 3);
            this.wv[f.VWw].id = f.VWw;
            this.wv[f.$U] = n(68, 68, "", u[e._Uv0$], 3);
            this.wv[f.$U].id = f.$U;
            this.wv[f.v$] = n(68, 68, "", u[e.oW_Uu], 3);
            this.wv[f.v$].id = f.v$;
            this.wv[f.QWu] = n(68, 68, "", u[e.uuvUW], 3);
            this.wv[f.QWu].id = f.QWu;
            this.wv[f.OQv] = n(68, 68, "", u[e.uuow_], 3);
            this.wv[f.OQv].id = f.OQv;
            this.wv[f.$Vu] = n(68, 68, "", u[e._Ov0w], 3);
            this.wv[f.$Vu].id = f.$Vu;
            this.wv[f.WvU] = n(68, 68, "", u[e.$QwOw], 3);
            this.wv[f.WvU].id = f.WvU;
            this.wv[f.WU_] = n(68, 68, "", u[e.w0vuv], 3);
            this.wv[f.WU_].id = f.WU_;
            this.wv[f.$uu] = n(68, 68, "", u[e.vQvov], 3);
            this.wv[f.$uu].id = f.$uu;
            this.wv[f.oOQ] = n(68, 68, "", u[e.oVo0O], 3);
            this.wv[f.oOQ].id = f.oOQ;
            this.wv[f.vUu] = n(68, 68, "", u[e.wO$0$], 3);
            this.wv[f.vUu].id = f.vUu;
            this.wv[f._OW] = n(68, 68, "", u[e.o_ouw], 3);
            this.wv[f._OW].id = f._OW;
            this.wv[f.oV_] = n(68, 68, "", u[e.wQovw], 3);
            this.wv[f.oV_].id = f.oV_;
            this.wv[f.$ov] = n(68, 68, "", u[e.QoQVW], 3);
            this.wv[f.$ov].id = f.$ov;
            this.wv[f.Qvv] = n(68, 68, "", u[e.uVuwu], 3);
            this.wv[f.Qvv].id = f.Qvv;
            this.wv[f.Wo_] = n(68, 68, "", u[e.V$_Q_], 3);
            this.wv[f.Wo_].id = f.Wo_;
            this.wv[f.$ow] = n(68, 68, "", u[e.$wVoO], 3);
            this.wv[f.$ow].id = f.$ow;
            this.wv[f._Ww] = n(68, 68, "", u[e.QwQ0o], 3);
            this.wv[f._Ww].id = f._Ww;
            this.wv[f._$$] = n(68, 68, "", u[e.Q_$$u], 3);
            this.wv[f._$$].id = f._$$;
            this.wv[f.OwO] = n(68, 68, "", u[e.__U_O], 3);
            this.wv[f.OwO].id = f.OwO;
            this.wv[f.uVv] = n(68, 68, "", u[e.o0UOU], 3);
            this.wv[f.uVv].id = f.uVv;
            this.wv[f.Wvw] = n(68, 68, "", u[e.oW$wo], 3);
            this.wv[f.Wvw].id = f.Wvw;
            this.wv[f.Vw_] = n(68, 68, "", u[e.WoU$0], 3);
            this.wv[f.Vw_].id = f.Vw_;
            this.wv[f.V$Q] = n(68, 68, "", u[e.uOooo], 3);
            this.wv[f.V$Q].id = f.V$Q;
            this.wv[f.wuW] = n(68, 68, "", u[e.QV_V$], 3);
            this.wv[f.wuW].id = f.wuW;
            this.wv[f.uuo] = n(68, 68, "", u[e.$U__w], 3);
            this.wv[f.uuo].id = f.uuo;
            this.wv[f._w0] = n(68, 68, "", u[e.$0Oou], 3);
            this.wv[f._w0].id = f._w0;
            this.wv[f.vwU] = n(68, 68, "", u[e.UWQV_], 3);
            this.wv[f.vwU].id = f.vwU;
            this.wv[f.QW_] = n(68, 68, "", u[e.Q$OQv], 3);
            this.wv[f.QW_].id = f.QW_;
            this.wv[f.QuO] = n(68, 68, "", u[e.WVoW_], 3);
            this.wv[f.QuO].id = f.QuO;
            this.wv[f.wU$] = n(68, 68, "", u[e.OoWVo], 3);
            this.wv[f.wU$].id = f.wU$;
            this.wv[f.o$0] = n(68, 68, "", u[e.QvVW0], 3);
            this.wv[f.o$0].id = f.o$0;
            this.wv[f.QUU] = n(68, 68, "", u[e.vvuOo], 3);
            this.wv[f.QUU].id = f.QUU;
            this.wv[f.WwW] = n(68, 68, "", u[e.wOW0o], 3);
            this.wv[f.WwW].id = f.WwW;
            this.wv[f._UQ] = n(68, 68, "", u[e.UOv$$], 3);
            this.wv[f._UQ].id = f._UQ;
            this.wv[f.wvV] = n(68, 68, "", u[e.wuwV$], 3);
            this.wv[f.wvV].id = f.wvV;
            this.wv[f.u_v] = n(68, 68, "", u[e.vQVV$], 3);
            this.wv[f.u_v].id = f.u_v;
            this.wv[f.vO0] = n(68, 68, "", u[e.vQvuQ], 3);
            this.wv[f.vO0].id = f.vO0;
            this.wv[f.u$w] = n(68, 68, "", u[e.vvvuv], 3);
            this.wv[f.u$w].id = f.u$w;
            this.wv[f.$Uu] = n(68, 68, "", u[e.VwVu_], 3);
            this.wv[f.$Uu].id = f.$Uu;
            this.wv[f.$v$] = n(68, 68, "", u[e.OvQV$], 3);
            this.wv[f.$v$].id = f.$v$;
            this.wv[f.ow_] = n(68, 68, "", u[e.WVVoV], 3);
            this.wv[f.ow_].id = f.ow_;
            this.wv[f.wo0] = n(68, 68, "", u[e.WUWu_], 3);
            this.wv[f.wo0].id = f.wo0;
            this.wv[f.___] = n(68, 68, "", u[e.uVuoO], 3);
            this.wv[f.___].id = f.___;
            this.wv[f.UoQ] = n(68, 68, "", u[e.VVw_$], 3);
            this.wv[f.UoQ].id = f.UoQ;
            this.wv[f.oo0] = n(68, 68, "", u[e.$oWVw], 3);
            this.wv[f.oo0].id = f.oo0;
            this.wv[f.$uv] = n(68, 68, "", u[e.UoWvU], 3);
            this.wv[f.$uv].id = f.$uv;
            this.wv[f.oOO] = n(68, 68, "", u[e.u$ov0], 3);
            this.wv[f.oOO].id = f.oOO;
            this.wv[f.QwQ] = n(68, 68, "", u[e.$$U_v], 3);
            this.wv[f.QwQ].id = f.QwQ;
            this.wv[f.O__] = n(68, 68, "", u[e.uvOOo], 3);
            this.wv[f.O__].id = f.O__;
            this.wv[f.o_v] = n(68, 68, "", u[e.V_V_O], 3);
            this.wv[f.o_v].id = f.o_v;
            this.wv[f.wwo] = n(68, 68, "", u[e.WQOV0], 3);
            this.wv[f.wwo].id = f.wwo;
            this.wv[f.VWO] = n(68, 68, "", u[e.W0QOo], 3);
            this.wv[f.VWO].id = f.VWO;
            this.wv[f.WuO] = n(68, 68, "", u[e.vWUOw], 3);
            this.wv[f.WuO].id = f.WuO;
            this.wv[f.$w0] = n(68, 68, "", u[e.wuQQw], 3);
            this.wv[f.$w0].id = f.$w0;
            this.wv[f._vW] = n(68, 68, "", u[e.wvVQ$], 3);
            this.wv[f._vW].id = f._vW;
            this.wv[f.$Ow] = n(68, 68, "", u[e.Vw$wV], 3);
            this.wv[f.$Ow].id = f.$Ow;
            this.wv[f.OWv] = n(68, 68, "", u[e.OUUQ_], 3);
            this.wv[f.OWv].id = f.OWv;
            this.wv[f.uuu] = n(68, 68, "", u[e.OQwQV], 3);
            this.wv[f.uuu].id = f.uuu;
            this.wv[f.w$Q] = n(68, 68, "", u[e.Vvo_W], 3);
            this.wv[f.w$Q].id = f.w$Q;
            this.wv[f.VWQ] = n(68, 68, "", u[e.VUu$_], 3);
            this.wv[f.VWQ].id = f.VWQ;
            this.wv[f.OQW] = n(68, 68, "", u[e.__vwQ], 3);
            this.wv[f.OQW].id = f.OQW;
            this.wv[f.wQO] = n(68, 68, "", u[e.OwOo_], 3);
            this.wv[f.wQO].id = f.wQO;
            this.wv[f.UWW] = n(68, 68, "", u[e.WQOou], 3);
            this.wv[f.UWW].id = f.UWW;
            this.wv[f.UwW] = n(68, 68, "", u[e.WQWo$], 3);
            this.wv[f.UwW].id = f.UwW;
            this.wv[f.VWv] = n(68, 68, "", u[e.Qvwo0], 3);
            this.wv[f.VWv].id = f.VWv;
            this.wv[f.Wv_] = n(68, 68, "", u[e.WVUv_], 3);
            this.wv[f.Wv_].id = f.Wv_;
            this.wv[f.vOV] = n(68, 68, "", u[e.vwOWQ], 3);
            this.wv[f.vOV].id = f.vOV;
            this.wv[f.wQo] = n(68, 68, "", u[e.$UuUu], 3);
            this.wv[f.wQo].id = f.wQo;
            this.wv[f.vvU] = n(68, 68, "", u[e.uOOow], 3);
            this.wv[f.vvU].id = f.vvU;
            this.wv[f.vvo] = n(68, 68, "", u[e._uVVO], 3);
            this.wv[f.vvo].id = f.vvo;
            this.wv[f._U$] = n(68, 68, "", u[e.wUUOO], 3);
            this.wv[f._U$].id = f._U$;
            this.wv[f.vOO] = n(68, 68, "", u[e.OwOuu], 3);
            this.wv[f.vOO].id = f.vOO;
            this.wv[f.uou] = n(68, 68, "", u[e.wOWVW], 3);
            this.wv[f.uou].id = f.uou;
            this.wv[f._O$] = n(68, 68, "", u[e.W_wV$], 3);
            this.wv[f._O$].id = f._O$;
            this.wv[f.Q_$] = n(68, 68, "", u[e.uWW_u], 3);
            this.wv[f.Q_$].id = f.Q_$;
            this.wv[f.vOu] = n(68, 68, "", u[e.VV$uW], 3);
            this.wv[f.vOu].id = f.vOu;
            this.wv[f.Uwv] = n(68, 68, "", u[e._owOW], 3);
            this.wv[f.Uwv].id = f.Uwv;
            this.wv[f.$W] = n(68, 68, "", u[e.voU$W], 3);
            this.wv[f.$W].id = f.$W;
            this.wv[f.w$v] = n(68, 68, "", u[e.wOuU$], 3);
            this.wv[f.w$v].id = f.w$v;
            this.wv[f.UuV] = n(68, 68, "", u[e.oQu_W], 3);
            this.wv[f.UuV].id = f.UuV;
            this.wv[f._v_] = n(68, 68, "", u[e.vuUVV], 3);
            this.wv[f._v_].id = f._v_;
            this.wv[f.V_V] = n(68, 68, "", u[e.vwUV0], 3);
            this.wv[f.V_V].id = f.V_V;
            this.wv[f._uV] = n(68, 68, "", u[e.wOOQu], 3);
            this.wv[f._uV].id = f._uV;
            this.wv[f.oQw] = n(68, 68, "", u[e.QUw$V], 3);
            this.wv[f.oQw].id = f.oQw;
            this.wv[f.UQV] = n(68, 68, "", u[e.wQw0O], 3);
            this.wv[f.UQV].id = f.UQV;
            this.wv[f.wvo] = n(68, 68, "", u[e.uUOVW], 3);
            this.wv[f.wvo].id = f.wvo;
            this.wv[f.$OU] = n(68, 68, "", u[e.uoUWO], 3);
            this.wv[f.$OU].id = f.$OU;
            this.wv[f.VQ0] = n(68, 68, "", u[e.uV_o_], 3);
            this.wv[f.VQ0].id = f.VQ0;
            this.wv[f.$wu] = n(68, 68, "", u[e.WWO0U], 3);
            this.wv[f.$wu].id = f.$wu;
            this.wv[f.QwW] = n(68, 68, "", u[e.Qvv$w], 3);
            this.wv[f.QwW].id = f.QwW;
            this.wv[f.VuQ] = n(68, 68, "", u[e.u0uuW], 3);
            this.wv[f.VuQ].id = f.VuQ;
            this.wv[f.vvW] = n(68, 68, "", u[e.UO_$W], 3);
            this.wv[f.vvW].id = f.vvW;
            this.wv[f.v__] = n(68, 68, "", u[e.vwuWV], 3);
            this.wv[f.v__].id = f.v__;
            this.wv[f.UVO] = n(68, 68, "", u[e.VWQwO], 3);
            this.wv[f.UVO].id = f.UVO;
            this.wv[f.$WQ] = n(68, 68, "", u[e.vVoW$], 3);
            this.wv[f.$WQ].id = f.$WQ;
            this.wv[f.vQQ] = n(68, 68, "", u[e.owQ_W], 3);
            this.wv[f.vQQ].id = f.vQQ;
            this.wv[f.WQw] = n(68, 68, "", u[e.OowVo], 3);
            this.wv[f.WQw].id = f.WQw;
            this.wv[f.vWV] = n(68, 68, "", u[e.o0_$U], 3);
            this.wv[f.vWV].id = f.vWV;
            this.wv[f._UO] = n(68, 68, "", u[e.vwvuU], 3);
            this.wv[f._UO].id = f._UO;
            this.wv[f.UoU] = n(68, 68, "", u[e.wv$wu], 3);
            this.wv[f.UoU].id = f.UoU;
            this.wv[f.Ww$] = n(68, 68, "", u[e.Ou$wQ], 3);
            this.wv[f.Ww$].id = f.Ww$;
            this.wv[f.wOu] = n(68, 68, "", u[e.vU$uW], 3);
            this.wv[f.wOu].id = f.wOu;
            this.wv[f.vvV] = n(68, 68, "", u[e.w0W0W], 3);
            this.wv[f.vvV].id = f.vvV;
            this.wv[f.OQ$] = n(68, 68, "", u[e.$_UuU], 3);
            this.wv[f.OQ$].id = f.OQ$;
            this.wv[f.UWU] = n(68, 68, "", u[e.wvouV], 3);
            this.wv[f.UWU].id = f.UWU;
            this.wv[f.VuU] = n(68, 68, "", u[e.UVvV0], 3);
            this.wv[f.VuU].id = f.VuU;
            this.wv[f.uQW] = n(68, 68, "", u[e.uUoO0], 3);
            this.wv[f.uQW].id = f.uQW;
            this.wv[f.vOv] = n(68, 68, "", u[e.WVo$v], 3);
            this.wv[f.vOv].id = f.vOv;
            this.wv[f.U_u] = n(68, 68, "", u[e.oOuwV], 3);
            this.wv[f.U_u].id = f.U_u;
            this.wv[f.w$U] = n(68, 68, "", u[e.$oQW$], 3);
            this.wv[f.w$U].id = f.w$U;
            this.wv[f.$Uo] = n(68, 68, "", u[e.ou$Vv], 3);
            this.wv[f.$Uo].id = f.$Uo;
            this.wv[f.OW$] = n(68, 68, "", u[e.vVV0$], 3);
            this.wv[f.OW$].id = f.OW$;
            this.wv[f.$ww] = n(68, 68, "", u[e.vouoV], 3);
            this.wv[f.$ww].id = f.$ww;
            this.wv[f.uU_] = n(68, 68, "", u[e.WoU00], 3);
            this.wv[f.uU_].id = f.uU_;
            this.wv[f.vww] = n(68, 68, "", u[e.VoV$Q], 3);
            this.wv[f.vww].id = f.vww;
            this.wv[f.uUO] = n(68, 68, "", u[e.VQvwW], 3);
            this.wv[f.uUO].id = f.uUO;
            this.wv[f.QQu] = n(68, 68, "", u[e.oUUUw], 3);
            this.wv[f.QQu].id = f.QQu;
            this.wv[f.vvv] = n(68, 68, "", u[e.uVQUQ], 3);
            this.wv[f.vvv].id = f.vvv;
            this.wv[f.oVO] = n(68, 68, "", u[e.Owowv], 3);
            this.wv[f.oVO].id = f.oVO;
            this.wv[f.UwQ] = n(68, 68, "", u[e._o_0Q], 3);
            this.wv[f.UwQ].id = f.UwQ;
            this.wv[f.OvW] = n(68, 68, "", u[e.UuVU_], 3);
            this.wv[f.OvW].id = f.OvW;
            this.wv[f.oQo] = n(68, 68, "", u[e.vvoOQ], 3);
            this.wv[f.oQo].id = f.oQo;
            this.wv[f.uvV] = n(68, 68, "", u[e.vOO_Q], 3);
            this.wv[f.uvV].id = f.uvV;
            this.wv[f.UVW] = n(68, 68, "", u[e.WUuu0], 3);
            this.wv[f.UVW].id = f.UVW;
            this.wv[f.vw_] = n(68, 68, "", u[e.VuWWo], 3);
            this.wv[f.vw_].id = f.vw_;
            this.wv[f.QQ_] = n(68, 68, "", u[e.QW$vV], 3);
            this.wv[f.QQ_].id = f.QQ_;
            this.wv[f._W$] = n(68, 68, "", u[e.ow$Uu], 3);
            this.wv[f._W$].id = f._W$;
            this.wv[f.O$w] = n(68, 68, "", u[e.QuvVo], 3);
            this.wv[f.O$w].id = f.O$w;
            this.wv[f.OwW] = n(68, 68, "", u[e.W$_u_], 3);
            this.wv[f.OwW].id = f.OwW;
            this.wv[f.U$W] = n(68, 68, "", u[e.uWouv], 3);
            this.wv[f.U$W].id = f.U$W;
            this.wv[f.vV$] = n(68, 68, "", u[e.ovuOO], 3);
            this.wv[f.vV$].id = f.vV$;
            this.wv[f.WV0] = n(68, 68, "", u[e.OOQOu], 3);
            this.wv[f.WV0].id = f.WV0;
            this.wv[f._v0] = n(68, 68, "", u[e.uQOww], 3);
            this.wv[f._v0].id = f._v0;
            this.wv[f.vV0] = n(68, 68, "", u[e._WW0_], 3);
            this.wv[f.vV0].id = f.vV0;
            this.wv[f.OU0] = n(68, 68, "", u[e.uV$OW], 3);
            this.wv[f.OU0].id = f.OU0;
            this.wv[f.wov] = n(68, 68, "", u[e.W_wVO], 3);
            this.wv[f.wov].id = f.wov;
            this.wv[f.vv$] = n(68, 68, "", u[e.WW_QQ], 3);
            this.wv[f.vv$].id = f.vv$;
            this.wv[f.Ow_] = n(68, 68, "", u[e.oOww_], 3);
            this.wv[f.Ow_].id = f.Ow_;
            this.wv[f.wv_] = n(68, 68, "", u[e.vvuOQ], 3);
            this.wv[f.wv_].id = f.wv_;
            this.wv[f.uV$] = n(68, 68, "", u[e.vou0$], 3);
            this.wv[f.uV$].id = f.uV$;
            this.wv[f.Wuv] = n(68, 68, "", u[e.vuwvO], 3);
            this.wv[f.Wuv].id = f.Wuv;
            this.wv[f.VUQ] = n(68, 68, "", u[e.V$oou], 3);
            this.wv[f.VUQ].id = f.VUQ;
            this.wv[f.wo_] = n(68, 68, "", u[e.wQ$$O], 3);
            this.wv[f.wo_].id = f.wo_;
            this.wv[f.$$Q] = n(68, 68, "", u[e.VUQ0W], 3);
            this.wv[f.$$Q].id = f.$$Q;
            this.wv[f._Wu] = n(68, 68, "", u[e.VuwVQ], 3);
            this.wv[f._Wu].id = f._Wu;
            this.wv[f.U$U] = n(68, 68, "", u[e.Qvvu0], 3);
            this.wv[f.U$U].id = f.U$U;
            this.wv[f._WW] = n(68, 68, "", u[e.$oQ$v], 3);
            this.wv[f._WW].id = f._WW;
            this.wv[f.v_$] = n(68, 68, "", u[e.UVoWQ], 3);
            this.wv[f.v_$].id = f.v_$;
            this.wv[f.Ouv] = n(68, 68, "", u[e.OVv__], 3);
            this.wv[f.Ouv].id = f.Ouv;
            this.wv[f.w_v] = n(68, 68, "", u[e.o0OOO], 3);
            this.wv[f.w_v].id = f.w_v;
            this.wv[f.WVV] = n(68, 68, "", u[e.V_UWo], 3);
            this.wv[f.WVV].id = f.WVV;
            this.wv[f.Ovv] = n(68, 68, "", u[e.Q__0W], 3);
            this.wv[f.Ovv].id = f.Ovv;
            this.wv[f.uWU] = n(68, 68, "", u[e.oQO0Q], 3);
            this.wv[f.uWU].id = f.uWU;
            this.wv[f.OvV] = n(68, 68, "", u[e.OwUUU], 3);
            this.wv[f.OvV].id = f.OvV;
            this.wv[f.VwO] = n(68, 68, "", u[e._0O0V], 3);
            this.wv[f.VwO].id = f.VwO;
            this.wv[f.VoU] = n(68, 68, "", u[e.QQWU$], 3);
            this.wv[f.VoU].id = f.VoU;
            this.wv[f.o_Q] = n(68, 68, "", u[e.OuuVW], 3);
            this.wv[f.o_Q].id = f.o_Q;
            this.wv[f.$VW] = n(68, 68, "", u[e.wV_UO], 3);
            this.wv[f.$VW].id = f.$VW;
            this.wv[f.OwQ] = n(68, 68, "", u[e.w$uVQ], 3);
            this.wv[f.OwQ].id = f.OwQ;
            this.wv[f.ow$] = n(68, 68, "", u[e.oovoQ], 3);
            this.wv[f.ow$].id = f.ow$;
            this.wv[f.$wo] = n(68, 68, "", u[e.QO_QO], 3);
            this.wv[f.$wo].id = f.$wo;
            this.wv[f.wWQ] = n(68, 68, "", u[e.uWU0w], 3);
            this.wv[f.wWQ].id = f.wWQ;
            this.wv[f.Uwu] = n(68, 68, "", u[e.oUO$Q], 3);
            this.wv[f.Uwu].id = f.Uwu;
            this.wv[f.wo$] = n(68, 68, "", u[e.VvoVo], 3);
            this.wv[f.wo$].id = f.wo$;
            this.wv[f.vuQ] = n(68, 68, "", u[e.UVU_O], 3);
            this.wv[f.vuQ].id = f.vuQ;
            this.wv[f.Wv$] = n(68, 68, "", u[e.oWu_U], 3);
            this.wv[f.Wv$].id = f.Wv$;
            this.wv[f.VWU] = n(68, 68, "", u[e.Q_W0O], 3);
            this.wv[f.VWU].id = f.VWU;
            this.wv[f.WoV] = n(68, 68, "", u[e.oWWuv], 3);
            this.wv[f.WoV].id = f.WoV;
            this.wv[f.Q$u] = n(68, 68, "", u[e.wouO_], 3);
            this.wv[f.Q$u].id = f.Q$u;
            this.wv[f.oOu] = n(68, 68, "", u[e.u$vou], 3);
            this.wv[f.oOu].id = f.oOu;
            this.wv[f.W_u] = n(68, 68, "", u[e.Vo$ou], 3);
            this.wv[f.W_u].id = f.W_u;
            this.wv[f.Vuw] = n(68, 68, "", u[e.Uv$Ou], 3);
            this.wv[f.Vuw].id = f.Vuw;
            this.wv[f.QvU] = n(68, 68, "", u[e.WOUuO], 3);
            this.wv[f.QvU].id = f.QvU;
            this.wv[f.UVv] = n(68, 68, "", u[e.u$UOQ], 3);
            this.wv[f.UVv].id = f.UVv;
            this.wv[f.oQW] = n(68, 68, "", u[e.UwOu0], 3);
            this.wv[f.oQW].id = f.oQW;
            this.wv[f._w_] = n(68, 68, "", u[e.VuOuw], 3);
            this.wv[f._w_].id = f._w_;
            this.wv[f.vVW] = n(68, 68, "", u[e.v$Quw], 3);
            this.wv[f.vVW].id = f.vVW;
            this.wv[f.wwW] = n(68, 68, "", u[e.__WoW], 3);
            this.wv[f.wwW].id = f.wwW;
            this.wv[f.$v0] = n(68, 68, "", u[e.woUQO], 3);
            this.wv[f.$v0].id = f.$v0;
            this.wv[f.V$V] = n(68, 68, "", u[e.WVUow], 3);
            this.wv[f.V$V].id = f.V$V;
            this.wv[f.oO0] = n(68, 68, "", u[e.$vWQv], 3);
            this.wv[f.oO0].id = f.oO0;
            this.wv[f.o$$] = n(68, 68, "", u[e.V$UV0], 3);
            this.wv[f.o$$].id = f.o$$;
            this.wv[f.$Uu] = n(68, 68, "", u[e.VwVu_], 3);
            this.wv[f.$Uu].id = f.$Uu;
            this.wv[f.___] = n(68, 68, "", u[e.uVuoO], 3);
            this.wv[f.___].id = f.___;
            this.wv[f.QOQ] = n(68, 68, "", u[e.OO$QW], 3);
            this.wv[f.QOQ].id = f.QOQ;
            this.wv[f.QVV] = n(68, 68, "", u[e.U0Ow_], 3);
            this.wv[f.QVV].id = f.QVV;
            this.wv[f.wuO] = n(68, 68, "", u[e.VvWWV], 3);
            this.wv[f.wuO].id = f.wuO;
            this.wv[f.Wwv] = n(68, 68, "", u[e.oU$vo], 3);
            this.wv[f.Wwv].id = f.Wwv;
            this.wv[f.VUW] = n(68, 68, "", u[e.vVU_Q], 3);
            this.wv[f.VUW].id = f.VUW;
            this.wv[f.Qww] = n(68, 68, "", u[e.o_QOw], 3);
            this.wv[f.Qww].id = f.Qww;
            this.wv[f.uUV] = n(68, 68, "", u[e.OWV$U], 3);
            this.wv[f.uUV].id = f.uUV;
            this.wv[f.Vwv] = n(68, 68, "", u[e.WwwVo], 3);
            this.wv[f.Vwv].id = f.Vwv;
            this.OU$ = [];
            for (L = 0; 250 > L; L++) this.OU$[L] = n(0, 0, "", u[e.wuw$0]);
            this.$Q = [];
            this.$Q[f.QvW] = n(60, 60, "", u[e.VuW$U], 3);
            this.$Q[f.QvW].id = f.QvW;
            this.$Q[f.oOo] = n(60, 60, "", u[e.UwUu_], 3);
            this.$Q[f.oOo].id = f.oOo;
            this.$Q[f.V0] = n(60, 60, "", u[e.O_$], 3);
            this.$Q[f.V0].id = f.V0;
            this.$Q[f.V0].info.Vv[2] = this.$Q[f.V0].info.Vv[0];
            this.$Q[f.vv] = n(60, 60, "", u[e.UQw], 3);
            this.$Q[f.vv].id = f.vv;
            this.$Q[f.vv].info.Vv[2] = this.$Q[f.vv].info.Vv[0];
            this.$Q[f.Q$_] = n(60, 60, "", u[e.v$wv0], 3);
            this.$Q[f.Q$_].id = f.Q$_;
            this.$Q[f.VWw] = n(60, 60, "", u[e.UWv], 3);
            this.$Q[f.VWw].id = f.VWw;
            this.$Q[f.$U] = n(60, 60, "", u[e.__O], 3);
            this.$Q[f.$U].id = f.$U;
            this.$Q[f.$U].info.Vv[2] = this.$Q[f.$U].info.Vv[0];
            this.$Q[f.v$] = n(60, 60, "", u[e.V$W], 3);
            this.$Q[f.v$].id = f.v$;
            this.$Q[f.v$].info.Vv[2] = this.$Q[f.v$].info.Vv[0];
            this.$Q[f.QWu] = n(60, 60, "", u[e.vouUo], 3);
            this.$Q[f.QWu].id = f.QWu;
            this.$Q[f.OQv] = n(60, 60, "", u[e.vWQvo], 3);
            this.$Q[f.OQv].id = f.OQv;
            this.$Q[f.$Vu] = n(60, 60, "", u[e.Q$v_$], 3);
            this.$Q[f.$Vu].id = f.$Vu;
            this.$Q[f.WvU] = n(60, 60, "", u[e._vUv$], 3);
            this.$Q[f.WvU].id = f.WvU;
            this.$Q[f.WU_] = n(60, 60, "", u[e.$wWv$], 3);
            this.$Q[f.WU_].id = f.WU_;
            this.$Q[f.$uu] = n(60, 60, "", u[e.WvOUo], 3);
            this.$Q[f.$uu].id = f.$uu;
            this.$Q[f.oOQ] = n(60, 60, "", u[e.$wWVu], 3);
            this.$Q[f.oOQ].id = f.oOQ;
            this.$Q[f.vUu] = n(60, 60, "", u[e.O_OO0], 3);
            this.$Q[f.vUu].id = f.vUu;
            this.$Q[f._OW] = n(60, 60, "", u[e.U0QWO], 3);
            this.$Q[f._OW].id = f._OW;
            this.$Q[f.oV_] = n(60, 60, "", u[e.$uQ$_], 3);
            this.$Q[f.oV_].id = f.oV_;
            this.$Q[f.$ov] = n(60, 60, "", u[e.QUOQU], 3);
            this.$Q[f.$ov].id = f.$ov;
            this.$Q[f.Qvv] = n(60, 60, "", u[e.OWuuv], 3);
            this.$Q[f.Qvv].id = f.Qvv;
            this.$Q[f.Wo_] = n(60, 60, "", u[e.VVWoW], 3);
            this.$Q[f.Wo_].id = f.Wo_;
            this.$Q[f.$ow] = n(60, 60, "", u[e.W0_], 3);
            this.$Q[f.$ow].id = f.$ow;
            this.$Q[f._Ww] = n(60, 60, "", u[e.WvVUV], 3);
            this.$Q[f._Ww].id = f._Ww;
            this.$Q[f._$$] = n(60, 60, "", u[e.OoQuV], 3);
            this.$Q[f._$$].id = f._$$;
            this.$Q[f._$$].info.Vv[2] = this.$Q[f._$$].info.Vv[0];
            this.$Q[f.OwO] = n(60, 60, "", u[e.u0v], 3);
            this.$Q[f.OwO].id = f.OwO;
            this.$Q[f.uVv] = n(60, 60, "", u[e.U0uuU], 3);
            this.$Q[f.uVv].id = f.uVv;
            this.$Q[f.Wvw] = n(60, 60, "", u[e.vvVuO], 3);
            this.$Q[f.Wvw].id = f.Wvw;
            this.$Q[f.Vw_] = n(60, 60, "", u[e._UOou], 3);
            this.$Q[f.Vw_].id = f.Vw_;
            this.$Q[f.V$Q] = n(60, 60, "", u[e.vWUOQ], 3);
            this.$Q[f.V$Q].id = f.V$Q;
            this.$Q[f.wuW] = n(60, 60, "", u[e.uU$$v], 3);
            this.$Q[f.wuW].id = f.wuW;
            this.$Q[f.uuo] = n(60, 60, "", u[e.w_Uwu], 3);
            this.$Q[f.uuo].id = f.uuo;
            this.$Q[f._w0] = n(60, 60, "", u[e._QOwW], 3);
            this.$Q[f._w0].id = f._w0;
            this.$Q[f.Uwv] = n(60, 60, "", u[e.Qvw], 3);
            this.$Q[f.Uwv].id = f.Uwv;
            this.$Q[f._UQ] = n(60, 60, "", u[e.Wv0], 3);
            this.$Q[f._UQ].id = f._UQ;
            this.$Q[f.wvV] = n(60, 60, "", u[e.UWu], 3);
            this.$Q[f.wvV].id = f.wvV;
            this.$Q[f.u_v] = n(60, 60, "", u[e._wOV_], 3);
            this.$Q[f.u_v].id = f.u_v;
            this.$Q[f.vO0] = n(60, 60, "", u[e.WWQoO], 3);
            this.$Q[f.vO0].id = f.vO0;
            this.$Q[f.vwU] = n(60, 60, "", u[e.uQvU0], 3);
            this.$Q[f.vwU].id = f.vwU;
            this.$Q[f.vwU].info.Vv[2] = this.$Q[f.vwU].info.Vv[0];
            this.$Q[f.QW_] = n(60, 60, "", u[e.Qvsocket], 3);
            this.$Q[f.QW_].id = f.QW_;
            this.$Q[f.QW_].info.Vv[2] = this.$Q[f.QW_].info.Vv[0];
            this.$Q[f.QuO] = n(60, 60, "", u[e.uQVoU], 3);
            this.$Q[f.QuO].id = f.QuO;
            this.$Q[f.QuO].info.Vv[2] = this.$Q[f.QuO].info.Vv[0];
            this.$Q[f.wU$] = n(60, 60, "", u[e.Oo0], 3);
            this.$Q[f.wU$].id = f.wU$;
            this.$Q[f.o$0] = n(60, 60, "", u[e.$QV], 3);
            this.$Q[f.o$0].id = f.o$0;
            this.$Q[f.QUU] = n(60, 60, "", u[e.vw0], 3);
            this.$Q[f.QUU].id = f.QUU;
            this.$Q[f.WwW] = n(60, 60, "", u[e.Qv0], 3);
            this.$Q[f.WwW].id = f.WwW;
            this.$Q[f._UQ] = n(60, 60, "", u[e.Wv0], 3);
            this.$Q[f._UQ].id = f._UQ;
            this.$Q[f.u$w] = n(60, 60, "", u[e.$Q$U$], 3);
            this.$Q[f.u$w].id = f.u$w;
            this.$Q[f.$Uu] = n(60, 60, "", u[e._uw], 3);
            this.$Q[f.$Uu].id = f.$Uu;
            this.$Q[f.$v$] = n(60, 60, "", u[e.Q$QQW], 3);
            this.$Q[f.$v$].id = f.$v$;
            this.$Q[f.ow_] = n(60, 60, "", u[e.$OuQQ], 3);
            this.$Q[f.ow_].id = f.ow_;
            this.$Q[f.wo0] = n(60, 60, "", u[e.uowWO], 3);
            this.$Q[f.wo0].id = f.wo0;
            this.$Q[f.___] = n(60, 60, "", u[e.uQ0], 3);
            this.$Q[f.___].id = f.___;
            this.$Q[f.UoQ] = n(60, 60, "", u[e.$vwuO], 3);
            this.$Q[f.UoQ].id = f.UoQ;
            this.$Q[f.oo0] = n(60, 60, "", u[e.u_wUO], 3);
            this.$Q[f.oo0].id = f.oo0;
            this.$Q[f.$uv] = n(60, 60, "", u[e.uvo], 3);
            this.$Q[f.$uv].id = f.$uv;
            this.$Q[f.oOO] = n(60, 60, "", u[e.WWU], 3);
            this.$Q[f.oOO].id = f.oOO;
            this.$Q[f.QwQ] = n(60, 60, "", u[e._w$], 3);
            this.$Q[f.QwQ].id = f.QwQ;
            this.$Q[f.O__] = n(60, 60, "", u[e.vvw], 3);
            this.$Q[f.O__].id = f.O__;
            this.$Q[f.o_v] = n(60, 60, "", u[e.Oov], 3);
            this.$Q[f.o_v].id = f.o_v;
            this.$Q[f.VWO] = n(60, 60, "", u[e.VOu], 3);
            this.$Q[f.VWO].id = f.VWO;
            this.$Q[f.wwo] = n(60, 60, "", u[e.uv0], 3);
            this.$Q[f.wwo].id = f.wwo;
            this.$Q[f.WuO] = n(60, 60, "", u[e.VvV], 3);
            this.$Q[f.WuO].id = f.WuO;
            this.$Q[f._vW] = n(60, 60, "", u[e.WVQ], 3);
            this.$Q[f._vW].id = f._vW;
            this.$Q[f.$w0] = n(60, 60, "", u[e._$V], 3);
            this.$Q[f.$w0].id = f.$w0;
            this.$Q[f.$Ow] = n(60, 60, "", u[e.QV0], 3);
            this.$Q[f.$Ow].id = f.$Ow;
            this.$Q[f.uuu] = n(60, 60, "", u[e.o_O], 3);
            this.$Q[f.uuu].id = f.uuu;
            this.$Q[f.OWv] = n(60, 60, "", u[e.Uw0], 3);
            this.$Q[f.OWv].id = f.OWv;
            this.$Q[f.w$Q] = n(60, 60, "", u[e.VV$], 3);
            this.$Q[f.w$Q].id = f.w$Q;
            this.$Q[f.OQW] = n(60, 60, "", u[e.Wou], 3);
            this.$Q[f.OQW].id = f.OQW;
            this.$Q[f.VWQ] = n(60, 60, "", u[e.Qvu], 3);
            this.$Q[f.VWQ].id = f.VWQ;
            this.$Q[f.wQO] = n(60, 60, "", u[e.UvV], 3);
            this.$Q[f.wQO].id = f.wQO;
            this.$Q[f.UwW] = n(60, 60, "", u[e._wo], 3);
            this.$Q[f.UwW].id = f.UwW;
            this.$Q[f.UWW] = n(60, 60, "", u[e.wW$], 3);
            this.$Q[f.UWW].id = f.UWW;
            this.$Q[f.VWv] = n(60, 60, "", u[e.UOv], 3);
            this.$Q[f.VWv].id = f.VWv;
            this.$Q[f.vOV] = n(60, 60, "", u[e.U$V], 3);
            this.$Q[f.vOV].id = f.vOV;
            this.$Q[f.Wv_] = n(60, 60, "", u[e._oW], 3);
            this.$Q[f.Wv_].id = f.Wv_;
            this.$Q[f.wQo] = n(60, 60, "", u[e.o_U], 3);
            this.$Q[f.wQo].id = f.wQo;
            this.$Q[f.vvo] = n(60, 60, "", u[e.uWo], 3);
            this.$Q[f.vvo].id = f.vvo;
            this.$Q[f.vvU] = n(60, 60, "", u[e.UUu], 3);
            this.$Q[f.vvU].id = f.vvU;
            this.$Q[f._U$] = n(60, 60, "", u[e.$QOoU], 3);
            this.$Q[f._U$].id = f._U$;
            this.$Q[f.vOO] = n(60, 60, "", u[e.WUw_W], 3);
            this.$Q[f.vOO].id = f.vOO;
            this.$Q[f.uou] = n(60, 60, "", u[e.w0U], 3);
            this.$Q[f.uou].id = f.uou;
            this.$Q[f._O$] = n(60, 60, "", u[e.Q_o], 3);
            this.$Q[f._O$].id = f._O$;
            this.$Q[f.Q_$] = n(60, 60, "", u[e._0v], 3);
            this.$Q[f.Q_$].id = f.Q_$;
            this.$Q[f.vOu] = n(60, 60, "", u[e.u0o], 3);
            this.$Q[f.vOu].id = f.vOu;
            this.$Q[f.vOu].info.Vv[2] = this.$Q[f.vOu].info.Vv[0];
            this.$Q[f.Uwv] = n(60, 60, "", u[e.Qvw], 3);
            this.$Q[f.Uwv].id = f.Uwv;
            this.$Q[f.$W] = n(60, 60, "", u[e.uO0], 3);
            this.$Q[f.$W].id = f.$W;
            this.$Q[f.$W].info.Vv[2] = this.$Q[f.$W].info.Vv[0];
            this.$Q[f.w$v] = n(60, 60, "", u[e.W$O_Q], 3);
            this.$Q[f.w$v].id = f.w$v;
            this.$Q[f.UuV] = n(60, 60, "", u[e.uVVuU], 3);
            this.$Q[f.UuV].id = f.UuV;
            this.$Q[f._v_] = n(60, 60, "", u[e.VO_UU], 3);
            this.$Q[f._v_].id = f._v_;
            this.$Q[f.V_V] = n(60, 60, "", u[e.QQW], 3);
            this.$Q[f.V_V].id = f.V_V;
            this.$Q[f._uV] = n(60, 60, "", u[e.OwQv0], 3);
            this.$Q[f._uV].id = f._uV;
            this.$Q[f.oQw] = n(60, 60, "", u[e.vUUow], 3);
            this.$Q[f.oQw].id = f.oQw;
            this.$Q[f.UQV] = n(60, 60, "", u[e.$$Ouw], 3);
            this.$Q[f.UQV].id = f.UQV;
            this.$Q[f.wvo] = n(60, 60, "", u[e.Q$ovQ], 3);
            this.$Q[f.wvo].id = f.wvo;
            this.$Q[f.$OU] = n(60, 60, "", u[e.VQOuv], 3);
            this.$Q[f.$OU].id = f.$OU;
            this.$Q[f.VQ0] = n(60, 60, "", u[e.W$u], 3);
            this.$Q[f.VQ0].id = f.VQ0;
            this.$Q[f.$wu] = n(60, 60, "", u[e.oVv0o], 3);
            this.$Q[f.$wu].id = f.$wu;
            this.$Q[f.QwW] = n(60, 60, "", u[e.VwQuu], 3);
            this.$Q[f.QwW].id = f.QwW;
            this.$Q[f.VuQ] = n(60, 60, "", u[e.UUWVv], 3);
            this.$Q[f.VuQ].id = f.VuQ;
            this.$Q[f.vvW] = n(60, 60, "", u[e.w0UwO], 3);
            this.$Q[f.vvW].id = f.vvW;
            this.$Q[f.v__] = n(60, 60, "", u[e.uu_wW], 3);
            this.$Q[f.v__].id = f.v__;
            this.$Q[f.v__].info.Vv[2] = this.$Q[f.v__].info.Vv[0];
            this.$Q[f.UVO] = n(60, 60, "", u[e.UQO], 3);
            this.$Q[f.UVO].id = f.UVO;
            this.$Q[f.UVO].info.Vv[2] = this.$Q[f.UVO].info.Vv[0];
            this.$Q[f.$WQ] = n(60, 60, "", u[e.$UOO$], 3);
            this.$Q[f.$WQ].id = f.$WQ;
            this.$Q[f.$WQ].info.Vv[2] = this.$Q[f.$WQ].info.Vv[0];
            this.$Q[f.vQQ] = n(60, 60, "", u[e.UwUVo], 3);
            this.$Q[f.vQQ].id = f.vQQ;
            this.$Q[f.vQQ].info.Vv[2] = this.$Q[f.vQQ].info.Vv[0];
            this.$Q[f.WQw] = n(60, 60, "", u[e.uQouu], 3);
            this.$Q[f.WQw].id = f.WQw;
            this.$Q[f.vWV] = n(60, 60, "", u[e.Quu], 3);
            this.$Q[f.vWV].id = f.vWV;
            this.$Q[f._UO] = n(60, 60, "", u[e.oUooo], 3);
            this.$Q[f._UO].id = f._UO;
            this.$Q[f.UoU] = n(60, 60, "", u[e.WVVww], 3);
            this.$Q[f.UoU].id = f.UoU;
            this.$Q[f.Ww$] = n(60, 60, "", u[e.UuWOQ], 3);
            this.$Q[f.Ww$].id = f.Ww$;
            this.$Q[f.wOu] = n(60, 60, "", u[e.w_QvU], 3);
            this.$Q[f.wOu].id = f.wOu;
            this.$Q[f.vvV] = n(60, 60, "", u[e.ovuV$], 3);
            this.$Q[f.vvV].id = f.vvV;
            this.$Q[f.OQ$] = n(60, 60, "", u[e._WuWO], 3);
            this.$Q[f.OQ$].id = f.OQ$;
            this.$Q[f.UWU] = n(60, 60, "", u[e.uWw], 3);
            this.$Q[f.UWU].id = f.UWU;
            this.$Q[f.VuU] = n(60, 60, "", u[e.$Wv], 3);
            this.$Q[f.VuU].id = f.VuU;
            this.$Q[f.uQW] = n(60, 60, "", u[e.wU0], 3);
            this.$Q[f.uQW].id = f.uQW;
            this.$Q[f.vOv] = n(60, 60, "", u[e.oUv], 3);
            this.$Q[f.vOv].id = f.vOv;
            this.$Q[f.U_u] = n(60, 60, "", u[e.ooQ], 3);
            this.$Q[f.U_u].id = f.U_u;
            this.$Q[f.w$U] = n(60, 60, "", u[e._OU], 3);
            this.$Q[f.w$U].id = f.w$U;
            this.$Q[f.vww] = n(60, 60, "", u[e.O$U], 3);
            this.$Q[f.vww].id = f.vww;
            this.$Q[f.$Uo] = n(60, 60, "", u[e.VVQ], 3);
            this.$Q[f.$Uo].id = f.$Uo;
            this.$Q[f.OW$] = n(60, 60, "", u[e.UUw], 3);
            this.$Q[f.OW$].id = f.OW$;
            this.$Q[f.$ww] = n(60, 60, "", u[e.$oQ], 3);
            this.$Q[f.$ww].id = f.$ww;
            this.$Q[f.uU_] = n(60, 60, "", u[e._VU], 3);
            this.$Q[f.uU_].id = f.uU_;
            this.$Q[f.uUO] = n(60, 60, "", u[e._wUvW], 3);
            this.$Q[f.uUO].id = f.uUO;
            this.$Q[f.uUO].info.Vv[2] = this.$Q[f.uUO].info.Vv[0];
            this.$Q[f.QQu] = n(60, 60, "", u[e.W_$w$], 3);
            this.$Q[f.QQu].id = f.QQu;
            this.$Q[f.vvv] = n(60, 60, "", u[e.wwVOQ], 3);
            this.$Q[f.vvv].id = f.vvv;
            this.$Q[f.oVO] = n(60, 60, "", u[e.__u$W], 3);
            this.$Q[f.oVO].id = f.oVO;
            this.$Q[f.UwQ] = n(60, 60, "", u[e.o0OWU], 3);
            this.$Q[f.UwQ].id = f.UwQ;
            this.$Q[f.OvW] = n(60, 60, "", u[e.vuvWU], 3);
            this.$Q[f.OvW].id = f.OvW;
            this.$Q[f.oQo] = n(60, 60, "", u[e._Uv0Q], 3);
            this.$Q[f.oQo].id = f.oQo;
            this.$Q[f.uvV] = n(60, 60, "", u[e.VOo$Q], 3);
            this.$Q[f.uvV].id = f.uvV;
            this.$Q[f.UVW] = n(60, 60, "", u[e.WwuU0], 3);
            this.$Q[f.UVW].id = f.UVW;
            this.$Q[f.UVW].info.Vv[2] = this.$Q[f.UVW].info.Vv[0];
            this.$Q[f.vw_] = n(60, 60, "", u[e.QWO$w], 3);
            this.$Q[f.vw_].id = f.vw_;
            this.$Q[f.QQ_] = n(60, 60, "", u[e.OoO0O], 3);
            this.$Q[f.QQ_].id = f.QQ_;
            this.$Q[f.QQ_].info.Vv[2] = this.$Q[f.QQ_].info.Vv[0];
            this.$Q[f._W$] = n(60, 60, "", u[e.Q0VVO], 3);
            this.$Q[f._W$].id = f._W$;
            this.$Q[f.O$w] = n(60, 60, "", u[e.O$v_V], 3);
            this.$Q[f.O$w].id = f.O$w;
            this.$Q[f.OwW] = n(60, 60, "", u[e.WuQw_], 3);
            this.$Q[f.OwW].id = f.OwW;
            this.$Q[f.OwW].info.Vv[2] = this.$Q[f.OwW].info.Vv[0];
            this.$Q[f.U$W] = n(60, 60, "", u[e.UwvVw], 3);
            this.$Q[f.U$W].id = f.U$W;
            this.$Q[f.vV$] = n(60, 60, "", u[e.vOvV_], 3);
            this.$Q[f.vV$].id = f.vV$;
            this.$Q[f.WV0] = n(60, 60, "", u[e.Ov_Qv], 3);
            this.$Q[f.WV0].id = f.WV0;
            this.$Q[f._v0] = n(60, 60, "", u[e.o0vvv], 3);
            this.$Q[f._v0].id = f._v0;
            this.$Q[f.vV0] = n(60, 60, "", u[e.wwwQQ], 3);
            this.$Q[f.vV0].id = f.vV0;
            this.$Q[f.OU0] = n(60, 60, "", u[e.W_Ouu], 3);
            this.$Q[f.OU0].id = f.OU0;
            this.$Q[f.wov] = n(60, 60, "", u[e.VoWvv], 3);
            this.$Q[f.wov].id = f.wov;
            this.$Q[f.vv$] = n(60, 60, "", u[e.uvuvO], 3);
            this.$Q[f.vv$].id = f.vv$;
            this.$Q[f.Ow_] = n(60, 60, "", u[e.VOQOW], 3);
            this.$Q[f.Ow_].id = f.Ow_;
            this.$Q[f.Ow_].info.Vv[2] = this.$Q[f.Ow_].info.Vv[0];
            this.$Q[f.wv_] = n(60, 60, "", u[e.QW$U$], 3);
            this.$Q[f.wv_].id = f.wv_;
            this.$Q[f.wv_].info.Vv[2] = this.$Q[f.wv_].info.Vv[0];
            this.$Q[f.uV$] = n(60, 60, "", u[e.VvOo0], 3);
            this.$Q[f.uV$].id = f.uV$;
            this.$Q[f.Wuv] = n(60, 60, "", u[e.OOVw_], 3);
            this.$Q[f.Wuv].id = f.Wuv;
            this.$Q[f.Wuv].info.Vv[2] = this.$Q[f.Wuv].info.Vv[0];
            this.$Q[f.VUQ] = n(60, 60, "", u[e.vQQ__], 3);
            this.$Q[f.VUQ].id = f.VUQ;
            this.$Q[f.wo_] = n(60, 60, "", u[e.wuuO0], 3);
            this.$Q[f.wo_].id = f.wo_;
            this.$Q[f.$$Q] = n(60, 60, "", u[e.QvUuu], 3);
            this.$Q[f.$$Q].id = f.$$Q;
            this.$Q[f._Wu] = n(60, 60, "", u[e.$wO], 3);
            this.$Q[f._Wu].id = f._Wu;
            this.$Q[f.U$U] = n(60, 60, "", u[e.VU__O], 3);
            this.$Q[f.U$U].id = f.U$U;
            this.$Q[f.U$U].info.Vv[2] = this.$Q[f.U$U].info.Vv[0];
            this.$Q[f._WW] = n(60, 60, "", u[e.VUv_U], 3);
            this.$Q[f._WW].id = f._WW;
            this.$Q[f._WW].info.Vv[2] = this.$Q[f._WW].info.Vv[0];
            this.$Q[f._U0] = n(60, 60, "", u[e.$$O], 3);
            this.$Q[f._U0].id = f._U0;
            this.$Q[f.WWu] = n(60, 60, "", u[e.Q$O], 3);
            this.$Q[f.WWu].id = f.WWu;
            this.$Q[f.v_$] = n(60, 60, "", u[e.u$U], 3);
            this.$Q[f.v_$].id = f.v_$;
            this.$Q[f.v_$].info.Vv[2] = this.$Q[f.v_$].info.Vv[0];
            this.$Q[f.Ouv] = n(60, 60, "", u[e._u$0O], 3);
            this.$Q[f.Ouv].id = f.Ouv;
            this.$Q[f.Ouv].info.Vv[2] = this.$Q[f.Ouv].info.Vv[0];
            this.$Q[f.w_v] = n(60, 60, "", u[e.O$o0Q], 3);
            this.$Q[f.w_v].id = f.w_v;
            this.$Q[f.WVV] = n(60, 60, "", u[e.$uv0W], 3);
            this.$Q[f.WVV].id = f.WVV;
            this.$Q[f.WVV].info.Vv[2] = this.$Q[f.WVV].info.Vv[0];
            this.$Q[f.Ovv] = n(60, 60, "", u[e.OouUu], 3);
            this.$Q[f.Ovv].id = f.Ovv;
            this.$Q[f.Ovv].info.Vv[2] = this.$Q[f.Ovv].info.Vv[0];
            this.$Q[f.uWU] = n(60, 60, "", u[e.$_u], 3);
            this.$Q[f.uWU].id = f.uWU;
            this.$Q[f.OvV] = n(60, 60, "", u[e.uUoWQ], 3);
            this.$Q[f.OvV].id = f.OvV;
            this.$Q[f.OvV].info.Vv[2] = this.$Q[f.OvV].info.Vv[0];
            this.$Q[f.VwO] = n(60, 60, "", u[e.U0_], 3);
            this.$Q[f.VwO].id = f.VwO;
            this.$Q[f.VoU] = n(60, 60, "", u[e._$Q], 3);
            this.$Q[f.VoU].id = f.VoU;
            this.$Q[f.o_Q] = n(60, 60, "", u[e.V0_], 3);
            this.$Q[f.o_Q].id = f.o_Q;
            this.$Q[f.$VW] = n(60, 60, "", u[e.oVoQv], 3);
            this.$Q[f.$VW].id = f.$VW;
            this.$Q[f.OwQ] = n(60, 60, "", u[e.vvOwv], 3);
            this.$Q[f.OwQ].id = f.OwQ;
            this.$Q[f.ow$] = n(60, 60, "", u[e.W0V], 3);
            this.$Q[f.ow$].id = f.ow$;
            this.$Q[f.$wo] = n(60, 60, "", u[e.Q00], 3);
            this.$Q[f.$wo].id = f.$wo;
            this.$Q[f.wWQ] = n(60, 60, "", u[e.oUvoQ], 3);
            this.$Q[f.wWQ].id = f.wWQ;
            this.$Q[f.Uwu] = n(60, 60, "", u[e.v_woU], 3);
            this.$Q[f.Uwu].id = f.Uwu;
            this.$Q[f.wo$] = n(60, 60, "", u[e.o$oUu], 3);
            this.$Q[f.wo$].id = f.wo$;
            this.$Q[f.vuQ] = n(60, 60, "", u[e.$wOvw], 3);
            this.$Q[f.vuQ].id = f.vuQ;
            this.$Q[f.Wv$] = n(60, 60, "", u[e.w_U], 3);
            this.$Q[f.Wv$].id = f.Wv$;
            this.$Q[f.VWU] = n(60, 60, "", u[e.ouvoO], 3);
            this.$Q[f.VWU].id = f.VWU;
            this.$Q[f.Q$u] = n(60, 60, "", u[e.u$O], 3);
            this.$Q[f.Q$u].id = f.Q$u;
            this.$Q[f.oOu] = n(60, 60, "", u[e.$w$WV], 3);
            this.$Q[f.oOu].id = f.oOu;
            this.$Q[f.WoV] = n(60, 60, "", u[e.uwV_v], 3);
            this.$Q[f.WoV].id = f.WoV;
            this.$Q[f.W_u] = n(60, 60, "", u[e._QQ], 3);
            this.$Q[f.W_u].id = f.W_u;
            this.$Q[f.Vuw] = n(60, 60, "", u[e.U$wOv], 3);
            this.$Q[f.Vuw].id = f.Vuw;
            this.$Q[f.oQW] = n(60, 60, "", u[e.vVU], 3);
            this.$Q[f.oQW].id = f.oQW;
            this.$Q[f._w_] = n(60, 60, "", u[e.OUV], 3);
            this.$Q[f._w_].id = f._w_;
            this.$Q[f.QvU] = n(60, 60, "", u[e.socket], 3);
            this.$Q[f.QvU].id = f.QvU;
            this.$Q[f.UVv] = n(60, 60, "", u[e.VOU], 3);
            this.$Q[f.UVv].id = f.UVv;
            this.$Q[f.vVW] = n(60, 60, "", u[e.oQQ], 3);
            this.$Q[f.vVW].id = f.vVW;
            this.$Q[f.wwW] = n(60, 60, "", u[e.QUO], 3);
            this.$Q[f.wwW].id = f.wwW;
            this.$Q[f.$v0] = n(60, 60, "", u[e.QwVOu], 3);
            this.$Q[f.$v0].id = f.$v0;
            this.$Q[f.V$V] = n(60, 60, "", u[e._ou], 3);
            this.$Q[f.V$V].id = f.V$V;
            this.$Q[f.oO0] = n(60, 60, "", u[e.$Vu_0], 3);
            this.$Q[f.oO0].id = f.oO0;
            this.$Q[f.o$$] = n(60, 60, "", u[e.wUV_v], 3);
            this.$Q[f.o$$].id = f.o$$;
            this.$Q[f.$Uu] = n(60, 60, "", u[e._uw], 3);
            this.$Q[f.$Uu].id = f.$Uu;
            this.$Q[f.___] = n(60, 60, "", u[e.uQ0], 3);
            this.$Q[f.___].id = f.___;
            this.$Q[f.QOQ] = n(60, 60, "", u[e.$uU], 3);
            this.$Q[f.QOQ].id = f.QOQ;
            this.$Q[f.QVV] = n(60, 60, "", u[e.uU$ou], 3);
            this.$Q[f.QVV].id = f.QVV;
            this.$Q[f.wuO] = n(60, 60, "", u[e.QwQV_], 3);
            this.$Q[f.wuO].id = f.wuO;
            this.$Q[f.Wwv] = n(60, 60, "", u[e.W$uvU], 3);
            this.$Q[f.Wwv].id = f.Wwv;
            this.$Q[f.VUW] = n(60, 60, "", u[e.WWVO0], 3);
            this.$Q[f.VUW].id = f.VUW;
            this.$Q[f.Qww] = n(60, 60, "", u[e.v$QO_], 3);
            this.$Q[f.Qww].id = f.Qww;
            this.$Q[f.Vwv] = n(60, 60, "", u[e.o__UV], 3);
            this.$Q[f.Vwv].id = f.Vwv;
            this.$Q[f.uUV] = n(60, 60, "", u[e._$_v$], 3);
            this.$Q[f.uUV].id = f.uUV;
            this._w = [];
            this._w[q.QvW] = n(60, 60, "", u[e.uo$vu], 3);
            this._w[q.QvW].id = q.QvW;
            this._w[q.oOo] = n(60, 60, "", u[e.WUQv0], 3);
            this._w[q.oOo].id = q.oOo;
            this._w[q.$uu] = n(60, 60, "", u[e.wvoWo], 3);
            this._w[q.$uu].id = q.$uu;
            this._w[q.oOQ] = n(60, 60, "", u[e.U$OoW], 3);
            this._w[q.oOQ].id = q.oOQ;
            this._w[q._OW] = n(60, 60, "", u[e.U0_QV], 3);
            this._w[q._OW].id = q._OW;
            this._w[q.oV_] = n(60, 60, "", u[e.UWQoo], 3);
            this._w[q.oV_].id = q.oV_;
            this._w[q.vUu] = n(60, 60, "", u[e.oQU0_], 3);
            this._w[q.vUu].id = q.vUu;
            this._w[q.QWu] = n(60, 60, "", u[e.QoVo_], 3);
            this._w[q.QWu].id = q.QWu;
            this._w[q.OQv] = n(60, 60, "", u[e.W$_OQ], 3);
            this._w[q.OQv].id = q.OQv;
            this._w[q.$Vu] = n(60, 60, "", u[e._vO_0], 3);
            this._w[q.$Vu].id = q.$Vu;
            this._w[q.WvU] = n(60, 60, "", u[e.vVOvo], 3);
            this._w[q.WvU].id = q.WvU;
            this._w[q.WU_] = n(60, 60, "", u[e.UvwW0], 3);
            this._w[q.WU_].id = q.WU_;
            this._w[q.$ov] = n(60, 60, "", u[e.O0woo], 3);
            this._w[q.$ov].id = q.$ov;
            this._w[q.Qvv] = n(60, 60, "", u[e.u0QUV], 3);
            this._w[q.Qvv].id = q.Qvv;
            this._w[q.$ow] = n(60, 60, "", u[e.wQQQV], 3);
            this._w[q.$ow].id = q.$ow;
            this._w[q._Ww] = n(60, 60, "", u[e.u_uvW], 3);
            this._w[q._Ww].id = q._Ww;
            this._w[q.OwO] = n(60, 60, "", u[e.ooQw0], 3);
            this._w[q.OwO].id = q.OwO;
            this._w[q.uVv] = n(60, 60, "", u[e.oQO_O], 3);
            this._w[q.uVv].id = q.uVv;
            this._w[q.Wvw] = n(60, 60, "", u[e.QQU$$], 3);
            this._w[q.Wvw].id = q.Wvw;
            this._w[q.Vw_] = n(60, 60, "", u[e.U_UOO], 3);
            this._w[q.Vw_].id = q.Vw_;
            this._w[q.V$Q] = n(60, 60, "", u[e.QoUuV], 3);
            this._w[q.V$Q].id = q.V$Q;
            this._w[q.wuW] = n(60, 60, "", u[e.V_UQW], 3);
            this._w[q.wuW].id = q.wuW;
            this._w[q.uuo] = n(60, 60, "", u[e._vUQV], 3);
            this._w[q.uuo].id = q.uuo;
            this._w[q._w0] = n(60, 60, "", u[e.vvWuQ], 3);
            this._w[q._w0].id = q._w0;
            this._w[q.Uwv] = n(60, 60, "", u[e.wo$o0], 3);
            this._w[q.Uwv].id = q.Uwv;
            this._w[q._UQ] = n(60, 60, "", u[e.O0_], 3);
            this._w[q._UQ].id = q._UQ;
            this._w[q.wvV] = n(60, 60, "", u[e._WQ0$], 3);
            this._w[q.wvV].id = q.wvV;
            this._w[q.u_v] = n(60, 60, "", u[e.u_V0U], 3);
            this._w[q.u_v].id = q.u_v;
            this._w[q.vO0] = n(60, 60, "", u[e.OOOv$], 3);
            this._w[q.vO0].id = q.vO0;
            this._w[q._UQ] = n(60, 60, "", u[e.O0_], 3);
            this._w[q._UQ].id = q._UQ;
            this._w[q.u$w] = n(60, 60, "", u[e._Uo_o], 3);
            this._w[q.u$w].id = q.u$w;
            this._w[q.$Uu] = n(60, 60, "", u[e.$W$Wu], 3);
            this._w[q.$Uu].id = q.$Uu;
            this._w[q.$v$] = n(60, 60, "", u[e.vQQ_u], 3);
            this._w[q.$v$].id = q.$v$;
            this._w[q.ow_] = n(60, 60, "", u[e._oo$o], 3);
            this._w[q.ow_].id = q.ow_;
            this._w[q.wo0] = n(60, 60, "", u[e.VuQUv], 3);
            this._w[q.wo0].id = q.wo0;
            this._w[q.___] = n(60, 60, "", u[e.vu$_w], 3);
            this._w[q.___].id = q.___;
            this._w[q.UoQ] = n(60, 60, "", u[e.voWUw], 3);
            this._w[q.UoQ].id = q.UoQ;
            this._w[q.oo0] = n(60, 60, "", u[e.WQUQW], 3);
            this._w[q.oo0].id = q.oo0;
            this._w[q.$uv] = n(60, 60, "", u[e.vwo_W], 3);
            this._w[q.$uv].id = q.$uv;
            this._w[q.oOO] = n(60, 60, "", u[e._O_wO], 3);
            this._w[q.oOO].id = q.oOO;
            this._w[q.QwQ] = n(60, 60, "", u[e.V$UwW], 3);
            this._w[q.QwQ].id = q.QwQ;
            this._w[q.O__] = n(60, 60, "", u[e.Qwov_], 3);
            this._w[q.O__].id = q.O__;
            this._w[q.o_v] = n(60, 60, "", u[e.voQUv], 3);
            this._w[q.o_v].id = q.o_v;
            this._w[q.VWO] = n(60, 60, "", u[e.u__Uo], 3);
            this._w[q.VWO].id = q.VWO;
            this._w[q.wwo] = n(60, 60, "", u[e._Q$0_], 3);
            this._w[q.wwo].id = q.wwo;
            this._w[q.WuO] = n(60, 60, "", u[e.wuw_v], 3);
            this._w[q.WuO].id = q.WuO;
            this._w[q._vW] = n(60, 60, "", u[e.uOuO$], 3);
            this._w[q._vW].id = q._vW;
            this._w[q.$w0] = n(60, 60, "", u[e.oVsocket], 3);
            this._w[q.$w0].id = q.$w0;
            this._w[q.$Ow] = n(60, 60, "", u[e.U$uuo], 3);
            this._w[q.$Ow].id = q.$Ow;
            this._w[q.uuu] = n(60, 60, "", u[e.$_VvQ], 3);
            this._w[q.uuu].id = q.uuu;
            this._w[q.OWv] = n(60, 60, "", u[e.wO$oQ], 3);
            this._w[q.OWv].id = q.OWv;
            this._w[q.w$Q] = n(60, 60, "", u[e.uuOQV], 3);
            this._w[q.w$Q].id = q.w$Q;
            this._w[q.OQW] = n(60, 60, "", u[e.v_U0v], 3);
            this._w[q.OQW].id = q.OQW;
            this._w[q.VWQ] = n(60, 60, "", u[e.oV$W0], 3);
            this._w[q.VWQ].id = q.VWQ;
            this._w[q.wQO] = n(60, 60, "", u[e.QoovQ], 3);
            this._w[q.wQO].id = q.wQO;
            this._w[q.UwW] = n(60, 60, "", u[e.W_u_0], 3);
            this._w[q.UwW].id = q.UwW;
            this._w[q.UWW] = n(60, 60, "", u[e.ww$0u], 3);
            this._w[q.UWW].id = q.UWW;
            this._w[q.VWv] = n(60, 60, "", u[e.vuOuQ], 3);
            this._w[q.VWv].id = q.VWv;
            this._w[q.vOV] = n(60, 60, "", u[e.OwvQQ], 3);
            this._w[q.vOV].id = q.vOV;
            this._w[q.Wv_] = n(60, 60, "", u[e.OVw$w], 3);
            this._w[q.Wv_].id = q.Wv_;
            this._w[q.wQo] = n(60, 60, "", u[e.V$V0$], 3);
            this._w[q.wQo].id = q.wQo;
            this._w[q.vvo] = n(60, 60, "", u[e.$wu$o], 3);
            this._w[q.vvo].id = q.vvo;
            this._w[q.vvU] = n(60, 60, "", u[e.wOw$Q], 3);
            this._w[q.vvU].id = q.vvU;
            this._w[q._U$] = n(60, 60, "", u[e._0OOQ], 3);
            this._w[q._U$].id = q._U$;
            this._w[q.vOO] = n(60, 60, "", u[e._OW0W], 3);
            this._w[q.vOO].id = q.vOO;
            this._w[q.uou] = n(60, 60, "", u[e.uvO_Q], 3);
            this._w[q.uou].id = q.uou;
            this._w[q._O$] = n(60, 60, "", u[e.Uwww$], 3);
            this._w[q._O$].id = q._O$;
            this._w[q.Q_$] = n(60, 60, "", u[e.VOvwQ], 3);
            this._w[q.Q_$].id = q.Q_$;
            this._w[q.vOu] = n(60, 60, "", u[e.WUoQU], 3);
            this._w[q.vOu].id = q.vOu;
            this._w[q.Uwv] = n(60, 60, "", u[e.wo$o0], 3);
            this._w[q.Uwv].id = q.Uwv;
            this._w[q.w$v] = n(60, 60, "", u[e.QUWov], 3);
            this._w[q.w$v].id = q.w$v;
            this._w[q.UuV] = n(60, 60, "", u[e.UUW_v], 3);
            this._w[q.UuV].id = q.UuV;
            this._w[q._v_] = n(60, 60, "", u[e.uuQv0], 3);
            this._w[q._v_].id = q._v_;
            this._w[q.V_V] = n(60, 60, "", u[e.$WuQU], 3);
            this._w[q.V_V].id = q.V_V;
            this._w[q._uV] = n(60, 60, "", u[e.wQQow], 3);
            this._w[q._uV].id = q._uV;
            this._w[q.oQw] = n(60, 60, "", u[e.owOvO], 3);
            this._w[q.oQw].id = q.oQw;
            this._w[q.UQV] = n(60, 60, "", u[e.$Owu_], 3);
            this._w[q.UQV].id = q.UQV;
            this._w[q.wvo] = n(60, 60, "", u[e.VOvuQ], 3);
            this._w[q.wvo].id = q.wvo;
            this._w[q.$OU] = n(60, 60, "", u[e.vuov0], 3);
            this._w[q.$OU].id = q.$OU;
            this._w[q.VQ0] = n(60, 60, "", u[e.__uO$], 3);
            this._w[q.VQ0].id = q.VQ0;
            this._w[q.$wu] = n(60, 60, "", u[e.QVuOv], 3);
            this._w[q.$wu].id = q.$wu;
            this._w[q.QwW] = n(60, 60, "", u[e.QWWVW], 3);
            this._w[q.QwW].id = q.QwW;
            this._w[q.VuQ] = n(60, 60, "", u[e.w$WwQ], 3);
            this._w[q.VuQ].id = q.VuQ;
            this._w[q.vvW] = n(60, 60, "", u[e.vuwW_], 3);
            this._w[q.vvW].id = q.vvW;
            this._w[q.$WQ] = n(60, 60, "", u[e.v0W_v], 3);
            this._w[q.$WQ].id = q.$WQ;
            this._w[q.vQQ] = n(60, 60, "", u[e.wUou$], 3);
            this._w[q.vQQ].id = q.vQQ;
            this._w[q._UO] = n(60, 60, "", u[e.owuww], 3);
            this._w[q._UO].id = q._UO;
            this._w[q.UoU] = n(60, 60, "", u[e.VWQvV], 3);
            this._w[q.UoU].id = q.UoU;
            this._w[q.Ww$] = n(60, 60, "", u[e.vuuwO], 3);
            this._w[q.Ww$].id = q.Ww$;
            this._w[q.wOu] = n(60, 60, "", u[e.$v$vu], 3);
            this._w[q.wOu].id = q.wOu;
            this._w[q.vvV] = n(60, 60, "", u[e.vVOUu], 3);
            this._w[q.vvV].id = q.vvV;
            this._w[q.OQ$] = n(60, 60, "", u[e.vOU_U], 3);
            this._w[q.OQ$].id = q.OQ$;
            this._w[q.UWU] = n(60, 60, "", u[e.QWUuO], 3);
            this._w[q.UWU].id = q.UWU;
            this._w[q.VuU] = n(60, 60, "", u[e._VUwU], 3);
            this._w[q.VuU].id = q.VuU;
            this._w[q.uQW] = n(60, 60, "", u[e.oOovW], 3);
            this._w[q.uQW].id = q.uQW;
            this._w[q.vOv] = n(60, 60, "", u[e.V$vwQ], 3);
            this._w[q.vOv].id = q.vOv;
            this._w[q.U_u] = n(60, 60, "", u[e.wvuw_], 3);
            this._w[q.U_u].id = q.U_u;
            this._w[q.w$U] = n(60, 60, "", u[e.UW_U_], 3);
            this._w[q.w$U].id = q.w$U;
            this._w[q.$Uo] = n(60, 60, "", u[e.uOVWO], 3);
            this._w[q.$Uo].id = q.$Uo;
            this._w[q.OW$] = n(60, 60, "", u[e.v0OOv], 3);
            this._w[q.OW$].id = q.OW$;
            this._w[q.vww] = n(60, 60, "", u[e.U_wv0], 3);
            this._w[q.vww].id = q.vww;
            this._w[q.vvv] = n(60, 60, "", u[e.$UQUv], 3);
            this._w[q.vvv].id = q.vvv;
            this._w[q.QQu] = n(60, 60, "", u[e.$Ww], 3);
            this._w[q.QQu].id = q.QQu;
            this._w[q.$WU] = n(60, 60, "", u[e.$Ww], 3);
            this._w[q.$WU].id = q.$WU;
            this._w[q.Ow$] = n(60, 60, "", u[e.$Ww], 3);
            this._w[q.Ow$].id = q.Ow$;
            this._w[q.oVO] = n(60, 60, "", u[e.Qvvow], 3);
            this._w[q.oVO].id = q.oVO;
            this._w[q.UwQ] = n(60, 60, "", u[e.v$$OW], 3);
            this._w[q.UwQ].id = q.UwQ;
            this._w[q.OvW] = n(60, 60, "", u[e.oOU$V], 3);
            this._w[q.OvW].id = q.OvW;
            this._w[q.oQo] = n(60, 60, "", u[e.$$QW0], 3);
            this._w[q.oQo].id = q.oQo;
            this._w[q.uvV] = n(60, 60, "", u[e.vQuWQ], 3);
            this._w[q.uvV].id = q.uvV;
            this._w[q.vw_] = n(60, 60, "", u[e.OwuuQ], 3);
            this._w[q.vw_].id = q.vw_;
            this._w[q._W$] = n(60, 60, "", u[e.$_w_Q], 3);
            this._w[q._W$].id = q._W$;
            this._w[q.O$w] = n(60, 60, "", u[e.OOUwV], 3);
            this._w[q.O$w].id = q.O$w;
            this._w[q.U$W] = n(60, 60, "", u[e.oOvOV], 3);
            this._w[q.U$W].id = q.U$W;
            this._w[q.vV$] = n(60, 60, "", u[e.w$OOu], 3);
            this._w[q.vV$].id = q.vV$;
            this._w[q.WV0] = n(60, 60, "", u[e.W_Woo], 3);
            this._w[q.WV0].id = q.WV0;
            this._w[q._v0] = n(60, 60, "", u[e.$OQOV], 3);
            this._w[q._v0].id = q._v0;
            this._w[q.vV0] = n(60, 60, "", u[e.wuWU0], 3);
            this._w[q.vV0].id = q.vV0;
            this._w[q.OU0] = n(60, 60, "", u[e.voOOo], 3);
            this._w[q.OU0].id = q.OU0;
            this._w[q.vv$] = n(60, 60, "", u[e.O0Quo], 3);
            this._w[q.vv$].id = q.vv$;
            this._w[q.uV$] = n(60, 60, "", u[e.VVO0O], 3);
            this._w[q.uV$].id = q.uV$;
            this._w[q.VUQ] = n(60, 60, "", u[e.wVvuu], 3);
            this._w[q.VUQ].id = q.VUQ;
            this._w[q.wo_] = n(60, 60, "", u[e.ouVWO], 3);
            this._w[q.wo_].id = q.wo_;
            this._w[q.$$Q] = n(60, 60, "", u[e.O_wwo], 3);
            this._w[q.$$Q].id = q.$$Q;
            this._w[q._Wu] = n(60, 60, "", u[e.$wO], 3);
            this._w[q._Wu].id = q._Wu;
            this._w[q.w_v] = n(60, 60, "", u[e.WVQ0V], 3);
            this._w[q.w_v].id = q.w_v;
            this._w[q.uWU] = n(60, 60, "", u[e.UV_UV], 3);
            this._w[q.uWU].id = q.uWU;
            this._w[q.VwO] = n(60, 60, "", u[e.WvwOw], 3);
            this._w[q.VwO].id = q.VwO;
            this._w[q.VoU] = n(60, 60, "", u[e.$oQ0Q], 3);
            this._w[q.VoU].id = q.VoU;
            this._w[q.o_Q] = n(60, 60, "", u[e.oUuQ0], 3);
            this._w[q.o_Q].id = q.o_Q;
            this._w[q.ow$] = n(60, 60, "", u[e.oUuvu], 3);
            this._w[q.ow$].id = q.ow$;
            this._w[q.$wo] = n(60, 60, "", u[e.V0O_Q], 3);
            this._w[q.$wo].id = q.$wo;
            this._w[q.wWQ] = n(60, 60, "", u[e.UoOvU], 3);
            this._w[q.wWQ].id = q.wWQ;
            this._w[q.Uwu] = n(60, 60, "", u[e.oo_o$], 3);
            this._w[q.Uwu].id = q.Uwu;
            this._w[q.wo$] = n(60, 60, "", u[e.wQW_O], 3);
            this._w[q.wo$].id = q.wo$;
            this._w[q.vuQ] = n(60, 60, "", u[e._oOVQ], 3);
            this._w[q.vuQ].id = q.vuQ;
            this._w[q.Wv$] = n(60, 60, "", u[e.O0_0V], 3);
            this._w[q.Wv$].id = q.Wv$;
            this._w[q.Q$u] = n(60, 60, "", u[e.W0UUU], 3);
            this._w[q.Q$u].id = q.Q$u;
            this._w[q.WoV] = n(60, 60, "", u[e.OUoVO], 3);
            this._w[q.WoV].id = q.WoV;
            this._w[q.W_u] = n(60, 60, "", u[e.vWUQ_], 3);
            this._w[q.W_u].id = q.W_u;
            this._w[q.QvU] = n(60, 60, "", u[e.QWVvu], 3);
            this._w[q.QvU].id = q.QvU;
            this._w[q.oQW] = n(60, 60, "", u[e.VOWvv], 3);
            this._w[q.oQW].id = q.oQW;
            this._w[q.vVW] = n(60, 60, "", u[e.w_$u0], 3);
            this._w[q.vVW].id = q.vVW;
            this._w[q.$v0] = n(60, 60, "", u[e.O$U_$], 3);
            this._w[q.$v0].id = q.$v0;
            this._w[q.$Uu] = n(60, 60, "", u[e.$W$Wu], 3);
            this._w[q.$Uu].id = q.$Uu;
            this._w[q.___] = n(60, 60, "", u[e.vu$_w], 3);
            this._w[q.___].id = q.___;
            this._w[q.QVV] = n(60, 60, "", u[e._w_ww], 3);
            this._w[q.QVV].id = q.QVV;
            this._w[q.Wwv] = n(60, 60, "", u[e._OO0w], 3);
            this._w[q.Wwv].id = q.Wwv;
            this._w[q.VUW] = n(60, 60, "", u[e.UUuuv], 3);
            this._w[q.VUW].id = q.VUW;
            this.wv[f.UOQ] = n(68, 68, "", u[e.vwo_$], 3);
            this.wv[f.UOQ].id = f.UOQ;
            this.$Q[f.UOQ] = n(60, 60, "", u[e.QWv], 3);
            this.$Q[f.UOQ].id = f.UOQ;
            this._w[q.UOQ] = n(60, 60, "", u[e.$VoWW], 3);
            this._w[q.UOQ].id = q.UOQ;
            this.wv[f.OoU] = n(68, 68, "", u[e.ouuVQ], 3);
            this.wv[f.OoU].id = f.OoU;
            this.$Q[f.OoU] = n(60, 60, "", u[e.UVQ], 3);
            this.$Q[f.OoU].id = f.OoU;
            this._w[q.OoU] = n(60, 60, "", u[e.OvVVQ], 3);
            this._w[q.OoU].id = q.OoU;
            this.wv[f.OVv] = n(68, 68, "", u[e.o_uw0], 3);
            this.wv[f.OVv].id = f.OVv;
            this.$Q[f.OVv] = n(60, 60, "", u[e.Vu_], 3);
            this.$Q[f.OVv].id = f.OVv;
            this._w[q.OVv] = n(60, 60, "", u[e.U_Uuv], 3);
            this._w[q.OVv].id = q.OVv;
            this.wv[f.VUO] = n(68, 68, "", u[e.U0u0w], 3);
            this.wv[f.VUO].id = f.VUO;
            this.$Q[f.VUO] = n(60, 60, "", u[e.u$o], 3);
            this.$Q[f.VUO].id = f.VUO;
            this._w[q.VUO] = n(60, 60, "", u[e.U_WwV], 3);
            this._w[q.VUO].id = q.VUO;
            this.wv[f.OvO] = n(68, 68, "", u[e.WoQwQ], 3);
            this.wv[f.OvO].id = f.OvO;
            this.$Q[f.OvO] = n(60, 60, "", u[e.W$Q], 3);
            this.$Q[f.OvO].id = f.OvO;
            this.wv[f.Wwo] = n(68, 68, "", u[e.$U$Oo], 3);
            this.wv[f.Wwo].id = f.Wwo;
            this.$Q[f.Wwo] = n(60, 60, "", u[e._W0], 3);
            this.$Q[f.Wwo].id = f.Wwo;
            this.wv[f.Quv] = n(68, 68, "", u[e.VOVOV], 3);
            this.wv[f.Quv].id = f.Quv;
            this.$Q[f.Quv] = n(60, 60, "", u[e.uu0], 3);
            this.$Q[f.Quv].id = f.Quv;
            this.wv[f.QW$] = n(68, 68, "", u[e.o$VUV], 3);
            this.wv[f.QW$].id = f.QW$;
            this.$Q[f.QW$] = n(60, 60, "", u[e.oVU], 3);
            this.$Q[f.QW$].id = f.QW$;
            this._w[q.QW$] = n(60, 60, "", u[e.w0Qvw], 3);
            this._w[q.QW$].id = q.QW$;
            this.wv[f.vwQ] = n(68, 68, "", u[e.O_$$W], 3);
            this.wv[f.vwQ].id = f.vwQ;
            this.$Q[f.vwQ] = n(60, 60, "", u[e.oQ_], 3);
            this.$Q[f.vwQ].id = f.vwQ;
            this._w[q.vwQ] = n(60, 60, "", u[e.wOsocket], 3);
            this._w[q.vwQ].id = q.vwQ;
            this.wv[f.v$_] = n(68, 68, "", u[e.OVuWV], 3);
            this.wv[f.v$_].id = f.v$_;
            this.$Q[f.v$_] = n(60, 60, "", u[e.w__], 3);
            this.$Q[f.v$_].id = f.v$_;
            this._w[q.v$_] = n(60, 60, "", u[e.$0uwO], 3);
            this._w[q.v$_].id = q.v$_;
            this.wv[f.owo] = n(68, 68, "", u[e.VO__Q], 3);
            this.wv[f.owo].id = f.owo;
            this.$Q[f.owo] = n(60, 60, "", u[e._O0], 3);
            this.$Q[f.owo].id = f.owo;
            this._w[q.owo] = n(60, 60, "", u[e.QUWUw], 3);
            this._w[q.owo].id = q.owo;
            this.wv[f.$W0] = n(68, 68, "", u[e.uu_OW], 3);
            this.wv[f.$W0].id = f.$W0;
            this.$Q[f.$W0] = n(60, 60, "", u[e.Qv_], 3);
            this.$Q[f.$W0].id = f.$W0;
            this._w[q.$W0] = n(60, 60, "", u[e.QV$uQ], 3);
            this._w[q.$W0].id = q.$W0;
            this.wv[f.Q$o] = n(68, 68, "", u[e.VVOuQ], 3);
            this.wv[f.Q$o].id = f.Q$o;
            this.$Q[f.Q$o] = n(60, 60, "", u[e.V_0], 3);
            this.$Q[f.Q$o].id = f.Q$o;
            this._w[q.Q$o] = n(60, 60, "", u[e.OvU_U], 3);
            this._w[q.Q$o].id = q.Q$o;
            this.wv[f.$VU] = n(68, 68, "", u[e.uwWVO], 3);
            this.wv[f.$VU].id = f.$VU;
            this.$Q[f.$VU] = n(60, 60, "", u[e.uoO], 3);
            this.$Q[f.$VU].id = f.$VU;
            this._w[q.$VU] = n(60, 60, "", u[e.VoQVo], 3);
            this._w[q.$VU].id = q.$VU;
            this.wv[f.oWQ] = n(68, 68, "", u[e.Qo$Vu], 3);
            this.wv[f.oWQ].id = f.oWQ;
            this.$Q[f.oWQ] = n(60, 60, "", u[e.OQu], 3);
            this.$Q[f.oWQ].id = f.oWQ;
            this._w[q.oWQ] = n(60, 60, "", u[e.WOuvv], 3);
            this._w[q.oWQ].id = q.oWQ;
            this.wv[f.uQu] = n(68, 68, "", u[e.vUoV_], 3);
            this.wv[f.uQu].id = f.uQu;
            this.$Q[f.uQu] = n(60, 60, "", u[e.OUQ], 3);
            this.$Q[f.uQu].id = f.uQu;
            this._w[q.uQu] = n(60, 60, "", u[e._uQWv], 3);
            this._w[q.uQu].id = q.uQu;
            this.wv[f.wUO] = n(68, 68, "", u[e.UUOU0], 3);
            this.wv[f.wUO].id = f.wUO;
            this.$Q[f.wUO] = n(60, 60, "", u[e.W_o], 3);
            this.$Q[f.wUO].id = f.wUO;
            this._w[q.wUO] = n(60, 60, "", u[e.u0UQ0], 3);
            this._w[q.wUO].id = q.wUO;
            this.wv[f.u_V] = n(68, 68, "", u[e.Q0V_w], 3);
            this.wv[f.u_V].id = f.u_V;
            this.$Q[f.u_V] = n(60, 60, "", u[e.UWV], 3);
            this.$Q[f.u_V].id = f.u_V;
            this._w[q.u_V] = n(60, 60, "", u[e.$vWwV], 3);
            this._w[q.u_V].id = q.u_V;
            this.wv[f.ouo] = n(68, 68, "", u[e.wVvQu], 3);
            this.wv[f.ouo].id = f.ouo;
            this.$Q[f.ouo] = n(60, 60, "", u[e.$VQ], 3);
            this.$Q[f.ouo].id = f.ouo;
            this._w[q.ouo] = n(60, 60, "", u[e.O$uO_], 3);
            this._w[q.ouo].id = q.ouo;
            this.wv[f._vU] = n(68, 68, "", u[e.uu_oQ], 3);
            this.wv[f._vU].id = f._vU;
            this.$Q[f._vU] = n(60, 60, "", u[e.$$0], 3);
            this.$Q[f._vU].id = f._vU;
            this._w[q._vU] = n(60, 60, "", u[e.V0vUU], 3);
            this._w[q._vU].id = q._vU;
            this.wv[f.V_w] = n(68, 68, "", u[e.U0__O], 3);
            this.wv[f.V_w].id = f.V_w;
            this.$Q[f.V_w] = n(60, 60, "", u[e.ou$], 3);
            this.$Q[f.V_w].id = f.V_w;
            this._w[q.V_w] = n(60, 60, "", u[e.VVQU$], 3);
            this._w[q.V_w].id = q.V_w;
            this.wv[f.W_W] = n(68, 68, "", u[e.O0$wu], 3);
            this.wv[f.W_W].id = f.W_W;
            this.$Q[f.W_W] = n(60, 60, "", u[e.V$o], 3);
            this.$Q[f.W_W].id = f.W_W;
            this._w[q.W_W] = n(60, 60, "", u[e.VwUoQ], 3);
            this._w[q.W_W].id = q.W_W;
            this.wv[f.vv_] = n(68, 68, "", u[e.U_$O$], 3);
            this.wv[f.vv_].id = f.vv_;
            this.$Q[f.vv_] = n(60, 60, "", u[e.O$V], 3);
            this.$Q[f.vv_].id = f.vv_;
            this.$Q[f.vv_].info.Vv[2] = this.$Q[f.vv_].info.Vv[0];
            this.wv[f.vWV] = n(68, 68, "", u[e.o0_$U], 3);
            this.wv[f.vWV].id = f.vWV;
            this.$Q[f.vWV] = n(60, 60, "", u[e.Quu], 3);
            this.$Q[f.vWV].id = f.vWV;
            this.$Q[f.vWV].info.Vv[2] = this.$Q[f.vWV].info.Vv[0];
            this.wv[f.w_] = n(68, 68, "", u[e.wQovW], 3);
            this.wv[f.w_].id = f.w_;
            this.$Q[f.w_] = n(60, 60, "", u[e.wvQ], 3);
            this.$Q[f.w_].id = f.w_;
            this.$Q[f.w_].info.Vv[2] = this.$Q[f.w_].info.Vv[0];
            this.wv[f.VQv] = n(68, 68, "", u[e.uvVOV], 3);
            this.wv[f.VQv].id = f.VQv;
            this.$Q[f.VQv] = n(60, 60, "", u[e.OOU], 3);
            this.$Q[f.VQv].id = f.VQv;
            this._w[q.VQv] = n(60, 60, "", u[e.$0UUO], 3);
            this._w[q.VQv].id = q.VQv;
            this.wv[f._ov] = n(68, 68, "", u[e._wQWV], 3);
            this.wv[f._ov].id = f._ov;
            this.$Q[f._ov] = n(60, 60, "", u[e.Wvo], 3);
            this.$Q[f._ov].id = f._ov;
            this._w[q._ov] = n(60, 60, "", u[e.vQUQW], 3);
            this._w[q._ov].id = q._ov;
            this.wv[f._vo] = n(68, 68, "", u[e.W0vVQ], 3);
            this.wv[f._vo].id = f._vo;
            this.$Q[f._vo] = n(60, 60, "", u[e.uW0], 3);
            this.$Q[f._vo].id = f._vo;
            this._w[q._vo] = n(60, 60, "", u[e.uuoo0], 3);
            this._w[q._vo].id = q._vo;
            this.wv[f.U$v] = n(68, 68, "", u[e.UUQuQ], 3);
            this.wv[f.U$v].id = f.U$v;
            this.$Q[f.U$v] = n(60, 60, "", u[e.vU$], 3);
            this.$Q[f.U$v].id = f.U$v;
            this._w[q.U$v] = n(60, 60, "", u[e.VVwW0], 3);
            this._w[q.U$v].id = q.U$v;
            this.wv[f._$0] = n(68, 68, "", u[e.V_OQV], 3);
            this.wv[f._$0].id = f._$0;
            this.$Q[f._$0] = n(60, 60, "", u[e.vOW], 3);
            this.$Q[f._$0].id = f._$0;
            this._w[q._$0] = n(60, 60, "", u[e.uWwUU], 3);
            this._w[q._$0].id = q._$0;
            this.wv[f.$$w] = n(68, 68, "", u[e._VQ0U], 3);
            this.wv[f.$$w].id = f.$$w;
            this.$Q[f.$$w] = n(60, 60, "", u[e.VuW], 3);
            this.$Q[f.$$w].id = f.$$w;
            this._w[q.$$w] = n(60, 60, "", u[e._OWww], 3);
            this._w[q.$$w].id = q.$$w;
            this.wv[f.vwO] = n(68, 68, "", u[e.UW$oo], 3);
            this.wv[f.vwO].id = f.vwO;
            this.$Q[f.vwO] = n(60, 60, "", u[e.wUW], 3);
            this.$Q[f.vwO].id = f.vwO;
            this._w[q.vwO] = n(60, 60, "", u[e.Q$vuQ], 3);
            this._w[q.vwO].id = q.vwO;
            this.wv[f.O$O] = n(68, 68, "", u[e.V$u0O], 3);
            this.wv[f.O$O].id = f.O$O;
            this.$Q[f.O$O] = n(60, 60, "", u[e.WoU], 3);
            this.$Q[f.O$O].id = f.O$O;
            this._w[q.O$O] = n(60, 60, "", u[e.UuQv_], 3);
            this._w[q.O$O].id = q.O$O;
            this.wv[f.woU] = n(68, 68, "", u[e.$_Uw0], 3);
            this.wv[f.woU].id = f.woU;
            this.$Q[f.woU] = n(60, 60, "", u[e.OU_], 3);
            this.$Q[f.woU].id = f.woU;
            this._w[q.woU] = n(60, 60, "", u[e.OvQ$O], 3);
            this._w[q.woU].id = q.woU;
            this.wv[f.v$v] = n(68, 68, "", u[e.QwoWV], 3);
            this.wv[f.v$v].id = f.v$v;
            this.$Q[f.v$v] = n(60, 60, "", u[e._WV], 3);
            this.$Q[f.v$v].id = f.v$v;
            this._w[q.v$v] = n(60, 60, "", u[e.uV_u$], 3);
            this._w[q.v$v].id = q.v$v;
            this.wv[f.QUW] = n(68, 68, "", u[e.UUO$o], 3);
            this.wv[f.QUW].id = f.QUW;
            this.$Q[f.QUW] = n(60, 60, "", u[e.wO_], 3);
            this.$Q[f.QUW].id = f.QUW;
            this._w[q.QUW] = n(60, 60, "", u[e.O0UQV], 3);
            this._w[q.QUW].id = q.QUW;
            this.wv[f.vQ$] = n(68, 68, "", u[e.VQQVV], 3);
            this.wv[f.vQ$].id = f.vQ$;
            this.$Q[f.vQ$] = n(60, 60, "", u[e.OVw], 3);
            this.$Q[f.vQ$].id = f.vQ$;
            this._w[q.vQ$] = n(60, 60, "", u[e.$U_Qw], 3);
            this._w[q.vQ$].id = q.vQ$;
            this.wv[f._U0] = n(68, 68, "", u[e.UQvQw], 3);
            this.wv[f._U0].id = f._U0;
            this.$Q[f._U0] = n(60, 60, "", u[e.$$O], 3);
            this.$Q[f._U0].id = f._U0;
            this._w[q._U0] = n(60, 60, "", u[e._0VQv], 3);
            this._w[q._U0].id = q._U0;
            this.wv[f.WWu] = n(68, 68, "", u[e._wWV_], 3);
            this.wv[f.WWu].id = f.WWu;
            this.$Q[f.WWu] = n(60, 60, "", u[e.Q$O], 3);
            this.$Q[f.WWu].id = f.WWu;
            this._w[q.WWu] = n(60, 60, "", u[e.UoU0w], 3);
            this._w[q.WWu].id = q.WWu;
            this.wv[f.v_$] = n(68, 68, "", u[e.UVoWQ], 3);
            this.wv[f.v_$].id = f.v_$;
            this.$Q[f.v_$] = n(60, 60, "", u[e.u$U], 3);
            this.$Q[f.v_$].id = f.v_$;
            this.wv[f.$uW] = n(68, 68, "", u[e.Q0$OQ], 3);
            this.wv[f.$uW].id = f.$uW;
            this.$Q[f.$uW] = n(60, 60, "", u[e.ooU$V], 3);
            this.$Q[f.$uW].id = f.$uW;
            this.wv[f.w_0] = n(68, 68, "", u[e.vVwV0], 3);
            this.wv[f.w_0].id = f.w_0;
            this.$Q[f.w_0] = n(60, 60, "", u[e.QoQQ0], 3);
            this.$Q[f.w_0].id = f.w_0;
            this.wv[f.QQU] = n(68, 68, "", u[e.vu$_v], 3);
            this.wv[f.QQU].id = f.QQU;
            this.$Q[f.QQU] = n(60, 60, "", u[e.u_wQU], 3);
            this.$Q[f.QQU].id = f.QQU;
            this.wv[f.ovU] = n(68, 68, "", u[e.woWQ0], 3);
            this.wv[f.ovU].id = f.ovU;
            this.$Q[f.ovU] = n(60, 60, "", u[e.QVuQ_], 3);
            this.$Q[f.ovU].id = f.ovU;
            this.wv[f._Qu] = n(68, 68, "", u[e.U$oQV], 3);
            this.wv[f._Qu].id = f._Qu;
            this.$Q[f._Qu] = n(60, 60, "", u[e.UuwVQ], 3);
            this.$Q[f._Qu].id = f._Qu;
            this.wVvQ_ = function() {
                for (var a = m.Ow._O_, c = 10, d = 10, e = 0; e < a.length; e++)((0 < e) && !(e % 4)) && (c += a[0].info.width + 10, d = 10), a[e].info.translate.x = c, a[e].info.translate.y = d, d += 10 + a[e].info.height;
            };
            this.Woow_ = function() {
                for (var a = Math.floor((Math.floor((3 + m.Ow._O_.length) / 4) * (10 + this.wv[0].info.Vv[0].width)) + 35), c = 0; c < this.wv.length; c++) this.wv[c] && (this.wv[c].info.translate.x = a, this.wv[c].info.translate.y = 22);
                this.VUo.info.translate.x = a + 17;
                this.VUo.info.translate.y = 22 + u[e.vv_0v].height;
                this._u_$$.info.translate.x = a + 17;
                this._u_$$.info.translate.y = 30;
                this.OvQ.info.translate.x = a + 17;
                this.OvQ.info.translate.y = 22 + u[e.vv_0v].height;
            };
            this.$vOo_ = function() {
                for (var a = Math.floor((ka - u[e._VO][0].width) / 2), c = 0; c < this.oQV.length; c++) this.oQV[c].button.info.translate.x = a, this.oQV[c].button.info.translate.y = -13;
            };
            this.uwUUw = function() {
                var a = 12 + Math.floor((Math.floor((3 + m.Ow._O_.length) / 4) * (10 + this.QVU.info.Vv[0].width)) + 35);
                this.QVU.info.translate.x = a;
                this.QVU.info.translate.y = 33;
                this.$OWUU.info.translate.x = this.QVU.info.translate.x;
                this.$OWUU.info.translate.y = 137;
                this.Ouu.info.translate.x = this.QVU.info.translate.x;
                this.Ouu.info.translate.y = 240;
            };
            this.vuWwo = function() {
                var a = 12 + Math.floor((Math.floor((3 + m.Ow._O_.length) / 4) * (10 + this.uVOwo.info.Vv[0].width)) + 35);
                this.uVOwo.info.translate.x = a;
                this.uVOwo.info.translate.y = 36;
                a += 83;
                this.vVV.info.translate.x = a;
                this.vVV.info.translate.y = 36;
                this.wvu.info.translate.x = a;
                this.wvu.info.translate.y = 36;
                this.VUv.info.translate.x = a;
                this.VUv.info.translate.y = 36;
                this.Qwv.info.translate.x = a;
                this.Qwv.info.translate.y = 36;
                this._wQ.info.translate.x = a;
                this._wQ.info.translate.y = 36;
            };
            this.o_wuU = function() {
                var a = 12 + Math.floor((Math.floor((3 + m.Ow._O_.length) / 4) * (10 + this.W0OW0.info.Vv[0].width)) + 35);
                this.W0OW0.info.translate.x = a;
                this.W0OW0.info.translate.y = 36;
                this.vQw.info.translate.x = a + 83;
                this.vQw.info.translate.y = 36;
            };
            this.Q$uQv = function() {
                var a = Math.floor((Math.floor((3 + m.Ow._O_.length) / 4) * (10 + this.vuoOv.info.Vv[0].width)) + 35);
                this.vuoOv.info.translate.x = a;
                this.vuoOv.info.translate.y = 22;
            };
            this.$o$ = function() {
                var a = m.wW.OWU;
                if (0 < a.length) var c = Math.floor((ka - ((a[0].info.width + 5) * m.wW.max)) / 2);
                for (var d = 0; d < a.length; d++) a[d].info.translate.x = c + ((a[d].info.width + 5) * d), a[d].info.translate.y = (ta - a[d].info.width) - 10, this.OU$[a[d].id].info.translate.x = a[d].info.translate.x + 13, this.OU$[a[d].id].info.translate.y = (a[d].info.translate.y - this.OU$[a[d].id].info.Vv[0].height) - 6;
            };
            var qa = 0,
                dc = function() {
                    w.update();
                    qa++;
                    if (30 == qa) w.WQwQ$(), w.update();
                    else M.setTimeout(dc, 33);
                };
            this.wv0 = function(a) {
                m.Uo$.open && m.Uo$.wv0();
                m.QQQ.open && m.QQQ.wv0();
                document.getElementById("team_box").style.display = "none";
                w.vO$.style.display = "none";
                w.vO$.open = !1;
                w.sign.style.display = "none";
                w.sign.open = !1;
                document.getElementById("shop_starterkit").style.display = "none";
                document.getElementById("home_craft").style.display = "none";
                document.getElementById("recipe_craft").style.display = "none";
                w.uVO.open = !1;
                document.getElementById("option_in_game").style.display = "none";
                w.options.open = !1;
                document.getElementById("sure_delete").style.display = "none";
                w.W$W.open = !1;
                document.getElementById("cancel_sure_delete").style.display = "none";
                w.vvO.open = !1;
                document.getElementById("chronoquest").style.display = "none";
                w.oWo.open = !1;
                N = a;
                w.vv$WO();
                w.vV.style.owQ = w.U$u;
                U.wv0();
                P = -1;
                Q();
                M.YMPB.refresh();
            };
            var N, P = -1,
                Q = function() {
                    w.update();
                    P++;
                    if (30 == P) w.stop(), N();
                    else M.setTimeout(Q, 33);
                };
            this.OwV = !1;
            this.stop = function() {
                this.OwV = !1;
            };
            this.ooU = function() {
                oQ.UwvW$();
                w.OwV = !0;
                P = -1;
                qa = 0;
                dc();
            };
            this.update = function() {
                this.uvQ.translate.x = (ka - this.uvQ.Vv.width) - 10;
                this.uvQ.translate.y = 5;
                p.OOO.translate.x = (this.uvQ.translate.x - u[e.wuo][0].width) - 85;
                p.OOO.translate.y = 10;
                this.uVO.button.info.translate.x = (this.uvQ.translate.x - u[e.uOQ][0].width) - 10;
                this.uVO.button.info.translate.y = 10;
                this.oWo.button.info.translate.x = (this.uvQ.translate.x - u[e.wVO][0].width) - 20;
                this.oWo.button.info.translate.y = (this.uVO.button.info.translate.y + u[e.uOQ][0].height) + 5;
                this.options.button.info.translate.x = (this.uvQ.translate.x - u[e.w$O][0].width) - 20;
                this.options.button.info.translate.y = (this.oWo.button.info.translate.y + u[e.w$O][0].height) + 18;
                this._V$.WQ_.info.translate.x = (this.uvQ.translate.x - u[e.w$O][0].width) - 20;
                this._V$.WQ_.info.translate.y = this.options.button.info.translate.y + u[e.VvQ][0].height;
                this._V$.uU0.info.translate.x = (this.uvQ.translate.x - u[e.w$O][0].width) - 20;
                this._V$.uU0.info.translate.y = this.options.button.info.translate.y + u[e.VvQ][0].height;
                this.vO$.button.info.translate.x = (this.uvQ.translate.x - u[e.o_o][0].width) - 20;
                this.vO$.button.info.translate.y = this._V$.WQ_.info.translate.y + u[e.o_o][0].height;
                m.WQV.translate.x = (this.uvQ.translate.x - 63) - 85;
                m.WQV.translate.y = 100;
                m.$UW.translate.x = (this.uvQ.translate.x - u[e.OUvo_].width) - 85;
                m.$UW.translate.y = (m.WQV.translate.y + 10) + u[e.Voo].height;
                this._u_.translate.y = (ta - 3) - 193;
                this._u_.translate.x = (ka - 3) - 193;
                this.OWW.translate.x = 5;
                this.OWW.translate.y = (ta - this.OWW.Vv.height) - 5;
                this.Oo_.button.info.translate.x = X - 45.5;
                this.Oo_.button.info.translate.y = 50;
                this.wVvQ_();
                this.$o$();
                this.Woow_();
                this.Q$uQv();
                this.o_wuU();
                this.vuWwo();
                this.uwUUw();
                this.$vOo_();
                this.sign.VVUw_();
                yg();
                m.Uo$.update();
                m.QQQ.update();
                this.UvuvV.update();
                this.uVO.VQuuW.update();
                this.uVO.list.update();
                this.W$W.update();
                this.vvO.update();
                this.oWo.update();
                this.Oo_.update();
                this.options.update();
                this.vO$.update();
                this.sign.update();
                var a = 0;
                (30 != qa) && (a = (1500 / (qa + 1)) - 50);
                (-1 != P) && (a = -((1500 / ((30 - P) + 1)) - 48));
                this.Oo_.button.info.translate.y -= (0 < a) ? a : -a;
                this.uvQ.translate.y -= (0 < a) ? a : -a;
                m.WQV.translate.y -= (0 < a) ? a : -a;
                m.$UW.translate.y -= (0 < a) ? a : -a;
                this.uVO.button.info.translate.y -= (0 < a) ? a : -a;
                this.oWo.button.info.translate.y -= (0 < a) ? a : -a;
                this.options.button.info.translate.y -= (0 < a) ? a : -a;
                this.vO$.button.info.translate.y -= (0 < a) ? a : -a;
                this._V$.WQ_.info.translate.y -= (0 < a) ? a : -a;
                this._V$.uU0.info.translate.y -= (0 < a) ? a : -a;
                p.OOO.translate.y -= (0 < a) ? a : -a;
                this.OWW.translate.y -= (0 > a) ? a : -a;
                this._u_.translate.y -= (0 > a) ? a : -a;
            };
            this.U0wu$ = function() {
                ((m.QW0.enabled || !this.WU0) || m.$_o) || fi();
                var a = m.Ow;
                if (a.W$V) {
                    var c = p.oUU[m.v$o];
                    l.save();
                    l.translate(m.VQ.x + c.x, m.VQ.y + c.y);
                    var d = u[e.W$v$w],
                        h = (-d.height / 2) - (125 * z);
                    E(l, d, -d.width / 2, h);
                    l.beginPath();
                    l.lineWidth = 5 * z;
                    l.strokeStyle = e.uVQvO[p.time];
                    l.lineCap = "round";
                    l.arc(0, h + (d.height / 2), 25 * z, 0, (2 * Math.PI) * a.timeout.o_);
                    l.stroke();
                    l.restore();
                }
                var w = p.Ww[t.uvw];
                if ((((((p.mode === F.VOo) || (p.mode === F._Vo)) || (p.mode === F.wQ_)) || (p.mode === F.U$O)) || (p.mode === F.OwU)) || (p.mode === F.Uov))
                    for (var n = 0; n < w.length; n++) w[n].$V_VU();
                else if (p.mode === F.WVw)
                    for (n = 0; n < w.length; n++)(m._Ou || m.$UW.enabled) ? w[n].$V_VU() : (("spectator" !== w[n].ow.woV) && w[n].$V_VU());
                if (this.WU0) {
                    var q = (0 < m.wW.OWU.length) ? ({
                        x: C._u_.translate.x,
                        y: C._u_.translate.y - (120 * z)
                    }) : ({
                        x: C._u_.translate.x,
                        y: C._u_.translate.y - (50 * z)
                    });
                    l.globalAlpha = 0.8;
                    E(l, u[e.vUv][p.time], q.x, q.y);
                    l.globalAlpha = 1;
                    (-1 < C._u_._Wo.x) && (l.fillStyle = "#660000", A(l, q.x + (C._u_._Wo.x * z), q.y + (C._u_._Wo.y * z), 5 * z), l.fill());
                    for (var r = z, D = C._u_.UO, G = 0; G < D.length; G++) {
                        var dc = D[G];
                        l.fillStyle = "#ff0000";
                        A(l, q.x + (((dc.x / (100 * p.$$$)) * 193) * z), q.y + (((dc.y / (100 * p.WV_)) * 193) * z), 2 * z);
                        l.fill();
                    }
                    var L = p.oUU[m.v$o];
                    L && (l.fillStyle = p.time ? "#fff" : "#e39716", A(l, q.x + (((L.x / (100 * p.$$$)) * 193) * z), q.y + (((L.y / (100 * p.WV_)) * 193) * z), 4 * z), l.fill());
                    z = r;
                    (1 === this.WUw) && this.uVO.button.uW(g);
                    ((((p.mode !== F.wQ_) && (p.mode !== F.U$O)) && (p.mode !== F.OwU)) && (1 === this.UUV)) && this.oWo.button.uW(g);
                    this.options.button.uW(g);
                    (1 === this.W$oVU) && this.vO$.button.uW(g);
                    U.ooU ? this._V$.WQ_.uW(g) : this._V$.uU0.uW(g);
                    var K = m.o$O,
                        N = C.uvQ;
                    if (K.update) {
                        K.update = !1;
                        var wa = K.UU_,
                            qa = N._,
                            ya = p.UO,
                            M = !1;
                        qa.clearRect(0, 0, N.vV.width, N.vV.height);
                        qa.drawImage(N.Vv, 0, 0);
                        for (var P = 0; P < wa.length; P++) {
                            var R = ya[wa[P]];
                            if ((p.mode !== F.WVw) || ("spectator" !== R.woV))
                                if ((p.mode !== F.wQ_) || (R.vWO !== F.$0w))(wa[P] == m.id) ? (M = !0, v = ((p.mode === F.Uov) && (R.vWO === F.V_v)) ? "#FF0000" : "#FFF") : (v = ((p.mode === F.Uov) && (R.vWO === F.V_v)) ? "#990000" : "#A1BDCD"), qa.drawImage(Ia(z, "" + (P + 1), 15 * z, v), 20 * z, (40 + (22 * P)) * z), R.oVO_V || (R.oVO_V = Ia(z, R.woV, 15 * z, v, void 0, void 0, void 0, void 0, 110 * z)), qa.drawImage(R.oVO_V, 39 * z, (40 + (22 * P)) * z), qa.drawImage(Ia(z, OQ.$w$(R.UOV), 15 * z, v), 156 * z, (40 + (22 * P)) * z);
                        }(M || (((((((p.mode !== F.VOo) && (p.mode !== F.Uov)) && (p.mode !== F.U$O)) && (p.mode !== F.OwU)) && (p.mode !== F._Vo)) && ((p.mode !== F.WVw) || m._Ou)) && ((p.mode !== F.wQ_) || m.$_o))) || (qa.drawImage(u[e.UowUU], 15 * z, (46 + (22 * P)) * z), qa.drawImage(Ia(z, OQ.$w$(p.UO[m.id].UOV), 15 * z, "#FFF"), 100 * z, (46 + (22 * P)) * z));
                    }
                    E(l, N.vV, N.translate.x, N.translate.y);
                    var Q = -8;
                    if (m.WQV.enabled) {
                        var V = u[e.Voo];
                        E(l, V, m.WQV.translate.x, m.WQV.translate.y + Q);
                        Q += 70;
                    }
                    if (1 === m._uo) V = u[e.Q0$_$], E(l, V, m.WQV.translate.x, m.WQV.translate.y + Q), Q += 70;
                    else if (((((0.25 > m.OWW.QwV.x) || (0.25 > m.OWW.Uv0.x)) || (0.25 > m.OWW.uUw.x)) || (0.25 > m.OWW.$vW.x)) || (0.25 > m.OWW.WuV.x)) V = u[e._0o0O], E(l, V, m.WQV.translate.x, m.WQV.translate.y + Q), Q += 70;
                    if (0 < m.VU_) {
                        V = u[e.OQUW0];
                        E(l, V, m.WQV.translate.x, m.WQV.translate.y + Q);
                        var aa = Wg[m.VU_];
                        (void 0 === aa) && (aa = Ia(z, m.VU_ + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6), Wg[m.VU_] = aa);
                        (9 > m.VU_) ? E(l, aa, m.WQV.translate.x - 39, (m.WQV.translate.y + Q) + 20): E(l, aa, m.WQV.translate.x - 46, (m.WQV.translate.y + Q) + 20);
                    }
                    this.OWW.uW();
                    var x = m.vuo;
                    if (x.wait) {
                        var ja = x.timeout.update();
                        l.save();
                        var T = u[e.Vosocket];
                        l.translate(T.width - (2 * z), C.OWW.translate.y - (60 * z));
                        var ca = (-T.height / 2) - 4;
                        E(l, T, (-T.width / 2) - 2, ca);
                        l.beginPath();
                        l.lineWidth = 5 * z;
                        l.strokeStyle = e.o_W$v[p.time];
                        l.lineCap = "round";
                        l.arc(0, ca + (T.height / 2), 25 * z, 0, (2 * Math.PI) * x.timeout.o_);
                        l.stroke();
                        l.restore();
                        ja && (x.wait = !1, x.timeout.o_ = 0, x.timeout.Uo = !1);
                    }
                    var fa = m.vW0;
                    if (fa.wait) {
                        var pa = fa.timeout.update();
                        l.save();
                        var na = u[e.uwQuw];
                        l.translate(na.width - (2 * z), C.OWW.translate.y - (125 * z));
                        var ha = (-na.height / 2) - 4;
                        E(l, na, (-na.width / 2) + 10, ha);
                        l.beginPath();
                        l.lineWidth = 5 * z;
                        l.strokeStyle = e.wV_$$[p.time];
                        l.lineCap = "round";
                        l.arc(9, ha + (na.height / 2), 25 * z, 0, (2 * Math.PI) * fa.timeout.o_);
                        l.stroke();
                        l.restore();
                        pa && (fa.wait = !1, fa.timeout.o_ = 0, fa.timeout.Uo = !1);
                    }
                    var ma = m.QVW;
                    if (ma.wait) {
                        var ra = ma.timeout.update();
                        l.save();
                        var Oa = u[e.ouvW$];
                        l.translate(Oa.width - (12 * z), C.OWW.translate.y - (190 * z));
                        var oa = (-Oa.height / 2) - 4;
                        E(l, Oa, (-Oa.width / 2) + 9, oa);
                        l.beginPath();
                        l.lineWidth = 5 * z;
                        l.strokeStyle = e.wV_$$[p.time];
                        l.lineCap = "round";
                        l.arc(9, oa + (Oa.height / 2), 25 * z, 0, (2 * Math.PI) * ma.timeout.o_);
                        l.stroke();
                        l.restore();
                        ra && (ma.wait = !1, ma.timeout.o_ = 0, ma.timeout.Uo = !1);
                    }
                    var sa = m._OV;
                    if (sa.wait) {
                        var I = sa.timeout.update();
                        l.save();
                        var ua = u[e.O$UoW];
                        l.translate(ua.width, (C.OWW.translate.y - (188 * z)) - (u[e.Vosocket].height + (25 * z)));
                        var J = (-ua.height / 2) - 4;
                        E(l, ua, ((-ua.width / 2) - 2) + 2, J);
                        l.beginPath();
                        l.lineWidth = 5 * z;
                        l.strokeStyle = e.o_W$v[p.time];
                        l.lineCap = "round";
                        l.arc(0, J + (ua.height / 2), 25 * z, 0, (2 * Math.PI) * sa.timeout.o_);
                        l.stroke();
                        l.restore();
                        I && (sa.wait = !1, sa.timeout.o_ = 0, sa.timeout.Uo = !1);
                    }
                    for (var ic = m.wW, H = p.oUU[m.v$o], Z = 0; Z < ic.OWU.length; Z++) {
                        var la = ic.OWU[Z],
                            xa = !1;
                        ((H = p.oUU[m.v$o]) && ((H.right == la.id) || ((H.$Qu == la.id) && (0 < H.$Qu)))) ? (xa = !0, E(l, la.info.Vv[2], la.info.translate.x, la.info.translate.y, la.info.width, la.info.height)) : la.uW(l);
                        var va = m.wW.WQ[la.id];
                        (1 < va) && Wb(va, la);
                        if (0 < va) {
                            var id = u[e.VuO_u][Z],
                                Ea = la.info.translate.x + (5 * z),
                                S = la.info.translate.y + (5 * z);
                            if ((la.info.state == ba) || xa) S += 5 * z;
                            E(l, id, Ea, S);
                        }
                        var Ba = m.O$;
                        ((!Ba.open || !((0 > Ba.id) || (Ba.id == la.id))) || (Ba.lock && (Ba.OV_ != m.id))) || C.OU$[la.id].uW(l);
                        (m.VO0.open && (f.vv == la.id)) && C.OU$[la.id].uW(l);
                        (m.WVu.open && (f.wWQ == la.id)) && C.OU$[la.id].uW(l);
                        (m._oV.open && (f.OwW == la.id)) && C.OU$[la.id].uW(l);
                        (m.Vw0.open && (f.vv == la.id)) && C.OU$[la.id].uW(l);
                        (!m.V_U.open || ((f.vv != la.id) && (f.QQ_ != la.id))) || C.OU$[la.id].uW(l);
                    }
                    if (la && (Z < ic.max)) {
                        var Fa = u[e.wW$v$][2];
                        vo = la.info.translate.x;
                        WW = la.info.translate.y;
                        for (ov = 1; Z < ic.max; Z++, ov++) E(l, Fa, vo + (ov * (Fa.width + 5)), WW);
                    }
                    m.O$.id = -1;
                    m.O$.lock = !1;
                    m.O$.locked = !1;
                    m.O$.wwv = !1;
                    m.O$._vv = !1;
                    m.O$.open = !1;
                    var Ka = p.oUU[m.v$o],
                        da = F.uWUU0;
                    if (Ka) {
                        for (var Ja = 0; Ja < p.Ww[t.V$Q].length; Ja++) {
                            var Aa = p.Ww[t.V$Q][Ja],
                                Ta = OQ.U_o(Aa, Ka);
                            var oOo0ooo = (2 > Aa.action) ? -1 : Math.floor((Aa.action - 1) / 2);
                            Aa.slot.img = C.wv[oOo0ooo];
                            (Ta < da) && (da = Ta, m.O$.open = !0, m.O$.id = (2 > Aa.action) ? -1 : Math.floor((Aa.action - 1) / 2), m.O$.VVW = Aa.info, m.O$.OV_ = Aa.OV_, m.O$.O$Q = Aa.id, m.O$.locked = Aa.lock, m.O$.lock = ((Aa.lock && (m.id != Aa.OV_)) && !m.UVW$W(Aa.OV_)) ? !0 : !1, m.O$._vv = (((Aa.OV_ !== m.id) || m.O$.locked) || (-1 == m.wW._Uo(f.vQQ))) ? !1 : !0, (m.O$.locked && (-1 != m.wW._Uo(f.UoU))) && (m.O$.wwv = !0));
                        }
                        if (da < F.uWUU0) {
                            var Qa = u[e.vv_0v],
                                La = C.wv[0],
                                cb = Math.floor(La.info.translate.x + ((La.info.Vv[0].width - Qa.width) / 2)),
                                fb = Math.floor(La.info.translate.y + ((La.info.Vv[0].height - Qa.height) / 2)) + 3;
                            E(l, Qa, cb, fb);
                            if ((!m.O$.lock || (m.O$.OV_ === m.id)) && (0 <= m.O$.id)) {
                                La = C.wv[m.O$.id];
                                La.uW(l);
                                var Ca = m.O$.VVW;
                                (1 < Ca) && Wb(Ca, La);
                            }
                            m.O$.lock ? C._u_$$.uW(l) : (m.O$._vv && C.OvQ.uW(l));
                            m.O$.wwv && C.VUo.uW(l);
                        }
                    }
                    if (!m.O$.open) {
                        m.VO0.VVW = 0;
                        m.VO0.open = !1;
                        var Pa = p.oUU[m.v$o],
                            Ya = F.VOouO;
                        if (Pa) {
                            for (var $a = 0; $a < p.Ww[t.UoQ].length; $a++) {
                                var Wa = p.Ww[t.UoQ][$a],
                                    ab = OQ.U_o(Wa, Pa);
                                (ab < Ya) && (Ya = ab, m.VO0.open = !0, m.VO0.VVW = Wa.info, m.VO0.OV_ = Wa.OV_, m.VO0.O$Q = Wa.id);
                            }
                            if (Ya < F.VOouO) {
                                var bb = u[e.wvU_Q],
                                    Ra = C.vuoOv,
                                    eb = Math.floor(Ra.info.translate.x + ((Ra.info.Vv[0].width - bb.width) / 2)),
                                    zj = Math.floor(Ra.info.translate.y + ((Ra.info.Vv[0].height - bb.height) / 2)) + 3;
                                E(l, bb, eb, zj);
                                if (0 < m.VO0.VVW) {
                                    Ra.uW(l);
                                    var jb = m.VO0.VVW;
                                    (1 < jb) && Wb(jb, Ra);
                                }
                            }
                        }
                    }
                    if (!((((m.O$.open || m.VO0.open) || m._oV.open) || m.V_U.open) || m.Vw0.open)) {
                        m.WVu.open = !1;
                        var Xa = p.oUU[m.v$o],
                            kb = F.O$OVv;
                        if (Xa)
                            for (var Ga = 0; Ga < p.Ww[t.wo$].length; Ga++) {
                                var Ha = p.Ww[t.wo$][Ga],
                                    ob = OQ.U_o(Ha, Xa);
                                (ob < kb) && (kb = ob, m.WVu.open = !0, m.WVu.OV_ = Ha.OV_, m.WVu.O$Q = Ha.id);
                            }
                    }
                    if (!m.O$.open && !m.VO0.open) {
                        m._oV.open = !1;
                        var pb = p.oUU[m.v$o],
                            hb = F.QOUuv;
                        if (pb) {
                            for (var vb = 0; vb < p.Ww[t.U$W].length; vb++) {
                                var lb = p.Ww[t.U$W][vb],
                                    Za = OQ.U_o(lb, pb);
                                (Za < hb) && (hb = Za, m._oV.open = !0, m._oV.uwvOW = lb.info & 255, m._oV.uoo = (lb.info & 65280) >> 8, m._oV.OV_ = lb.OV_, m._oV.O$Q = lb.id);
                            }
                            if (hb < F.QOUuv) {
                                var gb = C.W0OW0;
                                E(l, u[e.UuwQV], gb.info.translate.x - 33, 0);
                                if (0 < m._oV.uwvOW) {
                                    gb.uW(l);
                                    var nb = m._oV.uwvOW;
                                    (1 < nb) && Wb(nb, gb);
                                }
                                gb = C.vQw;
                                (0 < m._oV.uoo) && (gb.uW(l), nb = m._oV.uoo, (1 < nb) && Wb(nb, gb));
                            }
                        }
                    }
                    if (!m.O$.open && !m.VO0.open) {
                        m.Vw0.open = !1;
                        var tb = p.oUU[m.v$o],
                            db = F.uWOoV;
                        if (tb) {
                            for (var Na = 0; Na < of .length; Na++)
                                for (var mb = of [Na][0], Pb = of [Na][1], Eb = 0; Eb < p.Ww[mb].length; Eb++) {
                                    var dd = p.Ww[mb][Eb],
                                        Xg = OQ.U_o(dd, tb);
                                    (Xg < db) && (db = Xg, m.Vw0.$$$Wo = Pb, m.Vw0.type = mb, m.Vw0.open = !0, m.Vw0.Qo$ = dd.info & 255, m.Vw0.$Vv = (dd.info & 65280) >> 8, m.Vw0.OV_ = dd.OV_, m.Vw0.O$Q = dd.id);
                                }
                            if (db < F.uWOoV) {
                                var ac = C.uVOwo;
                                E(l, u[e.oVOQQ], ac.info.translate.x - 33, 0);
                                if (0 < m.Vw0.Qo$) {
                                    ac.uW(l);
                                    var ed = m.Vw0.Qo$;
                                    (1 < ed) && Wb(ed, ac);
                                }
                                switch (m.Vw0.$$$Wo) {
                                    case f.V0:
                                        ac = C.vVV;
                                        break;
                                    case f.$U:
                                        ac = C.wvu;
                                        break;
                                    case f.v$:
                                        ac = C.VUv;
                                        break;
                                    case f.$W:
                                        ac = C.Qwv;
                                        break;
                                    case f.w_:
                                        ac = C._wQ;
                                }(0 < m.Vw0.$Vv) && (ac.uW(l), ed = m.Vw0.$Vv, (1 < ed) && Wb(ed, ac));
                            }
                        }
                    }
                    if (!(((m.O$.open || m.VO0.open) || m._oV.open) || m.Vw0.open)) {
                        m.V_U.open = !1;
                        var Ib = p.oUU[m.v$o],
                            pf = F.vvuWw;
                        if (Ib) {
                            for (var Bb = 0; Bb < p.Ww[t.VUQ].length; Bb++) {
                                var sb = p.Ww[t.VUQ][Bb],
                                    Jb = OQ.U_o(sb, Ib);
                                (Jb < pf) && (pf = Jb, m.V_U.open = !0, m.V_U.Qo$ = sb.info & 31, m.V_U.uoo = (sb.info & 992) >> 5, m.V_U.$vo = (sb.info & 31744) >> 10, m.V_U.OV_ = sb.OV_, m.V_U.O$Q = sb.id);
                            }
                            if (pf < F.vvuWw) {
                                var yb = C.QVU;
                                E(l, u[e.UVOwu], yb.info.translate.x - 32, 0);
                                if (0 < m.V_U.Qo$) {
                                    yb.uW(l);
                                    var ub = m.V_U.Qo$;
                                    (1 < ub) && Wb(ub, yb);
                                }
                                yb = C.Ouu;
                                (0 < m.V_U.$vo) && (yb.uW(l), ub = m.V_U.$vo, (1 < ub) && Wb(ub, yb));
                                yb = C.$OWUU;
                                (0 < m.V_U.uoo) && (yb.uW(l), ub = m.V_U.uoo, (1 < ub) && Wb(ub, yb));
                            }
                        }
                    }
                    if (!((((m.O$.open || m.VO0.open) || m._oV.open) || m.V_U.open) || m.Vw0.open)) {
                        m.sign.open = !1;
                        var Yg = p.oUU[m.v$o],
                            Ua = F.owO$o;
                        if (Yg) {
                            for (var Ab = 0; Ab < p.Ww[t.vuQ].length; Ab++) {
                                var xb = p.Ww[t.vuQ][Ab],
                                    Mb = OQ.U_o(xb, Yg);
                                (((Mb < Ua) && (0 === xb.info)) && (xb.OV_ === m.id)) && (m.sign.open = !0, Ua = Mb, m.sign.O$Q = xb.id);
                            }(Ua < F.owO$o) && C.sign.button.uW(l);
                        }
                    }
                    yg();
                    var bc = C.Uvw,
                        cc = bc.id;
                    if ((1 === bc._wO) && (1 === bc.display)) {
                        if (void 0 === wQu[cc]) {
                            var Vb = wQu,
                                Db = document.createElement("canvas"),
                                ib = Db.getContext("2d"),
                                wb = k[cc];
                            ib.font = "20px Baloo Paaji";
                            var Sa = 0;
                            (1 <= wb.length) && (Sa = Math.max(0, ib.measureText(wb[0]).width));
                            ib.font = "17px Baloo Paaji";
                            (2 <= wb.length) && (Sa = Math.max(Sa, ib.measureText(wb[1]).width));
                            ib.font = "14px Baloo Paaji";
                            for (za = 2; za < wb.length; za++) Sa = Math.max(Sa, ib.measureText(wb[za]).width);
                            var Sb = Sa + 35,
                                Va = 0,
                                Va = (1 === wb.length) ? 55 : ((2 === wb.length) ? 85 : ((26 * (wb.length - 2)) + 85));
                            Db.width = Sb;
                            Db.height = Va;
                            B(ib, 0, 0, Sb, Va, 10);
                            ib.fillStyle = "#000000";
                            ib.globalAlpha = 0.5;
                            ib.fill();
                            (1 <= wb.length) && (ib.textBaseline = "middle", ib.font = "20px Baloo Paaji", ib.globalAlpha = 1, ib.fillStyle = "#e2c340", ib.fillText(wb[0], 15, 28));
                            (2 <= wb.length) && (ib.font = "17px Baloo Paaji", ib.fillStyle = "#ffffff", ib.fillText(wb[1], 15, 55), Va = 55);
                            if (3 <= wb.length)
                                for (ib.font = "14px Baloo Paaji", ib.globalAlpha = 0.7, za = 2; za < wb.length; za++) ib.fillText(wb[za], 15, Va + 28), Va += 26;
                            Vb[cc] = Db;
                        }(1 === bc.Ow) ? E(l, wQu[cc], bc.x, bc.y): ((((bc.x - 80) + wQu[cc].width) > ka) ? E(l, wQu[cc], (ka - wQu[cc].width) - 10, (bc.y - wQu[cc].height) - 10) : E(l, wQu[cc], bc.x - 80, (bc.y - wQu[cc].height) - 10));
                    }
                }
                if (m.QW0.enabled) {
                    m.WUV.open = !1;
                    var Tb = p.oUU[m.v$o],
                        Kb = F.vvUo_;
                    if (Tb) {
                        for (var Lb = 0; Lb < p.Ww[t._UO].length; Lb++) {
                            var Nb = p.Ww[t._UO][Lb],
                                Ub = OQ.U_o(Nb, Tb);
                            (Ub < Kb) && (Kb = Ub, m.WUV.open = !0, m.WUV.OV_ = Nb.OV_, m.WUV.O$Q = Nb.id);
                        }(Kb < F.vvUo_) && C.WUV.uW(l);
                    }
                }
                if (m.U0W) {
                    l.globalAlpha = 0.5;
                    l.fillStyle = "#000";
                    l.fillRect(0, 0, ka, ta);
                    l.globalAlpha = 0.8;
                    var Ob = u[e._W_][p.time],
                        Gb = X - (Ob.width / 2),
                        Hb = ea - (Ob.height / 2);
                    E(l, Ob, Gb, Hb);
                    l.globalAlpha = 1;
                    (-1 < C._u_._Wo.x) && (l.fillStyle = "#660000", A(l, Gb + ((3 * C._u_._Wo.x) * z), Hb + ((3 * C._u_._Wo.y) * z), 14 * z), l.fill());
                    for (var Xb = C._u_.UO, Qb = 0; Qb < Xb.length; Qb++) {
                        var $b = Xb[Qb];
                        l.fillStyle = "#ff0000";
                        A(l, Gb + ((($b.x / (100 * p.$$$)) * 600) * z), Hb + ((($b.y / (100 * p.WV_)) * 600) * z), 6 * z);
                        l.fill();
                    }
                    var Rb = p.oUU[m.v$o];
                    Rb && (l.fillStyle = p.time ? "#fff" : "#e39716", A(l, Gb + (((Rb.x / (100 * p.$$$)) * 600) * z), Hb + (((Rb.y / (100 * p.WV_)) * 600) * z), 12 * z), l.fill());
                }
                if (this.WU0 && (1 === this.oOQ$w)) {
                    var Cb = p.OOO,
                        Fb = u[e.wuo][p.time];
                    E(l, Fb, Cb.translate.x, Cb.translate.y);
                    l.save();
                    l.translate(Cb.translate.x + (Fb.width / 2), Cb.translate.y + (Fb.height / 2));
                    p.OOO.now = (((new Date).getTime() - Cb.UvU) + Cb.ow0) % F._v;
                    l.rotate((((2 * Math.PI) * p.OOO.now) / F._v) - (Math.PI / 2));
                    E(l, u[e.QWOU_], -Fb.width / 2, -Fb.height / 2);
                    l.restore();
                }
                m.vwu.uW();
                m.alert.uW("#FFF", "#000");
                this.WU0 && (m.QW0.uW(), m.Oo_.uW(), m.wW._uO.uW(W.Uu.x, W.Uu.y));
                if (m.reconnect.enabled) {
                    l.globalAlpha = 0.9;
                    l.fillStyle = "#000";
                    B(l, X - 150, ea - 90, 300, 180, 15);
                    l.fill();
                    l.globalAlpha = 1;
                    var zb = u[e.QV_VO];
                    l.save();
                    m.reconnect.rotate = (m.reconnect.rotate + (2 * O)) % (2 * Math.PI);
                    l.translate(ka / 2, (ta / 2) - 25);
                    l.rotate(m.reconnect.rotate);
                    E(l, zb, -zb.width / 2, -zb.height / 2);
                    l.restore();
                    zb = u[e.Uu$U0];
                    E(l, zb, (ka - zb.width) / 2, ((ta - zb.height) / 2) + 25);
                };
                if (worldinfo) {
                    Q += 60;

                    if (World.blizzard == "On") {
                        l.save();

                        l.drawImage(BlizzardImg, m.WQV.translate.x - 10, m.WQV.translate.y + 70)

                        l.restore();
                    }
                    if (World.sandstorm == "On") {
                        l.save();

                        l.drawImage(SandstormImg, m.WQV.translate.x - 10 , m.WQV.translate.y + 0)
                        l.restore();
                    }

                }


                if (enabledHacks) {
                    l.save();
                    Q += 26;
                    enabledHacksArray.forEach(text => {
                    if(window.MainSetting.Hacks.Others.RainbowColors) {
                      Q += 21;
                      let shadow = 'red'
                      let color = `hsl(${rainbow}, 100%, 50%)`
                      let styless = Ia(1, text, 20, color, null, null, null, null, null, shadow,4);
                      l.drawImage(styless, 0, (game.clientHeight - 10) - Q);
                  }else{
                      Q += 21;
                      let shadow = 'red'
                      let styless = Ia(1, text, 20, null, null, null, null, null, null, shadow,4);
                      l.drawImage(styless, 0, (game.clientHeight - 10) - Q);
                  }
                  });
                    l.restore();
                };
                if(window.MainSetting.Hacks.Visual.showconnected) {
                    if(window.MainSetting.Hacks.Others.connectedArray.length >= 6) {
                        window.MainSetting.Hacks.Others.connectedArray.shift();
                    }

                    l.save();

                    Q += 21;

                    window.MainSetting.Hacks.Others.connectedArray.forEach(text => {
                        Q += 21;

                        let shadow = '#000000'
                        let styless = Ia(1, text, 24, "#00a900", null, null, null, null, null, shadow,6);
                        l.drawImage(styless, 0, 600 - Q);
                    });

                    l.restore();
                }
            };
            this.ooUV0 = function() {
                m.VQ.update();
                m.OWW.update();
                (!m.reconnect.enabled && m.W$w) && (m.control.update(), m.WQV.update());
                p.update();
                this.oWo.WooUO();
            };
            this.U0wVo = function() {
                l.globalAlpha = 1;
                if (p.Q$w) var a = p.V$.update();
                p.UUW$Q(-m.VQ.x, -m.VQ.y);
                Rb = Math.max(Math.floor(-m.VQ.x / p.oUw) - 5, 0);
                Cb = Math.min(Math.floor((-m.VQ.x + m.VQ.w) / p.oUw) + 4, p.$$$ - 1);
                Fb = Math.max(Math.floor(-m.VQ.y / p.OQo) - 3, 0);
                zb = Math.min(Math.floor((-m.VQ.y + m.VQ.uQ) / p.OQo) + 3, p.WV_ - 1);
                for (var c = p.wUv.length - 1; 0 <= c; c--) {
                    var d = p.wUv[c];
                    if (d.wU === p.__$) {
                        var g = p.Uw_[d.wU];
                        if ((((-m.VQ.x >= ((d.x1 - 230) - ka)) && (-m.VQ.x <= (d.x2 + 330))) && (-m.VQ.y >= (d.y1 - ta))) && (-m.VQ.y <= (d.y2 + 100))) {
                            var k = d.x2;
                            (d.wU !== p.__$) && (k -= 610);
                            var w = d.x1;
                            (d.wU !== p.__$) && (w += 610);
                            var n = d.y2;
                            (d.wU !== p.__$) && (n -= 610);
                            var q = d.y1;
                            (d.wU !== p.__$) && (q += 610);
                            if (p.Q$w) {
                                var r = p.time ? (1 - p.V$.o_) : p.V$.o_;
                                l.fillStyle = pa(g.u0[0], g.u0[1], g.u0[2], g.V_[0], g.V_[1], g.V_[1], r);
                            } else l.fillStyle = g.VU0[p.time];
                            var ia = Math.max(((m.VQ.x + w) - 2) - 230, 0),
                                z = Math.max((((-m.VQ.x + ka) - k) - 330) - 2, 0),
                                B = Math.max((m.VQ.y + q) - 2, 0),
                                C = Math.max((((-m.VQ.y + ta) - n) - 100) - 2, 0);
                            l.beginPath();
                            l.fillRect(ia, B, (ka - z) - ia, (ta - B) - C);
                        }
                    }
                }
                for (c = p.wUv.length - 1; 0 <= c; c--) d = p.wUv[c], (d.wU !== p.__$) && (k = d.x2, (d.wU !== p.__$) && (k -= 400), w = d.x1, (d.wU !== p.__$) && (w += 400), n = d.y2, (d.wU !== p.__$) && (n -= 300), q = d.y1, (d.wU !== p.__$) && (q += 300), (((((0 === (d.o_ & F.oOV)) && (-m.VQ.x >= ((k - ka) + 120))) && (-m.VQ.x <= (k + 820))) && (-m.VQ.y >= ((q + 88) - ta))) && (-m.VQ.y <= (n + 50))) && (Ig(k, q + 88, n - 88, m.ov_[0], p.Uw_[d.wU], d.o_ & F.oOV), Jg(k, q + 88, n - 88, m.ov_[0], p.Uw_[d.wU], d.o_ & F.oOV)), (((((0 === (d.o_ & F.Uou)) && (-m.VQ.x >= ((w - ka) - 700))) && (-m.VQ.x <= (w - 20))) && (-m.VQ.y >= ((q + 88) - ta))) && (-m.VQ.y <= (n + 50))) && (Eg(w, q + 88, n - 88, m.ov_[1], p.Uw_[d.wU], d.o_ & F.Uou), Fg(w, q + 88, n - 88, m.ov_[1], p.Uw_[d.wU], d.o_ & F.Uou)), (((((0 === (d.o_ & F.ouW)) && (-m.VQ.x >= ((w - 235) - ka))) && (-m.VQ.x <= (k + 350))) && (-m.VQ.y >= ((n - ta) - 275))) && (-m.VQ.y <= (n + 490))) && (Kg(n - 230, w - 230, k + 230, m.ov_[2], p.Uw_[d.wU], d.o_ & F.ouW), Lg(n - 230, w - 230, k + 230, m.ov_[2], p.Uw_[d.wU], d.o_ & F.ouW)), (((((0 === (d.o_ & F._Q0)) && (-m.VQ.x >= ((w - 235) - ka))) && (-m.VQ.x <= (k + 350))) && (-m.VQ.y >= ((q - ta) - 390))) && (-m.VQ.y <= (q + 315))) && (Gg(q + 310, w - 230, k + 230, m.ov_[3], p.Uw_[d.wU], d.o_ & F._Q0), Hg(q + 310, w - 230, k + 230, m.ov_[3], p.Uw_[d.wU], d.o_ & F._Q0)));
                for (c = p.wUv.length - 1; 0 <= c; c--) d = p.wUv[c], (d.wU !== p.__$) && (k = d.x2, (d.wU !== p.__$) && (k -= 400), w = d.x1, (d.wU !== p.__$) && (w += 400), n = d.y2, (d.wU !== p.__$) && (n -= 300), q = d.y1, (d.wU !== p.__$) && (q += 300), (((((0 !== (d.o_ & F.oOV)) && (-m.VQ.x >= ((k - ka) + 120))) && (-m.VQ.x <= (k + 820))) && (-m.VQ.y >= ((q + 88) - ta))) && (-m.VQ.y <= (n + 50))) && Ig(k, q + 88, n - 88, m.ov_[0], p.Uw_[d.wU], d.o_ & F.oOV), (((((0 !== (d.o_ & F.Uou)) && (-m.VQ.x >= ((w - ka) - 700))) && (-m.VQ.x <= (w - 20))) && (-m.VQ.y >= ((q + 88) - ta))) && (-m.VQ.y <= (n + 50))) && Eg(w, q + 88, n - 88, m.ov_[1], p.Uw_[d.wU], d.o_ & F.Uou), (((((0 !== (d.o_ & F.ouW)) && (-m.VQ.x >= ((w - 235) - ka))) && (-m.VQ.x <= (k + 350))) && (-m.VQ.y >= ((n - ta) - 275))) && (-m.VQ.y <= (n + 490))) && Kg(n - 230, w - 230, k + 230, m.ov_[2], p.Uw_[d.wU], d.o_ & F.ouW), (((((0 !== (d.o_ & F._Q0)) && (-m.VQ.x >= ((w - 235) - ka))) && (-m.VQ.x <= (k + 350))) && (-m.VQ.y >= ((q - ta) - 390))) && (-m.VQ.y <= (q + 315))) && Gg(q + 310, w - 230, k + 230, m.ov_[3], p.Uw_[d.wU], d.o_ & F._Q0));
                for (c = p.wUv.length - 1; 0 <= c; c--) d = p.wUv[c], (d.wU !== p.__$) && (g = p.Uw_[d.wU], ((((-m.VQ.x >= ((d.x1 - 230) - ka)) && (-m.VQ.x <= (d.x2 + 330))) && (-m.VQ.y >= (d.y1 - ta))) && (-m.VQ.y <= (d.y2 + 100))) && (k = d.x2, (d.wU !== p.__$) && (k = (0 === (d.o_ & F.oOV)) ? (k - 414) : (k - 610)), w = d.x1, (d.wU !== p.__$) && (w = (0 === (d.o_ & F.Uou)) ? (w + 414) : (w + 610)), n = d.y2, (d.wU !== p.__$) && (n = (0 === (d.o_ & F.ouW)) ? (n - 414) : (n - 610)), q = d.y1, (d.wU !== p.__$) && (q = (0 === (d.o_ & F._Q0)) ? (q + 414) : (q + 610)), p.Q$w ? (r = p.time ? (1 - p.V$.o_) : p.V$.o_, l.fillStyle = pa(g.u0[0], g.u0[1], g.u0[2], g.V_[0], g.V_[1], g.V_[2], r)) : (l.fillStyle = g.VU0[p.time]), ia = Math.max(((m.VQ.x + w) - 2) - 230, 0), z = Math.max((((-m.VQ.x + ka) - k) - 330) - 2, 0), B = Math.max((m.VQ.y + q) - 2, 0), C = Math.max((((-m.VQ.y + ta) - n) - 100) - 2, 0), l.beginPath(), l.fillRect(ia, B, (ka - z) - ia, (ta - B) - C)));
                G.WVU && (na(Id, Fb, zb, Rb, Cb, e.$vu, "isl", 2), na(Id, Fb, zb, Rb, Cb, e.$QU, "isl", 2));
                na(fa, Fb, zb, Rb, Cb, e._OQ, "isl", 2);
                G.WVU && na(sj, Fb, zb, Rb, Cb, e.Wov, "de");
                for (var D = p.Ww[t.uvw], c = 0; c < D.length; c++)
                    for (var dc = D[c], L = 0; L < dc._o0.length; L++) {
                        var K = dc._o0[L];
                        l.save();
                        l.translate(m.VQ.x + K.x, m.VQ.y + K.y);
                        l.rotate(K.angle);
                        l.globalAlpha = K.alpha;
                        var N = u[K.id][p.time];
                        E(l, N, -N.width / 2, -N.height / 2);
                        l.globalAlpha = 1;
                        l.restore();
                    }
                Dc += 40 * O;
                (60 < Dc) && (Dc -= 60);
                na(ri, Fb, zb, Rb, Cb, e.WWV, "r", 0);
                for (c = 0; c < p.wUv.length; c++) d = p.wUv[c], (d.wU !== p.__$) && (k = d.x2, (d.wU !== p.__$) && (k -= 400), w = d.x1, (d.wU !== p.__$) && (w += 400), n = d.y2, (d.wU !== p.__$) && (n -= 300), q = d.y1, (d.wU !== p.__$) && (q += 300), (((((0 < (d.o_ & F.oOV)) && (-m.VQ.x >= ((k - ka) + 120))) && (-m.VQ.x <= (k + 820))) && (-m.VQ.y >= ((q + 88) - ta))) && (-m.VQ.y <= (n + 50))) && Jg(k, q + 88, n - 88, m.ov_[0], p.Uw_[d.wU], d.o_ & F.oOV), (((((0 < (d.o_ & F.Uou)) && (-m.VQ.x >= ((w - ka) - 700))) && (-m.VQ.x <= (w - 20))) && (-m.VQ.y >= ((q + 88) - ta))) && (-m.VQ.y <= (n + 50))) && Fg(w, q + 88, n - 88, m.ov_[1], p.Uw_[d.wU], d.o_ & F.Uou), (((((0 < (d.o_ & F.ouW)) && (-m.VQ.x >= ((w - 235) - ka))) && (-m.VQ.x <= (k + 350))) && (-m.VQ.y >= ((n - ta) - 275))) && (-m.VQ.y <= (n + 490))) && Lg(n - 230, w - 230, k + 230, m.ov_[2], p.Uw_[d.wU], d.o_ & F.ouW), (((((0 < (d.o_ & F._Q0)) && (-m.VQ.x >= ((w - 235) - ka))) && (-m.VQ.x <= (k + 350))) && (-m.VQ.y >= ((q - ta) - 390))) && (-m.VQ.y <= (q + 315))) && Hg(q + 310, w - 230, k + 230, m.ov_[3], p.Uw_[d.wU], d.o_ & F._Q0));
                var qa = Rb,
                    wa = Cb,
                    ya = Fb,
                    M = zb;
                G.WVU && na(fa, ya, M, qa, wa, e.u_o, "l", 2);
                G.WVU && na(fa, ya, M, qa, wa, e.QWw, "la", 5);
                na(fa, ya, M, qa, wa, e.WUu, "la", 5);
                na(Id, ya, M, qa, wa, e.u_W, "l", 2);
                G.WVU && (na(tj, ya, M, qa, wa, e.WUu, "la", 5), na(Id, ya, M, qa, wa, e.W$O, "l", 2));
                na(fa, ya, M, qa, wa, e.O_v, "ma", 3);
                for (var P = p.Ww[t.Vvu], x = 0; x < P.length; x++) P[x].QOUvu();
                for (var Q = p.Ww[t.uvw], x = 0; x < Q.length; x++)
                    for (var T = Q[x], U = 0; U < T.wow.length; U++) {
                        var V = T.wow[U];
                        l.globalAlpha = V.alpha;
                        A(l, V.x + m.VQ.x, V.y + m.VQ.y, V.r);
                        h(l, e.oQU_$[p.time]);
                        l.globalAlpha = 1;
                    }
                for (var W = p.Ww[t.OQ$], x = 0; x < W.length; x++) R(W[x], e.OQ$), W[x].Vuo(W[x].info);
                for (var X = p.Ww[t.UoQ], x = 0; x < X.length; x++)(2 == X[x].action) && Db(X[x]);
                for (var aa = p.Ww[t.$uu], x = 0; x < aa.length; x++) Db(aa[x], e.UoV);
                for (var ba = p.Ww[t._UO], x = 0; x < ba.length; x++) Db(ba[x]);
                for (var ca = p.Ww[t.QW$], x = 0; x < ca.length; x++) Db(ca[x]);
                for (var ja = p.Ww[t.$ow], x = 0; x < ja.length; x++) Db(ja[x], e.VQWUV);
                for (var oa = p.Ww[t.vuQ], x = 0; x < oa.length; x++) R(oa[x]);
                for (var ma = p.Ww[t.uV$], x = 0; x < ma.length; x++) R(ma[x], e.uV$);
                for (var I = p.Ww[t.vUu], x = 0; x < I.length; x++) Db(I[x]);
                I = p.Ww[t.QvU];
                for (x = 0; x < I.length; x++) Db(I[x]);
                I = p.Ww[t.vUu];
                for (x = 0; x < I.length; x++) Eb(I[x]);
                for (var ha = p.Ww[t.oQW], x = 0; x < ha.length; x++)((0 !== (ha[x].info & 15)) && (10 !== ha[x].info)) || R(ha[x]);
                for (var J = p.Ww[t.vVW], x = 0; x < J.length; x++)((0 !== (J[x].info & 15)) && (10 !== J[x].info)) || R(J[x]);
                for (var ea = p.Ww[t.$v0], x = 0; x < ea.length; x++)((0 !== (ea[x].info & 15)) && (10 !== ea[x].info)) || R(ea[x]);
                for (var H = p.Ww[t.Qo_], x = 0; x < H.length; x++) R(H[x], e._W$);
                for (var Z = p.Ww[t.Q$u], x = 0; x < Z.length; x++)((0 !== (Z[x].info & 15)) && (10 !== Z[x].info)) || R(Z[x]);
                for (var la = p.Ww[t.W_u], x = 0; x < la.length; x++)((0 !== (la[x].info & 15)) && (10 !== la[x].info)) || R(la[x]);
                for (var Oa = p.Ww[t.Wv$], x = 0; x < Oa.length; x++)((0 !== (Oa[x].info & 15)) && (10 !== Oa[x].info)) || R(Oa[x]);
                H = p.Ww[t._W$];
                for (x = 0; x < H.length; x++) R(H[x]);
                if (!topBox) {
                    for (var ra = p.Ww[t.wuv], x = 0; x < ra.length; x++) R(ra[x], e.wuv, e.OOVo_);
                    for (var sa = p.Ww[t.wQW], x = 0; x < sa.length; x++) R(sa[x], e.wuv, e.OOVo_);
                };
                for (var ua = p.Ww[t.woW], x = 0; x < ua.length; x++) R(ua[x], e.woW, e.W_w$V);
                for (var S = p.Ww[t.vwQ], x = 0; x < S.length; x++)(S[x].info & 1) && R(S[x], e.v_W);
                S = p.Ww[t.v$_];
                for (x = 0; x < S.length; x++)(S[x].info & 1) && R(S[x], e.$U_);
                S = p.Ww[t.owo];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.Wu_);
                S = p.Ww[t.$W0];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.$oU);
                S = p.Ww[t.Q$o];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.QVQ);
                S = p.Ww[t.$VU];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.Wu_);
                S = p.Ww[t.Vw_];
                for (x = 0; x < S.length; x++)(S[x].info & 1) && R(S[x], e.v_W);
                S = p.Ww[t.wvV];
                for (x = 0; x < S.length; x++)(S[x].info & 1) && R(S[x], e.$U_);
                S = p.Ww[t.u_v];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.Wu_);
                S = p.Ww[t.vO0];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.$oU);
                S = p.Ww[t.VuQ];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.QVQ);
                S = p.Ww[t.wUO];
                for (x = 0; x < S.length; x++) S[x].info && R(S[x], e.Wu_);
                for (var ic = p.Ww[t._$o], x = 0; x < ic.length; x++) R(ic[x], e._$o, e.wwwUo);
                for (var xa = p.Ww[t.Wwv], x = 0; x < xa.length; x++) R(xa[x], e.Wwv);
                P = p.Ww[t.Vvu];
                for (x = 0; x < P.length; x++) R(P[x], e.Vvu, e.Q$u$u);
                for (var va = p.Ww[t.UQQ], x = 0; x < va.length; x++)(0 === va[x].Qv$) && R(va[x]);
                if (!topPlayer) {
                    Q = p.Ww[t.uvw];
                    for (x = 0; x < Q.length; x++)
                        if (T = Q[x], ((((Q[x].QWQ !== f.$Uo) && (Q[x].QWQ !== f.$ww)) && (Q[x].QWQ !== f.uU_)) && (Q[x].QWQ !== f.vOv)) && (Q[x].QWQ !== f.woU)) {
                            if (0 === T.QO$)
                                if (0.001 < T.oUO) {
                                    T.oUO = OQ._$_(T.oUO, 0, 0.018);
                                    var da = 1 + (0.18 * Math.min(1, Math.max(T.oUO, 0) / 100));
                                    l.save();
                                    l.scale(da, da);
                                    m.VQ.x /= da;
                                    m.VQ.y /= da;
                                    T.x /= da;
                                    T.y /= da;
                                    T.r.x /= da;
                                    T.r.y /= da;
                                    T.vo_();
                                    T.uW();
                                    m.VQ.x *= da;
                                    m.VQ.y *= da;
                                    T.x *= da;
                                    T.y *= da;
                                    T.r.x *= da;
                                    T.r.y *= da;
                                    l.restore();
                                } else T.Qv$ = 0, T.vo_(), T.uW();
                        } else(180 >= T.UUv) && (l.save(), da = 1 + (0.35 * Math.min(1, Math.max(T.owW - 30, 0) / 180)), l.scale(da, da), m.VQ.x /= da, m.VQ.y /= da, T.x /= da, T.y /= da, T.r.x /= da, T.r.y /= da, T.Qv$ = 0, T.vo_(), T.uW(), m.VQ.x *= da, m.VQ.y *= da, T.x *= da, T.y *= da, T.r.x *= da, T.r.y *= da, l.restore());
                };
                xa = p.Ww[t.Wwv];
                for (x = 0; x < xa.length; x++) R(xa[x], e.WOo);
                for (var za = p.Ww[t.w$W], x = 0; x < za.length; x++) R(za[x]);
                for (var Aa = p.Ww[t.uOV], x = 0; x < Aa.length; x++) R(Aa[x], e.uOV, e.WOoUV);
                for (var Ba = p.Ww[t.vuu], x = 0; x < Ba.length; x++) R(Ba[x]);
                for (var id = p.Ww[t._Q$], x = 0; x < id.length; x++) R(id[x], e._Q$, e._vv$V);
                for (var Ea = p.Ww[t.$Uo], x = 0; x < Ea.length; x++) R(Ea[x], e.$Uo, e.oV0);
                for (var Fa = p.Ww[t.$ww], x = 0; x < Fa.length; x++) R(Fa[x], e.$ww, e.Uw$);
                ha = p.Ww[t.oQW];
                for (x = 0; x < ha.length; x++)((0 !== (ha[x].info & 15)) && (10 !== ha[x].info)) && R(ha[x]);
                J = p.Ww[t.vVW];
                for (x = 0; x < J.length; x++)((0 !== (J[x].info & 15)) && (10 !== J[x].info)) && R(J[x]);
                ea = p.Ww[t.UV$];
                for (x = 0; x < ea.length; x++) R(ea[x], e.V$V);
                ea = p.Ww[t.$v0];
                for (x = 0; x < ea.length; x++)((0 !== (ea[x].info & 15)) && (10 !== ea[x].info)) && R(ea[x]);
                I = p.Ww[t.QvU];
                for (x = 0; x < I.length; x++) Eb(I[x]);
                Z = p.Ww[t.Q$u];
                for (x = 0; x < Z.length; x++)((0 !== (Z[x].info & 15)) && (10 !== Z[x].info)) && R(Z[x]);
                la = p.Ww[t.W_u];
                for (x = 0; x < la.length; x++)((0 !== (la[x].info & 15)) && (10 !== la[x].info)) && R(la[x]);
                Oa = p.Ww[t.Wv$];
                for (x = 0; x < Oa.length; x++)((0 !== (Oa[x].info & 15)) && (10 !== Oa[x].info)) && R(Oa[x]);
                for (var Ia = p.Ww[t.wWO], x = 0; x < Ia.length; x++) R(Ia[x], e.wWO, e.wovOQ);
                for (var Ja = p.Ww[t.WVv], x = 0; x < Ja.length; x++) R(Ja[x], e.WVv, e.wovQ$);
                for (var Ka = p.Ww[t.vQv], x = 0; x < Ka.length; x++) R(Ka[x], e.vQv, e.VouVv);
                for (var La = p.Ww[t.uVQ], x = 0; x < La.length; x++) R(La[x], e.uVQ, e.vQU__);
                for (var Qa = p.Ww[t.Q$W], x = 0; x < Qa.length; x++) R(Qa[x], e.Q$W, e.wOoQo);
                for (var Ra = p.Ww[t.W$o], x = 0; x < Ra.length; x++) R(Ra[x], e.W$o, e.wQwQW);
                for (var Ta = p.Ww[t.OW$], x = 0; x < Ta.length; x++) R(Ta[x]);
                for (var Wa = p.Ww[t.vv_], x = 0; x < Wa.length; x++) R(Wa[x], e.WUO$_, e.$0vuU);
                for (var Ya = p.Ww[t.vww], x = 0; x < Ya.length; x++) R(Ya[x]);
                for (var $a = p.Ww[t.Qvo], x = 0; x < $a.length; x++) R($a[x], e.Qvo, e.wvQwO);
                for (var Ca = p.Ww[t._oU], x = 0; x < Ca.length; x++)(1 === Ca[x].scale) && R(Ca[x], e._oU, e.$u_OV);
                Ca = p.Ww[t._u$];
                for (x = 0; x < Ca.length; x++)(1 === Ca[x].scale) && R(Ca[x], e._u$, e.W$$);
                if (!topChest) {
                    for (var bb = p.Ww[t.V$Q], x = 0; x < bb.length; x++) R(bb[x]);
                };
                for (var cb = p.Ww[t.oOQ], x = 0; x < cb.length; x++) R(cb[x], e.oOQ);
                X = p.Ww[t.UoQ];
                for (x = 0; x < X.length; x++) R(X[x]);
                for (var Pa = p.Ww[t.VUQ], x = 0; x < Pa.length; x++) R(Pa[x]);
                S = p.Ww[t.Vw_];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.QOUuW), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.wvV];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.WwUoo), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.u_v];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.o0Q00), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.vO0];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.QOVu$), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.VuQ];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.vV$Wu), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.wUO];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.wUO), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.vwQ];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.vwQ), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.v$_];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.v$_), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.owo];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.owo), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.$W0];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.$W0), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.Q$o];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.Q$o), S[x].Vuo(S[x].info >> 1);
                S = p.Ww[t.$VU];
                for (x = 0; x < S.length; x++)(S[x].info & 1) || R(S[x], e.$VU), S[x].Vuo(S[x].info >> 1);
                for (var Ga = p.Ww[t._OW], x = 0; x < Ga.length; x++) R(Ga[x], e._OW), Ga[x].Vuo(Ga[x].info);
                Ga = p.Ww[t.OwO];
                for (x = 0; x < Ga.length; x++) R(Ga[x], e.OwO), Ga[x].Vuo(Ga[x].info);
                Ga = p.Ww[t.uVv];
                for (x = 0; x < Ga.length; x++) R(Ga[x], e.uVv), Ga[x].Vuo(Ga[x].info);
                Ga = p.Ww[t.Wvw];
                for (x = 0; x < Ga.length; x++) R(Ga[x], e.Wvw), Ga[x].Vuo(Ga[x].info);
                Ga = p.Ww[t.$wu];
                for (x = 0; x < Ga.length; x++) R(Ga[x], e.$wu), Ga[x].Vuo(Ga[x].info);
                Ga = p.Ww[t.oWQ];
                for (x = 0; x < Ga.length; x++) R(Ga[x], e.oWQ), Ga[x].Vuo(Ga[x].info);
                for (var Ha = p.Ww[t.oV_], x = 0; x < Ha.length; x++) R(Ha[x], e.oV_), Ha[x].Vuo(Ha[x].info);
                Ha = p.Ww[t.wuW];
                for (x = 0; x < Ha.length; x++) R(Ha[x], e.wuW), Ha[x].Vuo(Ha[x].info);
                Ha = p.Ww[t.uuo];
                for (x = 0; x < Ha.length; x++) R(Ha[x], e.uuo), Ha[x].Vuo(Ha[x].info);
                Ha = p.Ww[t._w0];
                for (x = 0; x < Ha.length; x++) R(Ha[x], e._w0), Ha[x].Vuo(Ha[x].info);
                Ha = p.Ww[t.QwW];
                for (x = 0; x < Ha.length; x++) R(Ha[x], e.QwW), Ha[x].Vuo(Ha[x].info);
                Ha = p.Ww[t.uQu];
                for (x = 0; x < Ha.length; x++) R(Ha[x], e.uQu), Ha[x].Vuo(Ha[x].info);
                for (var fb = p.Ww[t.wo$], x = 0; x < fb.length; x++) {
                    var ab = fb[x];
                    (0 < ab.info) ? R(ab, e.$0QUQ): R(ab, e.vwOv_);
                }
                for (var jb = p.Ww[t.Ww$], x = 0; x < jb.length; x++) R(jb[x], e.Ww$);
                na(fa, ya, M, qa, wa, e.$U, "g", 2);
                na(fa, ya, M, qa, wa, e.Qwo, "gw", 2);
                na(fa, ya, M, qa, wa, e.v$, "d", 2);
                na(fa, ya, M, qa, wa, e.uW_, "dw", 2);
                na(fa, ya, M, qa, wa, e.Q$_, "p", 0);
                na(fa, ya, M, qa, wa, e.WwW, "m", 2);
                na(fa, ya, M, qa, wa, e.$W, "a", 2);
                na(fa, ya, M, qa, wa, e.w_, "re", 2);
                na(fa, ya, M, qa, wa, e.wWu, "cs", 3, 3);
                na(fa, ya, M, qa, wa, e.wWu, "cs", 2, 2);
                na(fa, ya, M, qa, wa, e.wWu, "cs", 1, 1);
                na(fa, ya, M, qa, wa, e.wWu, "cs", 0, 0);
                na(fa, ya, M, qa, wa, e.ouw, "cs", 3, 3);
                na(fa, ya, M, qa, wa, e.ouw, "cs", 2, 2);
                na(fa, ya, M, qa, wa, e.ouw, "cs", 1, 1);
                na(fa, ya, M, qa, wa, e.ouw, "cs", 0, 0);
                for (var gb = p.Ww[t.$QO], x = 0; x < gb.length; x++)
                    for (U = 0; U < gb[x].info; U++) R(gb[x].Vw[U], e.$QO);
                na(fa, ya, M, qa, wa, e.uuw, "s", 2);
                for (var lb = p.Ww[t.u_V], x = 0; x < lb.length; x++) R(lb[x]);
                lb = p.Ww[t.ouo];
                for (x = 0; x < lb.length; x++) R(lb[x]);
                lb = p.Ww[t._vU];
                for (x = 0; x < lb.length; x++) R(lb[x]);
                lb = p.Ww[t.V_w];
                for (x = 0; x < lb.length; x++) R(lb[x]);
                lb = p.Ww[t.W_W];
                for (x = 0; x < lb.length; x++) R(lb[x]);
                for (var Xa = p.Ww[t.U$W], x = 0; x < Xa.length; x++) Db(Xa[x]);
                aa = p.Ww[t.$uu];
                for (x = 0; x < aa.length; x++) Eb(aa[x]);
                aa = p.Ww[t.$ow];
                for (x = 0; x < aa.length; x++) Eb(aa[x]);
                X = p.Ww[t.UoQ];
                for (x = 0; x < X.length; x++)(2 == X[x].action) && Eb(X[x]);
                Pa = p.Ww[t.VUQ];
                for (x = 0; x < Pa.length; x++) Eb(Pa[x]);
                ba = p.Ww[t._UO];
                for (x = 0; x < ba.length; x++) Eb(ba[x]);
                ca = p.Ww[t.QW$];
                for (x = 0; x < ca.length; x++) Eb(ca[x]), ca[x].Vuo(ca[x].info);
                na(fa, ya, M, qa, wa, e.VWw, "c", 0);
                na(fa, ya, M, qa, wa, e.vU_, "t", 5, 4);
                na(fa, ya, M, qa, wa, e.WUW, "f", 2, 2);
                na(fa, ya, M, qa, wa, e.QoV, "plm", 0, 0);
                na(fa, ya, M, qa, wa, e.W_U, "b", 3, 2);
                na(fa, ya, M, qa, wa, e.vU_, "t", 3, 2);
                na(fa, ya, M, qa, wa, e.W_U, "b", 1, 0);
                na(fa, ya, M, qa, wa, e.WUW, "f", 1, 1);
                na(fa, ya, M, qa, wa, e.QoV, "plm", 1, 1);
                na(fa, ya, M, qa, wa, e.vU_, "t", 1, 0);
                na(fa, ya, M, qa, wa, e.WUW, "f", 0, 0);
                na(fa, ya, M, qa, wa, e.QoV, "plm", 2, 2);
                Xa = p.Ww[t.U$W];
                for (x = 0; x < Xa.length; x++) Eb(Xa[x]);
                for (var kb = p.Ww[t.UWU], x = 0; x < kb.length; x++) R(kb[x], e.UWU);
                Q = p.Ww[t.uvw];
                for (x = 0; x < Q.length; x++) T = Q[x], ((1 === T.QO$) && ((180 > T.UUv) || (((((T.QWQ !== f.$Uo) && (T.QWQ !== f.$ww)) && (T.QWQ !== f.woU)) && (T.QWQ !== f.uU_)) && (T.QWQ !== f.vOv)))) && (T.oUO = OQ._$_(T.oUO, 100, 0.018), da = 1 + (0.18 * Math.min(1, Math.max(T.oUO, 0) / 100)), l.save(), l.scale(da, da), m.VQ.x /= da, m.VQ.y /= da, T.x /= da, T.y /= da, T.r.x /= da, T.r.y /= da, T.vo_(), T.uW(), m.VQ.x *= da, m.VQ.y *= da, T.x *= da, T.y *= da, T.r.x *= da, T.r.y *= da, l.restore());
                for (var eb = p.Ww[t.WoV], x = 0; x < eb.length; x++) R(eb[x], e.WoV), eb[x].Vuo(eb[x].info);
                for (var nb = p.Ww[t.v$v], x = 0; x < nb.length; x++) R(nb[x], e.v$v, e.o$VQV);
                for (var ob = p.Ww[t.Qww], x = 0; x < ob.length; x++) R(ob[x], e.Qww);
                Q = p.Ww[t.uvw];
                for (x = 0; x < Q.length; x++) T = Q[x], ((((((T.QWQ === f.$Uo) || (T.QWQ === f.$ww)) || (T.QWQ === f.woU)) || (T.QWQ === f.uU_)) || (T.QWQ === f.vOv)) && (180 < T.UUv)) && (T.Qv$ = 1, l.save(), da = 1 + (0.35 * Math.min(1, Math.max(T.owW - 30, 0) / 180)), l.scale(da, da), m.VQ.x /= da, m.VQ.y /= da, T.x /= da, T.y /= da, T.r.x /= da, T.r.y /= da, T.vo_(), T.uW(), m.VQ.x *= da, m.VQ.y *= da, T.x *= da, T.y *= da, T.r.x *= da, T.r.y *= da, l.restore());
                va = p.Ww[t.UQQ];
                for (x = 0; x < va.length; x++)(1 === va[x].Qv$) && R(va[x]);
                Ca = p.Ww[t._oU];
                for (x = 0; x < Ca.length; x++)(1 < Ca[x].scale) && R(Ca[x], e._oU, e.$u_OV);
                Ca = p.Ww[t._u$];
                for (x = 0; x < Ca.length; x++)(1 < Ca[x].scale) && R(Ca[x], e._u$, e.W$$);
                for (var pb = p.Ww[t.uU_], x = 0; x < pb.length; x++) R(pb[x], e.uU_, e.wVv);
                for (var sb = p.Ww[t.wQQ], x = 0; x < sb.length; x++) R(sb[x], e.wQQ, e.QU0);
                Hb += 15 * O;
                (60 < Hb) && (Hb -= 60);
                if (!antifog) {
                    na(Dg, ya, M, qa, wa, e.v_0, "fo", 2);
                    na(Dg, ya, M, qa, wa, e.$u0, "fod", 2);
                };

                if (topPlayer) {
                    Q = p.Ww[t.uvw];
                    for (x = 0; x < Q.length; x++)
                        if (T = Q[x], ((((Q[x].QWQ !== f.$Uo) && (Q[x].QWQ !== f.$ww)) && (Q[x].QWQ !== f.uU_)) && (Q[x].QWQ !== f.vOv)) && (Q[x].QWQ !== f.woU)) {
                            if (0 === T.QO$)
                                if (0.001 < T.oUO) {
                                    T.oUO = OQ._$_(T.oUO, 0, 0.018);
                                    var da = 1 + (0.18 * Math.min(1, Math.max(T.oUO, 0) / 100));
                                    l.save();
                                    l.scale(da, da);
                                    m.VQ.x /= da;
                                    m.VQ.y /= da;
                                    T.x /= da;
                                    T.y /= da;
                                    T.r.x /= da;
                                    T.r.y /= da;
                                    T.vo_();
                                    T.uW();
                                    m.VQ.x *= da;
                                    m.VQ.y *= da;
                                    T.x *= da;
                                    T.y *= da;
                                    T.r.x *= da;
                                    T.r.y *= da;
                                    l.restore();
                                } else T.Qv$ = 0, T.vo_(), T.uW();
                        } else(180 >= T.UUv) && (l.save(), da = 1 + (0.35 * Math.min(1, Math.max(T.owW - 30, 0) / 180)), l.scale(da, da), m.VQ.x /= da, m.VQ.y /= da, T.x /= da, T.y /= da, T.r.x /= da, T.r.y /= da, T.Qv$ = 0, T.vo_(), T.uW(), m.VQ.x *= da, m.VQ.y *= da, T.x *= da, T.y *= da, T.r.x *= da, T.r.y *= da, l.restore());
                };
                if (topChest) {
                    for (var bb = p.Ww[t.V$Q], x = 0; x < bb.length; x++) R(bb[x]);
                };
                if (topBox) {
                    for (var ra = p.Ww[t.wuv], x = 0; x < ra.length; x++) R(ra[x], e.wuv, e.OOVo_);
                    for (var sa = p.Ww[t.wQW], x = 0; x < sa.length; x++) R(sa[x], e.wuv, e.OOVo_);
                };
                indexArr != 'no' ? resetCOORD() : indexArr = 'no';

                if (((G.WVU && (p.mode !== F.wQ_)) && (p.mode !== F.U$O)) && (p.mode !== F.OwU)) {
                    var Va = m.QOO;
                    Va.Ov$ = (0 === Va.wOQ) ? Math.max(0, Va.Ov$ - (O / 10)) : Math.min(1, Va.Ov$ + (O / 10));
                    for (var hb = Va.$Q0, Sa = 0; Sa < hb.length; Sa++) {
                        var Na = hb[Sa];
                        Va.update(Na);
                        hf(e.UuO, Na.id, m.VQ.x + Na.x, m.VQ.y + Na.y, Na.alpha);
                    }
                    for (Sa = 0; Sa < hb.length; Sa++)
                        if (Na = hb[Sa], (((0 >= Na.wOU) || (Na.x > (-m.VQ.x + ka))) || (Na.x < (-m.VQ.x - (m.VQ.w / 2)))) || (Na.y > (-m.VQ.y + ta))) hb.splice(Sa, 1);
                    var vb = -m.VQ.y;
                    if (-1000 < p.Qou) Va.add(vb);
                    var db = m.VvO;
                    db.Ov$ = (0 === db.wOQ) ? Math.max(0, db.Ov$ - (O / 10)) : Math.min(1, db.Ov$ + (O / 10));
                    for (var mb = db.$Q0, Za = 0; Za < mb.length; Za++) {
                        var Bb = mb[Za];
                        db.update(Bb);
                        hf(e.vVO, Bb.id, m.VQ.x + Bb.x, m.VQ.y + Bb.y, Bb.alpha);
                    }
                    for (Za = 0; Za < mb.length; Za++)
                        if (Bb = mb[Za], (((0 >= Bb.wOU) || (Bb.x > (-m.VQ.x + ka))) || (Bb.x < -m.VQ.x)) || (Bb.y > (-m.VQ.y + ta))) mb.splice(Za, 1);
                    var xb = -m.VQ.y;
                    if (-1000 < p.QO0) db.add(xb);
                    for (var tb = m.W0v, yb = tb.$Q0, ub = 0; ub < yb.length; ub++) {
                        var Ua = yb[ub];
                        tb.update(Ua);
                        hf(e.Qo0, Ua.id, m.VQ.x + Ua.x, m.VQ.y + Ua.y, Ua.alpha);
                    }
                    for (ub = 0; ub < yb.length; ub++)
                        if (Ua = yb[ub], (((0 >= Ua.wOU) || (Ua.x > (-m.VQ.x + ka))) || (Ua.x < -m.VQ.x)) || (Ua.y > (-m.VQ.y + ta))) yb.splice(ub, 1);
                    var Ab = -m.VQ.y;
                    if (-1000 < p.oww) tb.add(Ab);
                }(p.Q$w && a) && (p.Q$w = !1, p.V$.o_ = 0, p.V$.Uo = !1);
            };
            this.uvW00 = function() {
                oQ.Wwu0o();
                oQ._0U0u();
                oQ.Q0QU0();
                oQ.$QUO_();
            };
            this.uW = function() {
                (!m.reconnect.enabled && m.W$w) && this.uvW00();
                U.O0Uv0();
                this.ooUV0();
                if (1 === G.oOO_u) {
                    var a = o.Wo$O$;
                    E(g, a, X - (a.width / 4), ea - (a.height / 4), a.width / 2, a.height / 2);
                } else this.U0wVo(), this.U0wu$();
            };
            this.wOv0v = function(a) {
                if (m.Uo$.open && (27 === a.keyCode)) m.Uo$.wv0();
                else if (m.QQQ.open && (27 === a.keyCode)) m.QQQ.wv0();
                else if (((!m.Uo$.open && !m.QQQ.open) && (79 == a.keyCode)) && (-1 == P)) m.QQQ.U__$_();
                else if ((13 == a.keyCode) && (-1 == P)) m.QQQ.open ? m.QQQ.OwO$v() : m.Uo$.ooU();
                else if (!m.Uo$.open && !m.QQQ.open)
                    if (82 === a.keyCode) m.WQV.$Qo();
                    else if (((80 !== a.keyCode) || (p.mode !== F.WVw)) || m._Ou)
                    if ((49 <= a.keyCode) && (57 >= a.keyCode)) {
                        if (0 > m.Ow.id) {
                            var c = a.keyCode - 49,
                                d = m.wW.OWU[c];
                            d && oQ.uwV(d.id, c);
                        }
                    } else(89 == a.keyCode) ? (m.U0W = !m.U0W) : ((71 == a.keyCode) && m.Ow.uOQQQ());
                else m.$UW.$Qo();
                kb.uoQ(a);
            };
            this.WVU_V = function(a) {
                kb.uwW(a);
                if (((8 == a.keyCode) && !m.Uo$.open) && !m.QQQ.open) a.preventDefault();
            };
            this.Qw_ = function(a) {
                W.Uu = Ec(w.vV, a);
                a = !1;
                if (0 > m.Ow.wWV) w._u_.focus(W.Uu);
                var c = m.O$;
                ((0 > m.Ow.id) && (0 <= c.id)) && ((m.O$.lock && (m.O$.OV_ !== m.id)) || (a |= w.wv[m.O$.id].UQu(w.vV, W.Uu, 1)));
                var d = m._oV;
                (d.open && (0 < d.uoo)) && (a |= w.vQw.UQu(w.vV, W.Uu, 1));
                d = m.Vw0;
                (d.open && (0 < d.$Vv)) && (a |= w.vVV.UQu(w.vV, W.Uu, 1), a |= w.wvu.UQu(w.vV, W.Uu, 1), a |= w.VUv.UQu(w.vV, W.Uu, 1), a |= w.Qwv.UQu(w.vV, W.Uu, 1), a |= w._wQ.UQu(w.vV, W.Uu, 1));
                d = m.V_U;
                (d.open && (0 < d.$vo)) && (a |= w.Ouu.UQu(w.vV, W.Uu, 1));
                m.sign.open && (a |= w.sign.button.UQu(w.vV, W.Uu, 1));
                m.O$.lock || (m.O$._vv && (a |= w.OvQ.UQu(w.vV, W.Uu, 1)));
                m.O$.wwv && (a |= w.VUo.UQu(w.vV, W.Uu, 1));
                if (((((((0 > m.Ow.id) && !w.uVO.open) && !w.W$W.open) && !w.vvO.open) && !w.oWo.open) && !w.options.open) && !w.vO$.open)
                    for (var d = m.wW.OWU, e = 0; e < d.length; e++) {
                        var g = d[e].UQu(w.vV, W.Uu, 1);
                        a |= g;
                        if (g) m.wW._uO.start(e, W.Uu);
                        if ((((((c.open && ((0 > c.id) || (c.id == d[e].id))) || (m.VO0.open && (d[e].id === f.vv))) || (m.WVu.open && (d[e].id === f.wWQ))) || (m.V_U.open && ((d[e].id === f.vv) || (d[e].id === f.QQ_)))) || (m._oV.open && (d[e].id === f.OwW))) || (m.Vw0.open && (d[e].id === f.vv))) a |= w.OU$[d[e].id].UQu(w.vV, W.Uu, 1);
                    }
                m.WUV.open && (a |= w.WUV.UQu(w.vV, W.Uu, 1));
                if (-1 != w.wO0) {
                    if (a |= w.oQV[w.wO0].button.UQu(w.vV, W.Uu, 1)) var h = !0;
                } else h = !1;
                if (!(((((((!((0 > m.Ow.id) && (0 > m.Ow.wWV)) || h) || w.uVO.open) || w.W$W.open) || w.options.open) || w.vvO.open) || w.vO$.open) || m.$_o))
                    for (d = m.Ow._O_, e = 0; e < d.length; e++) a |= d[e].UQu(w.vV, W.Uu, 1);
                ((((((!(((0 > m.Ow.id) && (0 > m.Ow.wWV)) && m.Oo_.open) || w.uVO.open) || w.W$W.open) || w.options.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || (a |= w.Oo_.button.UQu(w.vV, W.Uu, 1));
                (((((!(0 > m.Ow.wWV) || w.W$W.open) || w.options.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || (a |= w.uVO.button.UQu(w.vV, W.Uu, 1));
                (((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || (a |= w.options.button.UQu(w.vV, W.Uu, 1));
                (((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.options.open) || (a |= w.vO$.button.UQu(w.vV, W.Uu, 1));
                ((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.options.open) || w.vO$.open) || (a = U.ooU ? (a | w._V$.WQ_.UQu(w.vV, W.Uu, 1)) : (a | w._V$.uU0.UQu(w.vV, W.Uu, 1)));
                ((((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.vO$.open) || w.W$W.open) || w.options.open) || w.vvO.open) || (p.mode === F.wQ_)) || (p.mode === F.U$O)) || (p.mode === F.OwU)) || (a |= w.oWo.button.UQu(w.vV, W.Uu, 1));
                (((((((a || w.uVO.open) || w.W$W.open) || w.options.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || w.sign.open) || ((0 <= m.Ow.wWV) ? oQ.U0_w$() : (h || W.uwW()));
            };
            this.QuQ = function(a) {
                W.Uu = Ec(w.vV, a);
                W.uoQ();
                if (!m.wW._uO.release()) {
                    var c = m.O$,
                        d = m.VO0,
                        e = m.WVu,
                        g = m._oV,
                        h = m.Vw0,
                        k = m.V_U;
                    m.control.attack && (m.control.attack = 0, oQ.uO___());
                    if (-1 != w.wO0) {
                        var l = w.oQV[w.wO0].button.UQu(w.vV, W.Uu, 2),
                            g = document.getElementById("team_box").style;
                        if (l && ("inline-block" == g.display)) {
                            g.display = "none";
                            return;
                        }
                        if (l) w.oQV[w.wO0].action();
                    }((!((0 > m.Ow.id) && (0 <= c.id)) || w.W$W.open) || (m.O$.lock && (m.O$.OV_ !== m.id))) || ((l = w.wv[m.O$.id].UQu(w.vV, W.Uu, 2)) && oQ.QwQU_(c));
                    g = m._oV;
                    (((g.open && (0 < g.uoo)) && !w.W$W.open) && (l = w.vQw.UQu(w.vV, W.Uu, 2))) && oQ.UwuwQ(g);
                    h = m.Vw0;
                    if ((h.open && (0 < h.$Vv)) && !w.W$W.open) switch (h.type) {
                        case t.u_V:
                            (l = w.vVV.UQu(w.vV, W.Uu, 2)) && oQ.WvO(h);
                            break;
                        case t.ouo:
                            (l = w.wvu.UQu(w.vV, W.Uu, 2)) && oQ.WvO(h);
                            break;
                        case t._vU:
                            (l = w.VUv.UQu(w.vV, W.Uu, 2)) && oQ.WvO(h);
                            break;
                        case t.V_w:
                            (l = w.Qwv.UQu(w.vV, W.Uu, 2)) && oQ.WvO(h);
                            break;
                        case t.W_W:
                            (l = w._wQ.UQu(w.vV, W.Uu, 2)) && oQ.WvO(h);
                    }
                    k = m.V_U;
                    (((k.open && (0 < k.$vo)) && !w.W$W.open) && (l = w.Ouu.UQu(w.vV, W.Uu, 2))) && oQ.U0W_Q(k);
                    if ((m.sign.open && !w.W$W.open) && (l = w.sign.button.UQu(w.vV, W.Uu, 2))) w.sign.select();
                    ((m.O$.lock || w.W$W.open) || !m.O$._vv) || ((l = w.OvQ.UQu(w.vV, W.Uu, 2)) && oQ.VvO_W(c));
                    ((m.O$.wwv && !w.W$W.open) && (l = w.VUo.UQu(w.vV, W.Uu, 2))) && (oQ.OUvO$(c), ga && ga("send", "event", "Game", "lockpick"));
                    (m.WUV.open && (l = w.WUV.UQu(w.vV, W.Uu, 2))) && (oQ.WUV(), ga && ga("send", "event", "Game", "resurrection"));
                    if (((0 > m.Ow.id) && !m.QW0.enabled) && !w.W$W.open)
                        for (var n = m.wW.OWU, q = 0; q < n.length; q++)(l = n[q].UQu(w.vV, W.Uu, 2)) ? (((1 != a.which) || a.shiftKey) ? (((((1 == a.which) && a.shiftKey) || (3 == a.which)) && (0 > m.Ow.wWV)) && w.W$W._u$$u(n[q].id)) : oQ.uwV(n[q].id, q)) : ((c.open && ((0 > c.id) || (c.id === n[q].id))) ? (((l = w.OU$[n[q].id].UQu(w.vV, W.Uu, 2)) && (0 > m.Ow.wWV)) && oQ.__Qww(c, n[q].id, a.shiftKey ? window.MainSetting.Hacks.PutItem.count : 1)) : ((e.open && (n[q].id === f.wWQ)) ? (((l = w.OU$[n[q].id].UQu(w.vV, W.Uu, 2)) && (0 > m.Ow.wWV)) && oQ.OOwuU(e)) : ((d.open && (n[q].id === f.vv)) ? (((l = w.OU$[n[q].id].UQu(w.vV, W.Uu, 2)) && (0 > m.Ow.wWV)) && oQ._VQvV(d, a.shiftKey ? window.MainSetting.Hacks.PutItem.count : 1)) : ((g.open && (n[q].id === f.OwW)) ? (((l = w.OU$[n[q].id].UQu(w.vV, W.Uu, 2)) && (0 > m.Ow.wWV)) && oQ.v_o$$(g, a.shiftKey ? window.MainSetting.Hacks.PutItem.count : 1)) : ((h.open && (n[q].id === f.vv)) ? (((l = w.OU$[n[q].id].UQu(w.vV, W.Uu, 2)) && (0 > m.Ow.wWV)) && oQ.o0U0w(h, a.shiftKey ? window.MainSetting.Hacks.PutItem.count : 1)) : ((!k.open || ((n[q].id !== f.vv) && (n[q].id !== f.QQ_))) || (((l = w.OU$[n[q].id].UQu(w.vV, W.Uu, 2)) && (0 > m.Ow.wWV)) && ((n[q].id === f.vv) ? oQ.wOWwo(k, a.shiftKey ? window.MainSetting.Hacks.PutItem.count : 1, 0) : oQ.wOWwo(k, 0, a.shiftKey ? window.MainSetting.Hacks.PutItem.count : 1)))))))));
                    if (((((0 > m.Ow.id) && (0 > m.Ow.wWV)) && !m.QW0.enabled) && !w.W$W.open) && !m.$_o)
                        for (n = m.Ow._O_, q = 0; q < n.length; q++)(((l = n[q].UQu(w.vV, W.Uu, 2)) && (WQo = oQ.Q$_Uw(n[q].id))) && ga) && ga("send", "event", "Game", "craft", D[La[n[q].id].UU].name);
                    if ((((((((((0 > m.Ow.id) && (0 > m.Ow.wWV)) && m.Oo_.open) && !w.vO$.open) && !w.uVO.open) && !w.W$W.open) && !w.options.open) && !w.vvO.open) && !w.oWo.open) && (l = w.Oo_.button.UQu(w.vV, W.Uu, 0))) C.Oo_.select();
                    if (((((((0 > m.Ow.wWV) && !w.uVO.open) && !w.W$W.open) && !w.vO$.open) && !w.vvO.open) && !w.oWo.open) && !w.options.open)
                        if (U.ooU) {
                            if (l = w._V$.WQ_.UQu(w.vV, W.Uu, 2)) U.select(), ga && ga("send", "event", "Game", "sound on");
                        } else if (l = w._V$.uU0.UQu(w.vV, W.Uu, 2)) U.select(), ga && ga("send", "event", "Game", "sound off");
                    ((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || !(l = w.options.button.UQu(w.vV, W.Uu, 2))) || (w.options.QuVUQ(), ga && ga("send", "event", "Game", "options"));
                    (((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.options.open) || (1 !== w.W$oVU)) || !(l = w.vO$.button.UQu(w.vV, W.Uu, 2))) || (w.vO$.select(), ga && ga("send", "event", "Game", "market"));
                    (((((((!(0 > m.Ow.wWV) || w.W$W.open) || w.vO$.open) || w.options.open) || w.vvO.open) || w.oWo.open) || (1 !== w.WUw)) || !(l = w.uVO.button.UQu(w.vV, W.Uu, 2))) || (w.uVO.QvQu0(), ga && ga("send", "event", "Game", "recipe"));
                    ((((((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.options.open) || w.vvO.open) || w.vO$.open) || (p.mode === F.wQ_)) || (p.mode === F.U$O)) || (p.mode === F.OwU)) || (1 !== w.UUV)) || !(l = w.oWo.button.UQu(w.vV, W.Uu, 2))) || (w.oWo.select(), ga && ga("send", "event", "Game", "quests"));
                    (m.Ow.W$V && (3 == a.which)) && w.vvO._u$$u();
                }
            };
            this.QOw = !1;
            this.WO0 = function(c) {
                W.Uu = Ec(w.vV, c);
                c = !1;
                C.Uvw.display = 0;
                m.wW._uO.wOW(W.Uu);
                (-1 != w.wO0) && (c |= w.oQV[w.wO0].button.UQu(w.vV, W.Uu, 0));
                var d = m._oV;
                (d.open && (0 < d.uoo)) && (c |= w.vQw.UQu(w.vV, W.Uu, 0));
                d = m.Vw0;
                (d.open && (0 < d.$Vv)) && (c |= w.vVV.UQu(w.vV, W.Uu, 0), c |= w.wvu.UQu(w.vV, W.Uu, 0), c |= w.VUv.UQu(w.vV, W.Uu, 0), c |= w.Qwv.UQu(w.vV, W.Uu, 0), c |= w._wQ.UQu(w.vV, W.Uu, 0));
                d = m.V_U;
                (d.open && (0 < d.$vo)) && (c |= w.Ouu.UQu(w.vV, W.Uu, 0));
                m.sign.open && (c |= w.sign.button.UQu(w.vV, W.Uu, 0));
                d = m.O$;
                (((0 > m.Ow.id) && (0 <= d.id)) && !m.QW0.enabled) && ((m.O$.lock && (m.O$.OV_ !== m.id)) || (c |= w.wv[d.id].UQu(w.vV, W.Uu, 0)));
                m.WUV.open && (c |= w.WUV.UQu(w.vV, W.Uu, 0));
                (m.O$.lock || m.QW0.enabled) || (m.O$._vv && (c |= w.OvQ.UQu(w.vV, W.Uu, 0)));
                (m.O$.wwv && !m.QW0.enabled) && (c |= w.VUo.UQu(w.vV, W.Uu, 0));
                if ((0 > m.Ow.id) && !m.QW0.enabled)
                    for (var e = m.wW.OWU, g = 0; g < e.length; g++) {
                        var h = e[g].UQu(w.vV, W.Uu, 0);
                        c |= C.Uvw.UQu(h, e[g], 0);
                        if ((((((d.open && ((0 > d.id) || (d.id == e[g].id))) || (m.VO0.open && (e[g].id == f.vv))) || (m.WVu.open && (e[g].id === f.wWQ))) || (m.V_U.open && ((e[g].id == f.vv) || (e[g].id == f.QQ_)))) || (m._oV.open && (e[g].id == f.OwW))) || (m.Vw0.open && (e[g].id == f.vv))) c |= w.OU$[e[g].id].UQu(w.vV, W.Uu, 0);
                    }
                if ((((0 > m.Ow.id) && (0 > m.Ow.wWV)) && !m.QW0.enabled) && !m.$_o)
                    for (e = m.Ow._O_, g = 0; g < e.length; g++) h = e[g].UQu(w.vV, W.Uu, 0), c |= C.Uvw.UQu(h, e[g], 1);
                ((((((!(((0 > m.Ow.id) && (0 > m.Ow.wWV)) && m.Oo_.open) || w.uVO.open) || w.W$W.open) || w.options.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || (c |= w.Oo_.button.UQu(w.vV, W.Uu, 0));
                ((((((!(0 > m.Ow.wWV) || w.W$W.open) || w.options.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || (1 !== w.WUw)) || (c |= w.uVO.button.UQu(w.vV, W.Uu, 0));
                (((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.vO$.open) || (c |= w.options.button.UQu(w.vV, W.Uu, 0));
                ((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.options.open) || (1 !== w.W$oVU)) || (c |= w.vO$.button.UQu(w.vV, W.Uu, 0));
                ((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.vvO.open) || w.oWo.open) || w.options.open) || w.vO$.open) || (c = U.ooU ? (c | w._V$.WQ_.UQu(w.vV, W.Uu, 0)) : (c | w._V$.uU0.UQu(w.vV, W.Uu, 0)));
                (((((((((!(0 > m.Ow.wWV) || w.uVO.open) || w.W$W.open) || w.options.open) || w.vvO.open) || w.vO$.open) || (p.mode === F.wQ_)) || (p.mode === F.U$O)) || (p.mode === F.wwVuo)) || (1 !== w.UUV)) || (c |= w.oWo.button.UQu(w.vV, W.Uu, 0));
                (w.QOw !== c) && (w.QOw = c, a.style.cursor = c ? w.oV$ : w.U$u);
            };
            this.WQwQ$ = function() {
                M.addEventListener("mousedown", this.Qw_, !1);
                M.addEventListener("mouseup", this.QuQ, !1);
                M.addEventListener("mousemove", this.WO0, !1);
                M.addEventListener("keyup", this.wOv0v, !1);
                M.addEventListener("keydown", this.WVU_V, !1);
            };
            this.vv$WO = function() {
                M.removeEventListener("mousedown", this.Qw_, !1);
                M.removeEventListener("mouseup", this.QuQ, !1);
                M.removeEventListener("mousemove", this.WO0, !1);
                M.removeEventListener("keyup", this.wOv0v, !1);
                M.removeEventListener("keydown", this.WVU_V, !1);
            };
        };

        function pd(a, b) {
            var e = ((1664525 * (a + 44664)) + 1013904223) % 4294967296,
                d = b ^ 53080,
                c = Sd(e, d, e, d, e),
                f = pc(d, e, d, e, d),
                e = Ra(e, d, e, d);
            return (1 + (22695477 * (((((c ^ f) + 17769) % 65357) ^ e) + 57525))) % 4294967296;
        };

        function Gj() {
            OQ.Q$$wv(((("https://twitter.com/intent/tweet?text=I%20survived%20" + m.V_) + "%20days%20with%20") + m.wQ0.UOV) + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io");
        };

        function Hj() {
            OQ.Q$$wv("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0");
        };

        function Ij(a, f) {
            this.vV = a;
            this._ = f;
            var g = this;
            this._oVVw = !1;
            this.O$0 = {
                id: document.getElementById("scoreboard"),
                style: document.getElementById("scoreboard").style,
                height: 0,
                translate: {
                    x: 0,
                    y: 0
                },
                update: function() {
                    this.style.left = this.translate.x + "px";
                    this.style.top = this.translate.y + "px";
                },
                UvU: function() {
                    this.id.innerHTML = ((((((((((((((((((((((((('<div style=\"position:absolute;\"> <img src=\"./img/scoreboard.png\"style=\"width:250px;transform:translate(125px, -80px);\"> </img> </div><div><div id=\"whokilled\">' + m.wQ0.vOQ) + '</div></div><div class=\"deco\" style=\"margin-top:35px;\"></div><div class=\"deco\"></div><div><div class=\"stats\"> ') + k[Wo.vUV]) + " : ") + m.V_) + '</div><div class=\"stats\"> ') + k[Wo.VQW]) + " : ") + m.wQ0.VQ$) + '</div></div><div id=\"flexDisplay\"><div id=\"score\"> ') + k[Wo.OuO]) + " : ") + m.wQ0.UOV) + '</div><div id=\"breadWon\"><span id=\"breadWonInner\">0</span><img src=\"./img/golden-bread.png\" style=\"width:50px;margin-left:-25px;transform: translate(37px, 8px);\"></img></div></div><div><div id=\"points\"> ') + m.wQ0.u_Uw_) + " ") + k[Wo.POINTS]) + '</div></div><div id=\"shop_points\">') + k[Wo.Q_Q]) + '</div><div style=\"display:inline-block;\"><div class=\"social\" id=\"tttwitter\">') + k[Wo.OUW]) + '</div><div class=\"social\" id=\"fffacebook\">') + k[Wo.QUv]) + '</div></div><div id=\"bbback\">') + k[Wo.u_$]) + "</div>";
                    this.style.display = "inline-block";
                    document.getElementById("tttwitter").addEventListener("mouseup", Gj, !1);
                    document.getElementById("bbback").addEventListener("mouseup", function() {
                        Tb.wv0(G.ooU);
                    }, !1);
                    document.getElementById("fffacebook").addEventListener("mouseup", Hj, !1);
                    this.height = Math.floor(this.id.clientHeight / 2);
                    Jj();
                }
            };
            var d = 0,
                c = function() {
                    g.update();
                    d++;
                    if (30 == d) g.update();
                    else M.setTimeout(c, 33);
                };
            this.wv0 = function(a) {
                (!0 === g._oVVw) && (g._oVVw = !1, h = a, l = -1, p(), M.YMPB.refresh());
            };
            var h, l = -1,
                p = function() {
                    g.update();
                    l++;
                    if (30 == l) g.stop(), g.O$0.style.display = "none", h();
                    else M.setTimeout(p, 33);
                };
            this.OwV = !1;
            this.stop = function() {
                this.OwV = !1;
            };
            this.ooU = function() {
                if(!window.MainSetting.Hacks.Misc.AutoRejoin){
                    Rg();
                    document.getElementById("game_body").style.backgroundColor = e.wv_[tb.time];
                    g.O$0.UvU();
                    G.VWW.style.display = "inline-block";
                    g.OwV = !0;
                    g._oVVw = !0;
                    l = -1;
                    d = 0;
                    c();

                }

           //     document.getElementById("game_body").style.backgroundColor = e.wv_[tb.time];
              //  g.O$0.UvU();
               // G.VWW.style.display = "inline-block";


            };
            this.update = function() {
                this.O$0.translate.x = Math.floor(X - 275);
                this.O$0.translate.y = Math.floor((ea - this.O$0.height) - 28);
                G.VWW.translate.x = this.O$0.translate.x - 350;
                G.VWW.translate.y = this.O$0.translate.y + 0;
                G.VWW.update();
                if ((30 != d) || (-1 != l)) {
                    var a = 0;
                    (30 != d) && (a = (1500 / (d + 1)) - 50);
                    (-1 != l) && (a = -((1750 / ((30 - l) + 1)) - 48));
                    this.O$0.translate.y -= a;
                }
                this.O$0.update();
            };
            this.uW = function() {
                df();
                m.alert.uW("#FFF", "#000");
            };
        };

        function pc(a, b, e, d, c) {
            a = (~(42203 & a) & a) | (~(a & 42203) & 42203);
            b ^= 50118;
            e ^= 41620;
            d = ((2147483629 * (d + 34240)) + 2147483587) % 2147483647;
            var f = (((32 << ((c >> 16) & 255)) + (16 << ((c >> 8) & 255))) + (8 << ((c >> 32) & 255))) + (24 << ((c >> 24) & 255));
            c = nc(a, b, e, d, f, a);
            nc(b, e, d, f, a, b);
            a = Ra(e, d, f, a);
            return (2531011 + (214013 * ((((43477 | c) & ~(c & 43477)) ^ a) + 53616))) % 4294967296;
        };

        function Sd(a, b, e, d, c) {
            a = (((16 << ((a >> 32) & 255)) + (24 << ((a >> 24) & 255))) + (8 << ((a >> 8) & 255))) + (32 << ((a >> 16) & 255));
            b ^= 55978;
            e = ((1664525 * (e + 2934)) + 1013904223) % 4294967296;
            d = ~(d & 30642) & (d | 30642);
            var f = (((8 << ((c >> 8) & 255)) + (24 << ((c >> 32) & 255))) + (16 << ((c >> 24) & 255))) + (32 << ((c >> 16) & 255));
            c = pc(a, b, e, d, f);
            f = jd(a, b, e, d, f);
            Ra(a, b, e, d);
            a = (((16 << (((c ^ f) >> 32) & 255)) + (24 << (((c ^ f) >> 8) & 255))) + (8 << (((c ^ f) >> 24) & 255))) + (32 << (((c ^ f) >> 16) & 255));
            return ~(23686 & a) & (23686 | a);
        };

        function kd(a, b, e, d, c) {
            a = ((1103515245 * (a + 49173)) + 12345) % 2147483648;
            b = (b + 52922) % 65337;
            e ^= 25250;
            d = (~(d & 10903) & 10903) | (~(10903 & d) & d);
            c = (~(c & 33814) & 33814) | (~(33814 & c) & c);
            var f = od(a, b, e, d, c),
                g = Rd(a, b);
            od(e, d, c, a, b);
            a = (1 + (22695477 * ((f ^ g) + 19675))) % 4294967296;
            return (~(7922 & a) & a) | (~(a & 7922) & 7922);
        };

        function Rd(a, b) {
            var e = 24508 ^ a,
                d = (((16 << ((b >> 16) & 255)) + (24 << ((b >> 8) & 255))) + (32 << ((b >> 32) & 255))) + (8 << ((b >> 24) & 255)),
                c = Qc(e, d, e, d, e),
                f = Sd(d, e, d, e, d);
            Af(e, d, e, d, e);
            e = ((2147483629 * ((c ^ f) + 11269)) + 2147483587) % 2147483647;
            return (~(e & 40927) & 40927) | (~(40927 & e) & e);
        };

        function Cf(a, b, e) {
            a ^= 23323;
            b = (2531011 + (214013 * (61713 + b))) % 4294967296;
            e = (e | 24198) & ~(e & 24198);
            var d = Qc(a, b, e, a, b),
                c = Qc(e, a, b, e, a);
            Qc(b, e, a, b, e);
            return ((((16 << (((d ^ c) >> 32) & 255)) + (8 << (((d ^ c) >> 8) & 255))) + (24 << (((d ^ c) >> 24) & 255))) + (32 << (((d ^ c) >> 16) & 255))) ^ 31181;
        };

        function Zg(a) {
            M.requestAnimationFrame(Zg);
            O = (a - bb) / 1000;
            bb = a;
            O = (1 < O) ? 1 : O;
            C.OwV ? C.uW() : (l.clearRect(0, 0, ka, ta), oc.OwV ? oc.uW() : (G.OwV ? G.uW() : (Tb.OwV && Tb.uW())));
            if (imPlay) {
                checkObjects();
                checkEsp();

            } else {

            }

        };

        function nc(a, b, e, d, c, f) {
            e ^= 8102;
            d = (((24 << ((d >> 16) & 255)) + (32 << ((d >> 32) & 255))) + (8 << ((d >> 24) & 255))) + (16 << ((d >> 8) & 255));
            c = (~(c & 29687) & 29687) | (~(29687 & c) & c);
            f = (1 + (22695477 * (62237 + f))) % 4294967296;
            a = sd((a + 52483) % 65496, (((16 << ((b >> 16) & 255)) + (24 << ((b >> 8) & 255))) + (32 << ((b >> 24) & 255))) + (8 << ((b >> 32) & 255)));
            b = sd(e, d);
            sd(c, f);
            return 55575 ^ ((45290 + (a ^ b)) % 65334);
        };

        function Aj() {
            document.getElementById("preroll").style.display = "none";
            oQ.connect();
        };

        function Rg() {
            qf.open("GET", "https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929", !0);
            qf.send();
        };

        function Cj() {
            M.FB.login(function(a) {
                a.authResponse && M.FB.api("/me", function(a) {
                    Qb = nf;
                    Pa = M.FB.getAuthResponse().accessToken;
                    rf();
                    M.u_Q(Ta);
                });
            });
        };

        function rf() {
            (void 0 === Ta) && Kj();
        };

        function Kj() {
            try {
                (M.FB && M.FB.getUserID()) && (Ta = M.FB.getUserID(), (void 0 === Pa) && M.FB.getLoginStatus(function() {
                    Qb = nf;
                    Pa = M.FB.getAuthResponse().accessToken;
                    M.u_Q(Ta);
                }));
            } catch (a) {}
            try {
                Ta = $b.getBasicProfile().getId();
            } catch (a) {}
        };

        function Ib(a) {
            if (Ta) {
                var e = new XMLHttpRequest;
                e.open("GET", (((Na + "xsolla?userid=") + Ta) + "&item=") + a);
                e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                e.onreadystatechange = function() {
                    (((4 == this.readyState) && (200 == this.status)) && ("0" !== e.responseText)) && (sf.access_token = e.responseText, M.XPayStationWidget.init(sf), M.XPayStationWidget.open());
                };
                e.send();
            }
        };

        function Dj(a) {
            var e = new XMLHttpRequest;
            e.open("GET", (((Na + "login?token=") + Pa) + "&type=") + Qb);
            e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            e.onreadystatechange = function() {
                (((4 === this.readyState) && (200 === this.status)) && ("0" !== e.responseText)) && a(JSON.parse(e.responseText));
            };
            e.send();
        };

        function Ej() {
            var a = new XMLHttpRequest;
            a.open("GET", (((Na + "rebootServer?token=") + Pa) + "&userid=") + Ta);
            a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            a.onreadystatechange = function() {
                (((4 === this.readyState) && (200 === this.status)) && ("0" !== a.responseText)) && (location.href = document.getElementById("serverAddressInput").value);
            };
            a.send();
        };

        function db(a) {
            var e = new XMLHttpRequest;
            e.open("GET", (((((Na + "setRegion?token=") + Pa) + "&userid=") + Ta) + "&region=") + a);
            e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            e.onreadystatechange = function() {
                ((4 === this.readyState) && (200 === this.status)) && (("0" !== e.responseText) ? G.__V(G.wWo) : G.__V(G.uuv));
            };
            e.send();
        };

        function Hc(a, e) {
            if (!(0 < G.uo_))
                if (G._VW < e) G.__V(G.Ov_);
                else {
                    G.uo_ = 2;
                    G.ouV = 0;
                    G.$UO0O = 100;
                    var f = new XMLHttpRequest;
                    f.open("GET", (((((Na + "buySpin?token=") + Pa) + "&userid=") + Ta) + "&spin=") + a);
                    f.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                    f.onreadystatechange = function() {
                        if ((4 == this.readyState) && (200 == this.status))
                            if ("0" !== f.responseText) {
                                var a = JSON.parse(f.responseText);
                                G.V0VWo((a.rand * Math.PI) * 2, a.type, a.id);
                                G._VW -= e;
                            } else G.uo_ = 0;
                    };
                    f.send();
                }
        };

        function Vg() {
            if (!((300 > G._VW) && (0 < G.o_W))) {
                var a = document.getElementById("account_nickname_input").value.trim();
                document.getElementById("account_nickname_input").value = a;
                if (!((1 > a.length) || (20 < a.length))) {
                    var e = new XMLHttpRequest;
                    e.open("GET", (((((Na + "changeNickname?token=") + Pa) + "&userid=") + Ta) + "&nickname=") + encodeURIComponent(a));
                    e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                    e.onreadystatechange = function() {
                        if (((4 == this.readyState) && (200 == this.status)) && ("0" !== e.responseText)) {
                            var a = Number(e.responseText);
                            (0 < a) && (G._VW -= a);
                            G.o_W = 1;
                            G.__V(G.vwW);
                        }
                    };
                    e.send();
                }
            }
        };

        function Ug(a, e) {
            if (G._VW < e) G.__V(G.Ov_);
            else {
                var f = new XMLHttpRequest;
                f.open("GET", (((((Na + "buyKit?token=") + Pa) + "&userid=") + Ta) + "&kit=") + a);
                f.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                f.onreadystatechange = function() {
                    if (((4 == this.readyState) && (200 == this.status)) && ("0" !== f.responseText)) {
                        var a = JSON.parse(f.responseText);
                        G._VW -= e;
                        G.WO_ = Date.now() + Number(a);
                    }
                };
                f.send();
            }
        };

        function Lj() {
            var a = new XMLHttpRequest;
            a.open("GET", (Na + "claimBread?userid=") + Ta);
            a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            a.onreadystatechange = function() {
                if (((4 == this.readyState) && (200 == this.status)) && ("0" !== a.responseText)) {
                    var e = Number(a.responseText);
                    isNaN(e) || (G._VW = e);
                }
            };
            a.send();
        };

        function Jj() {
            var a = new XMLHttpRequest;
            a.open("GET", (Na + "getBreadAndScore?userid=") + Ta);
            a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            a.onreadystatechange = function() {
                if (((4 == this.readyState) && (200 == this.status)) && ("0" !== a.responseText)) {
                    var e = JSON.parse(a.responseText),
                        f = e.b - G._VW;
                    G._VW = e.b;
                    G.UOV = e.s;
                    G.$u$ = G.VWo(G.UOV);
                    G._O$WQ = G.wQWWu(G.UOV);
                    G.wou = 0;
                    document.getElementById("breadWonInner").innerHTML = "" + f;
                }
            };
            a.send();
        };

        function cb(a, e, f, d) {
            a = (void 0 === a) ? G.$uo : a;
            e = (void 0 === e) ? G.O_W : e;
            f = (void 0 === f) ? G.VOQ : f;
            d = (void 0 === d) ? G.OWQ : d;
            if ((((a !== G.$uo) || (e !== G.O_W)) || (f !== G.VOQ)) || (d !== G.OWQ)) {
                G.$uo = a;
                G.O_W = e;
                G.VOQ = f;
                G.OWQ = d;
                (G.Q$W_v === d) ? (d = "0") : ((G.QOO_0 === d) ? (d = "1") : ((G.UovwQ === d) ? (d = "2") : ((G.voV0w === d) && (d = "3"))));
                (G.v$U === e) ? (e = "total") : ((G.vUuUW === e) ? (e = "normal") : ((G.UQ$0u === e) ? (e = "zombie") : ((G.ovv_$ === e) ? (e = "vampire") : ((G.vQVuu === e) && (e = "forest")))));
                (G.oWO === a) && (a = "all");
                (G.O$v === a) && (a = "week");
                (G.$wv === a) && (a = "today");
                (G.$$_vv === f) ? (f = "kill") : ((G.$Vw === f) ? (f = "score") : ((G.vQW$V === f) && (f = "time")));
                var c = new XMLHttpRequest;
                c.open("GET", (((((((Na + "leaderboard?range=") + a) + "&mode=") + e) + "&sort=") + f) + "&season=") + d);
                c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                c.onreadystatechange = function() {
                    if (((4 == this.readyState) && (200 == this.status)) && ("0" !== c.responseText)) {
                        for (var a = JSON.parse(c.responseText), d = "", e = 0; e < a.length; e++) {
                            WuW = a[e];
                            var f = WuW[1];
                            (-1 === f.indexOf("Starver#")) && (f = M.decodeURIComponent(M.escape(M.atob(f))));
                            d += '<div class=\"lineLeaderboard\">';
                            d += '<div class=\"rank\">';
                            d += (e + 1) + "";
                            d += "</div>";
                            d += '<div class=\"name\">';
                            d += f;
                            d += "</div>";
                            d += '<div class=\"lvl\">';
                            d += (G.VWo(WuW[6]) + 1) + "";
                            d += "</div>";
                            d += '<div class=\"kills\">';
                            d += WuW[5] + "";
                            d += "</div>";
                            d += '<div class=\"time\">';
                            d += WuW[4] + "";
                            d += "</div>";
                            d += '<div class=\"score\">';
                            d += WuW[3] + "";
                            d += "</div>";
                            d += "</div>";
                        }
                        document.getElementById("leaderboard").innerHTML = d;
                    }
                };
                c.send();
            }
        };
        for (var M = window, Mj = 89, Nj = function(a) {
                Uv = "";
                for (var b = 0; b < a.length; b++) Uv += M.String.fromCharCode(a[b] ^ ((Mj++) % 255));
                return Uv;
            }, b = [
                [0, 13, 110, 50, 63, 25, 10, 93],
                [56, 80, 90, 17, 6, 84, 94, 27, 51, 59, 86, 81],
                [59, 92, 57, 25, 36, 64, 74, 30, 20, 68, 33, 72],
                [27, 45, 45, 6, 30, 76, 57, 238, 219, 211, 190, 185],
                [223, 209, 178, 226, 235, 184, 217, 224, 219, 216, 197, 218, 192, 160, 170, 224, 246, 209, 174, 237, 195, 205, 174, 172],
                [249, 217, 243, 212, 251, 245, 154, 149, 193, 231, 154, 149],
                [202, 152, 253, 217, 247, 239, 146, 141],
                [211, 245, 223, 193, 239, 224, 211, 200, 227, 242, 233, 211],
                [231, 140, 233, 240, 151, 133, 175, 176, 159, 151, 250, 245],
                [170, 249, 153, 181, 172, 153, 250, 190, 176, 133, 137, 225],
                [177, 145, 129, 236, 189, 159, 145, 180, 190, 236, 137, 147, 128, 181, 214, 136],
                [191, 212, 159, 158, 176, 135, 173, 159, 188, 185, 151, 135, 144, 181, 182, 201],
                [172, 174, 185, 136, 155, 157, 198, 193],
                [159, 204, 115, 60],
                [102, 49, 66, 124, 100, 96, 53, 52],
                [105, 57, 90, 61],
                [111, 72, 124, 100, 118, 82, 41, 40],
                [76, 79, 86, 115, 67, 67, 94, 113],
                [127, 72, 21, 84, 120, 123, 110, 125, 71, 112, 122, 25, 75, 106, 17, 16],
                [76, 120, 118, 70, 81, 116, 88, 64, 108, 64, 5, 4],
                [96, 9, 106, 13, 106, 104, 44, 50, 32, 4, 40, 63, 28, 16, 6, 63, 40, 38, 30, 55],
                [42, 7, 26, 57, 48, 61, 26, 38, 15, 15, 10, 53],
                [59, 3, 14, 49, 60, 7, 45, 92],
                [0, 80, 38, 85, 7, 48, 81, 28, 9, 28, 81, 80],
                [55, 1, 38, 24, 43, 30, 12, 25, 21, 0, 69, 68],
                [25, 73, 42, 14, 36, 24, 189, 188],
                [219, 238, 210, 181, 223, 214, 181, 180],
                [233, 184, 222, 184, 236, 200, 197, 172],
                [200, 212, 248, 239, 245, 208, 224, 241, 255, 202, 161, 160],
                [250, 173, 230, 209, 198, 228, 200, 208, 252, 208, 149, 148],
                [200, 153, 152, 144],
                [244, 194, 137, 196, 214, 242, 137, 136],
                [239, 133, 192, 201, 224, 236, 137, 141, 233, 254, 253, 252],
                [166, 132, 146, 241, 162, 130, 142, 186, 171, 156, 168, 184],
                [172, 136, 188, 164, 136, 134, 154, 189, 181, 150, 229, 228],
                [185, 182, 154, 168, 132, 152, 217, 149],
                [128, 209, 209, 156, 188, 176, 174, 130, 143, 179, 162, 221, 183, 183, 162, 157, 171, 193, 156, 157, 148, 154, 156, 149],
                [152, 188, 197, 151, 159, 50, 87, 105],
                [96, 76, 79, 106, 93, 101, 101, 62],
                [92, 73, 60, 67, 92, 88, 67, 34, 112, 82, 95, 122, 116, 64, 79, 118, 120, 47, 76, 35],
                [75, 18, 107, 83, 121, 115, 107, 22],
                [69, 26, 28, 67, 113, 123, 119, 88, 76, 93, 103, 3, 81, 89, 77, 64, 110, 111, 104, 7],
                [89, 123, 4, 84, 102, 24, 19, 50, 33, 118, 113, 123],
                [30, 122, 49, 38, 18, 20, 7, 29, 21, 7, 31, 98],
                [10, 102, 108, 35, 51, 16, 19, 44, 57, 29, 96, 99],
                [5, 39, 39, 82, 58, 53, 88, 91],
                [4, 47, 47, 19, 8, 94, 56, 83],
                [12, 66, 29, 28, 17, 19, 72, 75],
                [19, 48, 51, 10, 25, 45, 64, 67],
                [28, 237, 215, 234, 217, 197, 184, 187],
                [228, 229, 223, 226, 209, 196, 225, 218, 235, 215, 215, 162, 201, 197, 168, 171],
                [246, 245, 160, 234, 249, 251, 160, 163],
                [252, 231, 205, 215, 249, 211, 152, 155],
                [253, 198, 227, 220, 201, 249, 227, 193, 246, 232, 251, 246, 209, 134, 231, 218],
                [211, 138, 213, 209, 223, 251, 218, 131],
                [230, 242, 185, 180, 160, 246, 144, 251],
                [164, 128, 131, 166, 175, 161, 155, 187, 171, 149, 131, 190, 137, 185, 147, 231, 181, 144, 136, 231],
                [185, 155, 177, 171, 133, 181, 145, 148, 130, 179, 209, 219],
                [189, 175, 191, 128, 137, 222, 191, 130, 185, 166, 187, 184, 162, 198, 204, 130, 148, 191, 192, 143, 161, 171, 200, 206],
                [90, 89, 106, 116, 101, 93, 76, 107, 107, 126, 55, 54],
                [86, 96, 118, 121, 114, 34, 91, 46],
                [112, 120, 80, 100, 124, 78, 79, 38],
                [70, 112, 39, 106, 68, 105, 111, 30],
                [125, 125, 108, 77],
                [125, 26, 120, 82, 77, 122, 27, 65],
                [82, 118, 11, 0],
                [87, 7, 94, 71, 98, 87, 104, 119, 102, 101, 85, 2],
                [36, 6, 123, 52],
                [32, 2, 127, 41, 18, 123, 50, 39, 29, 127, 54, 39, 51, 98, 31, 110],
                [48, 56, 58, 59, 60, 46, 103, 102],
                [63, 111, 24, 109, 58, 48, 95, 94],
                [7, 87, 48, 87, 61, 4, 60, 19, 8, 58, 56, 21, 20, 52, 26, 31, 45, 34, 36, 27, 27, 30, 71, 70],
                [29, 79, 40, 74],
                [217, 178, 200, 239, 221, 221, 212, 235, 218, 222, 242, 231, 238, 218, 216, 250, 244, 208, 175, 174],
                [246, 167, 163, 252, 251, 244, 220, 245, 255, 174, 204, 247, 195, 207, 243, 158],
                [199, 150, 228, 212, 201, 241, 251, 150],
                [250, 250, 194, 218, 212, 245, 255, 202, 229, 237, 252, 206, 225, 225, 209, 134],
                [216, 234, 139, 212, 154, 150, 152, 179, 166, 168, 144, 172],
                [145, 152, 247, 246],
                [175, 160, 152, 187, 178, 226, 136, 191, 133, 231, 174, 191, 187, 234, 151, 230],
                [189, 138, 235, 180, 186, 185, 138, 179, 190, 130, 219, 218],
                [138, 218, 168, 135, 142, 138, 211, 210],
                [147, 182, 138, 155, 173, 199, 160, 152, 154, 203, 130, 144, 166, 165, 183, 61],
                [96, 85, 54, 113, 95, 94, 77, 65, 95, 79, 58, 65],
                [111, 73, 54, 126],
                [114, 127, 69, 96, 119, 37, 77, 116, 75, 66, 65, 112, 127, 112, 77, 109, 64, 122, 109, 20, 127, 113, 18, 68, 74, 77, 22, 17],
                [78, 67, 121, 71, 83, 117, 117, 94, 111, 103, 10, 5],
                [96, 109, 105, 87, 108, 12, 71, 40, 34, 113, 14, 121],
                [38, 116, 9, 49, 19, 29, 29, 57],
                [46, 124, 25, 35, 11, 5, 29, 100],
                [12, 59, 1, 110, 56, 13, 13, 37, 12, 109, 9, 25, 5, 15, 53, 49, 7, 17, 90, 85],
                [48, 61, 33, 22],
                [9, 41, 57, 10, 21, 51, 78, 73],
                [22, 68, 33, 72, 47, 61, 23, 8, 39, 41, 70, 177, 229, 195, 190, 185],
                [225, 193, 190, 205, 208, 210, 217, 228, 219, 216, 197, 221],
                [242, 160, 213, 224, 246, 209, 239, 244],
                [253, 221, 247, 232, 199, 203, 201, 213, 251, 227, 158, 153],
                [255, 241, 146, 195],
                [202, 152, 199, 217],
                [200, 239, 146, 141],
                [232, 220, 229, 132, 209, 241, 142, 205, 218, 205, 134, 129],
                [217, 249, 134, 148, 165, 138, 137, 180, 167, 171, 164, 245],
                [171, 157, 157, 164, 174, 253, 153, 169, 139, 132, 129, 184, 176, 158, 134, 229],
                [128, 141, 137, 183],
                [185, 150, 179, 151, 187, 179, 222, 217],
                [188, 212, 159, 158, 138, 216, 189, 189, 180, 182, 189, 159],
                [168, 165, 139, 135],
                [175, 161, 194, 144, 160, 151, 131, 144, 167, 191, 61, 60],
                [96, 84, 104, 53, 92, 95, 66, 68, 107, 92, 61, 125, 106, 78, 45, 44],
                [68, 68, 120, 96, 114, 83, 93, 43, 75, 67, 86, 100, 71, 71, 75, 28],
                [123, 123, 102, 82, 68, 111, 67, 20],
                [115, 124, 84, 65, 77, 65, 97, 12],
                [81, 94, 13, 4, 84, 90, 105, 4],
                [110, 108, 122, 13, 95, 126, 125, 124],
                [24, 27, 44, 41, 31, 48, 117, 116],
                [19, 44, 113, 112],
                [29, 35, 30, 1, 6, 52, 105, 104],
                [53, 100, 10, 49, 62, 28, 9, 96],
                [61, 108, 50, 24, 0, 81, 16, 9, 48, 32, 62, 93, 14, 42, 81, 80],
                [10, 40, 73, 39, 36, 54, 58, 33, 18, 63, 50, 9, 24, 22, 31, 64],
                [36, 18, 236, 242, 224, 194, 185, 184],
                [231, 181, 222, 188, 233, 195, 198, 225, 237, 188, 221, 172],
                [193, 198, 198, 216, 196, 198, 165, 164],
                [248, 169, 169, 233, 196, 199, 238, 219, 251, 244, 192, 201],
                [252, 201, 226, 197, 240, 243, 220, 193],
                [247, 157, 137, 203],
                [235, 129, 204, 197, 236, 224, 141, 137, 233, 252, 234, 205, 228, 141, 168, 241],
                [161, 164, 249, 248],
                [162, 128, 241, 249, 147, 156, 187, 240],
                [173, 252, 146, 162, 179, 132, 154, 185],
                [181, 228, 146, 179],
                [131, 131, 142, 181, 188, 181, 169, 220],
                [134, 164, 136, 145, 188, 182, 213, 212],
                [176, 217, 186, 221, 187, 130, 166, 139, 145, 180, 205, 128, 149, 197, 174, 176, 160, 172, 186, 150, 164, 88, 72, 63],
                [86, 65, 110, 59],
                [101, 58, 60, 115, 81, 84, 67, 126, 106, 125, 68, 47],
                [114, 83, 67, 102, 77, 42, 113, 42],
                [65, 46, 75, 46, 78, 18, 24, 87, 71, 99, 115, 18, 67, 105, 20, 23],
                [73, 123, 20, 69, 78, 103, 107, 7],
                [80, 6, 77, 70, 110, 10, 108, 7],
                [98, 107, 69, 73, 94, 7, 4, 127],
                [21, 19, 41, 51, 35, 12, 33, 8, 40, 34, 7, 38, 42, 1, 108, 111],
                [2, 12, 31, 47, 14, 0, 53, 25, 63, 11, 7, 51, 5, 56, 40, 95],
                [2, 44, 47, 10, 61, 15, 84, 87],
                [10, 59, 88, 27, 53, 40, 59, 59, 41, 35, 25, 24, 22, 48, 40, 71],
                [26, 18, 51, 8, 29, 231, 188, 191],
                [218, 182, 188, 243, 229, 229, 223, 224, 239, 203, 219, 229],
                [213, 162, 199, 162, 194, 249, 172, 167, 245, 245, 203, 234, 249, 241, 249, 218, 253, 231, 205, 206, 193, 202, 247, 245, 253, 255, 231, 154],
                [201, 158, 152, 194, 204, 222, 251, 196, 208, 211, 136, 139],
                [212, 213, 128, 138, 226, 228, 239, 210],
                [220, 243, 135, 187, 167, 133, 248, 251],
                [165, 143, 240, 162, 145, 139, 155, 165],
                [157, 151, 151, 226, 137, 133, 232, 235],
                [180, 182, 190, 231],
                [129, 238, 139, 238, 141, 183, 153, 142, 129, 179, 179, 147, 131, 160, 167, 169, 142, 186, 191, 134, 181, 192, 196, 154, 145, 163, 160, 203],
                [174, 160, 187, 141, 161, 171, 200, 149, 81, 51, 106, 115, 102, 66, 87, 58],
                [106, 100, 51, 56],
                [86, 74, 55, 101, 116, 70, 35, 127, 118, 123, 71, 42],
                [65, 43, 98, 119, 69, 69, 84, 74, 65, 118, 19, 79, 70, 22, 112, 23],
                [75, 27, 70, 29, 118, 124, 19, 18],
                [84, 70, 15, 14],
                [110, 109, 108, 91, 90, 87, 107, 6],
                [102, 80, 7, 85, 36, 25, 15, 126],
                [37, 119, 16, 114, 43, 62, 119, 118],
                [25, 8, 119, 5, 4, 61, 0, 7],
                [14, 18, 0, 62, 60, 14, 57, 102],
                [6, 5, 20, 38, 2, 82, 43, 94],
                [5, 50, 83, 10, 10, 30, 87, 86],
                [8, 42, 87, 34, 18, 66, 22, 31, 23, 30, 56, 31, 27, 75, 47, 70],
                [29, 42, 75, 8, 228, 217, 211, 190],
                [231, 182, 212, 254, 234, 187, 254, 231],
                [222, 216, 191, 222, 198, 215, 249, 174],
                [245, 167, 192, 162, 201, 171, 163, 240, 198, 204, 163, 162],
                [241, 249, 232, 218, 253, 253, 205, 154],
                [242, 196, 198, 216, 206, 235, 252, 195, 213, 249, 227, 142],
                [215, 135, 143, 206, 220, 248, 135, 134],
                [216, 143, 248, 207, 164, 128, 255, 254],
                [166, 130, 170, 178, 146, 159, 152, 189],
                [168, 154, 251, 188, 178, 227, 156, 161],
                [182, 146, 128, 186, 188, 152, 231, 230],
                [137, 176, 136, 177, 178, 185, 138, 148],
                [135, 214, 180, 145, 139, 168, 215, 214],
                [136, 222, 164, 159, 148, 182, 167, 206],
                [173, 173, 164, 199, 161, 174, 180, 137],
                [165, 147, 168, 48, 101, 69, 58, 113],
                [95, 97, 58, 53],
                [106, 56, 93, 96, 87, 79, 50, 45],
                [112, 69, 66, 41],
                [119, 81, 46, 118, 84, 78, 90, 33],
                [127, 89, 89, 85, 123, 17, 117, 76, 127, 20, 114, 21],
                [75, 125, 18, 71, 119, 127, 18, 13],
                [82, 0, 101, 4, 97, 97, 91, 75, 91, 125, 87, 70, 103, 105, 113, 54, 35, 47, 17, 62],
                [31, 43, 43, 59, 43, 12, 5, 124, 40, 25, 55, 60],
                [51, 96, 102, 62, 55, 100, 98, 104, 3, 2, 51, 108, 63, 9, 9, 21, 5, 51, 94, 89],
                [6, 11, 49, 18, 13, 45, 82, 21, 55, 63, 82, 77],
                [19, 31, 53, 0, 47, 39, 74, 69],
                [24, 61, 23, 18, 28, 63, 66, 189],
                [227, 213, 186, 182, 223, 208, 213, 254],
                [208, 184, 243, 252, 215, 217, 186, 160, 198, 195, 174, 169],
                [246, 209, 239, 240, 252, 203, 166, 161],
                [255, 217, 243, 218, 197, 227, 158, 153],
                [198, 203, 241, 210, 243, 242, 250, 145],
                [206, 157, 253, 216, 210, 220, 226, 137],
                [214, 241, 142, 139],
                [218, 136, 130, 141, 222, 211, 241, 172],
                [152, 240, 250, 178, 164, 244, 171, 164],
                [170, 167, 157, 184, 175, 253, 149, 188],
                [181, 149, 133, 224, 177, 151, 234, 229],
                [128, 232, 179, 180, 190, 181, 153, 208],
                [128, 181, 210, 140, 191, 212, 177, 188, 139, 189, 210, 154, 137, 169, 135, 128, 147, 159, 151, 178, 151, 155, 177, 145, 155, 189, 173, 151],
                [158, 185, 57, 123, 99, 91, 86, 117, 100, 53, 60, 52],
                [83, 92, 66, 123, 109, 120, 45, 44],
                [72, 66, 41, 40],
                [79, 37, 33, 108, 120, 118, 74, 119, 122, 94, 29, 28],
                [65, 17, 114, 77, 69, 74, 102, 70],
                [72, 124, 64, 88],
                [119, 29, 118, 68, 107, 1, 98, 70, 103, 96, 13, 73, 88, 108, 122, 13, 95, 104, 121, 52, 16, 45, 14, 45, 36, 16, 29, 116],
                [16, 12, 117, 57, 23, 24, 60, 36],
                [48, 62, 18, 103, 55, 0, 60, 49, 62, 28, 101, 36],
                [63, 7, 46, 46, 59, 54, 80, 88],
                [5, 84, 58, 1, 14, 35, 58, 23],
                [13, 92, 34, 29, 17, 50, 73, 72],
                [21, 68, 42, 0, 24, 73, 8, 17, 43, 76, 210, 180, 224, 196, 209, 184],
                [229, 234, 222, 241, 238, 220, 218, 247, 234, 202, 214, 228, 243, 196, 165, 253, 242, 208, 244, 239, 248, 240, 198, 228, 199, 200, 145, 205],
                [251, 206, 226, 207, 199, 149, 204, 208, 200, 152, 250, 216, 244, 234, 254, 199, 208, 244, 141, 204],
                [212, 240, 129, 211, 219, 204, 129, 128],
                [220, 248, 150, 180, 152, 240, 150, 170],
                [164, 128, 158, 251, 144, 156, 187, 240],
                [171, 158, 237, 236],
                [139, 139, 158, 191, 128, 144, 224, 228],
                [190, 131, 158, 182, 135, 135, 178, 141],
                [135, 183, 161, 216],
                [131, 163, 173, 212],
                [143, 191, 165, 208],
                [183, 221, 182, 130, 144, 178, 201, 200],
                [175, 197, 193, 138, 152, 200, 181, 192],
                [156, 50, 52, 113, 97, 54, 67, 109],
                [94, 95, 71, 58, 106, 84, 87, 98],
                [107, 88, 91, 122, 74, 38, 64, 43],
                [77, 80, 83, 114, 127, 44, 113, 106, 70, 119, 69, 78],
                [64, 108, 115, 92, 70, 105, 20, 23],
                [113, 109, 16, 19],
                [117, 2, 73, 68, 106, 89, 115, 69, 102, 10, 0, 78, 88, 123, 4, 68, 94, 24, 19, 46, 23, 119, 7, 42, 36, 37, 15, 122, 42, 27, 116, 59],
                [21, 98, 7, 98, 5, 19, 57, 34, 13, 0, 41, 44, 57, 49, 11, 14, 5, 13, 59, 24, 57, 60, 52, 91],
                [61, 90, 63, 90, 57, 59, 21, 2, 13, 39, 39, 7, 23, 49, 63, 67, 36, 47, 40, 71],
                [31, 36, 51, 18, 28, 235, 199, 236, 217, 211, 176, 182],
                [222, 229, 223, 228, 234, 219, 184, 223, 214, 200, 195, 253],
                [201, 249, 249, 229, 245, 222, 211, 246, 194, 175, 204, 163],
                [198, 247, 239, 146, 194, 243, 156, 211],
                [196, 154, 231, 194, 201, 235, 248, 147],
                [203, 130, 217, 194, 234, 134, 210, 139],
                [214, 239, 140, 192, 225, 228, 247, 142, 238, 173, 151, 175, 161, 247, 143, 170],
                [162, 140, 128, 247],
                [168, 162, 166, 243],
                [172, 226, 135, 161, 137, 131, 155, 230, 141, 143, 139, 144, 185, 177, 143, 178, 186, 161, 220, 223],
                [186, 214, 157, 142, 134, 191, 216, 134, 177, 173, 208, 211],
                [140, 157, 167, 129, 169, 163, 179, 140, 173, 169, 196, 199],
                [152, 145, 171, 148, 98, 51, 55, 118, 94, 82, 72, 55],
                [105, 81, 88, 103, 110, 92, 51, 50],
                [115, 86, 84, 106, 119, 39, 64, 93, 122, 119, 75, 38],
                [69, 106, 35, 34],
                [122, 19, 116, 19],
                [125, 23, 78, 79, 75, 66, 100, 93, 118, 106, 123, 18],
                [83, 3, 90, 67, 110, 91, 103, 10],
                [108, 87, 108, 79, 101, 80, 104, 70],
                [26, 6, 20, 113, 37, 18, 8, 43, 29, 14, 38, 127, 22, 26, 54, 28, 9, 9, 0, 35, 54, 34, 107, 106],
                [59, 106, 12, 50, 63, 110, 12, 38, 1, 54, 87, 13],
                [6, 87, 83, 12, 11, 4, 83, 28],
                [15, 37, 36, 25, 20, 54, 75, 67, 17, 45, 52, 27],
                [26, 75, 79, 13, 31, 58, 40, 10],
                [227, 236, 238, 237, 229, 205, 215, 186],
                [235, 228, 220, 225, 232, 204, 179, 178],
                [242, 214, 212, 250, 206, 194, 225, 170],
                [251, 222, 220, 226, 198, 202, 171, 175, 244, 204, 155, 200, 254, 244, 155, 154],
                [204, 241, 228, 199, 207, 198, 214, 199, 210, 220, 214, 130, 237, 226, 210, 219],
                [219, 254, 252, 139, 221, 252, 131, 130],
                [147, 150, 243, 171, 158, 247, 147, 250],
                [145, 158, 152, 160, 158, 149, 148, 163, 178, 191, 128, 158, 181, 141, 152, 231, 130, 142, 239, 183, 191, 186, 227, 226],
                [131, 140, 180, 153, 135, 162, 223, 146, 139, 219, 188, 190, 182, 181, 134, 223],
                [146, 166, 180, 199]
            ], Ld = 0; Ld < b.length; Ld++) b[Ld] = M.atob(Nj(b[Ld]));
        Oc.prototype.random = function() {
            this.state = ((this.a * this.state) + this.c) % this.UO$;
            return this.state / this.UO$;
        };
        Oc.prototype.U$ov0 = function(a) {
            this.state = a;
        };
        _WQVw = 10000;
        $OW = [];
        var $g = new Oc;
        $g.U$ov0((new Date).getTime());
        for (var hb = 0; hb < _WQVw; hb++) $OW.push($g.random());
        OQ = {
            uO_U$: function(a) {
                M.open(a, "_blank").focus();
            },
            Q$$wv: function(a) {
                M.open(a, "_blank", "location=yes,height=570,width=520,scrollbars=yes,status=yes");
            },
            WQvvv: function(a, b) {
                for (var e in a)
                    if (a[e] != b[e]) return !1;
                return !0;
            },
            W$v_O: function(a, e) {
                if (a.length != e.length) return !1;
                for (var f = 0; f < a.length; f++)
                    if ("object" == typeof a) {
                        if (!this.WQvvv(a[f], e[f])) return !1;
                    } else if (a[f] != e[f]) return !1;
                return !0;
            },
            _uwOQ: function(a, e) {
                e.x = a.x;
                e.y = a.y;
            },
            _vw0_: function(a, e) {
                return {
                    x: a.x - e.x,
                    y: a.y - e.y
                };
            },
            UvQWv: function(a, e) {
                a.x *= e;
                a.y *= e;
            },
            OQU_0: function(a, e) {
                return (a.x * e.x) + (a.y * e.y);
            },
            Q0W0_: function(a) {
                return Math.sqrt((a.x * a.x) + (a.y * a.y));
            },
            sign: function(a) {
                return (0 > a) ? -1 : 1;
            },
            O_w$W: function(a, e) {
                return (a.x * e.y) - (a.y * e.x);
            },
            WQV_O: function(a, e, f, d) {
                return Math.atan2(d - e, f - a);
            },
            V$w_U: function(a, e) {
                return Math.asin(this.OQU_0(a, e) / (this.Q0W0_(a) * this.Q0W0_(e))) * this.sign(this.O_w$W(a, e));
            },
            UVvOw: function(a) {
                V0WVu = location.href;
                a = a.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                a = (new RegExp(("[\\?&]" + a) + "=([^&#]*)")).exec(V0WVu);
                return (null === a) ? null : a[1];
            },
            VuwQ$: function(a, e) {
                var f = 2 * Math.PI;
                e = ((e % f) + f) % f;
                return (Math.abs(a - e) > Math.PI) ? ((a > e) ? (e + f) : (e - f)) : e;
            },
            $oVvo: function(a, b) {
                return this.V$w_U({
                    x: 1,
                    y: 0
                }, this._vw0_(a, b));
            },
            U_o: function(a, e) {
                return Math.sqrt(((e.x - a.x) * (e.x - a.x)) + ((e.y - a.y) * (e.y - a.y)));
            },
            wQU$U: function(a, e) {
                return {
                    x: Math.cos(e) * a,
                    y: Math.sin(e) * a
                };
            },
            vUu00: function(a, e) {
                a.x += e.x;
                a.y += e.y;
            },
            o_wow: function(a, e) {
                a.x -= e.x;
                a.y -= e.y;
            },
            $_oV_: function(a, e, f) {
                a.x += e;
                a.y += f;
            },
            UO$Wu: function(a, e, f) {
                return {
                    x: a.x + e,
                    y: a.y + f
                };
            },
            wOW: function(a, e, f) {
                a.x += Math.cos(f) * e;
                a.y += Math.sin(f) * e;
            },
            Uvo: function(a, e) {
                return Math.floor((a - e) / 2);
            },
            u0uwW: function(a, e) {
                return {
                    x: (a.x + e.x) / 2,
                    y: (a.y + e.y) / 2
                };
            },
            VQQW_: function() {
                return (0.5 < Math.random()) ? 1 : -1;
            },
            UQvW0: function(a, e, f) {
                var d = this.VQQW_(),
                    c = this.VQQW_(),
                    g = (Math.random() * Math.PI) / 2;
                return {
                    x: Math.floor(a + ((Math.cos(g) * d) * f)),
                    y: Math.floor(e + ((Math.sin(g) * c) * f))
                };
            },
            u0UWQ: function(a, e, f, d) {
                this.x = a;
                this.y = e;
                this.w = f;
                this.uQ = d;
            },
            uQvWV: function(a) {
                $V = [];
                $V.push.apply($V, a);
                for (a = []; 0 < $V.length;) {
                    var e = Math.floor(Math.random() * $V.length);
                    a.push($V[e]);
                    $V.splice(e, 1);
                }
                return a;
            },
            OOUOw: function(a) {
                (20000 <= a) ? (a = 1000 * (a - 20000)) : ((10000 <= a) && (a = 100 * (a - 10000)));
                return a;
            },
            $w$: function(a) {
                if ("number" !== typeof a) return "0";
                if (10000 <= a) {
                    var e = Math.floor(Math.log10(a)) - 2,
                        f = Math.max(0, 3 - e),
                        e = Math.floor(a / 1000).toString();
                    if (f) {
                        e += "." + ((a % 1000) / 1000).toString().substring(2).substring(0, f);
                        a = e.length - 1;
                        for (f = 0;
                            (0 < a) && ("0" == e[a]); a--) f++;
                        e = e.substring(0, e.length - f);
                        ("." == e[e.length - 1]) && (e = e.substring(0, e.length - 1));
                    }
                    return e + "k";
                }
                return a.toString();
            },
            ouU: function(a) {
                return a * (2 - a);
            },
            _W$uU: function(a) {
                return (((--a) * a) * a) + 1;
            },
            wuQ: function(a) {
                return (0.5 > a) ? ((2 * a) * a) : (-1 + ((4 - (2 * a)) * a));
            },
            VvU$o: function(a) {
                return (0.5 > a) ? (((4 * a) * a) * a) : ((((a - 1) * ((2 * a) - 2)) * ((2 * a) - 2)) + 1);
            },
            $$U0V: function(a) {
                return (0.5 > a) ? ((((8 * a) * a) * a) * a) : (1 - ((((8 * (--a)) * a) * a) * a));
            },
            $o$Wu: function(a) {
                return 1 - ((((--a) * a) * a) * a);
            },
            UQ$0U: function(a) {
                return 1 + (((((--a) * a) * a) * a) * a);
            },
            Uw: function(a, e, f, d, c, g) {
                this.Uo = a;
                this.o_ = e;
                this.max = f;
                this.min = d;
                this.WUo = c;
                this.__w0v = g;
                this.vv0 = 0;
                this.update = function() {
                    if (this.Uo) {
                        var a = this.o_ + (O * this.WUo);
                        if (a > this.max) return this.o_ = this.max, this.Uo = !1, !0;
                        this.o_ = a;
                    } else a = this.o_ - (O * this.__w0v), (a < this.min) ? (this.o_ = this.min, this.Uo = !0) : (this.o_ = a);
                };
                return !1;
            },
            Ou_: function(a, e, f, d, c, g) {
                this.OVW = a;
                this.QUw = e;
                this.U$0 = f;
                this.W$0 = d;
                this.x = c;
                this.$_V = g;
                this.v_w = function() {
                    this.x = this.v$WUo;
                    this.QUw = 0;
                };
                this.UUo = function(a) {
                    (a !== this.$_V) && (this.$_V = a, this.W$0 = this.x, this.QUw = 0);
                    (this.$_V !== this.x) && (this.QUw += O, (this.QUw > this.U$0) ? (this.x = this.$_V) : (a = this.OVW(this.QUw / this.U$0), this.x = this.W$0 + ((this.$_V - this.W$0) * a)));
                };
            },
            w0v$u: function(a, e, f, d, c, g, h, k, l) {
                this.OVW = a;
                this.QUw = e;
                this.U$0 = f;
                this.W$0 = d;
                this._V_ = c;
                this.x = g;
                this.y = h;
                this.$_V = k;
                this.owO = l;
                this.UUo = function(a) {
                    if ((a.x != this.$_V) || (a.y != this.owO)) this.$_V = a.x, this.owO = a.y, this.W$0 = this.x, this._V_ = this.y, this.QUw = 0;
                    if ((this.$_V != this.x) || (this.owO != this.y)) this.QUw += O, (this.QUw > this.U$0) ? (this.x = this.$_V, this.y = this.owO) : (a = this.OVW(this.QUw / this.U$0), this.x = this.W$0 + ((this.$_V - this.W$0) * a), this.y = this._V_ + ((this.owO - this._V_) * a));
                };
            },
            OoVQV: function(a) {
                for (var e = "", f = 0; f < a; f++) e += String.fromCharCode(48 + Math.floor(74 * Math.random()));
                return e;
            },
            vUuuO: function(a, e) {
                e || (e = location.href);
                a = a.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                var f = (new RegExp(("[\\?&]" + a) + "=([^&#]*)")).exec(e);
                return (null == f) ? null : f[1];
            },
            uQ$v0: function(a, e) {
                return ((((a.x >= e.x) && (a.x <= (e.x + e.w))) && (a.y >= e.y)) && (a.y <= (e.y + e.uQ))) ? !0 : !1;
            },
            vUoQQ: function(a, e, f, d, c, g, h, k) {
                return ((Math.max(a, c) < Math.min(e, g)) && (Math.max(f, h) < Math.min(d, k))) ? 1 : 0;
            },
            _$_: function(a, b, e) {
                return ((1 - e) * a) + (e * b);
            },
            oOv0_: function(a) {
                return a.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
            }
        };
        Math.sign = Math.sign || (function(a) {
            return (0 === a) ? 0 : ((0 < a) ? 1 : -1);
        });
        Math.log10 = Math.log10 || (function(a) {
            return Math.log(a) / Math.$_uOu;
        });
        (function(a) {
            var b = !1;
            (("function" === typeof vww_W) && vww_W.uQ$$U) && (vww_W(a), b = !0);
            ("object" === typeof VuuQU) && (U$$WO.VuuQU = a(), b = !0);
            if (!b) {
                var e = M.OQw,
                    d = M.OQw = a();
                d._ouuu = function() {
                    M.OQw = e;
                    return d;
                };
            }
        })(function() {
            function a() {
                for (var a = 0, d = {}; a < arguments.length; a++) {
                    var c = arguments[a],
                        e;
                    for (e in c) d[e] = c[e];
                }
                return d;
            };

            function e(f) {
                function d(c, e, g) {
                    var h;
                    if ("undefined" !== typeof document) {
                        if (1 < arguments.length) {
                            g = a({
                                path: "/"
                            }, d.____w, g);
                            if ("number" === typeof g.expires) {
                                var k = new Date;
                                k.setMilliseconds(k.getMilliseconds() + (86400000 * g.expires));
                                g.expires = k;
                            }
                            try {
                                h = JSON.stringify(e), /^[\{\[]/ .test(h) && (e = h);
                            } catch (l) {}
                            e = f.write ? f.write(e, c) : encodeURIComponent(String(e)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
                            c = encodeURIComponent(String(c));
                            c = c.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
                            c = c.replace(/[\(\)]/g, escape);
                            return document.cookie = ([c, "=", e, g.expires ? ("; expires=" + g.expires.toUTCString()) : "", g.path ? ("; path=" + g.path) : "", g.domain ? ("; domain=" + g.domain) : "", g.wUOvQ ? "; secure" : ""]).join("");
                        }
                        c || (h = {});
                        for (var k = document.cookie ? document.cookie.split("; ") : ([]), m = /(%[0-9A-Z]{2})+/g, p = 0; p < k.length; p++) {
                            var n = k[p].split("="),
                                q = n.slice(1).join("=");
                            ('\"' === q.charAt(0)) && (q = q.slice(1, -1));
                            try {
                                var r = n[0].replace(m, decodeURIComponent),
                                    q = f.read ? f.read(q, r) : (f(q, r) || q.replace(m, decodeURIComponent));
                                if (this.json) try {
                                    q = JSON.parse(q);
                                } catch (l) {}
                                if (c === r) {
                                    h = q;
                                    break;
                                }
                                c || (h[r] = q);
                            } catch (l) {}
                        }
                        return h;
                    }
                };
                d.set = d;
                d.get = function(a) {
                    return d.call(d, a);
                };
                d.VVVWu = function() {
                    return d.apply({
                        json: !0
                    }, ([]).slice.call(arguments));
                };
                d.____w = {};
                d.remove = function(b, e) {
                    d(b, "", a(e, {
                        expires: -1
                    }));
                };
                d.Qvo_Q = e;
                return d;
            };
            return e(function() {});
        });
        try {
            if (M.self !== M.top)
                if (V$w = OQw.get("inIframe")) OQw.remove("inIframe");
                else OQw.set("inIframe", "1"), location.href = "http://starve.io";
        } catch (a) {}
        var ua = document.getElementById("game_canvas"),
            l = ua.getContext("2d"),
            ka = ua.width,
            ta = ua.height,
            Oj = M.Math.acos;
        M.Math.acos = M.Math.asin;
        M.Math.asin = Oj;
        var X = ua.width / 2,
            ea = ua.height / 2,
            zf = {
                x: X,
                y: ea
            },
            z = 1,
            Pc = 1,
            Va = -1,
            fd = "J" + Ic,
            tf = "S" + Sb,
            ma = M,
            Sb, Aa, Jc = "O",
            Md = Jc + "N",
            Kc = "O",
            Ic, tf = "N",
            sb = "J",
            Jc = "O" + Ic,
            Md = "Nundefined",
            Qa, Lc, Mc = ma,
            sb = "O",
            Nc, Mc = ma;
        Nc = "S";
        var gd = Mc;
        Sb = "J" + Nc;
        ua.oncontextmenu = function() {
            return !1;
        };
        fd = "J";
        fd = tf;
        sb += fd;
        Aa = Kc = Sb + sb;
        Jc = Md;
        Md = Ic;
        Ic = Sb;
        Qa = Sb + sb;
        Jc = Ic = Sb;
        tf = sb + fd;
        Jc = Sb + sb;
        Lc = Kc;
        Md = Sb + sb;
        sb = Ic;
        Nc = Kc;
        var fd = Jc,
            md = M.devicePixelRatio || 1,
            nd = ((((l._$www || l.VoOUW) || l._0uQu) || l.VuOVo) || l._QOU_) || 1,
            uf = document.getElementById("game_body");
        uf.ondragstart = function() {
            return !1;
        };
        uf.ondrop = function() {
            return !1;
        };
        uf.onresize = ld;
        (function() {
            for (var a = 0, e = ["ms", "moz", "webkit", "o"], f = 0;
                (f < e.length) && !M.requestAnimationFrame; ++f) M.requestAnimationFrame = M[e[f] + "RequestAnimationFrame"], M.cancelAnimationFrame = M[e[f] + "CancelAnimationFrame"] || M[e[f] + "CancelRequestAnimationFrame"];
            M.requestAnimationFrame || (M.requestAnimationFrame = function(d, c) {
                var e = (new Date).getTime(),
                    f = Math.max(0, 16 - (e - a)),
                    g = M.setTimeout(function() {
                        d(e + f);
                    }, f);
                a = e + f;
                return g;
            });
            M.cancelAnimationFrame || (M.cancelAnimationFrame = function(a) {
                clearTimeout(a);
            });
        })();
        var Ja = navigator.language || navigator.userLanguage,
            mb = -((new Date).getTimezoneOffset() / 60),
            kc = "Europe";
        ((-2 <= mb) && (2 >= mb)) ? (kc = "Europe") : (((2 < mb) && (5 >= mb)) ? (kc = "Russia") : (((5 < mb) && (9 >= mb)) ? (kc = "Asia") : ((9 < mb) ? (kc = "Australia") : (((-5 <= mb) && (-2 > mb)) ? (kc = (((("pt-BR" === Ja) || ("pt-br" === Ja)) || ("pt" === Ja)) || ("pt-pt" === Ja)) ? "South America" : "North America") : ((-5 > mb) && (kc = (((("pt-BR" === Ja) || ("pt-br" === Ja)) || ("pt" === Ja)) || ("pt-pt" === Ja)) ? "South America" : "West America"))))));
        var Oc = (function() {
                return {
                    $wWQ0: function(a) {
                        var e = a ? a : Math.floor(2147483647 * Math.random());
                        this.UvU = function(a) {
                            e = a ? a : Math.floor(2147483647 * Math.random());
                        };
                        this.get = function() {
                            e = ((1103515245 * e) + 12345) % 2147483648;
                            return e / 2147483648;
                        };
                    }
                };
            })(),
            wj = [
                [0, "DRAGON", 18, 6, 66, 35, 0],
                [0, "WINTER", 91, 18, 5, 40, 8],
                [0, "DESERT", 135, 180, 89, 124, 5],
                [0, "LAVA", 142, 6, 82, 99, 6],
                [0, "FOREST", 6, 150, 90, 154, 8],
                [0, "WINTER", 6, 6, 90, 150, 0],
                [1, "b", 0, 5, 175, 0],
                [1, "t", 2, 5, 174, 0],
                [1, "t", 5, 5, 173, 0],
                [1, "b", 3, 5, 176, 0],
                [1, "t", 0, 5, 177, 0],
                [1, "t", 3, 5, 178, 0],
                [1, "t", 4, 5, 179, 0],
                [1, "b", 0, 5, 180, 0],
                [1, "t", 5, 5, 181, 0],
                [1, "b", 2, 5, 182, 0],
                [1, "b", 1, 5, 183, 0],
                [1, "b", 2, 5, 184, 0],
                [1, "t", 5, 5, 185, 0],
                [1, "t", 2, 5, 186, 0],
                [1, "t", 0, 5, 187, 0],
                [1, "t", 5, 5, 188, 0],
                [1, "t", 1, 5, 189, 0],
                [1, "b", 2, 5, 190, 0],
                [1, "t", 4, 5, 191, 0],
                [1, "b", 3, 5, 192, 0],
                [1, "t", 5, 5, 193, 0],
                [1, "t", 0, 5, 194, 0],
                [1, "t", 3, 5, 195, 0],
                [1, "b", 0, 5, 196, 0],
                [1, "t", 5, 5, 197, 0],
                [1, "t", 2, 5, 198, 0],
                [1, "b", 2, 5, 199, 0],
                [1, "t", 4, 5, 200, 0],
                [1, "t", 1, 5, 201, 0],
                [1, "b", 1, 5, 202, 0],
                [1, "t", 5, 5, 203, 0],
                [1, "t", 2, 5, 204, 0],
                [1, "t", 4, 5, 205, 0],
                [1, "b", 2, 5, 206, 0],
                [1, "t", 1, 5, 207, 0],
                [1, "t", 4, 5, 208, 0],
                [1, "t", 2, 5, 209, 0],
                [1, "b", 0, 5, 210, 0],
                [1, "t", 5, 5, 211, 0],
                [1, "t", 1, 5, 212, 0],
                [1, "t", 2, 5, 213, 0],
                [1, "b", 3, 5, 214, 0],
                [1, "t", 5, 5, 215, 0],
                [1, "b", 0, 5, 216, 0],
                [1, "t", 4, 5, 217, 0],
                [1, "t", 2, 5, 218, 0],
                [1, "t", 1, 5, 219, 0],
                [1, "t", 3, 5, 220, 0],
                [1, "t", 5, 5, 221, 0],
                [1, "t", 2, 5, 222, 0],
                [1, "t", 4, 5, 223, 0],
                [1, "b", 3, 5, 224, 0],
                [1, "t", 1, 5, 225, 0],
                [1, "t", 3, 5, 226, 0],
                [1, "b", 0, 5, 227, 0],
                [1, "t", 3, 5, 228, 0],
                [1, "t", 5, 5, 229, 0],
                [1, "t", 2, 5, 230, 0],
                [1, "t", 0, 5, 231, 0],
                [1, "b", 2, 5, 232, 0],
                [1, "t", 1, 5, 233, 0],
                [1, "t", 4, 5, 234, 0],
                [1, "b", 1, 5, 235, 0],
                [1, "t", 4, 5, 236, 0],
                [1, "t", 2, 5, 237, 0],
                [1, "t", 0, 5, 238, 0],
                [1, "t", 4, 5, 239, 0],
                [1, "b", 2, 5, 240, 0],
                [1, "t", 5, 5, 241, 0],
                [1, "b", 1, 5, 242, 0],
                [1, "t", 4, 5, 243, 0],
                [1, "t", 2, 5, 244, 0],
                [1, "t", 1, 5, 245, 0],
                [1, "b", 1, 5, 246, 0],
                [1, "t", 3, 5, 247, 0],
                [1, "b", 2, 5, 248, 0],
                [1, "t", 5, 5, 249, 0],
                [1, "t", 2, 5, 250, 0],
                [1, "t", 4, 5, 251, 0],
                [1, "b", 1, 5, 252, 0],
                [1, "t", 4, 5, 253, 0],
                [1, "t", 1, 5, 254, 0],
                [1, "t", 3, 5, 255, 0],
                [1, "t", 5, 5, 256, 0],
                [1, "b", 2, 5, 257, 0],
                [1, "t", 4, 5, 258, 0],
                [1, "b", 3, 5, 259, 0],
                [1, "t", 5, 5, 260, 0],
                [1, "b", 0, 5, 261, 0],
                [1, "t", 3, 5, 262, 0],
                [1, "t", 4, 5, 263, 0],
                [1, "t", 2, 5, 264, 0],
                [1, "b", 1, 5, 265, 0],
                [1, "b", 2, 5, 266, 0],
                [1, "t", 3, 5, 267, 0],
                [1, "t", 4, 5, 268, 0],
                [1, "t", 0, 5, 269, 0],
                [1, "t", 5, 5, 270, 0],
                [1, "t", 3, 5, 271, 0],
                [1, "t", 4, 5, 272, 0],
                [1, "t", 1, 5, 273, 0],
                [1, "b", 2, 5, 274, 0],
                [1, "t", 1, 5, 275, 0],
                [1, "t", 4, 5, 276, 0],
                [1, "b", 1, 5, 277, 0],
                [1, "b", 2, 5, 278, 0],
                [1, "t", 1, 5, 279, 0],
                [1, "t", 4, 5, 280, 0],
                [1, "t", 2, 5, 281, 0],
                [1, "t", 5, 5, 282, 0],
                [1, "b", 2, 5, 283, 0],
                [1, "t", 1, 5, 284, 0],
                [1, "b", 3, 5, 285, 0],
                [1, "t", 4, 5, 286, 0],
                [1, "t", 0, 5, 287, 0],
                [1, "t", 5, 5, 288, 0],
                [1, "t", 2, 5, 289, 0],
                [1, "b", 1, 5, 290, 0],
                [1, "t", 4, 5, 292, 0],
                [1, "t", 2, 5, 291, 0],
                [1, "b", 2, 5, 293, 0],
                [1, "t", 1, 5, 294, 0],
                [1, "t", 3, 5, 295, 0],
                [1, "t", 5, 5, 296, 0],
                [1, "b", 0, 5, 297, 0],
                [1, "b", 3, 5, 298, 0],
                [1, "t", 4, 5, 299, 0],
                [1, "t", 2, 5, 300, 0],
                [1, "t", 4, 5, 301, 0],
                [1, "b", 0, 5, 302, 0],
                [1, "b", 2, 5, 303, 0],
                [1, "t", 1, 6, 303, 0],
                [1, "t", 2, 7, 303, 0],
                [1, "t", 1, 5, 304, 0],
                [1, "t", 3, 6, 304, 0],
                [1, "t", 4, 7, 304, 0],
                [1, "t", 5, 8, 303, 0],
                [1, "b", 1, 8, 304, 0],
                [1, "b", 2, 9, 304, 0],
                [1, "b", 3, 12, 303, 0],
                [1, "b", 3, 17, 304, 0],
                [1, "t", 1, 9, 303, 0],
                [1, "t", 1, 15, 304, 0],
                [1, "t", 1, 13, 303, 0],
                [1, "t", 3, 10, 303, 0],
                [1, "t", 3, 14, 304, 0],
                [1, "t", 4, 10, 304, 0],
                [1, "t", 5, 11, 304, 0],
                [1, "t", 5, 14, 303, 0],
                [1, "t", 5, 16, 304, 0],
                [1, "t", 5, 13, 304, 0],
                [1, "t", 2, 12, 304, 0],
                [1, "t", 1, 11, 303, 0],
                [1, "b", 3, 15, 303, 0],
                [1, "b", 0, 16, 303, 0],
                [1, "t", 3, 17, 303, 0],
                [1, "t", 4, 18, 303, 0],
                [1, "t", 2, 19, 303, 0],
                [1, "t", 1, 20, 303, 0],
                [1, "b", 1, 21, 303, 0],
                [1, "t", 2, 22, 303, 0],
                [1, "t", 4, 23, 303, 0],
                [1, "b", 3, 24, 303, 0],
                [1, "t", 5, 25, 303, 0],
                [1, "t", 1, 26, 303, 0],
                [1, "t", 2, 27, 303, 0],
                [1, "t", 4, 28, 303, 0],
                [1, "b", 0, 18, 304, 0],
                [1, "t", 2, 19, 304, 0],
                [1, "t", 5, 20, 304, 0],
                [1, "b", 2, 21, 304, 0],
                [1, "t", 4, 22, 304, 0],
                [1, "t", 2, 23, 304, 0],
                [1, "t", 1, 24, 304, 0],
                [1, "t", 3, 25, 304, 0],
                [1, "t", 0, 27, 304, 0],
                [1, "t", 5, 26, 304, 0],
                [1, "b", 2, 28, 304, 0],
                [1, "t", 1, 29, 304, 0],
                [1, "b", 1, 29, 303, 0],
                [1, "b", 2, 30, 303, 0],
                [1, "t", 4, 31, 303, 0],
                [1, "t", 0, 32, 303, 0],
                [1, "t", 5, 33, 303, 0],
                [1, "t", 2, 34, 303, 0],
                [1, "t", 4, 35, 303, 0],
                [1, "t", 1, 36, 303, 0],
                [1, "b", 3, 37, 303, 0],
                [1, "t", 2, 32, 304, 0],
                [1, "t", 4, 30, 304, 0],
                [1, "t", 1, 31, 304, 0],
                [1, "b", 1, 33, 304, 0],
                [1, "t", 2, 35, 304, 0],
                [1, "t", 5, 34, 304, 0],
                [1, "b", 2, 36, 304, 0],
                [1, "t", 5, 37, 304, 0],
                [1, "t", 1, 38, 304, 0],
                [1, "b", 1, 40, 303, 0],
                [1, "t", 3, 39, 303, 0],
                [1, "t", 3, 42, 304, 0],
                [1, "t", 5, 38, 303, 0],
                [1, "t", 5, 39, 304, 0],
                [1, "t", 5, 41, 303, 0],
                [1, "t", 4, 41, 304, 0],
                [1, "t", 4, 44, 303, 0],
                [1, "b", 2, 40, 304, 0],
                [1, "b", 2, 43, 303, 0],
                [1, "t", 1, 42, 303, 0],
                [1, "t", 1, 43, 304, 0],
                [1, "t", 5, 44, 304, 0],
                [1, "b", 1, 45, 303, 0],
                [1, "t", 2, 45, 304, 0],
                [1, "t", 2, 46, 303, 0],
                [1, "t", 4, 47, 303, 0],
                [1, "b", 0, 48, 303, 0],
                [1, "t", 5, 49, 303, 0],
                [1, "t", 2, 50, 303, 0],
                [1, "t", 1, 51, 303, 0],
                [1, "t", 4, 52, 303, 0],
                [1, "t", 5, 46, 304, 0],
                [1, "t", 2, 47, 304, 0],
                [1, "t", 5, 48, 304, 0],
                [1, "t", 1, 49, 304, 0],
                [1, "t", 2, 50, 304, 0],
                [1, "b", 1, 53, 303, 0],
                [1, "b", 2, 51, 304, 0],
                [1, "t", 5, 52, 304, 0],
                [1, "t", 3, 53, 304, 0],
                [1, "b", 2, 54, 303, 0],
                [1, "t", 5, 54, 304, 0],
                [1, "t", 5, 55, 303, 0],
                [1, "t", 3, 56, 303, 0],
                [1, "t", 4, 57, 303, 0],
                [1, "t", 5, 58, 303, 0],
                [1, "b", 1, 55, 304, 0],
                [1, "t", 2, 56, 304, 0],
                [1, "t", 0, 57, 304, 0],
                [1, "t", 3, 58, 304, 0],
                [1, "t", 3, 63, 304, 0],
                [1, "t", 3, 59, 303, 0],
                [1, "t", 4, 59, 304, 0],
                [1, "t", 5, 60, 303, 0],
                [1, "t", 0, 60, 304, 0],
                [1, "t", 0, 66, 303, 0],
                [1, "t", 0, 70, 304, 0],
                [1, "t", 3, 61, 304, 0],
                [1, "t", 3, 67, 303, 0],
                [1, "t", 3, 73, 304, 0],
                [1, "t", 3, 76, 303, 0],
                [1, "t", 3, 78, 304, 0],
                [1, "t", 1, 61, 303, 0],
                [1, "t", 1, 73, 303, 0],
                [1, "t", 1, 79, 303, 0],
                [1, "b", 2, 62, 304, 0],
                [1, "b", 2, 70, 303, 0],
                [1, "t", 5, 62, 303, 0],
                [1, "t", 5, 68, 303, 0],
                [1, "t", 5, 71, 304, 0],
                [1, "t", 5, 77, 304, 0],
                [1, "t", 5, 75, 303, 0],
                [1, "t", 5, 64, 304, 0],
                [1, "t", 5, 65, 303, 0],
                [1, "t", 5, 80, 303, 0],
                [1, "t", 1, 76, 304, 0],
                [1, "t", 3, 63, 303, 0],
                [1, "t", 5, 82, 304, 0],
                [1, "b", 2, 65, 304, 0],
                [1, "t", 1, 64, 303, 0],
                [1, "t", 1, 68, 304, 0],
                [1, "t", 2, 69, 304, 0],
                [1, "t", 4, 69, 303, 0],
                [1, "t", 5, 66, 304, 0],
                [1, "t", 0, 67, 304, 0],
                [1, "b", 2, 72, 304, 0],
                [1, "t", 0, 71, 303, 0],
                [1, "t", 4, 72, 303, 0],
                [1, "t", 4, 74, 304, 0],
                [1, "t", 2, 74, 303, 0],
                [1, "t", 3, 75, 304, 0],
                [1, "t", 1, 77, 303, 0],
                [1, "t", 4, 78, 303, 0],
                [1, "t", 4, 79, 304, 0],
                [1, "t", 2, 80, 304, 0],
                [1, "b", 1, 81, 304, 0],
                [1, "t", 2, 81, 303, 0],
                [1, "t", 5, 82, 303, 0],
                [1, "t", 1, 83, 303, 0],
                [1, "b", 2, 83, 304, 0],
                [1, "t", 1, 84, 304, 0],
                [1, "t", 4, 84, 303, 0],
                [1, "t", 5, 85, 304, 0],
                [1, "t", 3, 85, 303, 0],
                [1, "b", 2, 86, 304, 0],
                [1, "t", 1, 86, 303, 0],
                [1, "b", 3, 87, 303, 0],
                [1, "t", 4, 87, 304, 0],
                [1, "t", 4, 88, 303, 0],
                [1, "t", 0, 88, 304, 0],
                [1, "b", 1, 89, 303, 0],
                [1, "t", 3, 89, 304, 0],
                [1, "t", 3, 90, 303, 0],
                [1, "t", 4, 90, 304, 0],
                [1, "t", 4, 91, 303, 0],
                [1, "t", 0, 91, 304, 0],
                [1, "b", 2, 92, 303, 0],
                [1, "t", 4, 92, 304, 0],
                [1, "t", 5, 93, 303, 0],
                [1, "t", 0, 93, 304, 0],
                [1, "b", 3, 94, 303, 0],
                [1, "b", 0, 94, 304, 0],
                [1, "b", 0, 95, 303, 0],
                [1, "t", 2, 95, 304, 0],
                [1, "f", 1, 5, 151, 1],
                [1, "f", 2, 5, 153, 1],
                [1, "f", 0, 5, 152, 1],
                [1, "f", 0, 5, 147, 1],
                [1, "f", 0, 5, 144, 1],
                [1, "f", 0, 5, 140, 1],
                [1, "f", 1, 5, 149, 1],
                [1, "f", 1, 5, 146, 1],
                [1, "f", 1, 5, 143, 1],
                [1, "f", 1, 5, 141, 1],
                [1, "f", 2, 5, 150, 1],
                [1, "f", 2, 5, 148, 1],
                [1, "f", 2, 5, 145, 1],
                [1, "f", 2, 5, 142, 1],
                [1, "f", 2, 5, 139, 1],
                [1, "f", 2, 5, 136, 1],
                [1, "f", 2, 5, 133, 1],
                [1, "f", 2, 5, 131, 1],
                [1, "f", 2, 5, 127, 1],
                [1, "f", 2, 5, 125, 1],
                [1, "f", 1, 5, 138, 1],
                [1, "f", 1, 5, 135, 1],
                [1, "f", 1, 5, 132, 1],
                [1, "f", 1, 5, 130, 1],
                [1, "f", 1, 5, 128, 1],
                [1, "f", 1, 5, 126, 1],
                [1, "f", 1, 5, 124, 1],
                [1, "f", 0, 5, 129, 1],
                [1, "f", 0, 5, 134, 1],
                [1, "f", 0, 5, 137, 1],
                [1, "f", 0, 5, 123, 1],
                [1, "f", 1, 5, 122, 1],
                [1, "f", 1, 5, 120, 1],
                [1, "f", 1, 5, 117, 1],
                [1, "f", 1, 5, 115, 1],
                [1, "f", 1, 5, 111, 1],
                [1, "f", 1, 5, 108, 1],
                [1, "f", 2, 5, 121, 1],
                [1, "f", 2, 5, 118, 1],
                [1, "f", 2, 5, 116, 1],
                [1, "f", 2, 5, 113, 1],
                [1, "f", 2, 5, 110, 1],
                [1, "f", 0, 5, 119, 1],
                [1, "f", 0, 5, 114, 1],
                [1, "f", 0, 5, 112, 1],
                [1, "f", 0, 5, 109, 1],
                [1, "f", 1, 5, 106, 1],
                [1, "f", 1, 5, 103, 1],
                [1, "f", 1, 5, 100, 1],
                [1, "f", 1, 5, 97, 1],
                [1, "f", 1, 5, 95, 1],
                [1, "f", 2, 5, 107, 1],
                [1, "f", 2, 5, 105, 1],
                [1, "f", 2, 5, 102, 1],
                [1, "f", 2, 5, 99, 1],
                [1, "f", 2, 5, 96, 1],
                [1, "f", 2, 5, 94, 1],
                [1, "f", 0, 5, 104, 1],
                [1, "f", 0, 5, 101, 1],
                [1, "f", 0, 5, 98, 1],
                [1, "f", 0, 5, 93, 1],
                [1, "f", 1, 5, 92, 1],
                [1, "f", 1, 5, 89, 1],
                [1, "f", 1, 5, 86, 1],
                [1, "f", 1, 5, 83, 1],
                [1, "f", 1, 5, 80, 1],
                [1, "f", 1, 5, 78, 1],
                [1, "f", 2, 5, 90, 1],
                [1, "f", 2, 5, 88, 1],
                [1, "f", 2, 5, 85, 1],
                [1, "f", 2, 5, 82, 1],
                [1, "f", 2, 5, 79, 1],
                [1, "f", 2, 5, 77, 1],
                [1, "f", 2, 5, 75, 1],
                [1, "f", 2, 5, 72, 1],
                [1, "f", 0, 5, 91, 1],
                [1, "f", 0, 5, 87, 1],
                [1, "f", 0, 5, 84, 1],
                [1, "f", 0, 5, 81, 1],
                [1, "f", 0, 5, 76, 1],
                [1, "f", 0, 5, 74, 1],
                [1, "f", 1, 5, 73, 1],
                [1, "f", 1, 5, 71, 1],
                [1, "f", 1, 5, 68, 1],
                [1, "f", 1, 5, 66, 1],
                [1, "f", 1, 5, 62, 1],
                [1, "f", 1, 5, 59, 1],
                [1, "f", 1, 5, 56, 1],
                [1, "f", 1, 5, 53, 1],
                [1, "f", 1, 5, 50, 1],
                [1, "f", 2, 5, 70, 1],
                [1, "f", 2, 5, 67, 1],
                [1, "f", 2, 5, 65, 1],
                [1, "f", 2, 5, 63, 1],
                [1, "f", 2, 5, 60, 1],
                [1, "f", 2, 5, 57, 1],
                [1, "f", 2, 5, 54, 1],
                [1, "f", 2, 5, 51, 1],
                [1, "f", 0, 5, 69, 1],
                [1, "f", 0, 5, 64, 1],
                [1, "f", 0, 5, 61, 1],
                [1, "f", 0, 5, 58, 1],
                [1, "f", 0, 5, 55, 1],
                [1, "f", 0, 5, 52, 1],
                [1, "f", 0, 5, 49, 1],
                [1, "f", 0, 5, 45, 1],
                [1, "f", 0, 5, 42, 1],
                [1, "f", 0, 5, 38, 1],
                [1, "f", 0, 5, 34, 1],
                [1, "f", 0, 5, 31, 1],
                [1, "f", 1, 5, 48, 1],
                [1, "f", 1, 5, 44, 1],
                [1, "f", 1, 5, 41, 1],
                [1, "f", 1, 5, 37, 1],
                [1, "f", 1, 5, 33, 1],
                [1, "f", 1, 5, 29, 1],
                [1, "f", 2, 5, 30, 1],
                [1, "f", 2, 5, 32, 1],
                [1, "f", 2, 5, 35, 1],
                [1, "f", 2, 5, 39, 1],
                [1, "f", 2, 5, 46, 1],
                [1, "f", 2, 5, 43, 1],
                [1, "f", 1, 5, 47, 1],
                [1, "f", 0, 5, 40, 1],
                [1, "f", 0, 5, 36, 1],
                [1, "f", 0, 5, 28, 1],
                [1, "f", 1, 5, 25, 1],
                [1, "f", 1, 5, 22, 1],
                [1, "f", 1, 5, 20, 1],
                [1, "f", 1, 5, 16, 1],
                [1, "f", 1, 5, 13, 1],
                [1, "f", 1, 5, 10, 1],
                [1, "f", 2, 5, 27, 1],
                [1, "f", 2, 5, 24, 1],
                [1, "f", 2, 5, 21, 1],
                [1, "f", 2, 5, 19, 1],
                [1, "f", 2, 5, 15, 1],
                [1, "f", 2, 5, 12, 1],
                [1, "f", 2, 5, 9, 1],
                [1, "f", 0, 5, 26, 1],
                [1, "f", 0, 5, 23, 1],
                [1, "f", 0, 5, 14, 1],
                [1, "f", 0, 5, 11, 1],
                [1, "f", 0, 5, 17, 1],
                [1, "f", 1, 5, 18, 1],
                [1, "f", 1, 5, 8, 1],
                [1, "f", 0, 5, 7, 1],
                [1, "f", 1, 5, 6, 1],
                [1, "f", 0, 5, 5, 1],
                [1, "f", 1, 6, 5, 1],
                [1, "f", 2, 7, 5, 1],
                [1, "f", 0, 8, 5, 1],
                [1, "f", 1, 9, 5, 1],
                [1, "f", 1, 12, 5, 1],
                [1, "f", 1, 15, 5, 1],
                [1, "f", 1, 17, 5, 1],
                [1, "f", 1, 22, 5, 1],
                [1, "f", 1, 26, 5, 1],
                [1, "f", 2, 10, 5, 1],
                [1, "f", 2, 13, 5, 1],
                [1, "f", 2, 16, 5, 1],
                [1, "f", 2, 18, 5, 1],
                [1, "f", 2, 21, 5, 1],
                [1, "f", 2, 23, 5, 1],
                [1, "f", 2, 25, 5, 1],
                [1, "f", 2, 27, 5, 1],
                [1, "f", 0, 11, 5, 1],
                [1, "f", 0, 14, 5, 1],
                [1, "f", 0, 19, 5, 1],
                [1, "f", 0, 24, 5, 1],
                [1, "f", 0, 28, 5, 1],
                [1, "f", 1, 20, 5, 1],
                [1, "f", 1, 29, 5, 1],
                [1, "f", 1, 32, 5, 1],
                [1, "f", 1, 35, 5, 1],
                [1, "f", 1, 38, 5, 1],
                [1, "f", 1, 41, 5, 1],
                [1, "f", 1, 45, 5, 1],
                [1, "f", 2, 30, 5, 1],
                [1, "f", 2, 33, 5, 1],
                [1, "f", 2, 36, 5, 1],
                [1, "f", 2, 39, 5, 1],
                [1, "f", 2, 42, 5, 1],
                [1, "f", 2, 44, 5, 1],
                [1, "f", 2, 46, 5, 1],
                [1, "f", 0, 43, 5, 1],
                [1, "f", 0, 40, 5, 1],
                [1, "f", 0, 37, 5, 1],
                [1, "f", 0, 34, 5, 1],
                [1, "f", 0, 31, 5, 1],
                [1, "f", 0, 47, 5, 1],
                [1, "f", 1, 48, 5, 1],
                [1, "f", 1, 51, 5, 1],
                [1, "f", 1, 53, 5, 1],
                [1, "f", 1, 57, 5, 1],
                [1, "f", 1, 60, 5, 1],
                [1, "f", 1, 63, 5, 1],
                [1, "f", 1, 65, 5, 1],
                [1, "f", 2, 64, 5, 1],
                [1, "f", 2, 62, 5, 1],
                [1, "f", 2, 59, 5, 1],
                [1, "f", 2, 56, 5, 1],
                [1, "f", 2, 52, 5, 1],
                [1, "f", 2, 49, 5, 1],
                [1, "f", 2, 54, 5, 1],
                [1, "f", 0, 50, 5, 1],
                [1, "f", 0, 55, 5, 1],
                [1, "f", 0, 58, 5, 1],
                [1, "f", 0, 61, 5, 1],
                [1, "f", 0, 66, 5, 1],
                [1, "f", 1, 67, 5, 1],
                [1, "f", 1, 70, 5, 1],
                [1, "f", 1, 72, 5, 1],
                [1, "f", 1, 75, 5, 1],
                [1, "f", 1, 79, 5, 1],
                [1, "f", 2, 68, 5, 1],
                [1, "f", 2, 71, 5, 1],
                [1, "f", 2, 74, 5, 1],
                [1, "f", 2, 76, 5, 1],
                [1, "f", 2, 78, 5, 1],
                [1, "f", 0, 69, 5, 1],
                [1, "f", 0, 73, 5, 1],
                [1, "f", 0, 77, 5, 1],
                [1, "f", 0, 80, 5, 1],
                [1, "f", 1, 81, 5, 1],
                [1, "f", 1, 84, 5, 1],
                [1, "f", 1, 87, 5, 1],
                [1, "f", 1, 89, 5, 1],
                [1, "f", 1, 92, 5, 1],
                [1, "f", 1, 94, 5, 1],
                [1, "f", 0, 82, 5, 1],
                [1, "f", 2, 83, 5, 1],
                [1, "f", 2, 85, 5, 1],
                [1, "f", 2, 88, 5, 1],
                [1, "f", 2, 90, 5, 1],
                [1, "f", 2, 93, 5, 1],
                [1, "f", 2, 95, 5, 1],
                [1, "f", 0, 86, 5, 1],
                [1, "f", 0, 91, 5, 1],
                [1, "f", 2, 6, 153, 1],
                [1, "f", 1, 6, 152, 1],
                [1, "t", 1, 93, 301, 0],
                [1, "t", 3, 94, 302, 0],
                [1, "t", 5, 95, 302, 0],
                [1, "t", 5, 93, 302, 0],
                [1, "b", 3, 92, 302, 0],
                [1, "t", 1, 91, 302, 0],
                [1, "t", 5, 90, 302, 0],
                [1, "b", 2, 92, 301, 0],
                [1, "t", 1, 91, 301, 0],
                [1, "t", 2, 90, 301, 0],
                [1, "b", 2, 89, 302, 0],
                [1, "t", 4, 89, 301, 0],
                [1, "t", 1, 88, 302, 0],
                [1, "t", 2, 88, 301, 0],
                [1, "t", 3, 87, 302, 0],
                [1, "t", 4, 87, 299, 0],
                [1, "t", 4, 86, 302, 0],
                [1, "t", 1, 85, 302, 0],
                [1, "t", 5, 85, 301, 0],
                [1, "b", 2, 84, 302, 0],
                [1, "t", 5, 83, 302, 0],
                [1, "t", 1, 82, 302, 0],
                [1, "t", 5, 81, 302, 0],
                [1, "t", 2, 80, 302, 0],
                [1, "t", 4, 79, 302, 0],
                [1, "t", 2, 78, 302, 0],
                [1, "b", 1, 77, 302, 0],
                [1, "b", 2, 76, 302, 0],
                [1, "t", 2, 75, 302, 0],
                [1, "t", 4, 74, 302, 0],
                [1, "b", 1, 73, 302, 0],
                [1, "t", 2, 72, 302, 0],
                [1, "t", 4, 71, 302, 0],
                [1, "b", 3, 70, 302, 0],
                [1, "t", 1, 69, 302, 0],
                [1, "t", 2, 68, 302, 0],
                [1, "t", 5, 67, 302, 0],
                [1, "b", 1, 66, 302, 0],
                [1, "t", 2, 65, 302, 0],
                [1, "t", 4, 64, 302, 0],
                [1, "b", 3, 63, 302, 0],
                [1, "t", 5, 62, 302, 0],
                [1, "b", 1, 61, 302, 0],
                [1, "t", 3, 60, 302, 0],
                [1, "t", 4, 59, 302, 0],
                [1, "b", 2, 58, 302, 0],
                [1, "t", 5, 57, 302, 0],
                [1, "t", 1, 56, 302, 0],
                [1, "t", 3, 55, 302, 0],
                [1, "t", 4, 54, 302, 0],
                [1, "t", 1, 53, 302, 0],
                [1, "t", 5, 52, 302, 0],
                [1, "t", 2, 51, 302, 0],
                [1, "t", 4, 50, 302, 0],
                [1, "t", 2, 49, 302, 0],
                [1, "b", 1, 48, 302, 0],
                [1, "t", 3, 47, 302, 0],
                [1, "t", 4, 46, 302, 0],
                [1, "t", 1, 45, 302, 0],
                [1, "t", 2, 44, 302, 0],
                [1, "t", 5, 43, 302, 0],
                [1, "t", 2, 42, 302, 0],
                [1, "t", 1, 41, 302, 0],
                [1, "t", 4, 40, 302, 0],
                [1, "b", 2, 39, 302, 0],
                [1, "t", 5, 38, 302, 0],
                [1, "t", 1, 37, 302, 0],
                [1, "t", 2, 36, 302, 0],
                [1, "t", 5, 35, 302, 0],
                [1, "t", 0, 34, 302, 0],
                [1, "t", 3, 33, 302, 0],
                [1, "t", 4, 32, 302, 0],
                [1, "b", 1, 31, 302, 0],
                [1, "t", 2, 30, 302, 0],
                [1, "t", 4, 29, 302, 0],
                [1, "t", 2, 28, 302, 0],
                [1, "t", 5, 27, 302, 0],
                [1, "b", 3, 26, 302, 0],
                [1, "t", 1, 25, 302, 0],
                [1, "t", 4, 24, 302, 0],
                [1, "t", 2, 23, 302, 0],
                [1, "t", 1, 22, 302, 0],
                [1, "t", 5, 21, 302, 0],
                [1, "t", 2, 20, 302, 0],
                [1, "t", 4, 19, 302, 0],
                [1, "b", 1, 18, 302, 0],
                [1, "t", 5, 17, 302, 0],
                [1, "t", 3, 16, 302, 0],
                [1, "t", 1, 15, 302, 0],
                [1, "t", 5, 14, 302, 0],
                [1, "t", 3, 13, 302, 0],
                [1, "t", 4, 12, 302, 0],
                [1, "t", 1, 11, 302, 0],
                [1, "t", 2, 10, 302, 0],
                [1, "t", 4, 9, 302, 0],
                [1, "b", 3, 8, 302, 0],
                [1, "t", 5, 8, 302, 0],
                [1, "t", 5, 7, 302, 0],
                [1, "b", 2, 6, 302, 0],
                [1, "t", 1, 6, 301, 0],
                [1, "t", 4, 6, 300, 0],
                [1, "t", 2, 6, 299, 0],
                [1, "b", 0, 6, 298, 0],
                [1, "t", 5, 6, 297, 0],
                [1, "t", 2, 6, 296, 0],
                [1, "t", 0, 6, 295, 0],
                [1, "b", 2, 6, 294, 0],
                [1, "t", 5, 6, 293, 0],
                [1, "t", 1, 6, 292, 0],
                [1, "b", 0, 6, 291, 0],
                [1, "t", 2, 6, 290, 0],
                [1, "t", 5, 6, 289, 0],
                [1, "t", 1, 6, 288, 0],
                [1, "t", 4, 6, 287, 0],
                [1, "t", 2, 6, 286, 0],
                [1, "t", 5, 6, 285, 0],
                [1, "t", 2, 6, 284, 0],
                [1, "b", 0, 6, 283, 0],
                [1, "t", 2, 6, 282, 0],
                [1, "t", 5, 6, 281, 0],
                [1, "b", 2, 6, 280, 0],
                [1, "t", 5, 6, 279, 0],
                [1, "t", 1, 6, 278, 0],
                [1, "t", 4, 6, 277, 0],
                [1, "t", 3, 6, 276, 0],
                [1, "t", 5, 6, 275, 0],
                [1, "b", 0, 6, 274, 0],
                [1, "t", 5, 6, 273, 0],
                [1, "t", 1, 6, 272, 0],
                [1, "t", 4, 6, 271, 0],
                [1, "b", 3, 6, 270, 0],
                [1, "t", 5, 6, 269, 0],
                [1, "t", 1, 6, 268, 0],
                [1, "t", 4, 6, 267, 0],
                [1, "t", 1, 6, 266, 0],
                [1, "t", 3, 6, 265, 0],
                [1, "t", 4, 6, 264, 0],
                [1, "b", 2, 6, 263, 0],
                [1, "t", 5, 6, 262, 0],
                [1, "t", 3, 6, 261, 0],
                [1, "t", 0, 6, 260, 0],
                [1, "t", 5, 6, 259, 0],
                [1, "t", 1, 6, 258, 0],
                [1, "t", 3, 6, 257, 0],
                [1, "t", 4, 6, 255, 0],
                [1, "t", 3, 6, 254, 0],
                [1, "t", 5, 6, 253, 0],
                [1, "b", 2, 6, 252, 0],
                [1, "t", 5, 6, 251, 0],
                [1, "t", 1, 6, 250, 0],
                [1, "t", 3, 6, 249, 0],
                [1, "t", 4, 6, 248, 0],
                [1, "b", 3, 6, 247, 0],
                [1, "t", 5, 6, 246, 0],
                [1, "t", 3, 6, 245, 0],
                [1, "t", 5, 6, 244, 0],
                [1, "t", 0, 6, 243, 0],
                [1, "t", 4, 6, 242, 0],
                [1, "t", 3, 6, 241, 0],
                [1, "t", 5, 6, 240, 0],
                [1, "b", 0, 6, 239, 0],
                [1, "t", 3, 6, 238, 0],
                [1, "t", 4, 6, 237, 0],
                [1, "t", 1, 6, 236, 0],
                [1, "t", 5, 6, 235, 0],
                [1, "b", 2, 6, 234, 0],
                [1, "t", 2, 6, 233, 0],
                [1, "t", 4, 6, 232, 0],
                [1, "b", 3, 6, 231, 0],
                [1, "t", 5, 6, 230, 0],
                [1, "t", 1, 6, 229, 0],
                [1, "t", 2, 6, 228, 0],
                [1, "t", 5, 6, 227, 0],
                [1, "b", 2, 6, 226, 0],
                [1, "t", 4, 6, 225, 0],
                [1, "t", 0, 6, 224, 0],
                [1, "t", 2, 6, 223, 0],
                [1, "t", 0, 6, 222, 0],
                [1, "b", 2, 6, 221, 0],
                [1, "t", 4, 6, 220, 0],
                [1, "b", 3, 6, 219, 0],
                [1, "t", 5, 6, 218, 0],
                [1, "t", 0, 6, 217, 0],
                [1, "t", 3, 6, 216, 0],
                [1, "b", 0, 6, 215, 0],
                [1, "t", 4, 6, 214, 0],
                [1, "t", 2, 6, 213, 0],
                [1, "t", 0, 6, 212, 0],
                [1, "t", 2, 6, 211, 0],
                [1, "b", 3, 6, 210, 0],
                [1, "t", 0, 6, 209, 0],
                [1, "t", 5, 6, 207, 0],
                [1, "t", 2, 6, 208, 0],
                [1, "t", 0, 6, 206, 0],
                [1, "t", 2, 6, 205, 0],
                [1, "t", 2, 6, 203, 0],
                [1, "b", 0, 6, 202, 0],
                [1, "t", 3, 6, 201, 0],
                [1, "t", 4, 6, 199, 0],
                [1, "t", 0, 6, 198, 0],
                [1, "t", 2, 6, 197, 0],
                [1, "t", 4, 6, 196, 0],
                [1, "t", 1, 6, 195, 0],
                [1, "t", 3, 6, 194, 0],
                [1, "t", 4, 6, 192, 0],
                [1, "t", 2, 6, 191, 0],
                [1, "b", 0, 6, 190, 0],
                [1, "t", 3, 6, 189, 0],
                [1, "t", 4, 6, 187, 0],
                [1, "b", 0, 6, 186, 0],
                [1, "t", 2, 6, 185, 0],
                [1, "t", 4, 6, 184, 0],
                [1, "t", 2, 6, 183, 0],
                [1, "t", 0, 6, 182, 0],
                [1, "b", 2, 6, 181, 0],
                [1, "t", 5, 6, 180, 0],
                [1, "t", 2, 6, 179, 0],
                [1, "t", 0, 6, 178, 0],
                [1, "t", 2, 6, 177, 0],
                [1, "t", 4, 6, 176, 0],
                [1, "b", 2, 6, 175, 0],
                [1, "t", 1, 6, 174, 0],
                [1, "t", 5, 6, 173, 0],
                [1, "t", 2, 6, 256, 0],
                [1, "t", 4, 6, 204, 0],
                [1, "t", 4, 6, 200, 0],
                [1, "t", 2, 6, 193, 0],
                [1, "t", 2, 6, 188, 0],
                [1, "f", 1, 6, 150, 1],
                [1, "f", 2, 6, 151, 1],
                [1, "f", 2, 6, 149, 1],
                [1, "f", 1, 6, 148, 1],
                [1, "f", 2, 6, 147, 1],
                [1, "f", 2, 6, 145, 1],
                [1, "f", 2, 6, 143, 1],
                [1, "f", 1, 6, 146, 1],
                [1, "f", 1, 6, 144, 1],
                [1, "f", 1, 6, 142, 1],
                [1, "f", 2, 6, 141, 1],
                [1, "f", 2, 6, 139, 1],
                [1, "f", 2, 6, 137, 1],
                [1, "f", 2, 6, 135, 1],
                [1, "f", 2, 6, 133, 1],
                [1, "f", 1, 6, 140, 1],
                [1, "f", 1, 6, 138, 1],
                [1, "f", 1, 6, 136, 1],
                [1, "f", 1, 6, 134, 1],
                [1, "f", 1, 6, 132, 1],
                [1, "f", 2, 6, 131, 1],
                [1, "f", 2, 6, 129, 1],
                [1, "f", 2, 6, 127, 1],
                [1, "f", 2, 6, 125, 1],
                [1, "f", 2, 6, 123, 1],
                [1, "f", 2, 6, 121, 1],
                [1, "f", 1, 6, 130, 1],
                [1, "f", 1, 6, 128, 1],
                [1, "f", 1, 6, 126, 1],
                [1, "f", 1, 6, 124, 1],
                [1, "f", 1, 6, 122, 1],
                [1, "f", 1, 6, 120, 1],
                [1, "f", 2, 6, 119, 1],
                [1, "f", 2, 6, 117, 1],
                [1, "f", 2, 6, 115, 1],
                [1, "f", 2, 6, 113, 1],
                [1, "f", 2, 6, 111, 1],
                [1, "f", 2, 6, 109, 1],
                [1, "f", 1, 6, 118, 1],
                [1, "f", 1, 6, 116, 1],
                [1, "f", 1, 6, 114, 1],
                [1, "f", 1, 6, 112, 1],
                [1, "f", 1, 6, 110, 1],
                [1, "f", 1, 6, 108, 1],
                [1, "f", 1, 6, 106, 1],
                [1, "f", 1, 6, 104, 1],
                [1, "f", 2, 6, 107, 1],
                [1, "f", 2, 6, 105, 1],
                [1, "f", 2, 6, 103, 1],
                [1, "f", 2, 6, 101, 1],
                [1, "f", 2, 6, 99, 1],
                [1, "f", 2, 6, 97, 1],
                [1, "f", 2, 6, 95, 1],
                [1, "f", 2, 6, 93, 1],
                [1, "f", 2, 6, 91, 1],
                [1, "f", 1, 6, 102, 1],
                [1, "f", 1, 6, 100, 1],
                [1, "f", 1, 6, 98, 1],
                [1, "f", 1, 6, 96, 1],
                [1, "f", 1, 6, 94, 1],
                [1, "f", 1, 6, 92, 1],
                [1, "f", 1, 6, 90, 1],
                [1, "f", 1, 6, 88, 1],
                [1, "f", 1, 6, 86, 1],
                [1, "f", 2, 6, 89, 1],
                [1, "f", 2, 6, 87, 1],
                [1, "f", 2, 6, 85, 1],
                [1, "f", 2, 6, 83, 1],
                [1, "f", 2, 6, 81, 1],
                [1, "f", 2, 6, 79, 1],
                [1, "f", 2, 6, 77, 1],
                [1, "f", 1, 6, 84, 1],
                [1, "f", 1, 6, 82, 1],
                [1, "f", 1, 6, 80, 1],
                [1, "f", 1, 6, 78, 1],
                [1, "f", 1, 6, 76, 1],
                [1, "f", 2, 6, 75, 1],
                [1, "f", 2, 6, 73, 1],
                [1, "f", 2, 6, 71, 1],
                [1, "f", 2, 6, 69, 1],
                [1, "f", 2, 6, 67, 1],
                [1, "f", 2, 6, 65, 1],
                [1, "f", 1, 6, 74, 1],
                [1, "f", 1, 6, 72, 1],
                [1, "f", 1, 6, 70, 1],
                [1, "f", 1, 6, 68, 1],
                [1, "f", 1, 6, 66, 1],
                [1, "f", 1, 6, 64, 1],
                [1, "f", 2, 6, 63, 1],
                [1, "f", 2, 6, 61, 1],
                [1, "f", 2, 6, 59, 1],
                [1, "f", 2, 6, 57, 1],
                [1, "f", 2, 6, 55, 1],
                [1, "f", 2, 6, 53, 1],
                [1, "f", 2, 6, 51, 1],
                [1, "f", 1, 6, 62, 1],
                [1, "f", 1, 6, 60, 1],
                [1, "f", 1, 6, 58, 1],
                [1, "f", 1, 6, 56, 1],
                [1, "f", 1, 6, 54, 1],
                [1, "f", 1, 6, 52, 1],
                [1, "f", 1, 6, 50, 1],
                [1, "f", 2, 6, 49, 1],
                [1, "f", 2, 6, 47, 1],
                [1, "f", 2, 6, 45, 1],
                [1, "f", 2, 6, 43, 1],
                [1, "f", 2, 6, 41, 1],
                [1, "f", 2, 6, 39, 1],
                [1, "f", 1, 6, 48, 1],
                [1, "f", 1, 6, 46, 1],
                [1, "f", 1, 6, 44, 1],
                [1, "f", 1, 6, 42, 1],
                [1, "f", 1, 6, 40, 1],
                [1, "f", 1, 6, 38, 1],
                [1, "f", 2, 6, 37, 1],
                [1, "f", 2, 6, 35, 1],
                [1, "f", 2, 6, 33, 1],
                [1, "f", 2, 6, 31, 1],
                [1, "f", 2, 6, 29, 1],
                [1, "f", 2, 6, 27, 1],
                [1, "f", 1, 6, 36, 1],
                [1, "f", 1, 6, 34, 1],
                [1, "f", 1, 6, 32, 1],
                [1, "f", 1, 6, 30, 1],
                [1, "f", 1, 6, 28, 1],
                [1, "f", 1, 6, 26, 1],
                [1, "f", 2, 6, 25, 1],
                [1, "f", 2, 6, 23, 1],
                [1, "f", 2, 6, 21, 1],
                [1, "f", 2, 6, 19, 1],
                [1, "f", 2, 6, 17, 1],
                [1, "f", 2, 6, 15, 1],
                [1, "f", 1, 6, 24, 1],
                [1, "f", 1, 6, 22, 1],
                [1, "f", 1, 6, 20, 1],
                [1, "f", 1, 6, 18, 1],
                [1, "f", 1, 6, 16, 1],
                [1, "f", 2, 6, 13, 1],
                [1, "f", 2, 6, 11, 1],
                [1, "f", 2, 6, 9, 1],
                [1, "f", 2, 6, 7, 1],
                [1, "f", 1, 6, 14, 1],
                [1, "f", 1, 6, 12, 1],
                [1, "f", 1, 6, 10, 1],
                [1, "f", 1, 6, 8, 1],
                [1, "f", 1, 6, 6, 1],
                [1, "f", 1, 8, 6, 1],
                [1, "f", 2, 7, 6, 1],
                [1, "f", 2, 9, 6, 1],
                [1, "f", 2, 11, 6, 1],
                [1, "f", 2, 13, 6, 1],
                [1, "f", 2, 15, 6, 1],
                [1, "f", 1, 10, 6, 1],
                [1, "f", 1, 12, 6, 1],
                [1, "f", 1, 14, 6, 1],
                [1, "f", 1, 16, 6, 1],
                [1, "f", 1, 18, 6, 1],
                [1, "f", 1, 20, 6, 1],
                [1, "f", 1, 22, 6, 1],
                [1, "f", 1, 24, 6, 1],
                [1, "f", 1, 26, 6, 1],
                [1, "f", 2, 17, 6, 1],
                [1, "f", 2, 19, 6, 1],
                [1, "f", 2, 21, 6, 1],
                [1, "f", 2, 23, 6, 1],
                [1, "f", 2, 25, 6, 1],
                [1, "f", 2, 27, 6, 1],
                [1, "f", 2, 29, 6, 1],
                [1, "f", 2, 31, 6, 1],
                [1, "f", 2, 33, 6, 1],
                [1, "f", 1, 28, 6, 1],
                [1, "f", 1, 30, 6, 1],
                [1, "f", 1, 32, 6, 1],
                [1, "f", 1, 34, 6, 1],
                [1, "f", 2, 67, 6, 1],
                [1, "f", 2, 69, 6, 1],
                [1, "f", 2, 71, 6, 1],
                [1, "f", 2, 73, 6, 1],
                [1, "f", 2, 75, 6, 1],
                [1, "f", 1, 68, 6, 1],
                [1, "f", 1, 70, 6, 1],
                [1, "f", 1, 72, 6, 1],
                [1, "f", 1, 74, 6, 1],
                [1, "f", 1, 76, 6, 1],
                [1, "f", 2, 77, 6, 1],
                [1, "f", 2, 79, 6, 1],
                [1, "f", 2, 81, 6, 1],
                [1, "f", 2, 83, 6, 1],
                [1, "f", 2, 85, 6, 1],
                [1, "f", 1, 78, 6, 1],
                [1, "f", 1, 80, 6, 1],
                [1, "f", 1, 82, 6, 1],
                [1, "f", 1, 84, 6, 1],
                [1, "f", 1, 86, 6, 1],
                [1, "f", 2, 87, 6, 1],
                [1, "f", 2, 89, 6, 1],
                [1, "f", 2, 91, 6, 1],
                [1, "f", 2, 93, 6, 1],
                [1, "f", 1, 88, 6, 1],
                [1, "f", 1, 90, 6, 1],
                [1, "f", 1, 92, 6, 1],
                [1, "f", 1, 94, 6, 1],
                [1, "f", 2, 95, 6, 1],
                [1, "f", 1, 95, 7, 1],
                [1, "f", 1, 83, 7, 1],
                [1, "f", 1, 81, 7, 1],
                [1, "f", 1, 79, 7, 1],
                [1, "f", 1, 77, 7, 1],
                [1, "f", 1, 75, 7, 1],
                [1, "f", 1, 73, 7, 1],
                [1, "f", 1, 71, 7, 1],
                [1, "f", 1, 69, 7, 1],
                [1, "f", 1, 33, 7, 1],
                [1, "f", 1, 31, 7, 1],
                [1, "f", 1, 29, 7, 1],
                [1, "f", 1, 27, 7, 1],
                [1, "f", 1, 25, 7, 1],
                [1, "f", 1, 23, 7, 1],
                [1, "f", 1, 21, 7, 1],
                [1, "f", 1, 19, 7, 1],
                [1, "f", 1, 17, 7, 1],
                [1, "f", 1, 15, 7, 1],
                [1, "f", 1, 13, 7, 1],
                [1, "f", 1, 11, 7, 1],
                [1, "f", 1, 9, 7, 1],
                [1, "f", 1, 7, 7, 1],
                [1, "s", 0, 7, 8, 1],
                [1, "t", 4, 7, 174, 0],
                [1, "t", 5, 7, 175, 0],
                [1, "t", 4, 7, 176, 0],
                [1, "b", 2, 7, 177, 0],
                [1, "t", 3, 94, 301, 0],
                [1, "b", 3, 95, 301, 0],
                [1, "t", 4, 96, 301, 0],
                [1, "t", 1, 97, 301, 0],
                [1, "t", 2, 98, 301, 0],
                [1, "t", 4, 99, 301, 0],
                [1, "t", 2, 100, 301, 0],
                [1, "t", 4, 96, 304, 0],
                [1, "t", 2, 96, 302, 0],
                [1, "t", 2, 97, 304, 0],
                [1, "t", 2, 96, 303, 0],
                [1, "t", 5, 97, 303, 0],
                [1, "t", 5, 98, 304, 0],
                [1, "b", 2, 97, 302, 0],
                [1, "b", 2, 99, 304, 0],
                [1, "t", 1, 98, 303, 0],
                [1, "t", 4, 98, 302, 0],
                [1, "t", 4, 99, 303, 0],
                [1, "t", 4, 100, 304, 0],
                [1, "t", 5, 99, 302, 0],
                [1, "t", 5, 101, 303, 0],
                [1, "t", 2, 100, 303, 0],
                [1, "t", 0, 100, 302, 0],
                [1, "t", 0, 101, 304, 0],
                [1, "t", 4, 102, 304, 0],
                [1, "f", 0, 94, 7, 1],
                [1, "f", 1, 93, 7, 1],
                [1, "f", 1, 92, 7, 1],
                [1, "f", 0, 91, 7, 1],
                [1, "f", 1, 90, 7, 1],
                [1, "f", 1, 89, 7, 1],
                [1, "f", 0, 88, 7, 1],
                [1, "f", 1, 87, 7, 1],
                [1, "f", 1, 86, 7, 1],
                [1, "f", 1, 85, 7, 1],
                [1, "f", 0, 84, 7, 1],
                [1, "f", 1, 82, 7, 1],
                [1, "f", 0, 80, 7, 1],
                [1, "f", 1, 78, 7, 1],
                [1, "f", 0, 76, 7, 1],
                [1, "f", 1, 74, 7, 1],
                [1, "f", 0, 72, 7, 1],
                [1, "f", 0, 70, 7, 1],
                [1, "f", 1, 68, 7, 1],
                [1, "f", 1, 32, 7, 1],
                [1, "f", 0, 30, 7, 1],
                [1, "f", 1, 28, 7, 1],
                [1, "f", 0, 26, 7, 1],
                [1, "f", 1, 24, 7, 1],
                [1, "f", 0, 22, 7, 1],
                [1, "f", 1, 20, 7, 1],
                [1, "f", 0, 18, 7, 1],
                [1, "f", 1, 16, 7, 1],
                [1, "f", 0, 14, 7, 1],
                [1, "f", 1, 12, 7, 1],
                [1, "f", 0, 10, 7, 1],
                [1, "f", 1, 8, 7, 1],
                [1, "s", 1, 7, 9, 1],
                [1, "f", 0, 95, 152, 1],
                [1, "f", 1, 95, 151, 1],
                [1, "f", 0, 95, 11, 1],
                [1, "f", 1, 95, 12, 1],
                [1, "f", 1, 95, 14, 1],
                [1, "f", 1, 95, 19, 1],
                [1, "f", 0, 95, 15, 1],
                [1, "f", 0, 95, 20, 1],
                [1, "f", 1, 95, 21, 1],
                [1, "f", 1, 95, 26, 1],
                [1, "f", 1, 95, 37, 1],
                [1, "f", 0, 95, 44, 1],
                [1, "f", 1, 95, 50, 1],
                [1, "f", 1, 95, 52, 1],
                [1, "f", 0, 95, 53, 1],
                [1, "f", 1, 95, 54, 1],
                [1, "f", 1, 95, 62, 1],
                [1, "f", 0, 95, 55, 1],
                [1, "f", 1, 95, 64, 1],
                [1, "f", 0, 95, 58, 1],
                [1, "f", 0, 95, 61, 1],
                [1, "f", 0, 95, 68, 1],
                [1, "f", 0, 95, 72, 1],
                [1, "f", 0, 95, 78, 1],
                [1, "f", 1, 95, 115, 1],
                [1, "f", 1, 95, 117, 1],
                [1, "f", 1, 95, 128, 1],
                [1, "f", 0, 95, 85, 1],
                [1, "f", 0, 95, 91, 1],
                [1, "f", 0, 95, 95, 1],
                [1, "f", 0, 95, 114, 1],
                [1, "f", 2, 95, 113, 1],
                [1, "f", 1, 95, 119, 1],
                [1, "f", 0, 95, 120, 1],
                [1, "f", 1, 95, 121, 1],
                [1, "f", 0, 95, 127, 1],
                [1, "f", 1, 95, 130, 1],
                [1, "f", 0, 95, 131, 1],
                [1, "f", 1, 95, 132, 1],
                [1, "f", 1, 95, 136, 1],
                [1, "f", 0, 95, 137, 1],
                [1, "f", 0, 95, 143, 1],
                [1, "f", 0, 95, 147, 1],
                [1, "f", 1, 95, 138, 1],
                [1, "f", 1, 95, 144, 1],
                [1, "f", 1, 95, 10, 1],
                [1, "f", 0, 95, 8, 1],
                [1, "f", 1, 95, 9, 1],
                [1, "f", 0, 95, 13, 1],
                [1, "f", 1, 95, 16, 1],
                [1, "f", 1, 95, 17, 1],
                [1, "f", 0, 95, 18, 1],
                [1, "f", 1, 95, 45, 1],
                [1, "f", 0, 95, 51, 1],
                [1, "f", 1, 95, 56, 1],
                [1, "f", 1, 95, 57, 1],
                [1, "f", 1, 95, 59, 1],
                [1, "f", 1, 95, 60, 1],
                [1, "f", 1, 95, 63, 1],
                [1, "f", 0, 95, 65, 1],
                [1, "f", 1, 95, 66, 1],
                [1, "f", 1, 95, 67, 1],
                [1, "f", 1, 95, 69, 1],
                [1, "f", 1, 95, 70, 1],
                [1, "f", 0, 95, 71, 1],
                [1, "f", 1, 95, 73, 1],
                [1, "f", 1, 95, 74, 1],
                [1, "f", 0, 95, 75, 1],
                [1, "f", 1, 95, 76, 1],
                [1, "f", 1, 95, 77, 1],
                [1, "f", 1, 95, 79, 1],
                [1, "f", 1, 95, 80, 1],
                [1, "f", 0, 95, 81, 1],
                [1, "f", 1, 95, 82, 1],
                [1, "f", 0, 95, 83, 1],
                [1, "f", 1, 95, 84, 1],
                [1, "f", 1, 95, 86, 1],
                [1, "f", 1, 95, 88, 1],
                [1, "f", 0, 95, 87, 1],
                [1, "f", 1, 95, 89, 1],
                [1, "f", 1, 95, 90, 1],
                [1, "f", 1, 95, 92, 1],
                [1, "f", 1, 95, 93, 1],
                [1, "f", 1, 95, 94, 1],
                [1, "f", 1, 95, 96, 1],
                [1, "f", 1, 95, 97, 1],
                [1, "f", 0, 95, 98, 1],
                [1, "f", 1, 95, 99, 1],
                [1, "f", 1, 95, 100, 1],
                [1, "f", 0, 95, 101, 1],
                [1, "f", 1, 95, 102, 1],
                [1, "f", 0, 95, 103, 1],
                [1, "f", 1, 95, 104, 1],
                [1, "f", 1, 95, 105, 1],
                [1, "f", 0, 95, 106, 1],
                [1, "f", 1, 95, 107, 1],
                [1, "f", 1, 95, 108, 1],
                [1, "f", 1, 95, 109, 1],
                [1, "f", 0, 95, 110, 1],
                [1, "f", 1, 95, 111, 1],
                [1, "f", 0, 95, 112, 1],
                [1, "f", 1, 95, 116, 1],
                [1, "f", 0, 95, 118, 1],
                [1, "f", 0, 95, 122, 1],
                [1, "f", 1, 95, 123, 1],
                [1, "f", 1, 95, 124, 1],
                [1, "f", 0, 95, 125, 1],
                [1, "f", 1, 95, 126, 1],
                [1, "f", 1, 95, 129, 1],
                [1, "f", 1, 95, 133, 1],
                [1, "f", 0, 95, 134, 1],
                [1, "f", 1, 95, 135, 1],
                [1, "f", 1, 95, 139, 1],
                [1, "f", 0, 95, 140, 1],
                [1, "f", 1, 95, 141, 1],
                [1, "f", 1, 95, 142, 1],
                [1, "f", 1, 95, 146, 1],
                [1, "f", 0, 95, 145, 1],
                [1, "f", 1, 95, 148, 1],
                [1, "f", 1, 95, 149, 1],
                [1, "f", 1, 95, 150, 1],
                [1, "f", 1, 95, 153, 1],
                [1, "cs", 0, 64, 9, 1],
                [1, "cs", 1, 64, 10, 1],
                [1, "cs", 2, 64, 16, 1],
                [1, "cs", 2, 64, 19, 1],
                [1, "cs", 0, 64, 20, 1],
                [1, "cs", 1, 64, 21, 1],
                [1, "cs", 2, 64, 22, 1],
                [1, "cs", 0, 64, 23, 1],
                [1, "cs", 2, 64, 24, 1],
                [1, "cs", 1, 64, 29, 1],
                [1, "cs", 2, 64, 30, 1],
                [1, "cs", 3, 64, 31, 1],
                [1, "cs", 0, 64, 32, 1],
                [1, "cs", 1, 64, 33, 1],
                [1, "cs", 2, 64, 34, 1],
                [1, "cs", 0, 64, 35, 1],
                [1, "cs", 2, 64, 8, 1],
                [1, "cs", 2, 65, 8, 1],
                [1, "cs", 1, 65, 9, 1],
                [1, "cs", 2, 65, 10, 1],
                [1, "cs", 3, 65, 11, 1],
                [1, "cs", 1, 65, 16, 1],
                [1, "cs", 0, 64, 17, 1],
                [1, "cs", 3, 65, 17, 1],
                [1, "cs", 2, 64, 18, 1],
                [1, "cs", 2, 65, 18, 1],
                [1, "cs", 0, 65, 19, 1],
                [1, "cs", 1, 65, 20, 1],
                [1, "cs", 3, 65, 21, 1],
                [1, "cs", 2, 65, 22, 1],
                [1, "cs", 3, 65, 23, 1],
                [1, "cs", 0, 65, 24, 1],
                [1, "cs", 2, 65, 29, 1],
                [1, "cs", 3, 65, 30, 1],
                [1, "cs", 0, 65, 31, 1],
                [1, "cs", 1, 65, 32, 1],
                [1, "cs", 2, 65, 33, 1],
                [1, "cs", 3, 65, 34, 1],
                [1, "cs", 2, 63, 9, 1],
                [1, "cs", 0, 62, 9, 1],
                [1, "cs", 2, 61, 9, 1],
                [1, "cs", 0, 60, 9, 1],
                [1, "cs", 2, 59, 9, 1],
                [1, "cs", 2, 58, 9, 1],
                [1, "cs", 0, 57, 9, 1],
                [1, "cs", 2, 56, 9, 1],
                [1, "cs", 2, 55, 9, 1],
                [1, "cs", 2, 54, 9, 1],
                [1, "cs", 0, 53, 9, 1],
                [1, "cs", 0, 51, 9, 1],
                [1, "cs", 2, 52, 9, 1],
                [1, "cs", 2, 50, 9, 1],
                [1, "cs", 2, 48, 9, 1],
                [1, "cs", 2, 49, 9, 1],
                [1, "cs", 0, 47, 9, 1],
                [1, "cs", 0, 45, 9, 1],
                [1, "cs", 0, 43, 9, 1],
                [1, "cs", 2, 46, 9, 1],
                [1, "cs", 2, 44, 9, 1],
                [1, "cs", 2, 42, 9, 1],
                [1, "cs", 2, 41, 9, 1],
                [1, "cs", 0, 40, 9, 1],
                [1, "cs", 2, 39, 9, 1],
                [1, "cs", 2, 38, 9, 1],
                [1, "cs", 0, 37, 9, 1],
                [1, "cs", 0, 63, 8, 1],
                [1, "cs", 2, 65, 7, 1],
                [1, "cs", 3, 64, 7, 1],
                [1, "cs", 2, 62, 8, 1],
                [1, "cs", 3, 61, 8, 1],
                [1, "cs", 1, 62, 7, 1],
                [1, "cs", 2, 63, 7, 1],
                [1, "cs", 0, 64, 6, 1],
                [1, "cs", 3, 65, 6, 1],
                [1, "cs", 2, 63, 6, 1],
                [1, "cs", 2, 62, 6, 1],
                [1, "cs", 2, 61, 6, 1],
                [1, "cs", 2, 60, 6, 1],
                [1, "cs", 2, 59, 6, 1],
                [1, "cs", 2, 61, 7, 1],
                [1, "cs", 0, 60, 7, 1],
                [1, "cs", 2, 60, 8, 1],
                [1, "cs", 2, 59, 7, 1],
                [1, "cs", 2, 59, 8, 1],
                [1, "cs", 1, 58, 8, 1],
                [1, "cs", 1, 57, 6, 1],
                [1, "cs", 1, 55, 7, 1],
                [1, "cs", 0, 56, 6, 1],
                [1, "cs", 2, 58, 6, 1],
                [1, "cs", 2, 58, 7, 1],
                [1, "cs", 2, 57, 7, 1],
                [1, "cs", 2, 56, 7, 1],
                [1, "cs", 2, 55, 6, 1],
                [1, "cs", 2, 57, 8, 1],
                [1, "cs", 2, 56, 8, 1],
                [1, "cs", 2, 55, 8, 1],
                [1, "cs", 0, 54, 8, 1],
                [1, "cs", 0, 50, 7, 1],
                [1, "cs", 0, 53, 6, 1],
                [1, "cs", 2, 54, 6, 1],
                [1, "cs", 2, 54, 7, 1],
                [1, "cs", 2, 53, 7, 1],
                [1, "cs", 2, 52, 7, 1],
                [1, "cs", 2, 52, 6, 1],
                [1, "cs", 1, 52, 8, 1],
                [1, "cs", 2, 53, 8, 1],
                [1, "cs", 2, 51, 8, 1],
                [1, "cs", 2, 51, 7, 1],
                [1, "cs", 2, 51, 6, 1],
                [1, "cs", 2, 50, 6, 1],
                [1, "cs", 2, 50, 8, 1],
                [1, "cs", 2, 49, 8, 1],
                [1, "cs", 2, 49, 7, 1],
                [1, "cs", 2, 49, 6, 1],
                [1, "cs", 0, 46, 7, 1],
                [1, "cs", 1, 48, 8, 1],
                [1, "cs", 1, 44, 7, 1],
                [1, "cs", 1, 41, 8, 1],
                [1, "cs", 2, 48, 7, 1],
                [1, "cs", 2, 48, 6, 1],
                [1, "cs", 2, 47, 6, 1],
                [1, "cs", 2, 47, 7, 1],
                [1, "cs", 2, 47, 8, 1],
                [1, "cs", 2, 46, 8, 1],
                [1, "cs", 2, 45, 8, 1],
                [1, "cs", 2, 45, 7, 1],
                [1, "cs", 2, 45, 6, 1],
                [1, "cs", 2, 46, 6, 1],
                [1, "cs", 2, 44, 6, 1],
                [1, "cs", 2, 44, 8, 1],
                [1, "cs", 2, 43, 8, 1],
                [1, "cs", 2, 43, 7, 1],
                [1, "cs", 2, 43, 6, 1],
                [1, "cs", 2, 42, 6, 1],
                [1, "cs", 2, 42, 7, 1],
                [1, "cs", 2, 42, 8, 1],
                [1, "cs", 2, 41, 7, 1],
                [1, "cs", 2, 41, 6, 1],
                [1, "cs", 2, 40, 6, 1],
                [1, "cs", 2, 40, 7, 1],
                [1, "cs", 2, 40, 8, 1],
                [1, "cs", 2, 39, 8, 1],
                [1, "cs", 0, 39, 7, 1],
                [1, "cs", 1, 38, 8, 1],
                [1, "cs", 2, 39, 6, 1],
                [1, "cs", 2, 38, 6, 1],
                [1, "cs", 2, 37, 6, 1],
                [1, "cs", 2, 38, 7, 1],
                [1, "cs", 2, 37, 7, 1],
                [1, "cs", 2, 37, 8, 1],
                [1, "cs", 2, 37, 10, 1],
                [1, "cs", 2, 38, 10, 1],
                [1, "cs", 0, 38, 11, 1],
                [1, "cs", 0, 38, 17, 1],
                [1, "cs", 1, 37, 18, 1],
                [1, "cs", 0, 38, 19, 1],
                [1, "cs", 2, 37, 11, 1],
                [1, "cs", 2, 37, 16, 1],
                [1, "cs", 2, 37, 17, 1],
                [1, "cs", 2, 38, 18, 1],
                [1, "cs", 2, 37, 19, 1],
                [1, "cs", 3, 38, 16, 1],
                [1, "cs", 0, 37, 21, 1],
                [1, "cs", 0, 38, 22, 1],
                [1, "cs", 0, 38, 24, 1],
                [1, "cs", 2, 37, 20, 1],
                [1, "cs", 2, 38, 20, 1],
                [1, "cs", 2, 38, 21, 1],
                [1, "cs", 1, 37, 23, 1],
                [1, "cs", 3, 37, 22, 1],
                [1, "cs", 3, 38, 23, 1],
                [1, "cs", 2, 37, 24, 1],
                [1, "cs", 0, 38, 30, 1],
                [1, "cs", 0, 38, 32, 1],
                [1, "cs", 0, 37, 31, 1],
                [1, "cs", 1, 38, 34, 1],
                [1, "cs", 1, 37, 29, 1],
                [1, "cs", 2, 38, 29, 1],
                [1, "cs", 2, 37, 30, 1],
                [1, "cs", 2, 38, 31, 1],
                [1, "cs", 2, 37, 32, 1],
                [1, "cs", 3, 38, 33, 1],
                [1, "cs", 3, 38, 35, 1],
                [1, "cs", 2, 37, 33, 1],
                [1, "cs", 2, 36, 8, 1],
                [1, "cs", 0, 36, 11, 1],
                [1, "cs", 0, 35, 9, 1],
                [1, "cs", 2, 36, 9, 1],
                [1, "cs", 2, 36, 10, 1],
                [1, "cs", 2, 35, 10, 1],
                [1, "cs", 1, 33, 8, 1],
                [1, "cs", 3, 34, 9, 1],
                [1, "cs", 3, 35, 8, 1],
                [1, "cs", 2, 34, 8, 1],
                [1, "cs", 0, 36, 7, 1],
                [1, "cs", 1, 34, 7, 1],
                [1, "cs", 2, 35, 7, 1],
                [1, "cs", 2, 35, 6, 1],
                [1, "cs", 2, 36, 6, 1],
                [1, "cs", 2, 68, 9, 1],
                [1, "cs", 2, 66, 10, 1],
                [1, "cs", 3, 66, 9, 1],
                [1, "cs", 0, 67, 9, 1],
                [1, "cs", 0, 66, 8, 1],
                [1, "cs", 2, 67, 8, 1],
                [1, "cs", 1, 68, 8, 1],
                [1, "cs", 1, 66, 11, 1],
                [1, "cs", 2, 67, 10, 1],
                [1, "cs", 0, 66, 6, 1],
                [1, "cs", 2, 66, 7, 1],
                [1, "cs", 2, 67, 7, 1],
                [1, "cs", 2, 69, 8, 1],
                [1, "cs", 2, 63, 32, 1],
                [1, "cs", 2, 62, 34, 1],
                [1, "cs", 2, 60, 35, 1],
                [1, "cs", 3, 59, 35, 1],
                [1, "cs", 0, 61, 35, 1],
                [1, "cs", 0, 63, 34, 1],
                [1, "cs", 2, 63, 33, 1],
                [1, "cs", 2, 63, 35, 1],
                [1, "cs", 2, 62, 35, 1],
                [1, "cs", 2, 58, 36, 1],
                [1, "cs", 1, 59, 36, 1],
                [1, "cs", 1, 62, 36, 1],
                [1, "cs", 2, 60, 36, 1],
                [1, "cs", 2, 61, 34, 1],
                [1, "cs", 3, 62, 33, 1],
                [1, "cs", 3, 63, 36, 1],
                [1, "cs", 3, 61, 36, 1],
                [1, "cs", 0, 42, 36, 1],
                [1, "cs", 1, 39, 36, 1],
                [1, "cs", 2, 41, 36, 1],
                [1, "cs", 3, 39, 35, 1],
                [1, "cs", 3, 40, 36, 1],
                [1, "cs", 3, 43, 36, 1],
                [1, "cs", 1, 40, 35, 1],
                [1, "cs", 2, 41, 35, 1],
                [1, "cs", 2, 40, 34, 1],
                [1, "cs", 2, 39, 34, 1],
                [1, "cs", 2, 39, 33, 1],
                [1, "cs", 2, 39, 32, 1],
                [1, "cs", 0, 40, 33, 1],
                [1, "cs", 2, 41, 34, 1],
                [1, "cs", 1, 44, 36, 1],
                [1, "cs", 3, 43, 35, 1],
                [1, "cs", 2, 42, 35, 1],
                [1, "cs", 0, 37, 34, 1],
                [1, "cs", 3, 59, 30, 1],
                [1, "cs", 0, 60, 29, 1],
                [1, "cs", 2, 60, 28, 1],
                [1, "cs", 3, 60, 27, 1],
                [1, "cs", 0, 60, 26, 1],
                [1, "cs", 2, 54, 25, 1],
                [1, "cs", 2, 48, 25, 1],
                [1, "cs", 2, 42, 26, 1],
                [1, "cs", 0, 55, 25, 1],
                [1, "cs", 2, 59, 26, 1],
                [1, "cs", 0, 43, 26, 1],
                [1, "cs", 1, 42, 27, 1],
                [1, "cs", 2, 42, 28, 1],
                [1, "cs", 2, 43, 30, 1],
                [1, "cs", 0, 42, 29, 1],
                [1, "cs", 0, 54, 24, 1],
                [1, "cs", 0, 48, 24, 1],
                [1, "cs", 2, 54, 23, 1],
                [1, "cs", 2, 48, 23, 1],
                [1, "cs", 2, 63, 22, 1],
                [1, "cs", 2, 63, 21, 1],
                [1, "cs", 2, 39, 21, 1],
                [1, "cs", 3, 57, 18, 1],
                [1, "cs", 2, 56, 18, 1],
                [1, "cs", 3, 51, 21, 1],
                [1, "cs", 0, 51, 20, 1],
                [1, "cs", 2, 51, 19, 1],
                [1, "cs", 3, 51, 18, 1],
                [1, "cs", 2, 63, 16, 1],
                [1, "cs", 2, 63, 10, 1],
                [1, "cs", 2, 56, 13, 1],
                [1, "cs", 3, 57, 13, 1],
                [1, "cs", 1, 45, 18, 1],
                [1, "cs", 2, 47, 18, 1],
                [1, "cs", 2, 46, 18, 1],
                [1, "cs", 0, 46, 13, 1],
                [1, "cs", 2, 45, 13, 1],
                [1, "cs", 2, 39, 10, 1],
                [1, "cs", 2, 39, 16, 1],
                [1, "cs", 2, 47, 17, 1],
                [1, "a", 0, 51, 15, 1],
                [1, "a", 1, 53, 14, 1],
                [1, "a", 1, 49, 14, 1],
                [1, "de", 8, 55, 15, 0],
                [1, "de", 9, 48, 28, 0],
                [1, "de", 10, 58, 26, 0],
                [1, "de", 11, 59, 29, 0],
                [1, "de", 11, 55, 34, 0],
                [1, "de", 10, 48, 33, 0],
                [1, "de", 9, 41, 32, 0],
                [1, "de", 9, 56, 24, 0],
                [1, "de", 9, 62, 16, 0],
                [1, "de", 9, 45, 11, 0],
                [1, "de", 9, 44, 17, 0],
                [1, "de", 10, 44, 13, 0],
                [1, "de", 10, 58, 13, 0],
                [1, "de", 10, 63, 31, 0],
                [1, "de", 8, 60, 30, 0],
                [1, "de", 8, 43, 26, 0],
                [1, "de", 10, 43, 29, 0],
                [1, "de", 10, 53, 29, 0],
                [1, "de", 10, 53, 24, 0],
                [1, "de", 9, 53, 19, 0],
                [1, "de", 11, 49, 19, 0],
                [1, "de", 10, 39, 26, 0],
                [1, "de", 9, 46, 24, 0],
                [1, "de", 9, 62, 10, 0],
                [1, "de", 8, 40, 14, 0],
                [1, "de", 32, 55, 35, 0],
                [1, "de", 32, 60, 33, 0],
                [1, "de", 32, 63, 28, 0],
                [1, "de", 32, 63, 24, 0],
                [1, "de", 32, 58, 22, 0],
                [1, "de", 32, 59, 17, 0],
                [1, "de", 32, 63, 13, 0],
                [1, "de", 32, 59, 10, 0],
                [1, "de", 32, 56, 12, 0],
                [1, "de", 32, 52, 17, 0],
                [1, "de", 32, 51, 14, 0],
                [1, "de", 32, 39, 12, 0],
                [1, "de", 32, 39, 18, 0],
                [1, "de", 32, 41, 25, 0],
                [1, "de", 32, 39, 30, 0],
                [1, "de", 32, 50, 29, 0],
                [1, "de", 32, 43, 34, 0],
                [1, "de", 32, 47, 34, 0],
                [1, "de", 31, 54, 33, 0],
                [1, "de", 31, 59, 24, 0],
                [1, "de", 31, 63, 19, 0],
                [1, "de", 31, 47, 15, 0],
                [1, "de", 31, 43, 17, 0],
                [1, "de", 31, 39, 27, 0],
                [1, "de", 31, 48, 27, 0],
                [1, "de", 31, 57, 27, 0],
                [1, "de", 32, 44, 27, 0],
                [1, "d", 0, 12, 13, 1],
                [1, "d", 0, 89, 13, 1],
                [1, "d", 1, 91, 21, 1],
                [1, "d", 1, 10, 22, 1],
                [1, "f", 2, 89, 18, 1],
                [1, "f", 0, 88, 19, 1],
                [1, "g", 1, 85, 22, 1],
                [1, "s", 1, 90, 29, 1],
                [1, "s", 1, 92, 15, 1],
                [1, "s", 0, 91, 31, 1],
                [1, "s", 2, 90, 38, 1],
                [1, "s", 0, 91, 42, 1],
                [1, "s", 0, 90, 49, 1],
                [1, "f", 1, 86, 43, 1],
                [1, "f", 0, 81, 45, 1],
                [1, "f", 2, 66, 44, 1],
                [1, "f", 2, 55, 49, 1],
                [1, "f", 1, 54, 50, 1],
                [1, "f", 2, 43, 45, 1],
                [1, "f", 2, 31, 48, 1],
                [1, "f", 1, 27, 39, 1],
                [1, "f", 1, 80, 46, 1],
                [1, "f", 1, 69, 48, 1],
                [1, "g", 0, 80, 40, 1],
                [1, "g", 2, 81, 40, 1],
                [1, "s", 2, 77, 39, 1],
                [1, "s", 0, 68, 43, 1],
                [1, "s", 2, 57, 41, 1],
                [1, "s", 1, 56, 42, 1],
                [1, "s", 1, 40, 41, 1],
                [1, "s", 2, 48, 48, 1],
                [1, "f", 2, 17, 12, 1],
                [1, "f", 0, 13, 31, 1],
                [1, "f", 1, 14, 32, 1],
                [1, "s", 0, 15, 27, 1],
                [1, "s", 0, 13, 39, 1],
                [1, "f", 2, 11, 17, 1],
                [1, "f", 1, 12, 18, 1],
                [1, "g", 2, 12, 25, 1],
                [1, "f", 0, 16, 45, 1],
                [1, "f", 1, 17, 46, 1],
                [1, "s", 1, 74, 48, 1],
                [1, "s", 1, 20, 47, 1],
                [1, "g", 0, 58, 59, 1],
                [1, "g", 0, 46, 72, 1],
                [1, "g", 0, 69, 79, 1],
                [1, "g", 0, 72, 74, 1],
                [1, "g", 0, 26, 88, 1],
                [1, "g", 0, 20, 74, 1],
                [1, "g", 0, 28, 67, 1],
                [1, "g", 0, 49, 86, 1],
                [1, "g", 0, 77, 90, 1],
                [1, "g", 0, 87, 72, 1],
                [1, "g", 0, 14, 85, 1],
                [1, "g", 1, 85, 97, 1],
                [1, "g", 1, 68, 104, 1],
                [1, "g", 1, 63, 91, 1],
                [1, "g", 1, 39, 90, 1],
                [1, "g", 1, 34, 99, 1],
                [1, "g", 1, 17, 103, 1],
                [1, "g", 2, 77, 60, 1],
                [1, "g", 2, 19, 56, 1],
                [1, "g", 2, 39, 60, 1],
                [1, "g", 2, 87, 57, 1],
                [1, "f", 0, 9, 62, 1],
                [1, "f", 0, 12, 81, 1],
                [1, "f", 0, 26, 59, 1],
                [1, "f", 0, 35, 53, 1],
                [1, "f", 0, 44, 58, 1],
                [1, "f", 0, 88, 62, 1],
                [1, "f", 0, 91, 82, 1],
                [1, "f", 0, 84, 85, 1],
                [1, "f", 0, 79, 69, 1],
                [1, "f", 0, 64, 71, 1],
                [1, "f", 0, 62, 83, 1],
                [1, "f", 0, 34, 81, 1],
                [1, "f", 0, 39, 71, 1],
                [1, "f", 0, 54, 94, 1],
                [1, "f", 1, 81, 70, 1],
                [1, "f", 1, 91, 72, 1],
                [1, "f", 1, 8, 91, 1],
                [1, "f", 1, 14, 81, 1],
                [1, "f", 1, 29, 79, 1],
                [1, "f", 1, 13, 65, 1],
                [1, "f", 1, 46, 97, 1],
                [1, "f", 1, 43, 73, 1],
                [1, "f", 1, 60, 69, 1],
                [1, "f", 1, 70, 96, 1],
                [1, "f", 1, 58, 84, 1],
                [1, "s", 1, 56, 76, 1],
                [1, "s", 1, 85, 74, 1],
                [1, "s", 0, 72, 71, 1],
                [1, "s", 0, 41, 62, 1],
                [1, "s", 0, 60, 61, 1],
                [1, "s", 0, 20, 66, 1],
                [1, "s", 0, 47, 83, 1],
                [1, "s", 0, 29, 86, 1],
                [1, "s", 0, 78, 92, 1],
                [1, "s", 0, 62, 102, 1],
                [1, "s", 0, 18, 95, 1],
                [1, "s", 2, 64, 101, 1],
                [1, "s", 2, 78, 84, 1],
                [1, "s", 2, 49, 83, 1],
                [1, "s", 2, 15, 76, 1],
                [1, "s", 2, 21, 84, 1],
                [1, "f", 1, 26, 94, 1],
                [1, "f", 2, 23, 96, 1],
                [1, "f", 2, 25, 72, 1],
                [1, "f", 2, 85, 77, 1],
                [1, "f", 2, 79, 95, 1],
                [1, "f", 2, 51, 65, 1],
                [1, "f", 2, 69, 60, 1],
                [1, "f", 1, 25, 105, 1],
                [1, "s", 1, 18, 68, 1],
                [1, "s", 0, 55, 76, 1],
                [1, "s", 0, 74, 59, 1],
                [1, "f", 1, 46, 142, 1],
                [1, "f", 1, 19, 140, 1],
                [1, "f", 1, 77, 137, 1],
                [1, "f", 0, 75, 137, 1],
                [1, "f", 0, 55, 138, 1],
                [1, "f", 0, 33, 127, 1],
                [1, "f", 0, 76, 121, 1],
                [1, "f", 0, 55, 121, 1],
                [1, "f", 0, 13, 123, 1],
                [1, "f", 0, 18, 141, 1],
                [1, "f", 0, 40, 137, 1],
                [1, "f", 2, 76, 142, 1],
                [1, "f", 2, 57, 140, 1],
                [1, "f", 2, 39, 138, 1],
                [1, "f", 2, 16, 143, 1],
                [1, "f", 2, 29, 131, 1],
                [1, "f", 0, 70, 150, 1],
                [1, "f", 0, 28, 146, 1],
                [1, "f", 0, 12, 132, 1],
                [1, "f", 0, 90, 129, 1],
                [1, "f", 1, 87, 131, 1],
                [1, "f", 0, 91, 143, 1],
                [1, "f", 2, 87, 145, 1],
                [1, "f", 1, 89, 141, 1],
                [1, "f", 1, 63, 130, 1],
                [1, "f", 1, 75, 122, 1],
                [1, "f", 1, 52, 124, 1],
                [1, "f", 1, 34, 127, 1],
                [1, "f", 1, 14, 123, 1],
                [1, "f", 1, 24, 122, 1],
                [1, "f", 0, 83, 108, 1],
                [1, "f", 0, 89, 118, 1],
                [1, "f", 0, 56, 107, 1],
                [1, "f", 0, 38, 113, 1],
                [1, "f", 0, 16, 110, 1],
                [1, "f", 1, 80, 105, 1],
                [1, "f", 1, 82, 109, 1],
                [1, "f", 1, 87, 118, 1],
                [1, "f", 1, 59, 110, 1],
                [1, "f", 1, 29, 111, 1],
                [1, "f", 2, 28, 112, 1],
                [1, "f", 2, 70, 112, 1],
                [1, "f", 2, 42, 111, 1],
                [1, "s", 0, 68, 157, 1],
                [1, "s", 0, 81, 158, 1],
                [1, "s", 0, 25, 172, 1],
                [1, "s", 0, 22, 161, 1],
                [1, "s", 0, 35, 152, 1],
                [1, "s", 0, 66, 144, 1],
                [1, "s", 0, 87, 145, 1],
                [1, "s", 0, 86, 145, 1],
                [1, "s", 0, 84, 135, 1],
                [1, "s", 0, 69, 133, 1],
                [1, "s", 0, 84, 122, 1],
                [1, "s", 0, 68, 121, 1],
                [1, "s", 0, 48, 124, 1],
                [1, "s", 0, 26, 129, 1],
                [1, "s", 0, 9, 127, 1],
                [1, "s", 0, 11, 144, 1],
                [1, "s", 0, 9, 109, 1],
                [1, "s", 0, 35, 101, 1],
                [1, "s", 0, 47, 109, 1],
                [1, "s", 0, 58, 111, 1],
                [1, "s", 0, 84, 110, 1],
                [1, "s", 0, 28, 114, 1],
                [1, "s", 1, 30, 116, 1],
                [1, "s", 1, 46, 112, 1],
                [1, "s", 1, 81, 111, 1],
                [1, "s", 1, 70, 123, 1],
                [1, "s", 1, 49, 127, 1],
                [1, "s", 1, 66, 134, 1],
                [1, "s", 1, 67, 144, 1],
                [1, "s", 1, 38, 152, 1],
                [1, "s", 1, 21, 164, 1],
                [1, "s", 1, 12, 147, 1],
                [1, "s", 1, 24, 130, 1],
                [1, "s", 1, 12, 125, 1],
                [1, "s", 1, 65, 158, 1],
                [1, "s", 1, 83, 167, 1],
                [1, "s", 1, 65, 167, 1],
                [1, "s", 1, 47, 164, 1],
                [1, "s", 1, 56, 168, 1],
                [1, "s", 2, 54, 169, 1],
                [1, "s", 2, 88, 170, 1],
                [1, "s", 2, 91, 162, 1],
                [1, "s", 2, 79, 149, 1],
                [1, "s", 2, 75, 144, 1],
                [1, "s", 2, 57, 150, 1],
                [1, "s", 2, 47, 143, 1],
                [1, "s", 2, 31, 145, 1],
                [1, "s", 2, 36, 138, 1],
                [1, "s", 2, 10, 163, 1],
                [1, "s", 2, 22, 142, 1],
                [1, "g", 2, 78, 132, 1],
                [1, "g", 1, 48, 135, 1],
                [1, "g", 2, 16, 136, 1],
                [1, "g", 0, 62, 92, 1],
                [1, "g", 2, 70, 80, 1],
                [1, "g", 2, 15, 86, 1],
                [1, "g", 2, 47, 75, 1],
                [1, "g", 2, 36, 89, 1],
                [1, "g", 2, 80, 90, 1],
                [1, "f", 1, 39, 118, 1],
                [1, "d", 2, 84, 54, 1],
                [1, "d", 2, 16, 54, 1],
                [1, "de", 7, 13, 13, 0],
                [1, "de", 5, 16, 28, 0],
                [1, "de", 5, 9, 25, 0],
                [1, "de", 5, 34, 41, 0],
                [1, "de", 4, 28, 40, 0],
                [1, "de", 6, 31, 47, 0],
                [1, "de", 6, 12, 39, 0],
                [1, "de", 4, 16, 47, 0],
                [1, "de", 4, 7, 46, 0],
                [1, "de", 6, 7, 33, 0],
                [1, "de", 6, 40, 42, 0],
                [1, "de", 7, 20, 48, 0],
                [1, "de", 7, 29, 59, 0],
                [1, "de", 6, 27, 58, 0],
                [1, "de", 6, 15, 54, 0],
                [1, "de", 5, 12, 66, 0],
                [1, "de", 5, 37, 53, 0],
                [1, "de", 4, 10, 63, 0],
                [1, "de", 7, 49, 48, 0],
                [1, "de", 7, 37, 63, 0],
                [1, "de", 6, 33, 68, 0],
                [1, "de", 6, 56, 52, 0],
                [1, "de", 5, 59, 58, 0],
                [1, "de", 6, 48, 58, 0],
                [1, "de", 4, 53, 63, 0],
                [1, "de", 4, 67, 44, 0],
                [1, "de", 5, 70, 49, 0],
                [1, "de", 5, 82, 55, 0],
                [1, "de", 5, 79, 41, 0],
                [1, "de", 5, 91, 29, 0],
                [1, "de", 7, 91, 43, 0],
                [1, "de", 6, 85, 44, 0],
                [1, "de", 6, 74, 60, 0],
                [1, "de", 6, 90, 8, 0],
                [1, "de", 5, 91, 15, 0],
                [1, "de", 4, 87, 20, 0],
                [1, "de", 7, 93, 11, 0],
                [1, "de", 6, 91, 21, 0],
                [1, "de", 6, 85, 35, 0],
                [1, "de", 5, 93, 58, 0],
                [1, "de", 5, 87, 63, 0],
                [1, "de", 7, 77, 62, 0],
                [1, "de", 6, 68, 61, 0],
                [1, "de", 5, 90, 73, 0],
                [1, "de", 4, 87, 71, 0],
                [1, "de", 7, 80, 71, 0],
                [1, "de", 7, 83, 77, 0],
                [1, "de", 7, 89, 83, 0],
                [1, "de", 4, 71, 80, 0],
                [1, "de", 4, 71, 70, 0],
                [1, "de", 5, 63, 72, 0],
                [1, "de", 4, 54, 75, 0],
                [1, "de", 5, 44, 83, 0],
                [1, "de", 5, 42, 74, 0],
                [1, "de", 5, 15, 81, 0],
                [1, "de", 4, 29, 80, 0],
                [1, "de", 4, 37, 90, 0],
                [1, "de", 4, 7, 75, 0],
                [1, "de", 6, 22, 74, 0],
                [1, "de", 6, 43, 95, 0],
                [1, "de", 6, 57, 85, 0],
                [1, "de", 6, 19, 94, 0],
                [1, "de", 6, 9, 92, 0],
                [1, "de", 5, 26, 89, 0],
                [1, "de", 5, 31, 112, 0],
                [1, "de", 5, 54, 108, 0],
                [1, "de", 5, 55, 95, 0],
                [1, "de", 5, 35, 104, 0],
                [1, "de", 5, 13, 110, 0],
                [1, "de", 7, 27, 107, 0],
                [1, "de", 7, 47, 99, 0],
                [1, "de", 7, 11, 104, 0],
                [1, "de", 7, 9, 111, 0],
                [1, "de", 7, 40, 114, 0],
                [1, "de", 7, 28, 117, 0],
                [1, "de", 7, 47, 113, 0],
                [1, "de", 7, 63, 104, 0],
                [1, "de", 4, 64, 92, 0],
                [1, "de", 6, 86, 97, 0],
                [1, "de", 5, 76, 91, 0],
                [1, "de", 5, 85, 86, 0],
                [1, "de", 6, 78, 83, 0],
                [1, "de", 6, 71, 97, 0],
                [1, "de", 4, 69, 105, 0],
                [1, "de", 4, 79, 104, 0],
                [1, "de", 4, 86, 109, 0],
                [1, "de", 4, 86, 118, 0],
                [1, "de", 5, 70, 113, 0],
                [1, "de", 6, 69, 121, 0],
                [1, "de", 6, 76, 122, 0],
                [1, "de", 7, 87, 130, 0],
                [1, "de", 4, 84, 123, 0],
                [1, "de", 4, 57, 121, 0],
                [1, "de", 5, 53, 125, 0],
                [1, "de", 5, 62, 131, 0],
                [1, "de", 6, 67, 143, 0],
                [1, "de", 5, 77, 143, 0],
                [1, "de", 5, 85, 136, 0],
                [1, "de", 6, 87, 147, 0],
                [1, "de", 6, 92, 140, 0],
                [1, "de", 4, 93, 127, 0],
                [1, "de", 5, 93, 106, 0],
                [1, "de", 5, 45, 144, 0],
                [1, "de", 4, 41, 139, 0],
                [1, "de", 4, 54, 138, 0],
                [1, "de", 6, 29, 145, 0],
                [1, "de", 6, 29, 132, 0],
                [1, "de", 6, 35, 127, 0],
                [1, "de", 6, 64, 142, 0],
                [1, "de", 5, 23, 131, 0],
                [1, "de", 5, 9, 134, 0],
                [1, "de", 6, 11, 121, 0],
                [1, "de", 4, 26, 121, 0],
                [1, "de", 35, 58, 150, 0],
                [1, "de", 33, 48, 156, 0],
                [1, "de", 33, 25, 158, 0],
                [1, "de", 33, 36, 154, 0],
                [1, "de", 34, 9, 154, 0],
                [1, "de", 34, 13, 148, 0],
                [1, "de", 34, 21, 142, 0],
                [1, "de", 34, 38, 139, 0],
                [1, "de", 34, 47, 144, 0],
                [1, "de", 34, 68, 142, 0],
                [1, "de", 36, 70, 135, 0],
                [1, "de", 36, 64, 132, 0],
                [1, "de", 36, 86, 134, 0],
                [1, "de", 36, 90, 141, 0],
                [1, "de", 36, 93, 131, 0],
                [1, "de", 36, 91, 125, 0],
                [1, "de", 36, 76, 123, 0],
                [1, "de", 33, 82, 122, 0],
                [1, "de", 35, 56, 122, 0],
                [1, "de", 35, 40, 119, 0],
                [1, "de", 35, 17, 112, 0],
                [1, "de", 35, 37, 102, 0],
                [1, "de", 33, 18, 97, 0],
                [1, "de", 34, 10, 83, 0],
                [1, "de", 33, 19, 73, 0],
                [1, "de", 33, 10, 60, 0],
                [1, "de", 35, 24, 60, 0],
                [1, "de", 36, 14, 45, 0],
                [1, "de", 36, 21, 42, 0],
                [1, "de", 35, 8, 32, 0],
                [1, "de", 33, 9, 24, 0],
                [1, "de", 35, 35, 27, 0],
                [1, "de", 33, 56, 35, 0],
                [1, "de", 36, 53, 36, 0],
                [1, "de", 33, 45, 35, 0],
                [1, "de", 35, 53, 39, 0],
                [1, "de", 36, 57, 30, 0],
                [1, "de", 33, 86, 108, 0],
                [1, "de", 33, 68, 112, 0],
                [1, "de", 33, 49, 109, 0],
                [1, "de", 33, 46, 95, 0],
                [1, "de", 33, 90, 76, 0],
                [1, "de", 36, 76, 83, 0],
                [1, "de", 36, 70, 72, 0],
                [1, "de", 36, 78, 63, 0],
                [1, "de", 36, 90, 64, 0],
                [1, "de", 36, 60, 70, 0],
                [1, "de", 35, 75, 90, 0],
                [1, "de", 35, 81, 58, 0],
                [1, "de", 35, 91, 51, 0],
                [1, "de", 35, 93, 56, 0],
                [1, "de", 35, 61, 60, 0],
                [1, "de", 35, 66, 46, 0],
                [1, "de", 33, 90, 19, 0],
                [1, "de", 34, 92, 9, 0],
                [1, "de", 35, 75, 39, 0],
                [1, "de", 35, 67, 42, 0],
                [1, "de", 35, 93, 37, 0],
                [1, "de", 36, 89, 28, 0],
                [1, "de", 36, 42, 61, 0],
                [1, "de", 33, 49, 50, 0],
                [1, "de", 33, 44, 75, 0],
                [1, "de", 33, 46, 85, 0],
                [1, "de", 33, 64, 84, 0],
                [1, "de", 33, 56, 94, 0],
                [1, "de", 33, 25, 90, 0],
                [1, "de", 33, 31, 69, 0],
                [1, "de", 35, 34, 54, 0],
                [1, "de", 35, 29, 47, 0],
                [1, "de", 36, 42, 41, 0],
                [1, "de", 36, 29, 34, 0],
                [1, "de", 35, 20, 55, 0],
                [1, "de", 35, 14, 52, 0],
                [1, "s", 2, 12, 171, 1],
                [1, "r", 20, 188, 0],
                [1, "r", 21, 188, 0],
                [1, "r", 22, 188, 0],
                [1, "r", 23, 188, 0],
                [1, "r", 24, 188, 0],
                [1, "r", 25, 189, 0],
                [1, "r", 24, 189, 0],
                [1, "r", 23, 189, 0],
                [1, "r", 22, 189, 0],
                [1, "r", 21, 189, 0],
                [1, "r", 20, 189, 0],
                [1, "r", 19, 189, 0],
                [1, "r", 19, 190, 0],
                [1, "r", 19, 191, 0],
                [1, "r", 20, 191, 0],
                [1, "r", 21, 191, 0],
                [1, "r", 22, 191, 0],
                [1, "r", 24, 191, 0],
                [1, "r", 23, 191, 0],
                [1, "r", 25, 191, 0],
                [1, "r", 25, 190, 0],
                [1, "r", 24, 190, 0],
                [1, "r", 23, 190, 0],
                [1, "r", 22, 190, 0],
                [1, "r", 21, 190, 0],
                [1, "r", 20, 190, 0],
                [1, "r", 26, 190, 0],
                [1, "r", 26, 191, 0],
                [1, "r", 24, 193, 0],
                [1, "r", 23, 193, 0],
                [1, "r", 22, 193, 0],
                [1, "r", 20, 192, 0],
                [1, "r", 21, 192, 0],
                [1, "r", 22, 192, 0],
                [1, "r", 23, 192, 0],
                [1, "r", 24, 192, 0],
                [1, "r", 25, 192, 0],
                [1, "r", 53, 199, 0],
                [1, "r", 52, 200, 0],
                [1, "r", 54, 199, 0],
                [1, "r", 55, 199, 0],
                [1, "r", 55, 200, 0],
                [1, "r", 54, 200, 0],
                [1, "r", 53, 200, 0],
                [1, "r", 51, 200, 0],
                [1, "r", 56, 200, 0],
                [1, "r", 55, 201, 0],
                [1, "r", 54, 201, 0],
                [1, "r", 55, 202, 0],
                [1, "r", 54, 203, 0],
                [1, "r", 54, 204, 0],
                [1, "r", 54, 202, 0],
                [1, "r", 53, 202, 0],
                [1, "r", 52, 202, 0],
                [1, "r", 53, 201, 0],
                [1, "r", 52, 201, 0],
                [1, "r", 51, 201, 0],
                [1, "r", 51, 202, 0],
                [1, "r", 50, 202, 0],
                [1, "r", 50, 201, 0],
                [1, "r", 56, 201, 0],
                [1, "r", 53, 203, 0],
                [1, "r", 52, 203, 0],
                [1, "r", 51, 203, 0],
                [1, "r", 56, 202, 0],
                [1, "r", 55, 203, 0],
                [1, "r", 53, 204, 0],
                [1, "r", 52, 204, 0],
                [1, "r", 55, 204, 0],
                [1, "r", 56, 203, 0],
                [1, "r", 56, 244, 0],
                [1, "r", 54, 246, 0],
                [1, "r", 50, 248, 0],
                [1, "r", 48, 248, 0],
                [1, "r", 43, 248, 0],
                [1, "r", 45, 238, 0],
                [1, "r", 44, 238, 0],
                [1, "r", 43, 238, 0],
                [1, "r", 46, 238, 0],
                [1, "r", 47, 238, 0],
                [1, "r", 48, 238, 0],
                [1, "r", 49, 238, 0],
                [1, "r", 50, 238, 0],
                [1, "r", 51, 238, 0],
                [1, "r", 52, 238, 0],
                [1, "r", 53, 238, 0],
                [1, "r", 54, 239, 0],
                [1, "r", 53, 240, 0],
                [1, "r", 53, 239, 0],
                [1, "r", 52, 239, 0],
                [1, "r", 51, 239, 0],
                [1, "r", 50, 239, 0],
                [1, "r", 49, 239, 0],
                [1, "r", 48, 239, 0],
                [1, "r", 47, 239, 0],
                [1, "r", 46, 239, 0],
                [1, "r", 45, 239, 0],
                [1, "r", 44, 239, 0],
                [1, "r", 43, 239, 0],
                [1, "r", 42, 239, 0],
                [1, "r", 41, 240, 0],
                [1, "r", 42, 240, 0],
                [1, "r", 43, 240, 0],
                [1, "r", 44, 240, 0],
                [1, "r", 45, 240, 0],
                [1, "r", 46, 240, 0],
                [1, "r", 47, 240, 0],
                [1, "r", 48, 240, 0],
                [1, "r", 49, 240, 0],
                [1, "r", 50, 240, 0],
                [1, "r", 51, 240, 0],
                [1, "r", 52, 240, 0],
                [1, "r", 54, 240, 0],
                [1, "r", 55, 240, 0],
                [1, "r", 56, 241, 0],
                [1, "r", 55, 241, 0],
                [1, "r", 54, 241, 0],
                [1, "r", 53, 241, 0],
                [1, "r", 52, 241, 0],
                [1, "r", 51, 241, 0],
                [1, "r", 49, 241, 0],
                [1, "r", 50, 241, 0],
                [1, "r", 48, 241, 0],
                [1, "r", 47, 241, 0],
                [1, "r", 46, 241, 0],
                [1, "r", 45, 241, 0],
                [1, "r", 44, 241, 0],
                [1, "r", 43, 241, 0],
                [1, "r", 42, 241, 0],
                [1, "r", 41, 241, 0],
                [1, "r", 40, 242, 0],
                [1, "r", 41, 242, 0],
                [1, "r", 42, 242, 0],
                [1, "r", 43, 242, 0],
                [1, "r", 44, 242, 0],
                [1, "r", 45, 242, 0],
                [1, "r", 46, 242, 0],
                [1, "r", 47, 242, 0],
                [1, "r", 48, 242, 0],
                [1, "r", 49, 242, 0],
                [1, "r", 50, 242, 0],
                [1, "r", 51, 242, 0],
                [1, "r", 52, 242, 0],
                [1, "r", 53, 242, 0],
                [1, "r", 54, 242, 0],
                [1, "r", 55, 242, 0],
                [1, "r", 56, 242, 0],
                [1, "r", 56, 243, 0],
                [1, "r", 55, 243, 0],
                [1, "r", 54, 243, 0],
                [1, "r", 53, 243, 0],
                [1, "r", 52, 243, 0],
                [1, "r", 51, 243, 0],
                [1, "r", 50, 243, 0],
                [1, "r", 49, 243, 0],
                [1, "r", 48, 243, 0],
                [1, "r", 47, 243, 0],
                [1, "r", 46, 243, 0],
                [1, "r", 45, 243, 0],
                [1, "r", 44, 243, 0],
                [1, "r", 43, 243, 0],
                [1, "r", 42, 243, 0],
                [1, "r", 41, 243, 0],
                [1, "r", 40, 243, 0],
                [1, "r", 40, 244, 0],
                [1, "r", 41, 244, 0],
                [1, "r", 43, 244, 0],
                [1, "r", 44, 244, 0],
                [1, "r", 45, 244, 0],
                [1, "r", 46, 244, 0],
                [1, "r", 47, 244, 0],
                [1, "r", 48, 244, 0],
                [1, "r", 49, 244, 0],
                [1, "r", 50, 244, 0],
                [1, "r", 51, 244, 0],
                [1, "r", 52, 244, 0],
                [1, "r", 53, 244, 0],
                [1, "r", 54, 244, 0],
                [1, "r", 55, 244, 0],
                [1, "r", 42, 244, 0],
                [1, "r", 40, 245, 0],
                [1, "r", 41, 245, 0],
                [1, "r", 42, 245, 0],
                [1, "r", 43, 245, 0],
                [1, "r", 44, 245, 0],
                [1, "r", 45, 245, 0],
                [1, "r", 46, 245, 0],
                [1, "r", 47, 245, 0],
                [1, "r", 48, 245, 0],
                [1, "r", 49, 245, 0],
                [1, "r", 50, 245, 0],
                [1, "r", 51, 245, 0],
                [1, "r", 52, 246, 0],
                [1, "r", 52, 245, 0],
                [1, "r", 53, 245, 0],
                [1, "r", 54, 245, 0],
                [1, "r", 55, 245, 0],
                [1, "r", 53, 246, 0],
                [1, "r", 51, 246, 0],
                [1, "r", 50, 246, 0],
                [1, "r", 49, 246, 0],
                [1, "r", 48, 246, 0],
                [1, "r", 47, 246, 0],
                [1, "r", 45, 246, 0],
                [1, "r", 46, 246, 0],
                [1, "r", 44, 246, 0],
                [1, "r", 43, 246, 0],
                [1, "r", 42, 246, 0],
                [1, "r", 41, 246, 0],
                [1, "r", 42, 247, 0],
                [1, "r", 43, 247, 0],
                [1, "r", 44, 247, 0],
                [1, "r", 45, 247, 0],
                [1, "r", 46, 247, 0],
                [1, "r", 47, 247, 0],
                [1, "r", 48, 247, 0],
                [1, "r", 50, 247, 0],
                [1, "r", 51, 247, 0],
                [1, "r", 52, 247, 0],
                [1, "r", 53, 247, 0],
                [1, "r", 54, 247, 0],
                [1, "r", 49, 247, 0],
                [1, "r", 49, 248, 0],
                [1, "r", 47, 248, 0],
                [1, "r", 46, 248, 0],
                [1, "r", 45, 248, 0],
                [1, "r", 51, 248, 0],
                [1, "r", 55, 246, 1],
                [1, "r", 55, 247, 1],
                [1, "r", 56, 247, 1],
                [1, "r", 56, 248, 1],
                [1, "r", 95, 270, 1],
                [1, "r", 93, 270, 1],
                [1, "r", 94, 270, 1],
                [1, "r", 95, 271, 1],
                [1, "r", 94, 271, 1],
                [1, "r", 93, 271, 1],
                [1, "r", 94, 282, 1],
                [1, "r", 93, 282, 1],
                [1, "r", 93, 281, 1],
                [1, "r", 92, 281, 1],
                [1, "r", 92, 280, 1],
                [1, "r", 91, 280, 1],
                [1, "r", 90, 279, 1],
                [1, "r", 95, 275, 1],
                [1, "r", 95, 274, 1],
                [1, "r", 95, 273, 1],
                [1, "r", 95, 272, 1],
                [1, "r", 94, 274, 1],
                [1, "r", 94, 273, 1],
                [1, "r", 94, 272, 1],
                [1, "r", 93, 272, 1],
                [1, "r", 93, 273, 1],
                [1, "r", 93, 274, 1],
                [1, "r", 92, 273, 1],
                [1, "r", 92, 272, 1],
                [1, "r", 92, 270, 1],
                [1, "r", 92, 271, 1],
                [1, "r", 92, 269, 1],
                [1, "r", 90, 269, 1],
                [1, "r", 91, 269, 1],
                [1, "r", 91, 271, 1],
                [1, "r", 91, 270, 1],
                [1, "r", 95, 278, 1],
                [1, "r", 95, 277, 1],
                [1, "r", 95, 276, 1],
                [1, "r", 94, 276, 1],
                [1, "r", 94, 275, 1],
                [1, "r", 93, 275, 1],
                [1, "r", 92, 274, 1],
                [1, "r", 92, 275, 1],
                [1, "r", 91, 275, 1],
                [1, "r", 90, 275, 1],
                [1, "r", 89, 274, 1],
                [1, "r", 90, 274, 1],
                [1, "r", 89, 275, 1],
                [1, "r", 88, 274, 1],
                [1, "r", 88, 273, 1],
                [1, "r", 86, 272, 1],
                [1, "r", 85, 271, 1],
                [1, "r", 86, 271, 1],
                [1, "r", 87, 272, 1],
                [1, "r", 55, 248, 1],
                [1, "r", 54, 248, 1],
                [1, "r", 56, 249, 1],
                [1, "r", 55, 249, 1],
                [1, "r", 55, 250, 1],
                [1, "r", 56, 250, 1],
                [1, "r", 57, 250, 1],
                [1, "r", 57, 249, 1],
                [1, "r", 59, 250, 1],
                [1, "r", 58, 250, 1],
                [1, "r", 60, 250, 1],
                [1, "r", 61, 251, 1],
                [1, "r", 60, 251, 1],
                [1, "r", 62, 251, 1],
                [1, "r", 62, 252, 1],
                [1, "r", 63, 252, 1],
                [1, "r", 58, 251, 1],
                [1, "r", 57, 251, 1],
                [1, "r", 56, 251, 1],
                [1, "r", 58, 252, 1],
                [1, "r", 57, 252, 1],
                [1, "r", 57, 253, 1],
                [1, "r", 58, 253, 1],
                [1, "r", 58, 254, 1],
                [1, "r", 59, 255, 1],
                [1, "r", 58, 255, 1],
                [1, "r", 57, 254, 1],
                [1, "r", 56, 252, 1],
                [1, "r", 55, 251, 1],
                [1, "r", 60, 255, 1],
                [1, "r", 61, 255, 1],
                [1, "r", 61, 256, 1],
                [1, "r", 60, 256, 1],
                [1, "r", 62, 256, 1],
                [1, "r", 62, 257, 1],
                [1, "r", 61, 257, 1],
                [1, "r", 64, 253, 1],
                [1, "r", 64, 254, 1],
                [1, "r", 65, 254, 1],
                [1, "r", 61, 250, 1],
                [1, "r", 64, 252, 1],
                [1, "r", 65, 253, 1],
                [1, "r", 66, 254, 1],
                [1, "r", 65, 255, 1],
                [1, "r", 64, 255, 1],
                [1, "r", 64, 256, 1],
                [1, "r", 65, 256, 1],
                [1, "r", 65, 257, 1],
                [1, "r", 64, 257, 1],
                [1, "r", 63, 257, 1],
                [1, "r", 62, 258, 1],
                [1, "r", 63, 258, 1],
                [1, "r", 64, 258, 1],
                [1, "r", 66, 255, 1],
                [1, "r", 66, 256, 1],
                [1, "r", 66, 257, 1],
                [1, "r", 66, 258, 1],
                [1, "r", 65, 258, 1],
                [1, "r", 67, 258, 1],
                [1, "r", 67, 257, 1],
                [1, "r", 67, 259, 1],
                [1, "r", 66, 259, 1],
                [1, "r", 65, 259, 1],
                [1, "r", 56, 246, 1],
                [1, "r", 56, 245, 1],
                [1, "r", 68, 258, 1],
                [1, "r", 68, 259, 1],
                [1, "r", 68, 260, 1],
                [1, "r", 69, 260, 1],
                [1, "r", 69, 261, 1],
                [1, "r", 70, 261, 1],
                [1, "r", 71, 261, 1],
                [1, "r", 67, 260, 1],
                [1, "r", 89, 269, 1],
                [1, "r", 89, 268, 1],
                [1, "r", 90, 268, 1],
                [1, "r", 82, 267, 1],
                [1, "r", 83, 267, 1],
                [1, "r", 80, 266, 1],
                [1, "r", 81, 266, 1],
                [1, "r", 81, 267, 1],
                [1, "r", 79, 266, 1],
                [1, "r", 78, 265, 1],
                [1, "r", 77, 265, 1],
                [1, "r", 76, 264, 1],
                [1, "r", 75, 264, 1],
                [1, "r", 75, 263, 1],
                [1, "r", 74, 263, 1],
                [1, "r", 74, 262, 1],
                [1, "r", 72, 262, 1],
                [1, "r", 73, 262, 1],
                [1, "r", 71, 262, 1],
                [1, "r", 85, 270, 1],
                [1, "r", 84, 270, 1],
                [1, "r", 84, 269, 1],
                [1, "r", 83, 269, 1],
                [1, "r", 82, 269, 1],
                [1, "r", 81, 269, 1],
                [1, "r", 81, 268, 1],
                [1, "r", 82, 268, 1],
                [1, "r", 83, 268, 1],
                [1, "r", 80, 268, 1],
                [1, "r", 80, 267, 1],
                [1, "r", 79, 267, 1],
                [1, "r", 78, 266, 1],
                [1, "r", 76, 265, 1],
                [1, "r", 75, 262, 1],
                [1, "r", 90, 280, 1],
                [1, "r", 89, 280, 1],
                [1, "r", 89, 279, 1],
                [1, "r", 88, 279, 1],
                [1, "r", 88, 278, 1],
                [1, "r", 87, 277, 1],
                [1, "r", 86, 276, 1],
                [1, "r", 86, 275, 1],
                [1, "r", 86, 274, 1],
                [1, "r", 86, 273, 1],
                [1, "r", 85, 273, 1],
                [1, "r", 85, 272, 1],
                [1, "r", 85, 274, 1],
                [1, "r", 86, 277, 1],
                [1, "r", 87, 278, 1],
                [1, "r", 84, 271, 1],
                [1, "r", 83, 270, 1],
                [1, "r", 87, 273, 1],
                [1, "r", 91, 274, 1],
                [1, "r", 89, 273, 1],
                [1, "r", 88, 272, 1],
                [1, "r", 91, 281, 1],
                [1, "r", 92, 282, 1],
                [1, "r", 88, 280, 1],
                [1, "r", 87, 279, 1],
                [1, "r", 85, 275, 1],
                [1, "r", 84, 273, 1],
                [1, "r", 84, 272, 1],
                [1, "r", 83, 271, 1],
                [1, "r", 82, 270, 1],
                [1, "r", 84, 267, 0],
                [1, "r", 85, 267, 0],
                [1, "r", 76, 262, 0],
                [1, "r", 77, 262, 0],
                [1, "r", 88, 268, 0],
                [1, "r", 78, 262, 0],
                [1, "r", 79, 262, 0],
                [1, "r", 80, 262, 0],
                [1, "r", 80, 263, 0],
                [1, "r", 81, 263, 0],
                [1, "r", 82, 263, 0],
                [1, "r", 83, 263, 0],
                [1, "r", 84, 263, 0],
                [1, "r", 85, 263, 0],
                [1, "r", 88, 262, 0],
                [1, "r", 89, 262, 0],
                [1, "r", 90, 262, 0],
                [1, "r", 87, 262, 0],
                [1, "r", 86, 262, 0],
                [1, "r", 86, 263, 0],
                [1, "r", 87, 263, 0],
                [1, "r", 91, 262, 0],
                [1, "r", 95, 262, 0],
                [1, "r", 94, 262, 0],
                [1, "r", 86, 267, 0],
                [1, "r", 87, 267, 0],
                [1, "r", 87, 268, 0],
                [1, "r", 86, 268, 0],
                [1, "r", 74, 189, 0],
                [1, "r", 75, 189, 0],
                [1, "r", 76, 189, 0],
                [1, "r", 77, 189, 0],
                [1, "r", 78, 190, 0],
                [1, "r", 77, 190, 0],
                [1, "r", 75, 190, 0],
                [1, "r", 76, 190, 0],
                [1, "r", 74, 190, 0],
                [1, "r", 73, 190, 0],
                [1, "r", 78, 191, 0],
                [1, "r", 76, 191, 0],
                [1, "r", 77, 191, 0],
                [1, "r", 75, 191, 0],
                [1, "r", 74, 191, 0],
                [1, "r", 78, 192, 0],
                [1, "r", 77, 192, 0],
                [1, "r", 76, 192, 0],
                [1, "r", 75, 192, 0],
                [1, "r", 74, 192, 0],
                [1, "r", 73, 191, 0],
                [1, "f", 1, 96, 22, 1],
                [1, "s", 1, 97, 22, 1],
                [1, "f", 1, 98, 22, 1],
                [1, "s", 0, 99, 22, 1],
                [1, "s", 1, 100, 21, 1],
                [1, "s", 1, 96, 49, 1],
                [1, "s", 1, 100, 50, 1],
                [1, "s", 0, 99, 49, 1],
                [1, "s", 0, 97, 49, 1],
                [1, "f", 1, 98, 49, 1],
                [1, "r", 70, 218, 0],
                [1, "r", 71, 218, 0],
                [1, "r", 72, 218, 0],
                [1, "r", 73, 218, 0],
                [1, "r", 74, 219, 0],
                [1, "r", 73, 219, 0],
                [1, "r", 72, 219, 0],
                [1, "r", 71, 219, 0],
                [1, "r", 70, 219, 0],
                [1, "r", 73, 220, 0],
                [1, "r", 72, 220, 0],
                [1, "r", 71, 220, 0],
                [1, "r", 72, 221, 0],
                [1, "r", 71, 221, 0],
                [1, "r", 70, 221, 0],
                [1, "r", 69, 221, 0],
                [1, "r", 68, 221, 0],
                [1, "r", 70, 220, 0],
                [1, "r", 69, 220, 0],
                [1, "r", 69, 219, 0],
                [1, "r", 68, 220, 0],
                [1, "r", 73, 221, 0],
                [1, "r", 73, 222, 0],
                [1, "r", 71, 222, 0],
                [1, "r", 72, 222, 0],
                [1, "r", 74, 221, 0],
                [1, "r", 74, 220, 0],
                [1, "r", 75, 220, 0],
                [1, "r", 75, 221, 0],
                [1, "r", 70, 222, 0],
                [1, "r", 69, 222, 0],
                [1, "r", 29, 217, 0],
                [1, "r", 30, 217, 0],
                [1, "r", 31, 217, 0],
                [1, "r", 32, 217, 0],
                [1, "r", 31, 219, 0],
                [1, "r", 30, 219, 0],
                [1, "r", 29, 219, 0],
                [1, "r", 27, 219, 0],
                [1, "r", 25, 219, 0],
                [1, "r", 26, 219, 0],
                [1, "r", 28, 219, 0],
                [1, "r", 26, 218, 0],
                [1, "r", 27, 218, 0],
                [1, "r", 28, 218, 0],
                [1, "r", 29, 218, 0],
                [1, "r", 30, 218, 0],
                [1, "r", 28, 217, 0],
                [1, "r", 26, 217, 0],
                [1, "r", 27, 217, 0],
                [1, "r", 28, 216, 0],
                [1, "r", 29, 216, 0],
                [1, "r", 30, 216, 0],
                [1, "r", 31, 218, 0],
                [1, "r", 32, 218, 0],
                [1, "r", 31, 216, 0],
                [1, "r", 31, 221, 0],
                [1, "r", 31, 220, 0],
                [1, "r", 30, 220, 0],
                [1, "r", 29, 220, 0],
                [1, "r", 28, 220, 0],
                [1, "r", 27, 220, 0],
                [1, "r", 26, 220, 0],
                [1, "r", 25, 218, 0],
                [1, "r", 27, 221, 0],
                [1, "r", 28, 221, 0],
                [1, "r", 29, 221, 0],
                [1, "r", 30, 221, 0],
                [1, "r", 32, 220, 0],
                [1, "r", 32, 219, 0],
                [1, "r", 33, 218, 0],
                [1, "r", 33, 219, 0],
                [1, "r", 75, 238, 0],
                [1, "r", 76, 238, 0],
                [1, "r", 77, 239, 0],
                [1, "r", 76, 239, 0],
                [1, "r", 75, 239, 0],
                [1, "r", 74, 239, 0],
                [1, "r", 76, 240, 0],
                [1, "r", 77, 240, 0],
                [1, "r", 78, 240, 0],
                [1, "r", 77, 241, 0],
                [1, "r", 76, 241, 0],
                [1, "r", 75, 241, 0],
                [1, "r", 75, 240, 0],
                [1, "r", 74, 240, 0],
                [1, "r", 78, 239, 0],
                [1, "r", 77, 238, 0],
                [1, "r", 18, 253, 0],
                [1, "r", 19, 252, 0],
                [1, "r", 20, 252, 0],
                [1, "r", 21, 253, 0],
                [1, "r", 23, 254, 0],
                [1, "r", 20, 254, 0],
                [1, "r", 19, 254, 0],
                [1, "r", 22, 254, 0],
                [1, "r", 18, 254, 0],
                [1, "r", 19, 253, 0],
                [1, "r", 20, 253, 0],
                [1, "r", 21, 254, 0],
                [1, "r", 22, 253, 0],
                [1, "r", 21, 255, 0],
                [1, "r", 20, 255, 0],
                [1, "r", 19, 255, 0],
                [1, "r", 18, 255, 0],
                [1, "r", 17, 255, 0],
                [1, "r", 17, 254, 0],
                [1, "r", 22, 255, 0],
                [1, "r", 19, 256, 0],
                [1, "r", 20, 256, 0],
                [1, "r", 21, 256, 0],
                [1, "r", 39, 270, 0],
                [1, "r", 40, 270, 0],
                [1, "r", 41, 270, 0],
                [1, "r", 43, 270, 0],
                [1, "r", 44, 270, 0],
                [1, "r", 46, 270, 0],
                [1, "r", 42, 270, 0],
                [1, "r", 45, 270, 0],
                [1, "r", 44, 269, 0],
                [1, "r", 43, 269, 0],
                [1, "r", 42, 269, 0],
                [1, "r", 40, 269, 0],
                [1, "r", 41, 269, 0],
                [1, "r", 45, 271, 0],
                [1, "r", 44, 271, 0],
                [1, "r", 43, 271, 0],
                [1, "r", 42, 271, 0],
                [1, "r", 41, 271, 0],
                [1, "r", 40, 271, 0],
                [1, "r", 39, 271, 0],
                [1, "r", 46, 271, 0],
                [1, "r", 45, 272, 0],
                [1, "r", 44, 272, 0],
                [1, "r", 43, 272, 0],
                [1, "r", 42, 272, 0],
                [1, "r", 19, 284, 0],
                [1, "r", 20, 284, 0],
                [1, "r", 21, 285, 0],
                [1, "r", 22, 285, 0],
                [1, "r", 23, 286, 0],
                [1, "r", 22, 288, 0],
                [1, "r", 20, 288, 0],
                [1, "r", 18, 288, 0],
                [1, "r", 17, 287, 0],
                [1, "r", 16, 287, 0],
                [1, "r", 16, 286, 0],
                [1, "r", 17, 286, 0],
                [1, "r", 18, 286, 0],
                [1, "r", 19, 286, 0],
                [1, "r", 20, 286, 0],
                [1, "r", 21, 286, 0],
                [1, "r", 22, 286, 0],
                [1, "r", 20, 285, 0],
                [1, "r", 19, 285, 0],
                [1, "r", 18, 285, 0],
                [1, "r", 17, 285, 0],
                [1, "r", 19, 287, 0],
                [1, "r", 18, 287, 0],
                [1, "r", 20, 287, 0],
                [1, "r", 21, 287, 0],
                [1, "r", 22, 287, 0],
                [1, "r", 23, 287, 0],
                [1, "r", 21, 288, 0],
                [1, "r", 19, 288, 0],
                [1, "r", 17, 288, 0],
                [1, "r", 19, 289, 0],
                [1, "r", 21, 289, 0],
                [1, "r", 22, 289, 0],
                [1, "r", 20, 289, 0],
                [1, "r", 23, 288, 0],
                [1, "r", 24, 287, 0],
                [1, "r", 24, 286, 0],
                [1, "r", 23, 285, 0],
                [1, "r", 66, 286, 0],
                [1, "r", 64, 287, 0],
                [1, "r", 63, 287, 0],
                [1, "r", 60, 287, 0],
                [1, "r", 59, 285, 0],
                [1, "r", 58, 284, 0],
                [1, "r", 59, 283, 0],
                [1, "r", 65, 283, 0],
                [1, "r", 64, 283, 0],
                [1, "r", 63, 283, 0],
                [1, "r", 62, 283, 0],
                [1, "r", 61, 283, 0],
                [1, "r", 60, 283, 0],
                [1, "r", 59, 284, 0],
                [1, "r", 58, 285, 0],
                [1, "r", 60, 286, 0],
                [1, "r", 59, 286, 0],
                [1, "r", 61, 287, 0],
                [1, "r", 62, 287, 0],
                [1, "r", 61, 286, 0],
                [1, "r", 62, 286, 0],
                [1, "r", 63, 286, 0],
                [1, "r", 64, 286, 0],
                [1, "r", 65, 286, 0],
                [1, "r", 67, 285, 0],
                [1, "r", 66, 285, 0],
                [1, "r", 65, 285, 0],
                [1, "r", 64, 285, 0],
                [1, "r", 63, 285, 0],
                [1, "r", 62, 285, 0],
                [1, "r", 61, 285, 0],
                [1, "r", 60, 285, 0],
                [1, "r", 60, 284, 0],
                [1, "r", 61, 284, 0],
                [1, "r", 62, 284, 0],
                [1, "r", 63, 284, 0],
                [1, "r", 64, 284, 0],
                [1, "r", 65, 284, 0],
                [1, "r", 66, 284, 0],
                [1, "r", 65, 287, 0],
                [1, "r", 67, 286, 0],
                [1, "p", 0, 13, 189, 1],
                [1, "p", 0, 32, 184, 1],
                [1, "p", 0, 47, 191, 1],
                [1, "p", 0, 64, 184, 1],
                [1, "p", 0, 84, 192, 1],
                [1, "p", 0, 78, 207, 1],
                [1, "p", 0, 58, 216, 1],
                [1, "p", 0, 41, 211, 1],
                [1, "p", 0, 18, 211, 1],
                [1, "p", 0, 14, 230, 1],
                [1, "p", 0, 29, 237, 1],
                [1, "p", 0, 50, 230, 1],
                [1, "p", 0, 78, 241, 1],
                [1, "p", 0, 74, 256, 1],
                [1, "p", 0, 68, 266, 1],
                [1, "p", 0, 48, 259, 1],
                [1, "p", 0, 31, 263, 1],
                [1, "p", 0, 18, 274, 1],
                [1, "p", 0, 33, 283, 1],
                [1, "p", 0, 66, 287, 1],
                [1, "p", 0, 82, 291, 1],
                [1, "p", 0, 16, 295, 1],
                [1, "p", 0, 45, 294, 1],
                [1, "p", 0, 18, 252, 1],
                [1, "p", 0, 79, 227, 1],
                [1, "p", 0, 32, 200, 1],
                [1, "p", 0, 64, 200, 1],
                [1, "s", 0, 21, 193, 1],
                [1, "s", 1, 18, 189, 1],
                [1, "s", 2, 26, 189, 1],
                [1, "b", 1, 15, 181, 0],
                [1, "b", 2, 18, 190, 0],
                [1, "b", 2, 29, 193, 0],
                [1, "t", 3, 16, 182, 0],
                [1, "t", 3, 13, 195, 0],
                [1, "t", 4, 16, 183, 0],
                [1, "t", 5, 10, 184, 0],
                [1, "t", 5, 23, 182, 0],
                [1, "t", 4, 30, 187, 0],
                [1, "t", 1, 26, 192, 0],
                [1, "b", 1, 25, 188, 0],
                [1, "s", 1, 24, 181, 1],
                [1, "t", 3, 33, 183, 0],
                [1, "b", 1, 36, 189, 0],
                [1, "t", 2, 35, 190, 0],
                [1, "b", 3, 19, 200, 0],
                [1, "s", 0, 28, 194, 1],
                [1, "s", 1, 32, 196, 1],
                [1, "s", 1, 36, 183, 1],
                [1, "s", 2, 38, 184, 1],
                [1, "s", 2, 10, 192, 1],
                [1, "s", 2, 12, 183, 1],
                [1, "s", 1, 15, 199, 1],
                [1, "b", 0, 12, 202, 0],
                [1, "t", 2, 13, 203, 0],
                [1, "t", 4, 20, 200, 0],
                [1, "t", 4, 12, 194, 0],
                [1, "t", 5, 15, 205, 0],
                [1, "t", 5, 29, 200, 0],
                [1, "t", 3, 28, 201, 0],
                [1, "s", 2, 25, 199, 1],
                [1, "s", 1, 22, 204, 1],
                [1, "g", 2, 25, 205, 1],
                [1, "b", 1, 27, 216, 0],
                [1, "s", 1, 25, 217, 1],
                [1, "s", 1, 33, 217, 1],
                [1, "s", 2, 35, 215, 1],
                [1, "s", 0, 32, 221, 1],
                [1, "t", 2, 31, 222, 0],
                [1, "t", 4, 26, 221, 0],
                [1, "b", 3, 27, 222, 0],
                [1, "b", 0, 17, 217, 0],
                [1, "t", 3, 18, 216, 0],
                [1, "t", 4, 13, 215, 0],
                [1, "t", 5, 30, 213, 0],
                [1, "t", 5, 24, 208, 0],
                [1, "s", 1, 12, 216, 1],
                [1, "s", 2, 11, 210, 1],
                [1, "s", 2, 34, 223, 1],
                [1, "b", 2, 36, 218, 0],
                [1, "t", 4, 40, 206, 0],
                [1, "t", 5, 35, 203, 0],
                [1, "t", 3, 39, 206, 0],
                [1, "b", 1, 34, 204, 0],
                [1, "s", 1, 33, 206, 1],
                [1, "s", 1, 42, 203, 1],
                [1, "s", 0, 47, 196, 1],
                [1, "b", 2, 40, 196, 0],
                [1, "t", 4, 39, 197, 0],
                [1, "t", 5, 44, 187, 0],
                [1, "b", 1, 46, 181, 0],
                [1, "t", 2, 47, 182, 0],
                [1, "b", 0, 57, 182, 0],
                [1, "b", 3, 56, 183, 0],
                [1, "t", 4, 55, 184, 0],
                [1, "t", 5, 62, 195, 0],
                [1, "s", 1, 51, 185, 1],
                [1, "s", 2, 62, 180, 1],
                [1, "s", 2, 61, 188, 1],
                [1, "s", 1, 61, 189, 1],
                [1, "s", 2, 48, 195, 1],
                [1, "b", 1, 51, 199, 0],
                [1, "t", 2, 52, 199, 0],
                [1, "t", 3, 56, 204, 0],
                [1, "t", 4, 57, 204, 0],
                [1, "t", 4, 51, 204, 0],
                [1, "s", 1, 52, 205, 1],
                [1, "s", 2, 57, 200, 1],
                [1, "s", 1, 56, 199, 1],
                [1, "b", 0, 55, 192, 0],
                [1, "t", 3, 56, 193, 0],
                [1, "t", 4, 50, 190, 0],
                [1, "b", 1, 76, 188, 0],
                [1, "t", 2, 75, 188, 0],
                [1, "t", 2, 73, 192, 0],
                [1, "t", 4, 72, 191, 0],
                [1, "t", 5, 78, 193, 0],
                [1, "b", 0, 79, 192, 0],
                [1, "s", 2, 79, 190, 1],
                [1, "s", 1, 74, 194, 1],
                [1, "s", 1, 72, 187, 1],
                [1, "s", 0, 74, 183, 1],
                [1, "s", 1, 75, 183, 1],
                [1, "t", 2, 69, 181, 0],
                [1, "t", 4, 70, 182, 0],
                [1, "t", 5, 69, 180, 0],
                [1, "b", 1, 65, 189, 0],
                [1, "b", 2, 66, 189, 0],
                [1, "t", 3, 64, 188, 0],
                [1, "t", 4, 67, 192, 0],
                [1, "b", 2, 85, 183, 0],
                [1, "t", 1, 84, 184, 0],
                [1, "t", 4, 81, 180, 0],
                [1, "t", 5, 89, 180, 0],
                [1, "t", 0, 90, 188, 0],
                [1, "t", 3, 89, 190, 0],
                [1, "s", 1, 87, 187, 1],
                [1, "s", 2, 87, 197, 1],
                [1, "b", 1, 84, 200, 0],
                [1, "t", 2, 83, 201, 0],
                [1, "t", 4, 87, 207, 0],
                [1, "s", 2, 79, 202, 1],
                [1, "s", 1, 80, 203, 1],
                [1, "t", 0, 71, 200, 0],
                [1, "b", 2, 72, 201, 0],
                [1, "t", 2, 65, 205, 0],
                [1, "t", 1, 66, 206, 0],
                [1, "t", 4, 63, 209, 0],
                [1, "t", 5, 73, 203, 0],
                [1, "s", 0, 70, 207, 1],
                [1, "s", 1, 71, 206, 1],
                [1, "s", 2, 68, 199, 1],
                [1, "s", 1, 64, 213, 1],
                [1, "t", 0, 85, 213, 0],
                [1, "b", 2, 84, 212, 0],
                [1, "t", 3, 77, 209, 0],
                [1, "t", 4, 83, 216, 0],
                [1, "t", 4, 73, 209, 0],
                [1, "b", 0, 86, 222, 0],
                [1, "b", 3, 87, 221, 0],
                [1, "s", 1, 80, 214, 1],
                [1, "s", 2, 87, 216, 1],
                [1, "s", 2, 84, 224, 1],
                [1, "s", 1, 77, 227, 1],
                [1, "t", 1, 74, 222, 0],
                [1, "b", 1, 69, 218, 0],
                [1, "b", 2, 75, 219, 0],
                [1, "s", 2, 74, 218, 1],
                [1, "s", 1, 69, 223, 1],
                [1, "s", 1, 77, 221, 1],
                [1, "b", 1, 72, 211, 0],
                [1, "b", 1, 85, 232, 0],
                [1, "t", 2, 84, 233, 0],
                [1, "t", 2, 78, 238, 0],
                [1, "b", 1, 77, 237, 0],
                [1, "t", 5, 87, 236, 0],
                [1, "t", 5, 76, 229, 0],
                [1, "b", 2, 74, 241, 0],
                [1, "s", 0, 73, 242, 1],
                [1, "s", 0, 81, 238, 1],
                [1, "s", 1, 82, 237, 1],
                [1, "s", 2, 72, 237, 1],
                [1, "s", 2, 78, 242, 1],
                [1, "b", 1, 66, 230, 0],
                [1, "b", 2, 62, 229, 0],
                [1, "t", 4, 67, 231, 0],
                [1, "t", 4, 62, 228, 0],
                [1, "t", 5, 64, 233, 0],
                [1, "t", 2, 65, 234, 0],
                [1, "t", 2, 51, 220, 0],
                [1, "t", 1, 50, 218, 0],
                [1, "b", 1, 45, 223, 0],
                [1, "b", 2, 46, 224, 0],
                [1, "t", 4, 49, 218, 0],
                [1, "t", 4, 47, 225, 0],
                [1, "s", 1, 50, 215, 1],
                [1, "s", 2, 51, 213, 1],
                [1, "s", 2, 42, 227, 1],
                [1, "s", 1, 44, 227, 1],
                [1, "s", 1, 60, 230, 1],
                [1, "s", 2, 59, 231, 1],
                [1, "b", 1, 85, 252, 0],
                [1, "t", 2, 84, 251, 0],
                [1, "t", 2, 74, 250, 0],
                [1, "t", 0, 75, 251, 0],
                [1, "b", 0, 83, 246, 0],
                [1, "t", 3, 82, 247, 0],
                [1, "t", 4, 81, 259, 0],
                [1, "t", 4, 69, 249, 0],
                [1, "t", 5, 87, 246, 0],
                [1, "t", 5, 75, 252, 0],
                [1, "s", 1, 79, 257, 1],
                [1, "s", 2, 78, 249, 1],
                [1, "s", 2, 80, 258, 1],
                [1, "s", 1, 88, 254, 1],
                [1, "s", 1, 85, 264, 1],
                [1, "s", 2, 89, 263, 1],
                [1, "s", 2, 87, 269, 1],
                [1, "s", 0, 84, 268, 1],
                [1, "s", 2, 76, 267, 1],
                [1, "s", 1, 66, 261, 1],
                [1, "s", 1, 87, 274, 1],
                [1, "s", 1, 76, 263, 1],
                [1, "s", 1, 59, 251, 1],
                [1, "s", 0, 59, 252, 1],
                [1, "t", 2, 86, 265, 0],
                [1, "t", 0, 78, 270, 0],
                [1, "t", 2, 79, 271, 0],
                [1, "t", 0, 77, 260, 0],
                [1, "t", 3, 78, 261, 0],
                [1, "b", 1, 71, 264, 0],
                [1, "b", 1, 88, 269, 0],
                [1, "t", 5, 84, 264, 0],
                [1, "t", 5, 79, 261, 0],
                [1, "t", 5, 72, 265, 0],
                [1, "t", 5, 77, 270, 0],
                [1, "t", 0, 87, 261, 0],
                [1, "t", 2, 86, 260, 0],
                [1, "t", 4, 84, 255, 0],
                [1, "t", 4, 68, 255, 0],
                [1, "t", 1, 67, 254, 0],
                [1, "t", 2, 65, 262, 0],
                [1, "t", 1, 57, 260, 0],
                [1, "t", 2, 58, 259, 0],
                [1, "b", 1, 63, 256, 0],
                [1, "b", 1, 52, 248, 0],
                [1, "t", 2, 53, 248, 0],
                [1, "s", 1, 50, 253, 1],
                [1, "s", 2, 67, 263, 1],
                [1, "s", 2, 52, 252, 1],
                [1, "s", 2, 71, 244, 1],
                [1, "b", 0, 57, 245, 0],
                [1, "t", 2, 58, 244, 0],
                [1, "b", 1, 53, 237, 0],
                [1, "t", 2, 54, 237, 0],
                [1, "t", 2, 41, 238, 0],
                [1, "t", 1, 42, 237, 0],
                [1, "t", 5, 57, 235, 0],
                [1, "t", 5, 60, 246, 0],
                [1, "t", 5, 50, 252, 0],
                [1, "t", 1, 42, 248, 0],
                [1, "b", 1, 43, 249, 0],
                [1, "b", 3, 37, 243, 0],
                [1, "s", 0, 50, 236, 1],
                [1, "s", 2, 39, 247, 1],
                [1, "s", 2, 51, 235, 1],
                [1, "s", 2, 60, 243, 1],
                [1, "s", 2, 36, 240, 1],
                [1, "s", 2, 43, 254, 1],
                [1, "s", 1, 42, 254, 1],
                [1, "t", 1, 38, 233, 0],
                [1, "t", 2, 35, 235, 0],
                [1, "t", 4, 33, 228, 0],
                [1, "t", 4, 33, 245, 0],
                [1, "t", 4, 43, 235, 0],
                [1, "t", 5, 45, 249, 0],
                [1, "t", 5, 41, 253, 0],
                [1, "b", 1, 20, 227, 0],
                [1, "b", 1, 14, 240, 0],
                [1, "t", 3, 21, 227, 0],
                [1, "t", 3, 27, 234, 0],
                [1, "t", 3, 15, 241, 0],
                [1, "t", 3, 12, 229, 0],
                [1, "t", 4, 17, 224, 0],
                [1, "t", 4, 11, 231, 0],
                [1, "t", 4, 22, 238, 0],
                [1, "t", 4, 11, 239, 0],
                [1, "t", 1, 22, 243, 0],
                [1, "b", 2, 23, 242, 0],
                [1, "s", 1, 23, 238, 1],
                [1, "s", 1, 22, 228, 1],
                [1, "s", 2, 24, 228, 1],
                [1, "s", 2, 21, 236, 1],
                [1, "s", 0, 13, 228, 1],
                [1, "s", 0, 16, 242, 1],
                [1, "s", 1, 15, 244, 1],
                [1, "s", 1, 34, 236, 1],
                [1, "t", 1, 26, 249, 0],
                [1, "t", 1, 22, 256, 0],
                [1, "t", 2, 23, 255, 0],
                [1, "b", 1, 17, 256, 0],
                [1, "b", 2, 18, 256, 0],
                [1, "s", 0, 21, 252, 1],
                [1, "s", 2, 20, 250, 1],
                [1, "s", 2, 23, 259, 1],
                [1, "s", 1, 13, 257, 1],
                [1, "t", 1, 31, 254, 0],
                [1, "t", 2, 32, 254, 0],
                [1, "t", 4, 28, 254, 0],
                [1, "t", 4, 34, 258, 0],
                [1, "t", 0, 29, 260, 0],
                [1, "b", 2, 30, 261, 0],
                [1, "t", 0, 43, 262, 0],
                [1, "t", 2, 42, 263, 0],
                [1, "t", 4, 46, 264, 0],
                [1, "b", 1, 39, 265, 0],
                [1, "b", 1, 58, 267, 0],
                [1, "t", 2, 57, 268, 0],
                [1, "t", 4, 62, 270, 0],
                [1, "t", 5, 52, 273, 0],
                [1, "s", 1, 52, 269, 1],
                [1, "s", 1, 41, 272, 1],
                [1, "s", 2, 41, 274, 1],
                [1, "t", 2, 42, 268, 0],
                [1, "t", 0, 43, 268, 0],
                [1, "b", 1, 46, 272, 0],
                [1, "b", 1, 14, 265, 0],
                [1, "t", 2, 15, 266, 0],
                [1, "t", 4, 19, 264, 0],
                [1, "t", 4, 29, 263, 0],
                [1, "t", 4, 11, 269, 0],
                [1, "t", 1, 29, 271, 0],
                [1, "b", 2, 28, 272, 0],
                [1, "t", 2, 24, 267, 0],
                [1, "t", 2, 20, 279, 0],
                [1, "t", 0, 19, 278, 0],
                [1, "t", 3, 13, 278, 0],
                [1, "b", 0, 21, 284, 0],
                [1, "b", 0, 18, 289, 0],
                [1, "t", 2, 20, 283, 0],
                [1, "t", 2, 19, 290, 0],
                [1, "t", 4, 19, 283, 0],
                [1, "t", 4, 20, 290, 0],
                [1, "s", 1, 16, 285, 1],
                [1, "s", 1, 24, 288, 1],
                [1, "s", 2, 26, 287, 1],
                [1, "s", 2, 16, 278, 1],
                [1, "s", 1, 21, 268, 1],
                [1, "s", 2, 19, 268, 1],
                [1, "t", 0, 12, 294, 0],
                [1, "b", 1, 13, 295, 0],
                [1, "t", 3, 13, 291, 0],
                [1, "t", 3, 10, 299, 0],
                [1, "t", 4, 11, 287, 0],
                [1, "t", 4, 17, 298, 0],
                [1, "t", 1, 27, 294, 0],
                [1, "b", 2, 26, 295, 0],
                [1, "t", 3, 33, 297, 0],
                [1, "b", 1, 48, 278, 0],
                [1, "b", 0, 46, 280, 0],
                [1, "b", 2, 50, 280, 0],
                [1, "t", 0, 44, 282, 0],
                [1, "b", 1, 49, 283, 0],
                [1, "b", 0, 51, 278, 0],
                [1, "b", 3, 50, 279, 0],
                [1, "b", 3, 44, 284, 0],
                [1, "b", 0, 47, 284, 0],
                [1, "b", 2, 42, 283, 0],
                [1, "t", 4, 51, 277, 0],
                [1, "b", 1, 44, 286, 0],
                [1, "b", 2, 46, 286, 0],
                [1, "b", 1, 42, 285, 0],
                [1, "b", 3, 41, 286, 0],
                [1, "t", 5, 42, 287, 0],
                [1, "b", 1, 42, 278, 0],
                [1, "b", 2, 43, 279, 0],
                [1, "b", 0, 40, 280, 0],
                [1, "t", 4, 39, 283, 0],
                [1, "t", 4, 39, 279, 0],
                [1, "t", 5, 43, 277, 0],
                [1, "t", 5, 47, 287, 0],
                [1, "t", 4, 46, 277, 0],
                [1, "t", 4, 45, 290, 0],
                [1, "t", 4, 36, 285, 0],
                [1, "t", 3, 35, 284, 0],
                [1, "t", 3, 36, 272, 0],
                [1, "t", 4, 35, 271, 0],
                [1, "t", 1, 29, 279, 0],
                [1, "b", 1, 32, 277, 0],
                [1, "t", 3, 31, 278, 0],
                [1, "b", 2, 28, 280, 0],
                [1, "t", 4, 29, 286, 0],
                [1, "t", 5, 28, 275, 0],
                [1, "t", 3, 37, 292, 0],
                [1, "b", 1, 36, 291, 0],
                [1, "b", 0, 34, 298, 0],
                [1, "t", 4, 31, 292, 0],
                [1, "t", 4, 46, 295, 0],
                [1, "t", 4, 59, 287, 0],
                [1, "b", 1, 58, 286, 0],
                [1, "s", 1, 68, 284, 1],
                [1, "s", 2, 70, 286, 1],
                [1, "s", 0, 67, 284, 1],
                [1, "t", 3, 66, 283, 0],
                [1, "t", 1, 65, 282, 0],
                [1, "b", 1, 64, 288, 0],
                [1, "t", 3, 60, 293, 0],
                [1, "t", 1, 61, 294, 0],
                [1, "b", 1, 76, 294, 0],
                [1, "t", 5, 75, 295, 0],
                [1, "t", 5, 56, 293, 0],
                [1, "t", 5, 59, 281, 0],
                [1, "t", 5, 67, 291, 0],
                [1, "b", 0, 88, 293, 0],
                [1, "t", 2, 89, 292, 0],
                [1, "t", 2, 85, 286, 0],
                [1, "t", 4, 88, 289, 0],
                [1, "t", 4, 79, 287, 0],
                [1, "b", 1, 84, 285, 0],
                [1, "t", 3, 75, 284, 0],
                [1, "b", 0, 75, 278, 0],
                [1, "t", 3, 74, 277, 0],
                [1, "t", 4, 81, 276, 0],
                [1, "t", 2, 65, 276, 0],
                [1, "b", 1, 66, 275, 0],
                [1, "g", 0, 45, 261, 1],
                [1, "g", 1, 39, 258, 1],
                [1, "g", 0, 35, 250, 1],
                [1, "g", 2, 22, 247, 1],
                [1, "g", 2, 27, 227, 1],
                [1, "g", 2, 63, 218, 1],
                [1, "g", 1, 56, 224, 1],
                [1, "g", 0, 46, 231, 1],
                [1, "g", 1, 65, 240, 1],
                [1, "g", 2, 67, 238, 1],
                [1, "g", 2, 79, 232, 1],
                [1, "g", 2, 72, 253, 1],
                [1, "g", 2, 62, 264, 1],
                [1, "g", 2, 28, 267, 1],
                [1, "g", 2, 58, 274, 1],
                [1, "de", 2, 14, 182, 0],
                [1, "de", 2, 24, 182, 0],
                [1, "de", 0, 11, 185, 0],
                [1, "de", 0, 14, 194, 0],
                [1, "de", 1, 25, 196, 0],
                [1, "de", 3, 31, 183, 0],
                [1, "de", 0, 38, 181, 0],
                [1, "de", 2, 45, 186, 0],
                [1, "de", 1, 38, 191, 0],
                [1, "de", 0, 56, 181, 0],
                [1, "de", 1, 68, 182, 0],
                [1, "de", 2, 80, 181, 0],
                [1, "de", 3, 86, 187, 0],
                [1, "de", 0, 84, 193, 0],
                [1, "de", 1, 82, 201, 0],
                [1, "de", 2, 64, 191, 0],
                [1, "de", 2, 72, 200, 0],
                [1, "de", 3, 64, 201, 0],
                [1, "de", 2, 76, 209, 0],
                [1, "de", 3, 71, 212, 0],
                [1, "de", 1, 86, 214, 0],
                [1, "de", 0, 57, 208, 0],
                [1, "de", 0, 41, 203, 0],
                [1, "de", 1, 15, 206, 0],
                [1, "de", 2, 25, 209, 0],
                [1, "de", 3, 16, 218, 0],
                [1, "de", 3, 11, 227, 0],
                [1, "de", 0, 22, 229, 0],
                [1, "de", 1, 15, 239, 0],
                [1, "de", 2, 24, 238, 0],
                [1, "de", 3, 22, 246, 0],
                [1, "de", 3, 10, 253, 0],
                [1, "de", 1, 18, 258, 0],
                [1, "de", 1, 28, 261, 0],
                [1, "de", 1, 14, 267, 0],
                [1, "de", 0, 24, 268, 0],
                [1, "de", 0, 15, 278, 0],
                [1, "de", 2, 21, 279, 0],
                [1, "de", 2, 30, 272, 0],
                [1, "de", 2, 29, 281, 0],
                [1, "de", 2, 15, 284, 0],
                [1, "de", 3, 12, 291, 0],
                [1, "de", 3, 30, 287, 0],
                [1, "de", 3, 27, 293, 0],
                [1, "de", 0, 25, 296, 0],
                [1, "de", 0, 11, 298, 0],
                [1, "de", 0, 8, 286, 0],
                [1, "de", 2, 36, 299, 0],
                [1, "de", 2, 37, 280, 0],
                [1, "de", 3, 38, 291, 0],
                [1, "de", 1, 48, 287, 0],
                [1, "de", 1, 46, 277, 0],
                [1, "de", 1, 53, 278, 0],
                [1, "de", 3, 48, 295, 0],
                [1, "de", 0, 57, 294, 0],
                [1, "de", 1, 65, 290, 0],
                [1, "de", 1, 84, 292, 0],
                [1, "de", 2, 77, 295, 0],
                [1, "de", 2, 84, 287, 0],
                [1, "de", 0, 74, 279, 0],
                [1, "de", 3, 65, 274, 0],
                [1, "de", 2, 71, 267, 0],
                [1, "de", 2, 65, 261, 0],
                [1, "de", 2, 47, 264, 0],
                [1, "de", 3, 47, 258, 0],
                [1, "de", 3, 53, 251, 0],
                [1, "de", 2, 40, 253, 0],
                [1, "de", 0, 35, 244, 0],
                [1, "de", 0, 37, 233, 0],
                [1, "de", 3, 44, 226, 0],
                [1, "de", 2, 37, 219, 0],
                [1, "de", 2, 54, 234, 0],
                [1, "de", 1, 66, 234, 0],
                [1, "de", 2, 65, 241, 0],
                [1, "de", 0, 68, 249, 0],
                [1, "de", 3, 78, 257, 0],
                [1, "de", 2, 86, 253, 0],
                [1, "de", 2, 83, 245, 0],
                [1, "de", 1, 82, 238, 0],
                [1, "de", 3, 76, 235, 0],
                [1, "de", 2, 86, 232, 0],
                [1, "de", 0, 86, 224, 0],
                [1, "de", 2, 76, 226, 0],
                [1, "de", 2, 61, 228, 0],
                [1, "de", 2, 58, 217, 0],
                [1, "de", 0, 49, 217, 0],
                [1, "de", 19, 11, 179, 0],
                [1, "de", 20, 17, 180, 0],
                [1, "de", 22, 18, 181, 0],
                [1, "de", 19, 30, 184, 0],
                [1, "de", 19, 27, 187, 0],
                [1, "de", 19, 30, 195, 0],
                [1, "de", 19, 18, 192, 0],
                [1, "de", 19, 44, 182, 0],
                [1, "de", 19, 49, 182, 0],
                [1, "de", 19, 54, 182, 0],
                [1, "de", 19, 59, 183, 0],
                [1, "de", 19, 56, 186, 0],
                [1, "de", 19, 46, 188, 0],
                [1, "de", 19, 58, 193, 0],
                [1, "de", 19, 67, 187, 0],
                [1, "de", 19, 65, 192, 0],
                [1, "de", 19, 71, 180, 0],
                [1, "de", 19, 78, 187, 0],
                [1, "de", 19, 80, 194, 0],
                [1, "de", 19, 72, 193, 0],
                [1, "de", 19, 82, 182, 0],
                [1, "de", 19, 88, 185, 0],
                [1, "de", 19, 87, 189, 0],
                [1, "de", 19, 86, 197, 0],
                [1, "de", 19, 85, 203, 0],
                [1, "de", 19, 74, 200, 0],
                [1, "de", 19, 70, 202, 0],
                [1, "de", 19, 83, 199, 0],
                [1, "de", 19, 86, 208, 0],
                [1, "de", 19, 84, 214, 0],
                [1, "de", 19, 83, 211, 0],
                [1, "de", 19, 84, 217, 0],
                [1, "de", 19, 77, 210, 0],
                [1, "de", 19, 71, 210, 0],
                [1, "de", 19, 73, 213, 0],
                [1, "de", 19, 66, 207, 0],
                [1, "de", 19, 66, 204, 0],
                [1, "de", 19, 62, 209, 0],
                [1, "de", 19, 63, 201, 0],
                [1, "de", 19, 56, 205, 0],
                [1, "de", 19, 49, 199, 0],
                [1, "de", 19, 50, 205, 0],
                [1, "de", 19, 40, 197, 0],
                [1, "de", 19, 38, 198, 0],
                [1, "de", 19, 40, 208, 0],
                [1, "de", 19, 36, 204, 0],
                [1, "de", 19, 33, 204, 0],
                [1, "de", 19, 29, 202, 0],
                [1, "de", 19, 27, 200, 0],
                [1, "de", 19, 26, 193, 0],
                [1, "de", 19, 18, 201, 0],
                [1, "de", 19, 20, 199, 0],
                [1, "de", 19, 12, 196, 0],
                [1, "de", 19, 12, 204, 0],
                [1, "de", 19, 11, 201, 0],
                [1, "de", 19, 23, 208, 0],
                [1, "de", 19, 31, 214, 0],
                [1, "de", 19, 26, 215, 0],
                [1, "de", 19, 36, 217, 0],
                [1, "de", 19, 32, 223, 0],
                [1, "de", 19, 26, 223, 0],
                [1, "de", 19, 18, 218, 0],
                [1, "de", 19, 15, 215, 0],
                [1, "de", 19, 17, 212, 0],
                [1, "de", 19, 15, 224, 0],
                [1, "de", 19, 19, 229, 0],
                [1, "de", 19, 10, 230, 0],
                [1, "de", 19, 22, 240, 0],
                [1, "de", 19, 13, 238, 0],
                [1, "de", 19, 13, 243, 0],
                [1, "de", 19, 24, 244, 0],
                [1, "de", 19, 24, 250, 0],
                [1, "de", 19, 28, 253, 0],
                [1, "de", 19, 33, 255, 0],
                [1, "de", 19, 34, 260, 0],
                [1, "de", 19, 31, 260, 0],
                [1, "de", 19, 38, 267, 0],
                [1, "de", 19, 44, 264, 0],
                [1, "de", 19, 43, 261, 0],
                [1, "de", 19, 16, 257, 0],
                [1, "de", 19, 22, 258, 0],
                [1, "de", 19, 12, 253, 0],
                [1, "de", 19, 8, 242, 0],
                [1, "de", 19, 8, 255, 0],
                [1, "de", 19, 15, 264, 0],
                [1, "de", 19, 20, 265, 0],
                [1, "de", 19, 12, 271, 0],
                [1, "de", 19, 8, 272, 0],
                [1, "de", 19, 13, 277, 0],
                [1, "de", 19, 21, 277, 0],
                [1, "de", 19, 21, 281, 0],
                [1, "de", 19, 27, 282, 0],
                [1, "de", 19, 29, 278, 0],
                [1, "de", 19, 29, 273, 0],
                [1, "de", 19, 36, 271, 0],
                [1, "de", 19, 8, 278, 0],
                [1, "de", 19, 11, 286, 0],
                [1, "de", 19, 17, 291, 0],
                [1, "de", 19, 14, 294, 0],
                [1, "de", 19, 8, 292, 0],
                [1, "de", 19, 12, 300, 0],
                [1, "de", 19, 18, 298, 0],
                [1, "de", 19, 16, 301, 0],
                [1, "de", 19, 27, 296, 0],
                [1, "de", 19, 25, 292, 0],
                [1, "de", 19, 23, 301, 0],
                [1, "de", 19, 28, 301, 0],
                [1, "de", 19, 35, 297, 0],
                [1, "de", 19, 37, 301, 0],
                [1, "de", 19, 43, 301, 0],
                [1, "de", 19, 46, 294, 0],
                [1, "de", 19, 46, 288, 0],
                [1, "de", 19, 40, 287, 0],
                [1, "de", 19, 50, 301, 0],
                [1, "de", 19, 58, 301, 0],
                [1, "de", 19, 64, 301, 0],
                [1, "de", 19, 71, 301, 0],
                [1, "de", 19, 80, 301, 0],
                [1, "de", 19, 87, 301, 0],
                [1, "de", 19, 86, 294, 0],
                [1, "de", 19, 87, 290, 0],
                [1, "de", 19, 82, 286, 0],
                [1, "de", 19, 75, 285, 0],
                [1, "de", 19, 66, 292, 0],
                [1, "de", 19, 66, 288, 0],
                [1, "de", 19, 58, 288, 0],
                [1, "de", 19, 67, 282, 0],
                [1, "de", 19, 61, 281, 0],
                [1, "de", 19, 60, 295, 0],
                [1, "de", 19, 50, 282, 0],
                [1, "de", 19, 47, 283, 0],
                [1, "de", 19, 48, 281, 0],
                [1, "de", 19, 44, 277, 0],
                [1, "de", 19, 41, 282, 0],
                [1, "de", 19, 38, 281, 0],
                [1, "de", 19, 42, 288, 0],
                [1, "de", 19, 52, 281, 0],
                [1, "de", 19, 50, 275, 0],
                [1, "de", 19, 39, 277, 0],
                [1, "de", 19, 38, 284, 0],
                [1, "de", 19, 51, 285, 0],
                [1, "de", 19, 38, 278, 0],
                [1, "de", 19, 47, 272, 0],
                [1, "de", 19, 44, 267, 0],
                [1, "de", 19, 76, 280, 0],
                [1, "de", 19, 78, 272, 0],
                [1, "de", 19, 68, 275, 0],
                [1, "de", 19, 70, 265, 0],
                [1, "de", 19, 65, 263, 0],
                [1, "de", 19, 64, 262, 0],
                [1, "de", 19, 60, 268, 0],
                [1, "de", 19, 56, 266, 0],
                [1, "de", 19, 55, 260, 0],
                [1, "de", 19, 59, 258, 0],
                [1, "de", 19, 62, 255, 0],
                [1, "de", 19, 67, 253, 0],
                [1, "de", 19, 69, 256, 0],
                [1, "de", 19, 44, 253, 0],
                [1, "de", 19, 44, 250, 0],
                [1, "de", 19, 36, 245, 0],
                [1, "de", 19, 39, 239, 0],
                [1, "de", 19, 42, 234, 0],
                [1, "de", 19, 37, 235, 0],
                [1, "de", 19, 45, 226, 0],
                [1, "de", 19, 46, 222, 0],
                [1, "de", 19, 51, 218, 0],
                [1, "de", 19, 68, 218, 0],
                [1, "de", 19, 74, 224, 0],
                [1, "de", 19, 76, 218, 0],
                [1, "de", 19, 84, 221, 0],
                [1, "de", 19, 88, 223, 0],
                [1, "de", 19, 76, 230, 0],
                [1, "de", 19, 86, 234, 0],
                [1, "de", 19, 79, 237, 0],
                [1, "de", 19, 75, 243, 0],
                [1, "de", 19, 81, 245, 0],
                [1, "de", 19, 83, 247, 0],
                [1, "de", 19, 88, 247, 0],
                [1, "de", 19, 84, 254, 0],
                [1, "de", 19, 86, 251, 0],
                [1, "de", 19, 85, 260, 0],
                [1, "de", 19, 79, 260, 0],
                [1, "de", 19, 76, 251, 0],
                [1, "de", 19, 72, 251, 0],
                [1, "de", 19, 69, 251, 0],
                [1, "de", 19, 87, 266, 0],
                [1, "de", 19, 89, 270, 0],
                [1, "de", 19, 87, 271, 0],
                [1, "de", 19, 82, 277, 0],
                [1, "de", 19, 87, 284, 0],
                [1, "de", 19, 87, 237, 0],
                [1, "de", 19, 88, 179, 0],
                [1, "de", 19, 50, 191, 0],
                [1, "de", 19, 52, 221, 0],
                [1, "de", 19, 34, 234, 0],
                [1, "de", 19, 27, 233, 0],
                [1, "de", 19, 37, 293, 0],
                [1, "de", 29, 13, 181, 0],
                [1, "de", 29, 8, 180, 0],
                [1, "de", 30, 13, 186, 0],
                [1, "de", 31, 24, 183, 0],
                [1, "de", 32, 33, 185, 0],
                [1, "de", 32, 37, 182, 0],
                [1, "de", 29, 45, 183, 0],
                [1, "de", 30, 48, 183, 0],
                [1, "de", 30, 58, 181, 0],
                [1, "de", 30, 66, 188, 0],
                [1, "de", 30, 66, 182, 0],
                [1, "de", 29, 63, 196, 0],
                [1, "de", 29, 54, 194, 0],
                [1, "de", 30, 79, 189, 0],
                [1, "de", 30, 87, 182, 0],
                [1, "de", 30, 83, 185, 0],
                [1, "de", 29, 88, 189, 0],
                [1, "de", 29, 85, 202, 0],
                [1, "de", 31, 82, 203, 0],
                [1, "de", 32, 80, 201, 0],
                [1, "de", 32, 87, 209, 0],
                [1, "de", 32, 83, 214, 0],
                [1, "de", 30, 88, 220, 0],
                [1, "de", 30, 78, 229, 0],
                [1, "de", 30, 73, 223, 0],
                [1, "de", 29, 74, 217, 0],
                [1, "de", 29, 67, 217, 0],
                [1, "de", 30, 72, 208, 0],
                [1, "de", 30, 73, 199, 0],
                [1, "de", 30, 65, 207, 0],
                [1, "de", 29, 63, 210, 0],
                [1, "de", 29, 50, 204, 0],
                [1, "de", 30, 41, 205, 0],
                [1, "de", 29, 35, 205, 0],
                [1, "de", 30, 27, 202, 0],
                [1, "de", 30, 20, 201, 0],
                [1, "de", 29, 10, 203, 0],
                [1, "de", 29, 14, 196, 0],
                [1, "de", 29, 24, 187, 0],
                [1, "de", 29, 28, 223, 0],
                [1, "de", 29, 32, 212, 0],
                [1, "de", 30, 28, 214, 0],
                [1, "de", 31, 24, 218, 0],
                [1, "de", 29, 36, 219, 0],
                [1, "de", 29, 37, 217, 0],
                [1, "de", 29, 52, 217, 0],
                [1, "de", 29, 59, 217, 0],
                [1, "de", 29, 69, 231, 0],
                [1, "de", 29, 64, 242, 0],
                [1, "de", 30, 53, 253, 0],
                [1, "de", 30, 45, 250, 0],
                [1, "de", 30, 58, 261, 0],
                [1, "de", 30, 73, 276, 0],
                [1, "de", 30, 64, 276, 0],
                [1, "de", 30, 82, 285, 0],
                [1, "de", 30, 65, 293, 0],
                [1, "de", 30, 56, 288, 0],
                [1, "de", 30, 45, 296, 0],
                [1, "de", 30, 40, 288, 0],
                [1, "de", 30, 37, 283, 0],
                [1, "de", 30, 53, 280, 0],
                [1, "de", 30, 41, 277, 0],
                [1, "de", 29, 28, 296, 0],
                [1, "de", 29, 18, 292, 0],
                [1, "de", 29, 24, 284, 0],
                [1, "de", 30, 10, 295, 0],
                [1, "de", 30, 10, 286, 0],
                [1, "de", 30, 15, 279, 0],
                [1, "de", 30, 15, 269, 0],
                [1, "de", 30, 21, 259, 0],
                [1, "de", 30, 12, 256, 0],
                [1, "de", 30, 31, 245, 0],
                [1, "de", 30, 12, 240, 0],
                [1, "de", 30, 28, 235, 0],
                [1, "de", 30, 13, 226, 0],
                [1, "de", 30, 39, 231, 0],
                [1, "de", 30, 61, 226, 0],
                [1, "r", 96, 262, 0],
                [1, "r", 97, 262, 0],
                [1, "r", 98, 262, 0],
                [1, "r", 97, 270, 0],
                [1, "r", 97, 271, 0],
                [1, "r", 97, 272, 0],
                [1, "r", 97, 273, 0],
                [1, "r", 97, 274, 0],
                [1, "r", 97, 275, 0],
                [1, "r", 97, 276, 0],
                [1, "r", 97, 277, 0],
                [1, "r", 97, 278, 0],
                [1, "r", 98, 270, 0],
                [1, "r", 98, 271, 0],
                [1, "r", 98, 272, 0],
                [1, "r", 98, 273, 0],
                [1, "r", 98, 274, 0],
                [1, "r", 98, 275, 0],
                [1, "r", 98, 276, 0],
                [1, "r", 98, 277, 0],
                [1, "r", 98, 278, 0],
                [1, "r", 96, 283, 0],
                [1, "r", 97, 283, 0],
                [1, "r", 97, 284, 0],
                [1, "r", 97, 285, 0],
                [1, "r", 98, 283, 0],
                [1, "r", 98, 284, 0],
                [1, "r", 98, 285, 0],
                [1, "r", 96, 270, 0],
                [1, "r", 96, 271, 0],
                [1, "r", 96, 272, 0],
                [1, "r", 96, 273, 0],
                [1, "r", 96, 274, 0],
                [1, "r", 96, 275, 0],
                [1, "r", 96, 276, 0],
                [1, "r", 96, 277, 0],
                [1, "r", 96, 278, 0],
                [1, "r", 44, 248, 0],
                [1, "de", 16, 94, 290, 0],
                [1, "de", 16, 94, 252, 0],
                [1, "de", 16, 94, 228, 0],
                [1, "de", 17, 94, 200, 0],
                [1, "r", 95, 282, 1],
                [1, "r", 95, 281, 1],
                [1, "r", 94, 281, 1],
                [1, "r", 90, 281, 1],
                [1, "r", 91, 282, 1],
                [1, "r", 89, 281, 1],
                [1, "r", 85, 276, 1],
                [1, "r", 85, 277, 1],
                [1, "r", 86, 278, 1],
                [1, "p", 0, 85, 279, 1],
                [1, "r", 86, 279, 1],
                [1, "r", 87, 280, 1],
                [1, "r", 96, 281, 0],
                [1, "r", 97, 281, 0],
                [1, "r", 98, 281, 0],
                [1, "r", 98, 282, 0],
                [1, "r", 97, 282, 0],
                [1, "r", 96, 282, 0],
                [1, "r", 68, 261, 1],
                [1, "fo", 1, 94, 168, 0],
                [1, "fo", 2, 94, 151, 0],
                [1, "fo", 1, 94, 138, 0],
                [1, "fo", 1, 93, 124, 0],
                [1, "fo", 1, 94, 129, 0],
                [1, "fo", 1, 93, 113, 0],
                [1, "fo", 1, 94, 102, 0],
                [1, "fo", 1, 94, 93, 0],
                [1, "fo", 1, 93, 90, 0],
                [1, "fo", 1, 94, 79, 0],
                [1, "fo", 1, 94, 76, 0],
                [1, "fo", 1, 93, 70, 0],
                [1, "fo", 1, 93, 63, 0],
                [1, "fo", 1, 94, 53, 0],
                [1, "fo", 1, 93, 10, 0],
                [1, "fo", 1, 85, 8, 0],
                [1, "fo", 1, 94, 12, 0],
                [1, "fo", 1, 66, 13, 0],
                [1, "fo", 1, 69, 9, 0],
                [1, "fo", 2, 68, 14, 0],
                [1, "fo", 2, 66, 25, 0],
                [1, "fo", 2, 92, 9, 0],
                [1, "fo", 2, 94, 14, 0],
                [1, "fo", 2, 87, 9, 0],
                [1, "fo", 2, 71, 9, 0],
                [1, "fo", 2, 90, 12, 0],
                [1, "fo", 2, 91, 13, 0],
                [1, "fo", 1, 74, 12, 0],
                [1, "fo", 2, 72, 12, 0],
                [1, "fo", 2, 75, 13, 0],
                [1, "fo", 2, 74, 15, 0],
                [1, "fo", 2, 84, 12, 0],
                [1, "fo", 2, 81, 14, 0],
                [1, "fo", 1, 84, 13, 0],
                [1, "fo", 1, 84, 19, 0],
                [1, "fo", 1, 11, 9, 0],
                [1, "fo", 1, 7, 14, 0],
                [1, "fo", 1, 8, 22, 0],
                [1, "fo", 1, 7, 34, 0],
                [1, "fo", 1, 12, 24, 0],
                [1, "fo", 2, 8, 24, 0],
                [1, "fo", 2, 9, 21, 0],
                [1, "fo", 2, 31, 10, 0],
                [1, "fo", 2, 33, 27, 0],
                [1, "fo", 2, 9, 34, 0],
                [1, "fo", 2, 8, 19, 0],
                [1, "fo", 1, 14, 10, 0],
                [1, "fo", 2, 13, 9, 0],
                [1, "fo", 2, 15, 11, 0],
                [1, "fo", 2, 9, 9, 0],
                [1, "fo", 2, 9, 10, 0],
                [1, "fo", 2, 9, 15, 0],
                [1, "fo", 2, 10, 23, 0],
                [1, "fo", 2, 34, 29, 0],
                [1, "fo", 2, 27, 18, 0],
                [1, "fo", 2, 25, 21, 0],
                [1, "fo", 2, 20, 18, 0],
                [1, "fo", 2, 18, 21, 0],
                [1, "fo", 2, 29, 9, 0],
                [1, "fo", 2, 13, 14, 0],
                [1, "fo", 2, 9, 38, 0],
                [1, "fo", 2, 21, 39, 0],
                [1, "fo", 2, 84, 26, 0],
                [1, "fo", 2, 77, 25, 0],
                [1, "fo", 2, 86, 35, 0],
                [1, "fo", 1, 70, 35, 0],
                [1, "fo", 2, 72, 36, 0],
                [1, "fo", 2, 73, 31, 0],
                [1, "fo", 2, 89, 39, 0],
                [1, "fo", 2, 65, 40, 0],
                [1, "fo", 2, 92, 32, 0],
                [1, "fo", 2, 90, 28, 0],
                [1, "de", 22, 25, 266, 0],
                [1, "de", 22, 17, 206, 0],
                [1, "de", 19, 8, 184, 0],
                [1, "de", 19, 22, 183, 0],
                [1, "de", 19, 35, 188, 0],
                [1, "de", 19, 36, 192, 0],
                [1, "de", 19, 50, 277, 0],
                [1, "de", 19, 35, 279, 0],
                [1, "t", 4, 7, 178, 0],
                [1, "t", 1, 7, 179, 0],
                [1, "t", 3, 7, 180, 0],
                [1, "t", 2, 7, 181, 0],
                [1, "t", 5, 7, 182, 0],
                [1, "t", 4, 7, 183, 0],
                [1, "t", 3, 7, 184, 0],
                [1, "t", 4, 7, 185, 0],
                [1, "t", 2, 7, 186, 0],
                [1, "t", 1, 7, 187, 0],
                [1, "t", 4, 7, 188, 0],
                [1, "t", 3, 7, 189, 0],
                [1, "t", 5, 7, 190, 0],
                [1, "t", 1, 7, 191, 0],
                [1, "t", 3, 7, 192, 0],
                [1, "t", 4, 7, 193, 0],
                [1, "t", 3, 7, 194, 0],
                [1, "t", 5, 7, 195, 0],
                [1, "t", 2, 7, 196, 0],
                [1, "t", 4, 7, 197, 0],
                [1, "b", 2, 7, 198, 0],
                [1, "t", 4, 7, 199, 0],
                [1, "t", 2, 7, 200, 0],
                [1, "t", 5, 7, 201, 0],
                [1, "t", 2, 7, 202, 0],
                [1, "t", 4, 7, 203, 0],
                [1, "t", 2, 7, 204, 0],
                [1, "t", 5, 7, 205, 0],
                [1, "t", 2, 7, 206, 0],
                [1, "t", 1, 7, 207, 0],
                [1, "t", 4, 7, 208, 0],
                [1, "t", 3, 7, 209, 0],
                [1, "t", 1, 7, 210, 0],
                [1, "b", 0, 7, 211, 0],
                [1, "t", 3, 7, 212, 0],
                [1, "t", 4, 7, 213, 0],
                [1, "t", 3, 7, 214, 0],
                [1, "t", 5, 7, 215, 0],
                [1, "t", 5, 7, 216, 0],
                [1, "t", 3, 7, 217, 0],
                [1, "t", 1, 7, 218, 0],
                [1, "t", 4, 7, 219, 0],
                [1, "b", 2, 7, 220, 0],
                [1, "t", 1, 7, 221, 0],
                [1, "t", 2, 7, 222, 0],
                [1, "t", 4, 7, 223, 0],
                [1, "t", 3, 7, 224, 0],
                [1, "t", 1, 7, 225, 0],
                [1, "t", 4, 7, 226, 0],
                [1, "t", 2, 7, 227, 0],
                [1, "t", 5, 7, 228, 0],
                [1, "t", 3, 7, 229, 0],
                [1, "t", 1, 7, 230, 0],
                [1, "t", 4, 7, 231, 0],
                [1, "b", 2, 7, 232, 0],
                [1, "t", 5, 7, 233, 0],
                [1, "t", 1, 7, 234, 0],
                [1, "t", 3, 7, 235, 0],
                [1, "t", 4, 7, 236, 0],
                [1, "t", 2, 7, 237, 0],
                [1, "t", 5, 7, 238, 0],
                [1, "b", 3, 7, 239, 0],
                [1, "t", 2, 7, 240, 0],
                [1, "t", 1, 7, 241, 0],
                [1, "t", 2, 7, 242, 0],
                [1, "t", 4, 7, 243, 0],
                [1, "t", 3, 7, 244, 0],
                [1, "t", 4, 7, 245, 0],
                [1, "t", 1, 7, 246, 0],
                [1, "b", 0, 7, 247, 0],
                [1, "t", 3, 7, 248, 0],
                [1, "t", 5, 7, 249, 0],
                [1, "t", 2, 7, 250, 0],
                [1, "t", 1, 7, 251, 0],
                [1, "t", 4, 7, 252, 0],
                [1, "t", 3, 7, 253, 0],
                [1, "t", 5, 7, 254, 0],
                [1, "t", 1, 7, 255, 0],
                [1, "t", 4, 7, 256, 0],
                [1, "t", 1, 7, 257, 0],
                [1, "t", 2, 7, 258, 0],
                [1, "t", 5, 7, 260, 0],
                [1, "t", 3, 7, 259, 0],
                [1, "t", 1, 7, 261, 0],
                [1, "t", 3, 7, 262, 0],
                [1, "t", 4, 7, 263, 0],
                [1, "t", 1, 7, 264, 0],
                [1, "t", 2, 7, 265, 0],
                [1, "t", 5, 7, 266, 0],
                [1, "t", 2, 7, 267, 0],
                [1, "t", 2, 7, 269, 0],
                [1, "b", 2, 7, 268, 0],
                [1, "t", 4, 7, 270, 0],
                [1, "t", 1, 7, 271, 0],
                [1, "t", 5, 7, 272, 0],
                [1, "b", 2, 7, 273, 0],
                [1, "t", 4, 7, 274, 0],
                [1, "t", 2, 7, 275, 0],
                [1, "t", 5, 7, 276, 0],
                [1, "t", 5, 7, 277, 0],
                [1, "t", 2, 7, 278, 0],
                [1, "t", 1, 7, 279, 0],
                [1, "t", 4, 7, 280, 0],
                [1, "b", 1, 7, 281, 0],
                [1, "t", 3, 7, 282, 0],
                [1, "t", 4, 7, 283, 0],
                [1, "t", 1, 7, 284, 0],
                [1, "t", 3, 7, 285, 0],
                [1, "t", 5, 7, 286, 0],
                [1, "t", 4, 7, 288, 0],
                [1, "t", 2, 7, 287, 0],
                [1, "b", 0, 7, 289, 0],
                [1, "t", 4, 7, 290, 0],
                [1, "t", 2, 7, 291, 0],
                [1, "t", 5, 7, 292, 0],
                [1, "t", 3, 7, 293, 0],
                [1, "t", 1, 7, 294, 0],
                [1, "t", 4, 7, 295, 0],
                [1, "t", 3, 7, 296, 0],
                [1, "t", 1, 7, 297, 0],
                [1, "t", 4, 7, 298, 0],
                [1, "t", 2, 7, 299, 0],
                [1, "b", 0, 7, 300, 0],
                [1, "t", 2, 7, 301, 0],
                [1, "r", 196, 271, 0],
                [1, "r", 199, 274, 0],
                [1, "r", 167, 238, 0],
                [1, "r", 171, 240, 0],
                [1, "r", 189, 207, 0],
                [1, "r", 192, 209, 0],
                [1, "r", 198, 271, 0],
                [1, "r", 197, 271, 0],
                [1, "r", 198, 272, 0],
                [1, "r", 197, 272, 0],
                [1, "r", 196, 272, 0],
                [1, "r", 195, 272, 0],
                [1, "r", 199, 272, 0],
                [1, "r", 199, 273, 0],
                [1, "r", 198, 273, 0],
                [1, "r", 197, 273, 0],
                [1, "r", 196, 273, 0],
                [1, "r", 198, 274, 0],
                [1, "r", 197, 274, 0],
                [1, "r", 195, 273, 0],
                [1, "r", 196, 274, 0],
                [1, "r", 198, 275, 0],
                [1, "r", 197, 275, 0],
                [1, "r", 200, 274, 0],
                [1, "r", 200, 273, 0],
                [1, "r", 199, 275, 0],
                [1, "plm", 2, 200, 272, 0],
                [1, "plm", 1, 195, 271, 0],
                [1, "plm", 0, 199, 268, 0],
                [1, "plm", 0, 193, 277, 0],
                [1, "plm", 1, 199, 276, 0],
                [1, "s", 1, 200, 275, 1],
                [1, "s", 1, 194, 272, 1],
                [1, "s", 2, 193, 270, 1],
                [1, "g", 2, 193, 273, 1],
                [1, "g", 2, 201, 267, 1],
                [1, "m", 2, 220, 298, 1],
                [1, "m", 1, 219, 292, 1],
                [1, "m", 1, 214, 297, 1],
                [1, "r", 168, 238, 0],
                [1, "r", 169, 238, 0],
                [1, "r", 170, 238, 0],
                [1, "r", 171, 239, 0],
                [1, "r", 170, 239, 0],
                [1, "r", 169, 239, 0],
                [1, "r", 168, 239, 0],
                [1, "r", 167, 239, 0],
                [1, "r", 166, 239, 0],
                [1, "r", 166, 240, 0],
                [1, "r", 167, 240, 0],
                [1, "r", 168, 240, 0],
                [1, "r", 169, 240, 0],
                [1, "r", 170, 240, 0],
                [1, "r", 168, 241, 0],
                [1, "r", 169, 241, 0],
                [1, "r", 170, 241, 0],
                [1, "r", 171, 241, 0],
                [1, "plm", 2, 171, 238, 0],
                [1, "plm", 1, 166, 238, 0],
                [1, "plm", 0, 167, 237, 0],
                [1, "plm", 0, 171, 242, 0],
                [1, "plm", 0, 165, 243, 0],
                [1, "plm", 0, 171, 235, 0],
                [1, "plm", 0, 174, 241, 0],
                [1, "s", 1, 165, 239, 1],
                [1, "s", 1, 172, 241, 1],
                [1, "s", 0, 170, 237, 1],
                [1, "s", 1, 171, 237, 1],
                [1, "s", 2, 174, 236, 1],
                [1, "s", 2, 162, 241, 1],
                [1, "s", 2, 170, 246, 1],
                [1, "s", 2, 167, 235, 1],
                [1, "s", 2, 176, 243, 1],
                [1, "r", 190, 207, 0],
                [1, "r", 191, 207, 0],
                [1, "r", 192, 208, 0],
                [1, "r", 191, 208, 0],
                [1, "r", 190, 208, 0],
                [1, "r", 189, 208, 0],
                [1, "r", 188, 208, 0],
                [1, "r", 189, 209, 0],
                [1, "r", 190, 209, 0],
                [1, "r", 191, 209, 0],
                [1, "r", 188, 209, 0],
                [1, "r", 190, 210, 0],
                [1, "r", 191, 210, 0],
                [1, "r", 192, 210, 0],
                [1, "plm", 2, 189, 210, 0],
                [1, "plm", 2, 192, 205, 0],
                [1, "plm", 1, 192, 207, 0],
                [1, "plm", 0, 193, 210, 0],
                [1, "plm", 0, 187, 208, 0],
                [1, "plm", 0, 197, 206, 0],
                [1, "plm", 0, 191, 213, 0],
                [1, "plm", 0, 190, 204, 0],
                [1, "s", 1, 188, 207, 1],
                [1, "s", 1, 190, 211, 1],
                [1, "s", 2, 188, 213, 1],
                [1, "s", 2, 187, 205, 1],
                [1, "s", 0, 194, 210, 1],
                [1, "s", 0, 198, 207, 1],
                [1, "s", 1, 193, 204, 1],
                [1, "s", 1, 193, 213, 1],
                [1, "s", 2, 198, 212, 1],
                [1, "s", 2, 182, 208, 1],
                [1, "s", 1, 204, 271, 1],
                [1, "s", 0, 203, 272, 1],
                [1, "s", 0, 189, 275, 1],
                [1, "s", 0, 195, 265, 1],
                [1, "s", 2, 196, 264, 1],
                [1, "s", 2, 186, 274, 1],
                [1, "s", 2, 197, 280, 1],
                [1, "s", 0, 217, 282, 1],
                [1, "s", 1, 214, 285, 1],
                [1, "s", 1, 214, 274, 1],
                [1, "s", 1, 203, 282, 1],
                [1, "s", 1, 205, 290, 1],
                [1, "s", 0, 207, 292, 1],
                [1, "s", 0, 197, 297, 1],
                [1, "s", 0, 184, 287, 1],
                [1, "s", 2, 213, 289, 1],
                [1, "s", 2, 196, 294, 1],
                [1, "s", 2, 187, 286, 1],
                [1, "s", 1, 192, 289, 1],
                [1, "s", 1, 189, 299, 1],
                [1, "s", 0, 213, 273, 1],
                [1, "g", 2, 212, 278, 1],
                [1, "g", 1, 200, 288, 1],
                [1, "g", 2, 215, 265, 1],
                [1, "g", 2, 183, 281, 1],
                [1, "s", 0, 178, 295, 1],
                [1, "s", 0, 167, 281, 1],
                [1, "s", 0, 175, 263, 1],
                [1, "s", 1, 176, 293, 1],
                [1, "s", 1, 163, 285, 1],
                [1, "s", 1, 177, 266, 1],
                [1, "s", 1, 161, 272, 1],
                [1, "s", 2, 185, 261, 1],
                [1, "c", 0, 217, 270, 1],
                [1, "c", 0, 220, 278, 1],
                [1, "c", 0, 217, 283, 1],
                [1, "c", 0, 220, 287, 1],
                [1, "c", 0, 210, 292, 1],
                [1, "c", 0, 205, 297, 1],
                [1, "c", 0, 198, 293, 1],
                [1, "c", 0, 208, 283, 1],
                [1, "c", 0, 197, 283, 1],
                [1, "c", 0, 190, 289, 1],
                [1, "c", 0, 183, 296, 1],
                [1, "c", 0, 189, 291, 1],
                [1, "c", 0, 178, 284, 1],
                [1, "c", 0, 208, 265, 1],
                [1, "c", 0, 169, 292, 1],
                [1, "s", 1, 158, 294, 1],
                [1, "s", 0, 151, 297, 1],
                [1, "s", 0, 147, 288, 1],
                [1, "c", 0, 150, 289, 1],
                [1, "c", 0, 160, 282, 1],
                [1, "c", 0, 146, 274, 1],
                [1, "c", 0, 167, 264, 1],
                [1, "c", 0, 165, 267, 1],
                [1, "g", 0, 189, 257, 1],
                [1, "g", 1, 197, 248, 1],
                [1, "g", 2, 170, 255, 1],
                [1, "g", 2, 212, 234, 1],
                [1, "g", 2, 189, 230, 1],
                [1, "g", 2, 173, 221, 1],
                [1, "g", 1, 210, 214, 1],
                [1, "s", 1, 153, 257, 1],
                [1, "s", 0, 158, 255, 1],
                [1, "s", 0, 184, 248, 1],
                [1, "s", 0, 212, 254, 1],
                [1, "s", 1, 203, 249, 1],
                [1, "s", 2, 204, 252, 1],
                [1, "s", 2, 187, 248, 1],
                [1, "s", 0, 206, 237, 1],
                [1, "s", 0, 196, 227, 1],
                [1, "s", 0, 181, 228, 1],
                [1, "s", 1, 199, 227, 1],
                [1, "s", 1, 208, 238, 1],
                [1, "s", 1, 179, 222, 1],
                [1, "s", 1, 213, 223, 1],
                [1, "s", 2, 182, 222, 1],
                [1, "s", 2, 211, 226, 1],
                [1, "s", 2, 214, 214, 1],
                [1, "s", 2, 201, 216, 1],
                [1, "s", 2, 215, 192, 1],
                [1, "s", 1, 210, 198, 1],
                [1, "s", 1, 198, 196, 1],
                [1, "s", 2, 208, 199, 1],
                [1, "s", 2, 187, 192, 1],
                [1, "s", 1, 179, 198, 1],
                [1, "s", 2, 177, 197, 1],
                [1, "s", 0, 164, 197, 1],
                [1, "s", 1, 159, 193, 1],
                [1, "s", 1, 149, 206, 1],
                [1, "s", 1, 164, 209, 1],
                [1, "s", 2, 165, 210, 1],
                [1, "s", 2, 161, 191, 1],
                [1, "s", 1, 162, 224, 1],
                [1, "s", 0, 150, 236, 1],
                [1, "s", 1, 149, 239, 1],
                [1, "s", 2, 153, 236, 1],
                [1, "s", 2, 160, 223, 1],
                [1, "s", 2, 151, 207, 1],
                [1, "s", 2, 147, 220, 1],
                [1, "s", 2, 145, 265, 1],
                [1, "s", 2, 145, 285, 1],
                [1, "c", 0, 152, 266, 1],
                [1, "c", 0, 185, 271, 1],
                [1, "c", 0, 210, 254, 1],
                [1, "c", 0, 209, 256, 1],
                [1, "c", 0, 198, 254, 1],
                [1, "c", 0, 213, 246, 1],
                [1, "c", 0, 216, 237, 1],
                [1, "c", 0, 204, 240, 1],
                [1, "c", 0, 196, 234, 1],
                [1, "c", 0, 188, 238, 1],
                [1, "c", 0, 182, 245, 1],
                [1, "c", 0, 173, 252, 1],
                [1, "c", 0, 153, 248, 1],
                [1, "c", 0, 158, 233, 1],
                [1, "c", 0, 147, 230, 1],
                [1, "c", 0, 151, 224, 1],
                [1, "c", 0, 157, 214, 1],
                [1, "c", 0, 167, 219, 1],
                [1, "c", 0, 171, 208, 1],
                [1, "c", 0, 179, 219, 1],
                [1, "c", 0, 176, 229, 1],
                [1, "c", 0, 195, 221, 1],
                [1, "c", 0, 207, 222, 1],
                [1, "c", 0, 214, 207, 1],
                [1, "c", 0, 205, 210, 1],
                [1, "c", 0, 204, 196, 1],
                [1, "c", 0, 214, 196, 1],
                [1, "c", 0, 190, 199, 1],
                [1, "c", 0, 184, 194, 1],
                [1, "c", 0, 172, 199, 1],
                [1, "c", 0, 161, 204, 1],
                [1, "c", 0, 157, 196, 1],
                [1, "c", 0, 149, 194, 1],
                [1, "c", 0, 147, 208, 1],
                [1, "c", 0, 207, 274, 1],
                [1, "c", 0, 217, 258, 1],
                [1, "c", 0, 201, 260, 1],
                [1, "c", 0, 178, 276, 1],
                [1, "c", 0, 187, 265, 1],
                [1, "s", 1, 204, 260, 1],
                [1, "s", 1, 216, 260, 1],
                [1, "s", 1, 187, 255, 1],
                [1, "s", 2, 189, 254, 1],
                [1, "s", 2, 212, 257, 1],
                [1, "s", 2, 182, 286, 1],
                [1, "s", 2, 169, 280, 1],
                [1, "s", 2, 217, 273, 1],
                [1, "s", 2, 215, 282, 1],
                [1, "s", 2, 172, 263, 1],
                [1, "s", 2, 176, 267, 1],
                [1, "s", 2, 215, 251, 1],
                [1, "fod", 1, 221, 282, 0],
                [1, "fod", 1, 222, 284, 0],
                [1, "fod", 1, 221, 290, 0],
                [1, "fod", 1, 222, 294, 0],
                [1, "fod", 1, 221, 297, 0],
                [1, "fod", 1, 223, 298, 0],
                [1, "fod", 1, 222, 300, 0],
                [1, "fod", 1, 218, 301, 0],
                [1, "fod", 1, 217, 299, 0],
                [1, "fod", 1, 215, 301, 0],
                [1, "fod", 1, 212, 300, 0],
                [1, "fod", 1, 206, 300, 0],
                [1, "fod", 1, 209, 301, 0],
                [1, "fod", 1, 204, 299, 0],
                [1, "fod", 1, 202, 301, 0],
                [1, "fod", 1, 199, 301, 0],
                [1, "fod", 1, 222, 282, 0],
                [1, "fod", 1, 207, 301, 0],
                [1, "fod", 1, 197, 301, 0],
                [1, "fod", 1, 215, 291, 0],
                [1, "fod", 1, 216, 286, 0],
                [1, "fod", 1, 214, 292, 0],
                [1, "fod", 1, 210, 289, 0],
                [1, "fod", 1, 208, 294, 0],
                [1, "fod", 1, 210, 298, 0],
                [1, "fod", 1, 212, 281, 0],
                [1, "fod", 1, 219, 278, 0],
                [1, "fod", 1, 219, 282, 0],
                [1, "fod", 1, 205, 286, 0],
                [1, "fod", 1, 202, 293, 0],
                [1, "fod", 1, 198, 295, 0],
                [1, "fod", 2, 213, 282, 0],
                [1, "fod", 2, 213, 291, 0],
                [1, "fod", 2, 216, 289, 0],
                [1, "fod", 2, 219, 289, 0],
                [1, "fod", 2, 218, 285, 0],
                [1, "fod", 2, 220, 283, 0],
                [1, "fod", 2, 211, 283, 0],
                [1, "fod", 2, 215, 281, 0],
                [1, "fod", 2, 217, 279, 0],
                [1, "fod", 2, 208, 290, 0],
                [1, "fod", 2, 211, 296, 0],
                [1, "fod", 2, 215, 294, 0],
                [1, "fod", 2, 212, 298, 0],
                [1, "fod", 2, 203, 294, 0],
                [1, "fod", 2, 204, 288, 0],
                [1, "fod", 2, 200, 294, 0],
                [1, "fod", 2, 198, 297, 0],
                [1, "fod", 2, 202, 299, 0],
                [1, "fod", 2, 200, 299, 0],
                [1, "fod", 2, 220, 300, 0],
                [1, "fod", 2, 220, 295, 0],
                [1, "fod", 2, 220, 292, 0],
                [1, "fod", 2, 219, 287, 0],
                [1, "fod", 2, 211, 288, 0],
                [1, "fod", 2, 213, 287, 0],
                [1, "fod", 2, 211, 289, 0],
                [1, "fod", 2, 212, 290, 0],
                [1, "fod", 2, 195, 296, 0],
                [1, "fod", 2, 196, 299, 0],
                [1, "fod", 2, 194, 300, 0],
                [1, "fod", 2, 195, 300, 0],
                [1, "fod", 2, 213, 279, 0],
                [1, "fod", 2, 211, 279, 0],
                [1, "fod", 0, 218, 290, 0],
                [1, "fod", 0, 212, 294, 0],
                [1, "fod", 1, 213, 295, 0],
                [1, "fod", 1, 217, 292, 0],
                [1, "fod", 1, 218, 288, 0],
                [1, "fod", 1, 210, 295, 0],
                [1, "fod", 1, 213, 292, 0],
                [1, "fod", 1, 212, 289, 0],
                [1, "fod", 1, 205, 295, 0],
                [1, "fod", 2, 206, 296, 0],
                [1, "fod", 2, 208, 296, 0],
                [1, "fod", 2, 221, 288, 0],
                [1, "fod", 2, 209, 299, 0],
                [1, "fod", 2, 211, 291, 0],
                [1, "fod", 1, 203, 275, 0],
                [1, "fod", 1, 204, 272, 0],
                [1, "fod", 2, 205, 273, 0],
                [1, "fod", 2, 204, 276, 0],
                [1, "fod", 2, 202, 276, 0],
                [1, "fod", 2, 199, 277, 0],
                [1, "fod", 2, 202, 273, 0],
                [1, "fod", 2, 199, 270, 0],
                [1, "fod", 2, 194, 274, 0],
                [1, "fod", 2, 194, 277, 0],
                [1, "fod", 1, 192, 274, 0],
                [1, "fod", 1, 194, 267, 0],
                [1, "fod", 2, 194, 265, 0],
                [1, "fod", 2, 190, 272, 0],
                [1, "fod", 2, 191, 275, 0],
                [1, "fod", 2, 195, 274, 0],
                [1, "fod", 2, 200, 271, 0],
                [1, "fod", 1, 168, 243, 0],
                [1, "fod", 1, 175, 240, 0],
                [1, "fod", 1, 169, 234, 0],
                [1, "fod", 1, 162, 235, 0],
                [1, "fod", 2, 169, 236, 0],
                [1, "fod", 2, 171, 234, 0],
                [1, "fod", 2, 165, 238, 0],
                [1, "fod", 2, 173, 241, 0],
                [1, "fod", 2, 174, 238, 0],
                [1, "fod", 2, 176, 240, 0],
                [1, "fod", 2, 169, 244, 0],
                [1, "fod", 2, 166, 243, 0],
                [1, "fod", 2, 162, 236, 0],
                [1, "fod", 2, 164, 235, 0],
                [1, "fod", 2, 162, 233, 0],
                [1, "fod", 2, 163, 236, 0],
                [1, "fod", 2, 174, 242, 0],
                [1, "fod", 2, 171, 243, 0],
                [1, "fod", 1, 194, 206, 0],
                [1, "fod", 1, 190, 214, 0],
                [1, "fod", 1, 186, 206, 0],
                [1, "fod", 1, 197, 207, 0],
                [1, "fod", 2, 196, 208, 0],
                [1, "fod", 2, 198, 206, 0],
                [1, "fod", 2, 198, 208, 0],
                [1, "fod", 2, 194, 204, 0],
                [1, "fod", 2, 187, 206, 0],
                [1, "fod", 2, 186, 204, 0],
                [1, "fod", 2, 189, 214, 0],
                [1, "fod", 2, 189, 213, 0],
                [1, "fod", 2, 193, 215, 0],
                [1, "fod", 2, 194, 214, 0],
                [1, "fod", 2, 187, 215, 0],
                [1, "fod", 2, 193, 209, 0],
                [1, "fod", 2, 189, 211, 0],
                [1, "fod", 2, 187, 209, 0],
                [1, "fod", 2, 187, 207, 0],
                [1, "fod", 2, 191, 205, 0],
                [1, "fod", 2, 189, 203, 0],
                [1, "cs", 2, 224, 176, 1],
                [1, "cs", 0, 224, 177, 1],
                [1, "cs", 3, 224, 178, 1],
                [1, "cs", 2, 224, 179, 1],
                [1, "cs", 1, 224, 180, 1],
                [1, "cs", 2, 224, 181, 1],
                [1, "cs", 0, 224, 182, 1],
                [1, "cs", 2, 224, 183, 1],
                [1, "cs", 0, 224, 184, 1],
                [1, "cs", 3, 224, 185, 1],
                [1, "cs", 2, 224, 186, 1],
                [1, "cs", 0, 224, 187, 1],
                [1, "cs", 2, 224, 188, 1],
                [1, "cs", 0, 224, 189, 1],
                [1, "cs", 1, 224, 190, 1],
                [1, "cs", 2, 224, 191, 1],
                [1, "cs", 0, 224, 192, 1],
                [1, "cs", 2, 224, 193, 1],
                [1, "cs", 2, 224, 194, 1],
                [1, "cs", 1, 224, 195, 1],
                [1, "cs", 2, 224, 196, 1],
                [1, "cs", 0, 224, 197, 1],
                [1, "cs", 3, 224, 198, 1],
                [1, "cs", 2, 224, 199, 1],
                [1, "cs", 1, 224, 200, 1],
                [1, "cs", 2, 224, 201, 1],
                [1, "cs", 3, 224, 202, 1],
                [1, "cs", 0, 224, 203, 1],
                [1, "cs", 1, 224, 204, 1],
                [1, "cs", 2, 224, 205, 1],
                [1, "cs", 0, 224, 206, 1],
                [1, "cs", 1, 224, 207, 1],
                [1, "cs", 3, 224, 208, 1],
                [1, "cs", 2, 224, 209, 1],
                [1, "cs", 2, 224, 210, 1],
                [1, "cs", 0, 223, 211, 1],
                [1, "cs", 1, 224, 211, 1],
                [1, "cs", 2, 224, 212, 1],
                [1, "cs", 2, 224, 213, 1],
                [1, "cs", 1, 224, 214, 1],
                [1, "cs", 3, 224, 215, 1],
                [1, "cs", 0, 224, 216, 1],
                [1, "cs", 1, 224, 217, 1],
                [1, "cs", 2, 224, 218, 1],
                [1, "cs", 3, 224, 219, 1],
                [1, "cs", 0, 223, 215, 1],
                [1, "cs", 2, 223, 214, 1],
                [1, "cs", 2, 223, 212, 1],
                [1, "cs", 2, 223, 216, 1],
                [1, "cs", 3, 223, 217, 1],
                [1, "cs", 0, 223, 218, 1],
                [1, "cs", 0, 224, 220, 1],
                [1, "cs", 0, 224, 222, 1],
                [1, "cs", 0, 223, 209, 1],
                [1, "cs", 0, 223, 205, 1],
                [1, "cs", 2, 224, 221, 1],
                [1, "cs", 2, 223, 219, 1],
                [1, "cs", 2, 223, 220, 1],
                [1, "cs", 2, 223, 213, 1],
                [1, "cs", 2, 223, 210, 1],
                [1, "cs", 1, 223, 178, 1],
                [1, "cs", 3, 223, 179, 1],
                [1, "cs", 3, 223, 181, 1],
                [1, "cs", 3, 223, 182, 1],
                [1, "cs", 1, 223, 185, 1],
                [1, "cs", 2, 223, 184, 1],
                [1, "cs", 2, 223, 186, 1],
                [1, "cs", 0, 223, 180, 1],
                [1, "cs", 0, 223, 183, 1],
                [1, "cs", 2, 223, 187, 1],
                [1, "cs", 1, 223, 188, 1],
                [1, "cs", 2, 223, 189, 1],
                [1, "cs", 2, 223, 190, 1],
                [1, "cs", 3, 223, 191, 1],
                [1, "cs", 1, 223, 192, 1],
                [1, "cs", 2, 223, 193, 1],
                [1, "cs", 2, 223, 194, 1],
                [1, "cs", 3, 223, 195, 1],
                [1, "cs", 1, 223, 196, 1],
                [1, "cs", 2, 223, 197, 1],
                [1, "cs", 2, 223, 199, 1],
                [1, "cs", 2, 223, 198, 1],
                [1, "cs", 0, 223, 200, 1],
                [1, "cs", 2, 223, 201, 1],
                [1, "cs", 0, 223, 202, 1],
                [1, "cs", 3, 223, 203, 1],
                [1, "cs", 3, 223, 204, 1],
                [1, "cs", 3, 223, 206, 1],
                [1, "cs", 3, 223, 207, 1],
                [1, "cs", 3, 223, 208, 1],
                [1, "cs", 2, 223, 221, 1],
                [1, "cs", 2, 223, 222, 1],
                [1, "cs", 0, 223, 224, 1],
                [1, "cs", 0, 224, 228, 1],
                [1, "cs", 0, 224, 230, 1],
                [1, "cs", 0, 223, 234, 1],
                [1, "cs", 2, 223, 223, 1],
                [1, "cs", 2, 224, 223, 1],
                [1, "cs", 2, 224, 224, 1],
                [1, "cs", 2, 224, 225, 1],
                [1, "cs", 1, 223, 226, 1],
                [1, "cs", 1, 224, 231, 1],
                [1, "cs", 1, 223, 232, 1],
                [1, "cs", 3, 223, 225, 1],
                [1, "cs", 3, 224, 226, 1],
                [1, "cs", 3, 223, 227, 1],
                [1, "cs", 3, 224, 227, 1],
                [1, "cs", 3, 223, 229, 1],
                [1, "cs", 3, 223, 228, 1],
                [1, "cs", 3, 224, 229, 1],
                [1, "cs", 3, 223, 230, 1],
                [1, "cs", 3, 223, 231, 1],
                [1, "cs", 3, 224, 232, 1],
                [1, "cs", 3, 224, 233, 1],
                [1, "cs", 3, 223, 233, 1],
                [1, "cs", 3, 224, 234, 1],
                [1, "cs", 3, 224, 235, 1],
                [1, "cs", 3, 223, 235, 1],
                [1, "cs", 1, 224, 236, 1],
                [1, "cs", 2, 223, 236, 1],
                [1, "cs", 2, 223, 237, 1],
                [1, "cs", 3, 224, 237, 1],
                [1, "cs", 3, 224, 238, 1],
                [1, "cs", 0, 224, 239, 1],
                [1, "cs", 1, 223, 241, 1],
                [1, "cs", 0, 224, 243, 1],
                [1, "cs", 0, 223, 245, 1],
                [1, "cs", 0, 224, 247, 1],
                [1, "cs", 2, 223, 240, 1],
                [1, "cs", 2, 223, 239, 1],
                [1, "cs", 2, 224, 240, 1],
                [1, "cs", 2, 224, 241, 1],
                [1, "cs", 2, 224, 242, 1],
                [1, "cs", 2, 223, 242, 1],
                [1, "cs", 2, 223, 243, 1],
                [1, "cs", 2, 223, 244, 1],
                [1, "cs", 2, 224, 244, 1],
                [1, "cs", 2, 224, 245, 1],
                [1, "cs", 2, 224, 246, 1],
                [1, "cs", 3, 223, 238, 1],
                [1, "cs", 3, 223, 246, 1],
                [1, "cs", 2, 223, 247, 1],
                [1, "cs", 1, 223, 249, 1],
                [1, "cs", 1, 224, 253, 1],
                [1, "cs", 1, 223, 256, 1],
                [1, "cs", 0, 223, 254, 1],
                [1, "cs", 0, 224, 250, 1],
                [1, "cs", 3, 223, 248, 1],
                [1, "cs", 3, 223, 250, 1],
                [1, "cs", 3, 223, 252, 1],
                [1, "cs", 3, 223, 255, 1],
                [1, "cs", 3, 223, 257, 1],
                [1, "cs", 2, 224, 248, 1],
                [1, "cs", 2, 224, 249, 1],
                [1, "cs", 2, 223, 251, 1],
                [1, "cs", 2, 224, 251, 1],
                [1, "cs", 2, 224, 252, 1],
                [1, "cs", 2, 223, 253, 1],
                [1, "cs", 2, 224, 254, 1],
                [1, "cs", 2, 224, 255, 1],
                [1, "cs", 2, 224, 256, 1],
                [1, "cs", 2, 224, 257, 1],
                [1, "cs", 0, 224, 258, 1],
                [1, "cs", 0, 223, 261, 1],
                [1, "cs", 0, 224, 263, 1],
                [1, "cs", 0, 224, 266, 1],
                [1, "cs", 0, 224, 272, 1],
                [1, "cs", 0, 223, 270, 1],
                [1, "cs", 0, 223, 275, 1],
                [1, "cs", 1, 223, 259, 1],
                [1, "cs", 1, 223, 264, 1],
                [1, "cs", 1, 223, 268, 1],
                [1, "cs", 1, 224, 274, 1],
                [1, "cs", 2, 223, 258, 1],
                [1, "cs", 2, 223, 260, 1],
                [1, "cs", 2, 223, 263, 1],
                [1, "cs", 2, 223, 265, 1],
                [1, "cs", 2, 223, 267, 1],
                [1, "cs", 2, 223, 271, 1],
                [1, "cs", 2, 223, 273, 1],
                [1, "cs", 3, 223, 262, 1],
                [1, "cs", 3, 223, 266, 1],
                [1, "cs", 3, 223, 269, 1],
                [1, "cs", 3, 223, 272, 1],
                [1, "cs", 3, 223, 274, 1],
                [1, "cs", 3, 224, 275, 1],
                [1, "cs", 3, 224, 273, 1],
                [1, "cs", 3, 224, 271, 1],
                [1, "cs", 3, 224, 270, 1],
                [1, "cs", 3, 224, 269, 1],
                [1, "cs", 3, 224, 268, 1],
                [1, "cs", 3, 224, 267, 1],
                [1, "cs", 3, 224, 265, 1],
                [1, "cs", 3, 224, 264, 1],
                [1, "cs", 3, 224, 262, 1],
                [1, "cs", 3, 224, 261, 1],
                [1, "cs", 3, 224, 260, 1],
                [1, "cs", 3, 224, 259, 1],
                [1, "cs", 2, 223, 276, 1],
                [1, "cs", 1, 224, 276, 1],
                [1, "cs", 1, 224, 280, 1],
                [1, "cs", 1, 223, 281, 1],
                [1, "cs", 1, 224, 286, 1],
                [1, "cs", 0, 223, 280, 1],
                [1, "cs", 0, 223, 284, 1],
                [1, "cs", 0, 224, 288, 1],
                [1, "cs", 0, 224, 279, 1],
                [1, "cs", 2, 223, 277, 1],
                [1, "cs", 2, 224, 277, 1],
                [1, "cs", 2, 224, 278, 1],
                [1, "cs", 2, 224, 281, 1],
                [1, "cs", 2, 224, 283, 1],
                [1, "cs", 2, 224, 282, 1],
                [1, "cs", 2, 224, 284, 1],
                [1, "cs", 2, 224, 285, 1],
                [1, "cs", 2, 224, 287, 1],
                [1, "cs", 2, 223, 287, 1],
                [1, "cs", 2, 223, 285, 1],
                [1, "cs", 2, 223, 283, 1],
                [1, "cs", 2, 223, 279, 1],
                [1, "cs", 3, 223, 278, 1],
                [1, "cs", 3, 223, 282, 1],
                [1, "cs", 3, 223, 286, 1],
                [1, "cs", 3, 223, 289, 1],
                [1, "cs", 3, 224, 289, 1],
                [1, "cs", 2, 223, 288, 1],
                [1, "cs", 2, 224, 290, 1],
                [1, "cs", 1, 223, 290, 1],
                [1, "cs", 0, 224, 292, 1],
                [1, "cs", 0, 223, 294, 1],
                [1, "cs", 0, 224, 297, 1],
                [1, "cs", 0, 223, 299, 1],
                [1, "cs", 2, 223, 291, 1],
                [1, "cs", 2, 224, 291, 1],
                [1, "cs", 2, 223, 292, 1],
                [1, "cs", 2, 223, 293, 1],
                [1, "cs", 2, 224, 293, 1],
                [1, "cs", 2, 224, 294, 1],
                [1, "cs", 1, 224, 295, 1],
                [1, "cs", 2, 223, 295, 1],
                [1, "cs", 2, 223, 296, 1],
                [1, "cs", 2, 224, 296, 1],
                [1, "cs", 2, 223, 297, 1],
                [1, "cs", 2, 223, 298, 1],
                [1, "cs", 2, 224, 298, 1],
                [1, "cs", 2, 224, 299, 1],
                [1, "cs", 2, 223, 300, 1],
                [1, "cs", 1, 224, 300, 1],
                [1, "cs", 0, 223, 301, 1],
                [1, "cs", 0, 224, 302, 1],
                [1, "cs", 0, 224, 304, 1],
                [1, "cs", 3, 224, 301, 1],
                [1, "cs", 3, 224, 303, 1],
                [1, "cs", 0, 221, 303, 1],
                [1, "cs", 0, 219, 304, 1],
                [1, "cs", 1, 222, 304, 1],
                [1, "cs", 1, 222, 302, 1],
                [1, "cs", 2, 223, 302, 1],
                [1, "cs", 2, 223, 303, 1],
                [1, "cs", 2, 222, 303, 1],
                [1, "cs", 2, 223, 304, 1],
                [1, "cs", 2, 221, 304, 1],
                [1, "cs", 2, 220, 304, 1],
                [1, "cs", 2, 220, 303, 1],
                [1, "cs", 2, 220, 302, 1],
                [1, "cs", 2, 221, 302, 1],
                [1, "cs", 2, 219, 303, 1],
                [1, "cs", 0, 217, 302, 1],
                [1, "cs", 0, 215, 304, 1],
                [1, "cs", 0, 214, 302, 1],
                [1, "cs", 1, 218, 302, 1],
                [1, "cs", 1, 217, 304, 1],
                [1, "cs", 1, 215, 302, 1],
                [1, "cs", 2, 219, 302, 1],
                [1, "cs", 2, 218, 303, 1],
                [1, "cs", 2, 218, 304, 1],
                [1, "cs", 2, 217, 303, 1],
                [1, "cs", 2, 216, 304, 1],
                [1, "cs", 2, 215, 303, 1],
                [1, "cs", 2, 216, 303, 1],
                [1, "cs", 2, 216, 302, 1],
                [1, "cs", 2, 214, 303, 1],
                [1, "cs", 2, 214, 304, 1],
                [1, "cs", 0, 212, 302, 1],
                [1, "cs", 0, 210, 303, 1],
                [1, "cs", 0, 212, 304, 1],
                [1, "cs", 0, 208, 304, 1],
                [1, "cs", 1, 210, 302, 1],
                [1, "cs", 1, 208, 303, 1],
                [1, "cs", 2, 213, 302, 1],
                [1, "cs", 2, 213, 303, 1],
                [1, "cs", 2, 213, 304, 1],
                [1, "cs", 2, 212, 303, 1],
                [1, "cs", 2, 211, 304, 1],
                [1, "cs", 2, 211, 303, 1],
                [1, "cs", 2, 211, 302, 1],
                [1, "cs", 2, 209, 302, 1],
                [1, "cs", 2, 209, 303, 1],
                [1, "cs", 2, 209, 304, 1],
                [1, "cs", 2, 210, 304, 1],
                [1, "cs", 2, 208, 302, 1],
                [1, "cs", 0, 206, 303, 1],
                [1, "cs", 0, 203, 304, 1],
                [1, "cs", 0, 200, 303, 1],
                [1, "cs", 0, 199, 304, 1],
                [1, "cs", 0, 195, 304, 1],
                [1, "cs", 0, 191, 303, 1],
                [1, "cs", 0, 193, 304, 1],
                [1, "cs", 0, 189, 304, 1],
                [1, "cs", 1, 204, 303, 1],
                [1, "cs", 0, 197, 302, 1],
                [1, "cs", 0, 202, 302, 1],
                [1, "cs", 0, 188, 302, 1],
                [1, "cs", 0, 194, 302, 1],
                [1, "cs", 1, 197, 303, 1],
                [1, "cs", 1, 201, 304, 1],
                [1, "cs", 1, 192, 302, 1],
                [1, "cs", 1, 189, 303, 1],
                [1, "cs", 1, 205, 302, 1],
                [1, "cs", 1, 188, 304, 1],
                [1, "cs", 2, 207, 302, 1],
                [1, "cs", 2, 207, 303, 1],
                [1, "cs", 2, 207, 304, 1],
                [1, "cs", 2, 206, 304, 1],
                [1, "cs", 2, 206, 302, 1],
                [1, "cs", 2, 205, 303, 1],
                [1, "cs", 2, 204, 304, 1],
                [1, "cs", 2, 205, 304, 1],
                [1, "cs", 2, 204, 302, 1],
                [1, "cs", 2, 203, 302, 1],
                [1, "cs", 2, 203, 303, 1],
                [1, "cs", 2, 202, 303, 1],
                [1, "cs", 2, 201, 303, 1],
                [1, "cs", 2, 201, 302, 1],
                [1, "cs", 2, 200, 302, 1],
                [1, "cs", 2, 199, 302, 1],
                [1, "cs", 2, 198, 303, 1],
                [1, "cs", 2, 198, 302, 1],
                [1, "cs", 2, 199, 303, 1],
                [1, "cs", 2, 200, 304, 1],
                [1, "cs", 2, 202, 304, 1],
                [1, "cs", 2, 197, 304, 1],
                [1, "cs", 2, 198, 304, 1],
                [1, "cs", 2, 196, 304, 1],
                [1, "cs", 2, 196, 303, 1],
                [1, "cs", 2, 196, 302, 1],
                [1, "cs", 2, 195, 302, 1],
                [1, "cs", 2, 195, 303, 1],
                [1, "cs", 2, 194, 303, 1],
                [1, "cs", 2, 194, 304, 1],
                [1, "cs", 2, 193, 303, 1],
                [1, "cs", 2, 193, 302, 1],
                [1, "cs", 2, 192, 303, 1],
                [1, "cs", 2, 192, 304, 1],
                [1, "cs", 2, 191, 304, 1],
                [1, "cs", 2, 190, 304, 1],
                [1, "cs", 2, 190, 303, 1],
                [1, "cs", 2, 189, 302, 1],
                [1, "cs", 2, 190, 302, 1],
                [1, "cs", 2, 191, 302, 1],
                [1, "cs", 2, 188, 303, 1],
                [1, "cs", 0, 186, 303, 1],
                [1, "cs", 0, 183, 304, 1],
                [1, "cs", 0, 184, 302, 1],
                [1, "cs", 0, 181, 302, 1],
                [1, "cs", 0, 176, 302, 1],
                [1, "cs", 0, 178, 303, 1],
                [1, "cs", 0, 173, 304, 1],
                [1, "cs", 0, 170, 303, 1],
                [1, "cs", 0, 172, 302, 1],
                [1, "cs", 1, 182, 303, 1],
                [1, "cs", 1, 178, 304, 1],
                [1, "cs", 1, 175, 304, 1],
                [1, "cs", 1, 173, 302, 1],
                [1, "cs", 1, 185, 304, 1],
                [1, "cs", 1, 169, 304, 1],
                [1, "cs", 3, 187, 304, 1],
                [1, "cs", 3, 186, 304, 1],
                [1, "cs", 3, 187, 303, 1],
                [1, "cs", 3, 187, 302, 1],
                [1, "cs", 3, 186, 302, 1],
                [1, "cs", 3, 185, 302, 1],
                [1, "cs", 3, 185, 303, 1],
                [1, "cs", 3, 184, 303, 1],
                [1, "cs", 3, 183, 303, 1],
                [1, "cs", 3, 183, 302, 1],
                [1, "cs", 3, 182, 302, 1],
                [1, "cs", 3, 184, 304, 1],
                [1, "cs", 3, 182, 304, 1],
                [1, "cs", 3, 181, 304, 1],
                [1, "cs", 3, 179, 304, 1],
                [1, "cs", 3, 180, 304, 1],
                [1, "cs", 3, 181, 303, 1],
                [1, "cs", 3, 180, 303, 1],
                [1, "cs", 3, 179, 303, 1],
                [1, "cs", 3, 180, 302, 1],
                [1, "cs", 3, 179, 302, 1],
                [1, "cs", 3, 178, 302, 1],
                [1, "cs", 3, 177, 302, 1],
                [1, "cs", 3, 177, 304, 1],
                [1, "cs", 3, 177, 303, 1],
                [1, "cs", 3, 176, 303, 1],
                [1, "cs", 3, 176, 304, 1],
                [1, "cs", 3, 174, 304, 1],
                [1, "cs", 3, 175, 303, 1],
                [1, "cs", 3, 174, 303, 1],
                [1, "cs", 3, 173, 303, 1],
                [1, "cs", 3, 172, 303, 1],
                [1, "cs", 3, 171, 303, 1],
                [1, "cs", 3, 170, 304, 1],
                [1, "cs", 3, 171, 304, 1],
                [1, "cs", 3, 172, 304, 1],
                [1, "cs", 3, 174, 302, 1],
                [1, "cs", 3, 175, 302, 1],
                [1, "cs", 3, 171, 302, 1],
                [1, "cs", 3, 170, 302, 1],
                [1, "cs", 3, 169, 302, 1],
                [1, "cs", 3, 169, 303, 1],
                [1, "cs", 0, 168, 302, 1],
                [1, "cs", 0, 166, 303, 1],
                [1, "cs", 0, 163, 304, 1],
                [1, "cs", 0, 161, 302, 1],
                [1, "cs", 0, 159, 303, 1],
                [1, "cs", 0, 152, 304, 1],
                [1, "cs", 0, 155, 303, 1],
                [1, "cs", 1, 164, 303, 1],
                [1, "cs", 1, 162, 303, 1],
                [1, "cs", 1, 158, 304, 1],
                [1, "cs", 1, 156, 302, 1],
                [1, "cs", 1, 153, 302, 1],
                [1, "cs", 1, 154, 304, 1],
                [1, "cs", 2, 168, 304, 1],
                [1, "cs", 2, 168, 303, 1],
                [1, "cs", 2, 167, 303, 1],
                [1, "cs", 2, 167, 304, 1],
                [1, "cs", 2, 166, 304, 1],
                [1, "cs", 2, 165, 304, 1],
                [1, "cs", 2, 164, 304, 1],
                [1, "cs", 2, 165, 303, 1],
                [1, "cs", 2, 167, 302, 1],
                [1, "cs", 2, 166, 302, 1],
                [1, "cs", 2, 165, 302, 1],
                [1, "cs", 2, 164, 302, 1],
                [1, "cs", 2, 163, 302, 1],
                [1, "cs", 2, 162, 302, 1],
                [1, "cs", 2, 163, 303, 1],
                [1, "cs", 2, 162, 304, 1],
                [1, "cs", 2, 160, 304, 1],
                [1, "cs", 2, 159, 304, 1],
                [1, "cs", 2, 161, 304, 1],
                [1, "cs", 2, 161, 303, 1],
                [1, "cs", 2, 160, 303, 1],
                [1, "cs", 2, 160, 302, 1],
                [1, "cs", 2, 158, 302, 1],
                [1, "cs", 2, 159, 302, 1],
                [1, "cs", 2, 157, 302, 1],
                [1, "cs", 2, 156, 303, 1],
                [1, "cs", 2, 157, 303, 1],
                [1, "cs", 2, 158, 303, 1],
                [1, "cs", 2, 157, 304, 1],
                [1, "cs", 2, 156, 304, 1],
                [1, "cs", 2, 155, 304, 1],
                [1, "cs", 2, 153, 304, 1],
                [1, "cs", 2, 153, 303, 1],
                [1, "cs", 2, 154, 303, 1],
                [1, "cs", 2, 154, 302, 1],
                [1, "cs", 2, 155, 302, 1],
                [1, "cs", 2, 152, 303, 1],
                [1, "cs", 2, 152, 302, 1],
                [1, "cs", 0, 151, 302, 1],
                [1, "cs", 0, 149, 303, 1],
                [1, "cs", 0, 145, 304, 1],
                [1, "cs", 0, 147, 302, 1],
                [1, "cs", 0, 143, 303, 1],
                [1, "cs", 0, 141, 303, 1],
                [1, "cs", 1, 147, 304, 1],
                [1, "cs", 1, 145, 302, 1],
                [1, "cs", 1, 142, 302, 1],
                [1, "cs", 1, 150, 304, 1],
                [1, "cs", 2, 151, 304, 1],
                [1, "cs", 2, 151, 303, 1],
                [1, "cs", 2, 150, 303, 1],
                [1, "cs", 2, 150, 302, 1],
                [1, "cs", 2, 148, 302, 1],
                [1, "cs", 2, 146, 302, 1],
                [1, "cs", 2, 144, 302, 1],
                [1, "cs", 2, 141, 302, 1],
                [1, "cs", 2, 141, 304, 1],
                [1, "cs", 2, 142, 304, 1],
                [1, "cs", 2, 142, 303, 1],
                [1, "cs", 2, 143, 304, 1],
                [1, "cs", 2, 144, 304, 1],
                [1, "cs", 2, 144, 303, 1],
                [1, "cs", 2, 148, 304, 1],
                [1, "cs", 2, 148, 303, 1],
                [1, "cs", 2, 146, 303, 1],
                [1, "cs", 2, 145, 303, 1],
                [1, "cs", 2, 147, 303, 1],
                [1, "cs", 2, 146, 304, 1],
                [1, "cs", 2, 149, 304, 1],
                [1, "cs", 3, 149, 302, 1],
                [1, "cs", 3, 143, 302, 1],
                [1, "cs", 0, 139, 304, 1],
                [1, "cs", 0, 138, 302, 1],
                [1, "cs", 1, 139, 302, 1],
                [1, "cs", 2, 140, 302, 1],
                [1, "cs", 2, 140, 303, 1],
                [1, "cs", 2, 139, 303, 1],
                [1, "cs", 2, 138, 303, 1],
                [1, "cs", 2, 138, 304, 1],
                [1, "cs", 2, 140, 304, 1],
                [1, "cs", 0, 137, 304, 1],
                [1, "cs", 0, 135, 303, 1],
                [1, "cs", 0, 133, 304, 1],
                [1, "cs", 1, 135, 304, 1],
                [1, "cs", 1, 136, 302, 1],
                [1, "cs", 2, 137, 302, 1],
                [1, "cs", 2, 136, 303, 1],
                [1, "cs", 2, 137, 303, 1],
                [1, "cs", 2, 136, 304, 1],
                [1, "cs", 2, 134, 304, 1],
                [1, "cs", 2, 134, 303, 1],
                [1, "cs", 2, 133, 303, 1],
                [1, "cs", 2, 132, 304, 1],
                [1, "cs", 0, 131, 302, 1],
                [1, "cs", 0, 134, 302, 1],
                [1, "cs", 0, 129, 304, 1],
                [1, "cs", 1, 130, 303, 1],
                [1, "cs", 1, 132, 302, 1],
                [1, "cs", 2, 135, 302, 1],
                [1, "cs", 2, 133, 302, 1],
                [1, "cs", 2, 132, 303, 1],
                [1, "cs", 2, 131, 303, 1],
                [1, "cs", 2, 130, 304, 1],
                [1, "cs", 2, 131, 304, 1],
                [1, "cs", 2, 128, 304, 1],
                [1, "cs", 2, 129, 303, 1],
                [1, "cs", 2, 130, 302, 1],
                [1, "cs", 3, 127, 304, 1],
                [1, "cs", 2, 132, 301, 1],
                [1, "cs", 2, 133, 301, 1],
                [1, "cs", 2, 134, 301, 1],
                [1, "cs", 2, 135, 301, 1],
                [1, "cs", 3, 131, 301, 1],
                [1, "cs", 3, 136, 301, 1],
                [1, "cs", 3, 136, 178, 1],
                [1, "cs", 0, 136, 183, 1],
                [1, "cs", 2, 136, 182, 1],
                [1, "cs", 1, 136, 181, 1],
                [1, "cs", 0, 136, 179, 1],
                [1, "cs", 3, 136, 180, 1],
                [1, "cs", 2, 135, 183, 1],
                [1, "cs", 1, 135, 182, 1],
                [1, "cs", 3, 135, 180, 1],
                [1, "cs", 0, 134, 183, 1],
                [1, "cs", 2, 133, 183, 1],
                [1, "cs", 3, 133, 182, 1],
                [1, "cs", 1, 132, 183, 1],
                [1, "cs", 3, 131, 183, 1],
                [1, "cs", 2, 135, 181, 1],
                [1, "cs", 2, 134, 182, 1],
                [1, "cs", 3, 134, 181, 1],
                [1, "fod", 0, 213, 301, 0],
                [1, "fod", 0, 204, 301, 0],
                [1, "fod", 1, 196, 288, 0],
                [1, "fod", 1, 198, 283, 0],
                [1, "fod", 1, 190, 288, 0],
                [1, "fod", 1, 189, 296, 0],
                [1, "fod", 1, 193, 293, 0],
                [1, "fod", 1, 183, 292, 0],
                [1, "fod", 1, 186, 287, 0],
                [1, "fod", 1, 190, 290, 0],
                [1, "fod", 1, 218, 271, 0],
                [1, "fod", 1, 220, 266, 0],
                [1, "fod", 1, 211, 268, 0],
                [1, "fod", 1, 210, 274, 0],
                [1, "fod", 1, 205, 263, 0],
                [1, "fod", 1, 216, 258, 0],
                [1, "fod", 2, 201, 294, 0],
                [1, "fod", 2, 190, 296, 0],
                [1, "fod", 2, 188, 299, 0],
                [1, "fod", 2, 186, 297, 0],
                [1, "fod", 2, 188, 296, 0],
                [1, "fod", 2, 189, 291, 0],
                [1, "fod", 2, 189, 286, 0],
                [1, "fod", 2, 191, 286, 0],
                [1, "fod", 2, 197, 286, 0],
                [1, "fod", 2, 195, 290, 0],
                [1, "fod", 2, 186, 288, 0],
                [1, "fod", 2, 184, 290, 0],
                [1, "fod", 2, 183, 293, 0],
                [1, "fod", 2, 198, 286, 0],
                [1, "fod", 2, 196, 283, 0],
                [1, "fod", 2, 196, 281, 0],
                [1, "fod", 2, 201, 280, 0],
                [1, "fod", 2, 205, 287, 0],
                [1, "fod", 2, 209, 283, 0],
                [1, "fod", 2, 212, 280, 0],
                [1, "fod", 2, 209, 277, 0],
                [1, "fod", 2, 217, 278, 0],
                [1, "fod", 2, 219, 275, 0],
                [1, "fod", 2, 220, 271, 0],
                [1, "fod", 2, 220, 267, 0],
                [1, "fod", 2, 217, 265, 0],
                [1, "fod", 2, 213, 267, 0],
                [1, "fod", 2, 208, 264, 0],
                [1, "fod", 2, 206, 261, 0],
                [1, "fod", 2, 203, 265, 0],
                [1, "fod", 2, 204, 270, 0],
                [1, "fod", 2, 196, 267, 0],
                [1, "fod", 2, 214, 261, 0],
                [1, "fod", 2, 211, 260, 0],
                [1, "fod", 2, 218, 256, 0],
                [1, "fod", 2, 219, 262, 0],
                [1, "fod", 2, 220, 253, 0],
                [1, "fod", 2, 211, 257, 0],
                [1, "la", 3, 198, 27, 1],
                [1, "la", 3, 201, 30, 1],
                [1, "la", 3, 200, 32, 1],
                [1, "la", 3, 198, 33, 1],
                [1, "la", 3, 196, 33, 1],
                [1, "la", 3, 194, 32, 1],
                [1, "la", 3, 194, 28, 1],
                [1, "la", 0, 200, 28, 1],
                [1, "la", 0, 193, 30, 1],
                [1, "la", 3, 196, 27, 1],
                [1, "la", 3, 199, 30, 1],
                [1, "la", 3, 197, 29, 1],
                [1, "la", 3, 195, 30, 1],
                [1, "la", 3, 197, 31, 1],
                [1, "la", 2, 201, 33, 1],
                [1, "la", 4, 202, 34, 1],
                [1, "la", 4, 202, 35, 1],
                [1, "la", 4, 203, 36, 1],
                [1, "la", 4, 204, 37, 1],
                [1, "la", 2, 205, 38, 1],
                [1, "la", 5, 205, 39, 1],
                [1, "la", 5, 205, 40, 1],
                [1, "la", 2, 206, 41, 1],
                [1, "la", 1, 207, 42, 1],
                [1, "la", 1, 205, 41, 1],
                [1, "la", 4, 208, 43, 1],
                [1, "la", 4, 209, 43, 1],
                [1, "la", 1, 210, 43, 1],
                [1, "la", 2, 211, 43, 1],
                [1, "la", 5, 212, 43, 1],
                [1, "la", 4, 213, 44, 1],
                [1, "la", 3, 223, 54, 1],
                [1, "la", 3, 221, 53, 1],
                [1, "la", 3, 219, 53, 1],
                [1, "la", 4, 218, 52, 1],
                [1, "la", 4, 217, 51, 1],
                [1, "la", 4, 216, 51, 1],
                [1, "la", 1, 215, 50, 1],
                [1, "la", 4, 212, 46, 1],
                [1, "la", 1, 210, 44, 1],
                [1, "la", 3, 206, 50, 1],
                [1, "re", 0, 217, 24, 1],
                [1, "re", 0, 207, 16, 1],
                [1, "de", 44, 54, 14, 0],
                [1, "de", 44, 53, 13, 0],
                [1, "de", 44, 51, 16, 0],
                [1, "de", 44, 49, 13, 0],
                [1, "de", 44, 48, 14, 0],
                [1, "de", 21, 78, 293, 0],
                [1, "cs", 0, 221, 8, 1],
                [1, "cs", 0, 224, 9, 1],
                [1, "cs", 1, 223, 8, 1],
                [1, "cs", 2, 224, 8, 1],
                [1, "cs", 2, 222, 8, 1],
                [1, "cs", 0, 224, 6, 1],
                [1, "cs", 0, 222, 5, 1],
                [1, "cs", 0, 219, 7, 1],
                [1, "cs", 1, 220, 5, 1],
                [1, "cs", 1, 217, 7, 1],
                [1, "cs", 2, 224, 5, 1],
                [1, "cs", 2, 223, 5, 1],
                [1, "cs", 2, 224, 7, 1],
                [1, "cs", 2, 223, 7, 1],
                [1, "cs", 2, 223, 6, 1],
                [1, "cs", 2, 222, 6, 1],
                [1, "cs", 2, 222, 7, 1],
                [1, "cs", 2, 221, 7, 1],
                [1, "cs", 2, 221, 6, 1],
                [1, "cs", 2, 221, 5, 1],
                [1, "cs", 2, 220, 6, 1],
                [1, "cs", 2, 220, 7, 1],
                [1, "cs", 2, 220, 8, 1],
                [1, "cs", 2, 219, 8, 1],
                [1, "cs", 2, 219, 6, 1],
                [1, "cs", 2, 219, 5, 1],
                [1, "cs", 0, 218, 5, 1],
                [1, "cs", 0, 216, 8, 1],
                [1, "cs", 2, 218, 8, 1],
                [1, "cs", 2, 217, 8, 1],
                [1, "cs", 2, 218, 7, 1],
                [1, "cs", 2, 218, 6, 1],
                [1, "cs", 2, 217, 6, 1],
                [1, "cs", 2, 217, 5, 1],
                [1, "cs", 1, 215, 6, 1],
                [1, "cs", 1, 213, 5, 1],
                [1, "cs", 0, 214, 6, 1],
                [1, "cs", 0, 216, 5, 1],
                [1, "cs", 0, 213, 8, 1],
                [1, "cs", 0, 211, 7, 1],
                [1, "cs", 0, 209, 5, 1],
                [1, "cs", 0, 208, 7, 1],
                [1, "cs", 0, 207, 8, 1],
                [1, "cs", 2, 216, 6, 1],
                [1, "cs", 2, 216, 7, 1],
                [1, "cs", 2, 215, 7, 1],
                [1, "cs", 2, 215, 8, 1],
                [1, "cs", 2, 214, 8, 1],
                [1, "cs", 2, 214, 7, 1],
                [1, "cs", 2, 215, 5, 1],
                [1, "cs", 2, 214, 5, 1],
                [1, "cs", 2, 213, 6, 1],
                [1, "cs", 2, 213, 7, 1],
                [1, "cs", 2, 212, 7, 1],
                [1, "cs", 1, 211, 5, 1],
                [1, "cs", 1, 209, 8, 1],
                [1, "cs", 2, 212, 8, 1],
                [1, "cs", 2, 211, 8, 1],
                [1, "cs", 2, 210, 8, 1],
                [1, "cs", 2, 209, 7, 1],
                [1, "cs", 2, 210, 7, 1],
                [1, "cs", 2, 210, 6, 1],
                [1, "cs", 2, 212, 6, 1],
                [1, "cs", 2, 212, 5, 1],
                [1, "cs", 2, 211, 6, 1],
                [1, "cs", 2, 210, 5, 1],
                [1, "cs", 2, 209, 6, 1],
                [1, "cs", 2, 208, 6, 1],
                [1, "cs", 2, 208, 5, 1],
                [1, "cs", 2, 207, 7, 1],
                [1, "cs", 2, 207, 6, 1],
                [1, "cs", 2, 207, 5, 1],
                [1, "cs", 2, 206, 5, 1],
                [1, "cs", 2, 208, 8, 1],
                [1, "cs", 2, 206, 6, 1],
                [1, "cs", 0, 204, 8, 1],
                [1, "cs", 0, 205, 6, 1],
                [1, "cs", 0, 203, 5, 1],
                [1, "cs", 0, 202, 7, 1],
                [1, "cs", 0, 199, 8, 1],
                [1, "cs", 0, 200, 6, 1],
                [1, "cs", 0, 197, 6, 1],
                [1, "cs", 0, 195, 8, 1],
                [1, "cs", 0, 194, 6, 1],
                [1, "cs", 1, 202, 8, 1],
                [1, "cs", 1, 206, 7, 1],
                [1, "cs", 1, 201, 5, 1],
                [1, "cs", 1, 197, 8, 1],
                [1, "cs", 1, 192, 7, 1],
                [1, "cs", 1, 195, 5, 1],
                [1, "cs", 2, 205, 7, 1],
                [1, "cs", 2, 205, 8, 1],
                [1, "cs", 2, 206, 8, 1],
                [1, "cs", 2, 204, 7, 1],
                [1, "cs", 2, 204, 6, 1],
                [1, "cs", 2, 204, 5, 1],
                [1, "cs", 2, 205, 5, 1],
                [1, "cs", 2, 203, 6, 1],
                [1, "cs", 2, 203, 7, 1],
                [1, "cs", 2, 203, 8, 1],
                [1, "cs", 2, 201, 8, 1],
                [1, "cs", 2, 200, 8, 1],
                [1, "cs", 2, 200, 7, 1],
                [1, "cs", 2, 201, 7, 1],
                [1, "cs", 2, 201, 6, 1],
                [1, "cs", 2, 202, 5, 1],
                [1, "cs", 2, 202, 6, 1],
                [1, "cs", 2, 200, 5, 1],
                [1, "cs", 2, 199, 5, 1],
                [1, "cs", 2, 197, 5, 1],
                [1, "cs", 2, 196, 5, 1],
                [1, "cs", 2, 198, 5, 1],
                [1, "cs", 2, 198, 6, 1],
                [1, "cs", 2, 199, 6, 1],
                [1, "cs", 2, 199, 7, 1],
                [1, "cs", 2, 198, 7, 1],
                [1, "cs", 2, 198, 8, 1],
                [1, "cs", 2, 197, 7, 1],
                [1, "cs", 2, 196, 7, 1],
                [1, "cs", 2, 196, 8, 1],
                [1, "cs", 2, 196, 6, 1],
                [1, "cs", 2, 195, 6, 1],
                [1, "cs", 2, 195, 7, 1],
                [1, "cs", 2, 194, 7, 1],
                [1, "cs", 2, 193, 8, 1],
                [1, "cs", 2, 194, 8, 1],
                [1, "cs", 2, 193, 7, 1],
                [1, "cs", 2, 193, 6, 1],
                [1, "cs", 2, 193, 5, 1],
                [1, "cs", 2, 194, 5, 1],
                [1, "cs", 0, 192, 5, 1],
                [1, "cs", 0, 191, 8, 1],
                [1, "cs", 0, 190, 6, 1],
                [1, "cs", 0, 188, 7, 1],
                [1, "cs", 0, 186, 8, 1],
                [1, "cs", 0, 186, 5, 1],
                [1, "cs", 0, 184, 7, 1],
                [1, "cs", 0, 182, 8, 1],
                [1, "cs", 0, 181, 6, 1],
                [1, "cs", 1, 189, 8, 1],
                [1, "cs", 1, 183, 8, 1],
                [1, "cs", 1, 188, 5, 1],
                [1, "cs", 1, 185, 6, 1],
                [1, "cs", 1, 180, 7, 1],
                [1, "cs", 1, 183, 5, 1],
                [1, "cs", 1, 178, 8, 1],
                [1, "cs", 1, 177, 6, 1],
                [1, "cs", 1, 173, 7, 1],
                [1, "cs", 1, 171, 7, 1],
                [1, "cs", 0, 177, 8, 1],
                [1, "cs", 0, 175, 7, 1],
                [1, "cs", 0, 179, 5, 1],
                [1, "cs", 0, 174, 5, 1],
                [1, "cs", 0, 176, 5, 1],
                [1, "cs", 0, 172, 8, 1],
                [1, "cs", 0, 170, 8, 1],
                [1, "cs", 0, 169, 6, 1],
                [1, "cs", 2, 192, 6, 1],
                [1, "cs", 2, 192, 8, 1],
                [1, "cs", 2, 191, 7, 1],
                [1, "cs", 2, 191, 6, 1],
                [1, "cs", 2, 191, 5, 1],
                [1, "cs", 2, 190, 5, 1],
                [1, "cs", 2, 189, 5, 1],
                [1, "cs", 2, 189, 6, 1],
                [1, "cs", 2, 189, 7, 1],
                [1, "cs", 2, 190, 7, 1],
                [1, "cs", 2, 190, 8, 1],
                [1, "cs", 2, 188, 8, 1],
                [1, "cs", 2, 187, 8, 1],
                [1, "cs", 2, 187, 7, 1],
                [1, "cs", 2, 187, 6, 1],
                [1, "cs", 2, 188, 6, 1],
                [1, "cs", 2, 187, 5, 1],
                [1, "cs", 2, 186, 6, 1],
                [1, "cs", 2, 186, 7, 1],
                [1, "cs", 2, 185, 7, 1],
                [1, "cs", 2, 185, 8, 1],
                [1, "cs", 2, 184, 8, 1],
                [1, "cs", 2, 183, 7, 1],
                [1, "cs", 2, 183, 6, 1],
                [1, "cs", 2, 184, 6, 1],
                [1, "cs", 2, 184, 5, 1],
                [1, "cs", 2, 185, 5, 1],
                [1, "cs", 2, 182, 6, 1],
                [1, "cs", 2, 182, 7, 1],
                [1, "cs", 2, 181, 7, 1],
                [1, "cs", 2, 181, 8, 1],
                [1, "cs", 2, 180, 8, 1],
                [1, "cs", 2, 179, 8, 1],
                [1, "cs", 2, 182, 5, 1],
                [1, "cs", 2, 181, 5, 1],
                [1, "cs", 2, 180, 5, 1],
                [1, "cs", 2, 180, 6, 1],
                [1, "cs", 2, 179, 6, 1],
                [1, "cs", 2, 179, 7, 1],
                [1, "cs", 2, 178, 7, 1],
                [1, "cs", 2, 178, 6, 1],
                [1, "cs", 2, 178, 5, 1],
                [1, "cs", 2, 177, 5, 1],
                [1, "cs", 2, 177, 7, 1],
                [1, "cs", 2, 176, 7, 1],
                [1, "cs", 2, 176, 6, 1],
                [1, "cs", 2, 175, 6, 1],
                [1, "cs", 2, 175, 5, 1],
                [1, "cs", 2, 176, 8, 1],
                [1, "cs", 2, 174, 8, 1],
                [1, "cs", 2, 175, 8, 1],
                [1, "cs", 2, 173, 8, 1],
                [1, "cs", 2, 174, 7, 1],
                [1, "cs", 2, 173, 6, 1],
                [1, "cs", 2, 174, 6, 1],
                [1, "cs", 2, 172, 5, 1],
                [1, "cs", 2, 173, 5, 1],
                [1, "cs", 2, 172, 6, 1],
                [1, "cs", 2, 172, 7, 1],
                [1, "cs", 2, 171, 8, 1],
                [1, "cs", 2, 170, 7, 1],
                [1, "cs", 2, 170, 6, 1],
                [1, "cs", 2, 170, 5, 1],
                [1, "cs", 2, 171, 5, 1],
                [1, "cs", 2, 171, 6, 1],
                [1, "cs", 2, 169, 5, 1],
                [1, "cs", 2, 169, 7, 1],
                [1, "cs", 2, 169, 8, 1],
                [1, "cs", 1, 168, 7, 1],
                [1, "cs", 1, 166, 5, 1],
                [1, "cs", 1, 164, 7, 1],
                [1, "cs", 1, 160, 7, 1],
                [1, "cs", 1, 156, 8, 1],
                [1, "cs", 0, 166, 8, 1],
                [1, "cs", 0, 168, 5, 1],
                [1, "cs", 0, 164, 6, 1],
                [1, "cs", 0, 162, 7, 1],
                [1, "cs", 0, 158, 8, 1],
                [1, "cs", 0, 157, 6, 1],
                [1, "cs", 0, 161, 5, 1],
                [1, "cs", 0, 159, 5, 1],
                [1, "cs", 0, 155, 7, 1],
                [1, "cs", 0, 154, 5, 1],
                [1, "cs", 0, 151, 7, 1],
                [1, "cs", 1, 153, 8, 1],
                [1, "cs", 1, 151, 5, 1],
                [1, "cs", 2, 168, 6, 1],
                [1, "cs", 2, 168, 8, 1],
                [1, "cs", 2, 167, 8, 1],
                [1, "cs", 2, 167, 7, 1],
                [1, "cs", 2, 167, 6, 1],
                [1, "cs", 2, 167, 5, 1],
                [1, "cs", 2, 166, 6, 1],
                [1, "cs", 2, 166, 7, 1],
                [1, "cs", 2, 165, 7, 1],
                [1, "cs", 2, 165, 6, 1],
                [1, "cs", 2, 165, 5, 1],
                [1, "cs", 2, 164, 5, 1],
                [1, "cs", 2, 163, 5, 1],
                [1, "cs", 2, 162, 5, 1],
                [1, "cs", 2, 162, 6, 1],
                [1, "cs", 2, 163, 6, 1],
                [1, "cs", 2, 163, 7, 1],
                [1, "cs", 2, 163, 8, 1],
                [1, "cs", 2, 164, 8, 1],
                [1, "cs", 2, 165, 8, 1],
                [1, "cs", 2, 161, 8, 1],
                [1, "cs", 2, 162, 8, 1],
                [1, "cs", 2, 160, 8, 1],
                [1, "cs", 2, 159, 8, 1],
                [1, "cs", 2, 159, 7, 1],
                [1, "cs", 2, 159, 6, 1],
                [1, "cs", 2, 160, 5, 1],
                [1, "cs", 2, 160, 6, 1],
                [1, "cs", 2, 161, 6, 1],
                [1, "cs", 2, 161, 7, 1],
                [1, "cs", 2, 157, 7, 1],
                [1, "cs", 2, 158, 7, 1],
                [1, "cs", 2, 158, 6, 1],
                [1, "cs", 2, 158, 5, 1],
                [1, "cs", 2, 155, 5, 1],
                [1, "cs", 2, 155, 6, 1],
                [1, "cs", 2, 156, 6, 1],
                [1, "cs", 2, 156, 7, 1],
                [1, "cs", 2, 157, 8, 1],
                [1, "cs", 2, 155, 8, 1],
                [1, "cs", 2, 154, 8, 1],
                [1, "cs", 2, 154, 7, 1],
                [1, "cs", 2, 154, 6, 1],
                [1, "cs", 2, 152, 8, 1],
                [1, "cs", 2, 153, 7, 1],
                [1, "cs", 2, 153, 6, 1],
                [1, "cs", 2, 153, 5, 1],
                [1, "cs", 2, 152, 5, 1],
                [1, "cs", 2, 152, 6, 1],
                [1, "cs", 2, 152, 7, 1],
                [1, "cs", 2, 151, 6, 1],
                [1, "cs", 2, 157, 5, 1],
                [1, "cs", 1, 156, 5, 1],
                [1, "cs", 0, 150, 5, 1],
                [1, "cs", 0, 149, 7, 1],
                [1, "cs", 0, 147, 8, 1],
                [1, "cs", 0, 146, 5, 1],
                [1, "cs", 0, 144, 7, 1],
                [1, "cs", 0, 142, 5, 1],
                [1, "cs", 1, 147, 6, 1],
                [1, "cs", 1, 145, 8, 1],
                [1, "cs", 1, 144, 5, 1],
                [1, "cs", 2, 148, 5, 1],
                [1, "cs", 2, 149, 5, 1],
                [1, "cs", 2, 150, 6, 1],
                [1, "cs", 2, 150, 8, 1],
                [1, "cs", 2, 151, 8, 1],
                [1, "cs", 2, 150, 7, 1],
                [1, "cs", 2, 149, 8, 1],
                [1, "cs", 2, 148, 8, 1],
                [1, "cs", 2, 149, 6, 1],
                [1, "cs", 2, 148, 6, 1],
                [1, "cs", 2, 148, 7, 1],
                [1, "cs", 2, 147, 7, 1],
                [1, "cs", 2, 147, 5, 1],
                [1, "cs", 2, 146, 6, 1],
                [1, "cs", 2, 146, 7, 1],
                [1, "cs", 2, 146, 8, 1],
                [1, "cs", 2, 145, 7, 1],
                [1, "cs", 2, 145, 6, 1],
                [1, "cs", 2, 145, 5, 1],
                [1, "cs", 2, 144, 6, 1],
                [1, "cs", 2, 143, 5, 1],
                [1, "cs", 2, 143, 6, 1],
                [1, "cs", 2, 142, 6, 1],
                [1, "cs", 2, 141, 5, 1],
                [1, "cs", 2, 224, 10, 1],
                [1, "cs", 0, 224, 11, 1],
                [1, "cs", 0, 224, 13, 1],
                [1, "cs", 0, 224, 17, 1],
                [1, "cs", 0, 224, 19, 1],
                [1, "cs", 0, 224, 22, 1],
                [1, "cs", 0, 224, 24, 1],
                [1, "cs", 0, 224, 29, 1],
                [1, "cs", 0, 224, 33, 1],
                [1, "cs", 0, 224, 35, 1],
                [1, "cs", 0, 224, 38, 1],
                [1, "cs", 1, 224, 14, 1],
                [1, "cs", 1, 224, 20, 1],
                [1, "cs", 1, 224, 27, 1],
                [1, "cs", 1, 224, 31, 1],
                [1, "cs", 1, 224, 36, 1],
                [1, "cs", 2, 224, 12, 1],
                [1, "cs", 2, 224, 15, 1],
                [1, "cs", 2, 224, 16, 1],
                [1, "cs", 2, 224, 18, 1],
                [1, "cs", 2, 224, 21, 1],
                [1, "cs", 2, 224, 23, 1],
                [1, "cs", 2, 224, 25, 1],
                [1, "cs", 2, 224, 26, 1],
                [1, "cs", 2, 224, 28, 1],
                [1, "cs", 2, 224, 30, 1],
                [1, "cs", 2, 224, 32, 1],
                [1, "cs", 2, 224, 34, 1],
                [1, "cs", 2, 224, 37, 1],
                [1, "cs", 2, 224, 39, 1],
                [1, "cs", 0, 224, 41, 1],
                [1, "cs", 0, 224, 44, 1],
                [1, "cs", 0, 224, 46, 1],
                [1, "cs", 0, 224, 52, 1],
                [1, "cs", 0, 224, 57, 1],
                [1, "cs", 1, 224, 47, 1],
                [1, "cs", 2, 224, 40, 1],
                [1, "cs", 2, 224, 42, 1],
                [1, "cs", 2, 224, 43, 1],
                [1, "cs", 2, 224, 45, 1],
                [1, "cs", 2, 224, 49, 1],
                [1, "cs", 1, 224, 50, 1],
                [1, "cs", 2, 224, 51, 1],
                [1, "la", 3, 224, 54, 1],
                [1, "cs", 2, 224, 56, 1],
                [1, "cs", 2, 224, 58, 1],
                [1, "cs", 2, 224, 61, 1],
                [1, "cs", 0, 224, 60, 1],
                [1, "cs", 0, 224, 64, 1],
                [1, "cs", 0, 224, 66, 1],
                [1, "cs", 0, 224, 70, 1],
                [1, "cs", 0, 224, 74, 1],
                [1, "cs", 0, 224, 77, 1],
                [1, "cs", 1, 224, 62, 1],
                [1, "cs", 1, 224, 68, 1],
                [1, "cs", 1, 224, 72, 1],
                [1, "cs", 1, 224, 76, 1],
                [1, "cs", 1, 224, 80, 1],
                [1, "cs", 1, 224, 83, 1],
                [1, "cs", 1, 224, 91, 1],
                [1, "cs", 1, 224, 95, 1],
                [1, "cs", 1, 224, 97, 1],
                [1, "cs", 0, 224, 85, 1],
                [1, "cs", 0, 224, 88, 1],
                [1, "cs", 0, 224, 93, 1],
                [1, "cs", 0, 224, 98, 1],
                [1, "cs", 2, 224, 59, 1],
                [1, "cs", 2, 224, 63, 1],
                [1, "cs", 2, 224, 65, 1],
                [1, "cs", 2, 224, 67, 1],
                [1, "cs", 2, 224, 69, 1],
                [1, "cs", 2, 224, 71, 1],
                [1, "cs", 2, 224, 73, 1],
                [1, "cs", 2, 224, 75, 1],
                [1, "cs", 2, 224, 78, 1],
                [1, "cs", 2, 224, 79, 1],
                [1, "cs", 2, 224, 81, 1],
                [1, "cs", 2, 224, 82, 1],
                [1, "cs", 2, 224, 84, 1],
                [1, "cs", 2, 224, 86, 1],
                [1, "cs", 2, 224, 87, 1],
                [1, "cs", 2, 224, 89, 1],
                [1, "cs", 2, 224, 90, 1],
                [1, "cs", 2, 224, 92, 1],
                [1, "cs", 2, 224, 94, 1],
                [1, "cs", 2, 224, 96, 1],
                [1, "cs", 2, 224, 99, 1],
                [1, "cs", 2, 224, 100, 1],
                [1, "cs", 0, 224, 101, 1],
                [1, "cs", 1, 224, 103, 1],
                [1, "cs", 2, 224, 102, 1],
                [1, "cs", 0, 222, 10, 1],
                [1, "cs", 2, 223, 9, 1],
                [1, "cs", 2, 222, 9, 1],
                [1, "cs", 2, 221, 9, 1],
                [1, "cs", 2, 223, 10, 1],
                [1, "cs", 2, 223, 11, 1],
                [1, "cs", 2, 223, 12, 1],
                [1, "cs", 3, 223, 13, 1],
                [1, "cs", 3, 222, 11, 1],
                [1, "cs", 3, 220, 9, 1],
                [1, "cs", 3, 219, 9, 1],
                [1, "cs", 3, 221, 10, 1],
                [1, "re", 2, 219, 13, 1],
                [1, "re", 1, 218, 18, 1],
                [1, "re", 1, 214, 13, 1],
                [1, "cs", 0, 221, 20, 1],
                [1, "cs", 1, 223, 18, 1],
                [1, "cs", 2, 222, 19, 1],
                [1, "cs", 2, 223, 19, 1],
                [1, "cs", 2, 223, 20, 1],
                [1, "cs", 2, 222, 20, 1],
                [1, "cs", 2, 220, 21, 1],
                [1, "cs", 0, 219, 21, 1],
                [1, "cs", 3, 221, 21, 1],
                [1, "cs", 3, 218, 21, 1],
                [1, "cs", 3, 222, 21, 1],
                [1, "cs", 3, 220, 22, 1],
                [1, "cs", 3, 219, 22, 1],
                [1, "cs", 3, 221, 22, 1],
                [1, "cs", 0, 211, 9, 1],
                [1, "cs", 1, 211, 10, 1],
                [1, "cs", 1, 210, 12, 1],
                [1, "cs", 0, 211, 13, 1],
                [1, "cs", 2, 210, 9, 1],
                [1, "cs", 2, 210, 10, 1],
                [1, "cs", 2, 210, 11, 1],
                [1, "cs", 2, 212, 9, 1],
                [1, "cs", 2, 210, 13, 1],
                [1, "cs", 2, 211, 12, 1],
                [1, "cs", 2, 211, 11, 1],
                [1, "cs", 2, 211, 14, 1],
                [1, "cs", 2, 212, 15, 1],
                [1, "cs", 2, 210, 14, 1],
                [1, "cs", 3, 211, 15, 1],
                [1, "cs", 3, 213, 9, 1],
                [1, "cs", 3, 212, 10, 1],
                [1, "cs", 3, 223, 21, 1],
                [1, "cs", 3, 209, 9, 1],
                [1, "la", 3, 223, 22, 1],
                [1, "la", 3, 221, 23, 1],
                [1, "la", 3, 207, 9, 1],
                [1, "la", 3, 209, 10, 1],
                [1, "la", 0, 209, 12, 1],
                [1, "la", 4, 209, 14, 1],
                [1, "la", 4, 219, 23, 1],
                [1, "la", 3, 210, 15, 1],
                [1, "la", 3, 217, 22, 1],
                [1, "la", 4, 212, 16, 1],
                [1, "la", 2, 214, 19, 1],
                [1, "la", 4, 213, 20, 1],
                [1, "la", 1, 212, 21, 1],
                [1, "la", 4, 215, 18, 1],
                [1, "la", 2, 216, 17, 1],
                [1, "la", 5, 216, 16, 1],
                [1, "la", 5, 216, 15, 1],
                [1, "la", 1, 217, 16, 1],
                [1, "la", 2, 218, 16, 1],
                [1, "la", 2, 216, 14, 1],
                [1, "la", 2, 219, 16, 1],
                [1, "la", 5, 220, 16, 1],
                [1, "la", 5, 216, 13, 1],
                [1, "la", 4, 217, 15, 1],
                [1, "cs", 0, 211, 44, 1],
                [1, "cs", 1, 212, 45, 1],
                [1, "cs", 2, 213, 45, 1],
                [1, "cs", 0, 214, 46, 1],
                [1, "cs", 2, 215, 46, 1],
                [1, "cs", 3, 213, 46, 1],
                [1, "cs", 3, 214, 47, 1],
                [1, "cs", 3, 214, 48, 1],
                [1, "cs", 3, 216, 46, 1],
                [1, "cs", 0, 208, 20, 1],
                [1, "cs", 0, 210, 21, 1],
                [1, "cs", 0, 212, 23, 1],
                [1, "cs", 0, 213, 25, 1],
                [1, "cs", 2, 213, 24, 1],
                [1, "cs", 2, 211, 22, 1],
                [1, "cs", 2, 210, 20, 1],
                [1, "cs", 2, 209, 21, 1],
                [1, "cs", 2, 209, 20, 1],
                [1, "cs", 2, 211, 21, 1],
                [1, "cs", 2, 212, 22, 1],
                [1, "cs", 2, 213, 23, 1],
                [1, "cs", 3, 213, 26, 1],
                [1, "cs", 3, 207, 20, 1],
                [1, "la", 4, 192, 33, 1],
                [1, "la", 4, 191, 34, 1],
                [1, "la", 4, 190, 35, 1],
                [1, "la", 3, 189, 37, 1],
                [1, "la", 3, 188, 39, 1],
                [1, "la", 4, 186, 40, 1],
                [1, "la", 4, 185, 39, 1],
                [1, "la", 4, 184, 39, 1],
                [1, "la", 2, 183, 39, 1],
                [1, "la", 1, 182, 40, 1],
                [1, "la", 2, 181, 41, 1],
                [1, "la", 5, 180, 41, 1],
                [1, "la", 5, 179, 41, 1],
                [1, "la", 4, 192, 28, 1],
                [1, "la", 4, 191, 28, 1],
                [1, "la", 4, 190, 27, 1],
                [1, "la", 3, 188, 27, 1],
                [1, "la", 4, 187, 26, 1],
                [1, "la", 4, 186, 25, 1],
                [1, "la", 4, 185, 25, 1],
                [1, "la", 4, 184, 24, 1],
                [1, "la", 5, 184, 23, 1],
                [1, "la", 2, 184, 22, 1],
                [1, "la", 5, 184, 21, 1],
                [1, "la", 1, 183, 20, 1],
                [1, "la", 5, 182, 20, 1],
                [1, "la", 2, 181, 20, 1],
                [1, "la", 5, 180, 20, 1],
                [1, "la", 2, 179, 20, 1],
                [1, "la", 4, 178, 19, 1],
                [1, "la", 3, 178, 17, 1],
                [1, "la", 3, 176, 18, 1],
                [1, "cs", 0, 177, 15, 1],
                [1, "cs", 0, 175, 17, 1],
                [1, "cs", 0, 180, 16, 1],
                [1, "cs", 0, 174, 19, 1],
                [1, "cs", 0, 172, 20, 1],
                [1, "cs", 1, 175, 15, 1],
                [1, "cs", 1, 172, 18, 1],
                [1, "cs", 1, 181, 15, 1],
                [1, "cs", 2, 179, 15, 1],
                [1, "cs", 2, 177, 16, 1],
                [1, "cs", 2, 176, 16, 1],
                [1, "cs", 2, 174, 18, 1],
                [1, "cs", 2, 173, 19, 1],
                [1, "cs", 2, 172, 19, 1],
                [1, "cs", 2, 173, 18, 1],
                [1, "cs", 2, 173, 17, 1],
                [1, "cs", 2, 174, 17, 1],
                [1, "cs", 2, 174, 16, 1],
                [1, "cs", 2, 175, 16, 1],
                [1, "cs", 2, 176, 15, 1],
                [1, "cs", 2, 178, 15, 1],
                [1, "cs", 2, 178, 16, 1],
                [1, "cs", 2, 179, 16, 1],
                [1, "cs", 2, 180, 15, 1],
                [1, "cs", 2, 181, 16, 1],
                [1, "cs", 3, 182, 16, 1],
                [1, "cs", 3, 172, 21, 1],
                [1, "la", 1, 175, 19, 1],
                [1, "la", 2, 174, 20, 1],
                [1, "la", 2, 173, 20, 1],
                [1, "la", 1, 180, 17, 1],
                [1, "la", 2, 181, 17, 1],
                [1, "la", 3, 191, 20, 1],
                [1, "s", 0, 217, 30, 1],
                [1, "s", 0, 208, 35, 1],
                [1, "s", 0, 204, 24, 1],
                [1, "s", 1, 218, 32, 1],
                [1, "s", 1, 207, 34, 1],
                [1, "s", 1, 202, 23, 1],
                [1, "s", 1, 195, 16, 1],
                [1, "s", 2, 222, 28, 1],
                [1, "s", 2, 212, 38, 1],
                [1, "s", 2, 207, 23, 1],
                [1, "s", 2, 202, 12, 1],
                [1, "s", 2, 195, 18, 1],
                [1, "s", 1, 191, 12, 1],
                [1, "s", 0, 187, 16, 1],
                [1, "s", 2, 188, 16, 1],
                [1, "s", 1, 186, 14, 1],
                [1, "s", 1, 201, 16, 1],
                [1, "g", 1, 216, 31, 1],
                [1, "g", 0, 200, 15, 1],
                [1, "g", 0, 202, 40, 1],
                [1, "g", 0, 189, 32, 1],
                [1, "g", 0, 204, 28, 1],
                [1, "g", 0, 196, 24, 1],
                [1, "g", 2, 198, 37, 1],
                [1, "s", 0, 193, 39, 1],
                [1, "s", 0, 201, 45, 1],
                [1, "a", 0, 210, 29, 1],
                [1, "a", 0, 200, 20, 1],
                [1, "cs", 0, 200, 34, 1],
                [1, "cs", 0, 193, 27, 1],
                [1, "cs", 1, 203, 30, 1],
                [1, "cs", 1, 191, 31, 1],
                [1, "cs", 2, 202, 32, 1],
                [1, "cs", 2, 194, 26, 1],
                [1, "cs", 2, 192, 27, 1],
                [1, "cs", 2, 192, 32, 1],
                [1, "cs", 2, 203, 31, 1],
                [1, "cs", 2, 202, 31, 1],
                [1, "cs", 2, 202, 30, 1],
                [1, "cs", 3, 202, 29, 1],
                [1, "cs", 3, 201, 32, 1],
                [1, "cs", 3, 199, 35, 1],
                [1, "cs", 0, 193, 34, 1],
                [1, "cs", 2, 194, 34, 1],
                [1, "cs", 2, 198, 35, 1],
                [1, "cs", 3, 199, 34, 1],
                [1, "cs", 3, 191, 29, 1],
                [1, "cs", 0, 191, 30, 1],
                [1, "cs", 3, 190, 29, 1],
                [1, "la", 3, 180, 69, 1],
                [1, "la", 3, 182, 68, 1],
                [1, "la", 3, 184, 68, 1],
                [1, "la", 3, 186, 70, 1],
                [1, "la", 3, 184, 72, 1],
                [1, "la", 3, 182, 72, 1],
                [1, "la", 3, 180, 71, 1],
                [1, "cs", 0, 186, 68, 1],
                [1, "cs", 0, 187, 70, 1],
                [1, "cs", 0, 183, 74, 1],
                [1, "cs", 0, 178, 70, 1],
                [1, "cs", 2, 182, 66, 1],
                [1, "cs", 2, 182, 74, 1],
                [1, "cs", 2, 181, 73, 1],
                [1, "cs", 2, 180, 74, 1],
                [1, "cs", 2, 181, 74, 1],
                [1, "la", 0, 184, 70, 1],
                [1, "la", 3, 182, 70, 1],
                [1, "cs", 2, 181, 67, 1],
                [1, "cs", 3, 184, 67, 1],
                [1, "cs", 3, 182, 67, 1],
                [1, "la", 4, 187, 69, 1],
                [1, "la", 1, 188, 68, 1],
                [1, "la", 4, 189, 68, 1],
                [1, "la", 2, 190, 68, 1],
                [1, "la", 1, 191, 68, 1],
                [1, "la", 4, 192, 68, 1],
                [1, "la", 2, 193, 68, 1],
                [1, "la", 4, 194, 69, 1],
                [1, "la", 2, 194, 70, 1],
                [1, "la", 5, 195, 71, 1],
                [1, "la", 1, 194, 71, 1],
                [1, "la", 2, 196, 72, 1],
                [1, "la", 4, 196, 71, 1],
                [1, "la", 1, 197, 73, 1],
                [1, "la", 5, 196, 73, 1],
                [1, "la", 5, 198, 73, 1],
                [1, "la", 3, 201, 73, 1],
                [1, "la", 3, 203, 72, 1],
                [1, "la", 4, 199, 73, 1],
                [1, "la", 1, 205, 72, 1],
                [1, "la", 2, 206, 72, 1],
                [1, "la", 5, 207, 72, 1],
                [1, "la", 1, 208, 72, 1],
                [1, "la", 1, 209, 73, 1],
                [1, "la", 2, 209, 74, 1],
                [1, "la", 5, 211, 76, 1],
                [1, "la", 4, 210, 75, 1],
                [1, "la", 5, 212, 76, 1],
                [1, "la", 4, 202, 75, 1],
                [1, "la", 2, 203, 76, 1],
                [1, "la", 4, 204, 77, 1],
                [1, "la", 2, 204, 78, 1],
                [1, "la", 2, 204, 79, 1],
                [1, "la", 5, 204, 80, 1],
                [1, "cs", 0, 202, 74, 1],
                [1, "cs", 1, 203, 74, 1],
                [1, "cs", 2, 204, 73, 1],
                [1, "cs", 2, 203, 75, 1],
                [1, "cs", 3, 204, 76, 1],
                [1, "cs", 3, 205, 73, 1],
                [1, "cs", 0, 205, 74, 1],
                [1, "cs", 2, 204, 74, 1],
                [1, "cs", 2, 204, 75, 1],
                [1, "cs", 2, 206, 73, 1],
                [1, "cs", 3, 207, 73, 1],
                [1, "cs", 2, 205, 76, 1],
                [1, "cs", 3, 205, 77, 1],
                [1, "la", 3, 183, 66, 1],
                [1, "la", 4, 183, 65, 1],
                [1, "la", 4, 184, 64, 1],
                [1, "la", 4, 185, 63, 1],
                [1, "la", 1, 185, 62, 1],
                [1, "la", 2, 185, 61, 1],
                [1, "la", 2, 185, 60, 1],
                [1, "la", 4, 186, 59, 1],
                [1, "la", 1, 187, 58, 1],
                [1, "la", 2, 187, 57, 1],
                [1, "la", 2, 187, 56, 1],
                [1, "s", 0, 191, 60, 1],
                [1, "s", 1, 195, 58, 1],
                [1, "s", 1, 199, 46, 1],
                [1, "s", 2, 202, 49, 1],
                [1, "g", 2, 197, 55, 1],
                [1, "g", 1, 213, 55, 1],
                [1, "g", 0, 192, 45, 1],
                [1, "g", 0, 210, 61, 1],
                [1, "g", 0, 182, 52, 1],
                [1, "g", 0, 180, 35, 1],
                [1, "g", 0, 175, 25, 1],
                [1, "g", 0, 168, 32, 1],
                [1, "g", 1, 179, 28, 1],
                [1, "g", 1, 161, 16, 1],
                [1, "g", 2, 172, 12, 1],
                [1, "g", 2, 160, 25, 1],
                [1, "g", 2, 157, 39, 1],
                [1, "g", 2, 170, 43, 1],
                [1, "g", 2, 202, 67, 1],
                [1, "g", 2, 217, 72, 1],
                [1, "g", 2, 214, 82, 1],
                [1, "g", 2, 193, 86, 1],
                [1, "g", 2, 168, 60, 1],
                [1, "g", 2, 165, 78, 1],
                [1, "g", 2, 173, 88, 1],
                [1, "s", 0, 185, 51, 1],
                [1, "s", 0, 175, 44, 1],
                [1, "s", 0, 165, 50, 1],
                [1, "s", 0, 160, 32, 1],
                [1, "s", 1, 162, 30, 1],
                [1, "s", 1, 176, 28, 1],
                [1, "s", 1, 154, 17, 1],
                [1, "s", 1, 184, 49, 1],
                [1, "s", 1, 192, 62, 1],
                [1, "s", 1, 216, 62, 1],
                [1, "s", 1, 204, 65, 1],
                [1, "s", 1, 217, 79, 1],
                [1, "s", 1, 206, 86, 1],
                [1, "la", 3, 211, 69, 1],
                [1, "la", 4, 215, 69, 1],
                [1, "la", 5, 201, 81, 1],
                [1, "la", 1, 207, 83, 1],
                [1, "la", 3, 173, 32, 1],
                [1, "la", 2, 181, 45, 1],
                [1, "la", 1, 178, 38, 1],
                [1, "la", 1, 213, 69, 1],
                [1, "la", 5, 214, 69, 1],
                [1, "la", 4, 216, 68, 1],
                [1, "la", 0, 191, 78, 1],
                [1, "la", 3, 191, 80, 1],
                [1, "la", 3, 189, 79, 1],
                [1, "g", 2, 150, 29, 1],
                [1, "g", 2, 154, 67, 1],
                [1, "g", 2, 202, 94, 1],
                [1, "g", 2, 155, 90, 1],
                [1, "s", 2, 215, 80, 1],
                [1, "s", 2, 204, 62, 1],
                [1, "s", 2, 218, 60, 1],
                [1, "s", 2, 194, 62, 1],
                [1, "s", 0, 216, 86, 1],
                [1, "s", 0, 211, 93, 1],
                [1, "la", 0, 216, 92, 1],
                [1, "la", 0, 151, 96, 1],
                [1, "la", 1, 155, 95, 1],
                [1, "la", 4, 214, 88, 1],
                [1, "s", 0, 205, 99, 1],
                [1, "s", 1, 217, 88, 1],
                [1, "s", 1, 213, 94, 1],
                [1, "s", 1, 202, 97, 1],
                [1, "s", 0, 199, 85, 1],
                [1, "s", 0, 190, 93, 1],
                [1, "s", 1, 199, 87, 1],
                [1, "s", 1, 192, 97, 1],
                [1, "la", 3, 196, 92, 1],
                [1, "la", 1, 199, 91, 1],
                [1, "la", 1, 220, 91, 1],
                [1, "la", 0, 219, 77, 1],
                [1, "la", 0, 200, 59, 1],
                [1, "la", 3, 188, 87, 1],
                [1, "la", 0, 183, 94, 1],
                [1, "la", 1, 187, 83, 1],
                [1, "la", 1, 175, 82, 1],
                [1, "la", 1, 172, 94, 1],
                [1, "la", 2, 179, 78, 1],
                [1, "la", 0, 166, 87, 1],
                [1, "la", 3, 159, 80, 1],
                [1, "la", 3, 167, 15, 1],
                [1, "la", 1, 164, 17, 1],
                [1, "la", 1, 172, 28, 1],
                [1, "la", 3, 153, 24, 1],
                [1, "la", 4, 164, 91, 1],
                [1, "la", 4, 156, 82, 1],
                [1, "la", 4, 149, 90, 1],
                [1, "s", 0, 178, 85, 1],
                [1, "s", 1, 180, 85, 1],
                [1, "s", 0, 163, 96, 1],
                [1, "s", 0, 159, 86, 1],
                [1, "s", 0, 185, 78, 1],
                [1, "s", 1, 194, 75, 1],
                [1, "s", 2, 195, 76, 1],
                [1, "s", 2, 181, 78, 1],
                [1, "s", 2, 161, 87, 1],
                [1, "s", 2, 166, 97, 1],
                [1, "s", 2, 177, 97, 1],
                [1, "s", 0, 149, 85, 1],
                [1, "s", 1, 151, 83, 1],
                [1, "s", 1, 175, 74, 1],
                [1, "s", 0, 174, 72, 1],
                [1, "la", 3, 168, 71, 1],
                [1, "la", 3, 180, 60, 1],
                [1, "s", 0, 156, 63, 1],
                [1, "s", 0, 151, 47, 1],
                [1, "s", 1, 158, 64, 1],
                [1, "s", 1, 161, 75, 1],
                [1, "s", 1, 162, 51, 1],
                [1, "s", 1, 175, 45, 1],
                [1, "s", 1, 152, 47, 1],
                [1, "s", 1, 159, 33, 1],
                [1, "s", 1, 152, 18, 1],
                [1, "s", 0, 151, 13, 1],
                [1, "s", 0, 166, 22, 1],
                [1, "s", 0, 170, 63, 1],
                [1, "s", 2, 172, 62, 1],
                [1, "s", 2, 155, 61, 1],
                [1, "s", 2, 167, 51, 1],
                [1, "s", 2, 150, 52, 1],
                [1, "la", 4, 178, 69, 1],
                [1, "la", 4, 177, 68, 1],
                [1, "la", 3, 176, 67, 1],
                [1, "la", 0, 174, 67, 1],
                [1, "la", 1, 172, 67, 1],
                [1, "la", 4, 171, 67, 1],
                [1, "la", 4, 170, 66, 1],
                [1, "la", 4, 169, 66, 1],
                [1, "la", 1, 168, 66, 1],
                [1, "la", 4, 167, 67, 1],
                [1, "la", 1, 166, 67, 1],
                [1, "la", 4, 165, 68, 1],
                [1, "la", 5, 164, 68, 1],
                [1, "la", 2, 163, 68, 1],
                [1, "la", 5, 162, 68, 1],
                [1, "la", 2, 161, 68, 1],
                [1, "la", 3, 153, 72, 1],
                [1, "la", 3, 163, 60, 1],
                [1, "la", 3, 164, 42, 1],
                [1, "la", 0, 155, 51, 1],
                [1, "la", 1, 168, 42, 1],
                [1, "la", 4, 158, 48, 1],
                [1, "la", 4, 178, 57, 1],
                [1, "la", 4, 151, 69, 1],
                [1, "la", 2, 170, 74, 1],
                [1, "la", 2, 160, 84, 1],
                [1, "la", 2, 174, 92, 1],
                [1, "la", 2, 188, 90, 1],
                [1, "la", 2, 209, 84, 1],
                [1, "la", 2, 206, 93, 1],
                [1, "la", 5, 156, 70, 1],
                [1, "la", 5, 165, 57, 1],
                [1, "la", 5, 182, 58, 1],
                [1, "la", 5, 166, 44, 1],
                [1, "la", 1, 163, 39, 1],
                [1, "la", 1, 152, 53, 1],
                [1, "la", 1, 152, 37, 1],
                [1, "la", 2, 163, 13, 1],
                [1, "de", 12, 219, 12, 0],
                [1, "de", 14, 203, 13, 0],
                [1, "de", 15, 220, 19, 0],
                [1, "de", 12, 223, 15, 0],
                [1, "de", 12, 213, 10, 0],
                [1, "de", 37, 217, 19, 0],
                [1, "de", 38, 220, 14, 0],
                [1, "de", 38, 215, 10, 0],
                [1, "de", 40, 214, 14, 0],
                [1, "de", 40, 222, 16, 0],
                [1, "de", 40, 209, 18, 0],
                [1, "de", 37, 212, 18, 0],
                [1, "de", 38, 215, 26, 0],
                [1, "de", 37, 222, 25, 0],
                [1, "de", 40, 221, 29, 0],
                [1, "de", 12, 220, 27, 0],
                [1, "de", 13, 213, 27, 0],
                [1, "de", 14, 215, 30, 0],
                [1, "de", 15, 219, 33, 0],
                [1, "de", 38, 220, 31, 0],
                [1, "de", 38, 217, 35, 0],
                [1, "de", 40, 221, 34, 0],
                [1, "de", 39, 215, 32, 0],
                [1, "de", 37, 211, 35, 0],
                [1, "de", 12, 223, 38, 0],
                [1, "de", 13, 213, 38, 0],
                [1, "de", 14, 222, 44, 0],
                [1, "de", 15, 208, 33, 0],
                [1, "de", 15, 206, 23, 0],
                [1, "de", 13, 205, 28, 0],
                [1, "de", 14, 211, 23, 0],
                [1, "de", 14, 201, 20, 0],
                [1, "de", 15, 198, 9, 0],
                [1, "de", 15, 199, 16, 0],
                [1, "de", 12, 194, 15, 0],
                [1, "de", 12, 197, 23, 0],
                [1, "de", 37, 205, 13, 0],
                [1, "de", 39, 204, 9, 0],
                [1, "de", 40, 196, 12, 0],
                [1, "de", 40, 198, 18, 0],
                [1, "de", 37, 192, 11, 0],
                [1, "de", 37, 199, 24, 0],
                [1, "de", 37, 209, 24, 0],
                [1, "de", 39, 209, 30, 0],
                [1, "de", 39, 204, 31, 0],
                [1, "de", 39, 192, 24, 0],
                [1, "de", 40, 187, 23, 0],
                [1, "de", 38, 187, 18, 0],
                [1, "de", 39, 192, 18, 0],
                [1, "de", 37, 185, 15, 0],
                [1, "de", 12, 188, 15, 0],
                [1, "de", 13, 185, 13, 0],
                [1, "de", 14, 189, 9, 0],
                [1, "de", 15, 187, 22, 0],
                [1, "de", 15, 180, 9, 0],
                [1, "de", 12, 177, 14, 0],
                [1, "de", 14, 173, 9, 0],
                [1, "de", 14, 171, 15, 0],
                [1, "de", 40, 182, 9, 0],
                [1, "de", 39, 179, 13, 0],
                [1, "de", 39, 175, 9, 0],
                [1, "de", 40, 173, 14, 0],
                [1, "de", 37, 169, 11, 0],
                [1, "de", 37, 163, 10, 0],
                [1, "de", 38, 164, 15, 0],
                [1, "de", 39, 170, 20, 0],
                [1, "de", 40, 160, 17, 0],
                [1, "de", 40, 154, 10, 0],
                [1, "de", 40, 165, 23, 0],
                [1, "de", 40, 150, 19, 0],
                [1, "de", 37, 155, 16, 0],
                [1, "de", 39, 146, 10, 0],
                [1, "de", 12, 159, 12, 0],
                [1, "de", 13, 151, 9, 0],
                [1, "de", 14, 150, 14, 0],
                [1, "de", 15, 153, 19, 0],
                [1, "de", 13, 161, 25, 0],
                [1, "de", 14, 169, 25, 0],
                [1, "de", 15, 176, 25, 0],
                [1, "de", 12, 180, 29, 0],
                [1, "de", 12, 188, 31, 0],
                [1, "de", 14, 181, 36, 0],
                [1, "de", 37, 186, 33, 0],
                [1, "de", 38, 183, 26, 0],
                [1, "de", 39, 177, 21, 0],
                [1, "de", 40, 175, 31, 0],
                [1, "de", 37, 176, 39, 0],
                [1, "de", 37, 168, 34, 0],
                [1, "de", 38, 162, 32, 0],
                [1, "de", 38, 168, 45, 0],
                [1, "de", 38, 173, 45, 0],
                [1, "de", 39, 160, 35, 0],
                [1, "de", 40, 161, 42, 0],
                [1, "de", 40, 170, 39, 0],
                [1, "de", 40, 181, 43, 0],
                [1, "de", 40, 156, 26, 0],
                [1, "de", 40, 150, 32, 0],
                [1, "de", 37, 159, 26, 0],
                [1, "de", 37, 155, 40, 0],
                [1, "de", 37, 154, 45, 0],
                [1, "de", 39, 149, 45, 0],
                [1, "de", 40, 150, 50, 0],
                [1, "de", 40, 160, 52, 0],
                [1, "de", 37, 164, 52, 0],
                [1, "de", 38, 168, 50, 0],
                [1, "de", 12, 176, 45, 0],
                [1, "de", 12, 167, 32, 0],
                [1, "de", 13, 158, 32, 0],
                [1, "de", 14, 149, 28, 0],
                [1, "de", 15, 163, 30, 0],
                [1, "de", 14, 158, 39, 0],
                [1, "de", 12, 171, 43, 0],
                [1, "de", 12, 174, 36, 0],
                [1, "de", 12, 151, 43, 0],
                [1, "de", 13, 152, 48, 0],
                [1, "de", 14, 164, 49, 0],
                [1, "de", 15, 149, 52, 0],
                [1, "de", 12, 174, 49, 0],
                [1, "de", 13, 183, 51, 0],
                [1, "de", 14, 186, 48, 0],
                [1, "de", 37, 182, 48, 0],
                [1, "de", 38, 187, 52, 0],
                [1, "de", 39, 188, 43, 0],
                [1, "de", 37, 200, 38, 0],
                [1, "de", 40, 194, 37, 0],
                [1, "de", 39, 199, 44, 0],
                [1, "de", 38, 200, 49, 0],
                [1, "de", 37, 196, 54, 0],
                [1, "de", 12, 194, 40, 0],
                [1, "de", 13, 202, 45, 0],
                [1, "de", 14, 198, 47, 0],
                [1, "de", 15, 198, 55, 0],
                [1, "de", 15, 212, 54, 0],
                [1, "de", 15, 216, 63, 0],
                [1, "de", 14, 209, 62, 0],
                [1, "de", 12, 219, 60, 0],
                [1, "de", 12, 206, 56, 0],
                [1, "de", 12, 218, 72, 0],
                [1, "de", 12, 223, 67, 0],
                [1, "de", 12, 205, 64, 0],
                [1, "de", 12, 193, 63, 0],
                [1, "de", 14, 216, 80, 0],
                [1, "de", 14, 222, 87, 0],
                [1, "de", 38, 210, 53, 0],
                [1, "de", 37, 210, 47, 0],
                [1, "de", 37, 200, 63, 0],
                [1, "de", 37, 218, 62, 0],
                [1, "de", 37, 222, 60, 0],
                [1, "de", 37, 207, 70, 0],
                [1, "de", 38, 203, 68, 0],
                [1, "de", 38, 195, 66, 0],
                [1, "de", 38, 218, 55, 0],
                [1, "de", 38, 212, 61, 0],
                [1, "de", 38, 222, 70, 0],
                [1, "de", 38, 218, 70, 0],
                [1, "de", 40, 222, 81, 0],
                [1, "de", 38, 214, 79, 0],
                [1, "de", 39, 213, 83, 0],
                [1, "de", 39, 207, 76, 0],
                [1, "de", 39, 208, 86, 0],
                [1, "de", 39, 218, 87, 0],
                [1, "de", 39, 222, 93, 0],
                [1, "de", 39, 216, 96, 0],
                [1, "de", 39, 209, 94, 0],
                [1, "de", 39, 201, 87, 0],
                [1, "de", 39, 198, 82, 0],
                [1, "de", 39, 207, 99, 0],
                [1, "de", 39, 200, 97, 0],
                [1, "de", 39, 202, 92, 0],
                [1, "de", 37, 194, 97, 0],
                [1, "de", 39, 204, 88, 0],
                [1, "de", 39, 189, 90, 0],
                [1, "de", 39, 194, 81, 0],
                [1, "de", 39, 188, 98, 0],
                [1, "de", 37, 183, 91, 0],
                [1, "de", 37, 186, 80, 0],
                [1, "de", 37, 191, 72, 0],
                [1, "de", 38, 184, 77, 0],
                [1, "de", 38, 180, 80, 0],
                [1, "de", 39, 173, 75, 0],
                [1, "de", 40, 178, 87, 0],
                [1, "de", 40, 174, 94, 0],
                [1, "de", 40, 192, 93, 0],
                [1, "de", 40, 165, 92, 0],
                [1, "de", 37, 160, 89, 0],
                [1, "de", 38, 161, 85, 0],
                [1, "de", 38, 164, 98, 0],
                [1, "de", 38, 151, 99, 0],
                [1, "de", 38, 151, 85, 0],
                [1, "de", 40, 148, 83, 0],
                [1, "de", 40, 160, 77, 0],
                [1, "de", 40, 167, 77, 0],
                [1, "de", 40, 153, 69, 0],
                [1, "de", 40, 149, 74, 0],
                [1, "de", 37, 161, 64, 0],
                [1, "de", 37, 154, 61, 0],
                [1, "de", 39, 157, 55, 0],
                [1, "de", 39, 174, 64, 0],
                [1, "de", 39, 175, 56, 0],
                [1, "de", 39, 149, 67, 0],
                [1, "de", 12, 218, 96, 0],
                [1, "de", 13, 212, 95, 0],
                [1, "de", 14, 204, 85, 0],
                [1, "de", 15, 215, 85, 0],
                [1, "de", 15, 197, 97, 0],
                [1, "de", 12, 198, 87, 0],
                [1, "de", 14, 196, 77, 0],
                [1, "de", 13, 194, 86, 0],
                [1, "de", 15, 181, 84, 0],
                [1, "de", 14, 184, 79, 0],
                [1, "de", 14, 188, 93, 0],
                [1, "de", 13, 180, 87, 0],
                [1, "de", 13, 178, 96, 0],
                [1, "de", 13, 163, 95, 0],
                [1, "de", 15, 172, 88, 0],
                [1, "de", 15, 176, 75, 0],
                [1, "de", 14, 172, 72, 0],
                [1, "de", 14, 169, 82, 0],
                [1, "de", 13, 164, 78, 0],
                [1, "de", 13, 158, 87, 0],
                [1, "de", 13, 149, 86, 0],
                [1, "de", 15, 154, 91, 0],
                [1, "de", 15, 160, 74, 0],
                [1, "de", 14, 152, 76, 0],
                [1, "de", 14, 158, 63, 0],
                [1, "de", 14, 150, 60, 0],
                [1, "de", 12, 169, 59, 0],
                [1, "de", 13, 173, 61, 0],
                [1, "cs", 1, 143, 104, 1],
                [1, "cs", 0, 141, 102, 1],
                [1, "cs", 3, 138, 102, 1],
                [1, "cs", 2, 139, 102, 1],
                [1, "cs", 2, 140, 102, 1],
                [1, "cs", 3, 143, 107, 1],
                [1, "cs", 0, 143, 106, 1],
                [1, "cs", 2, 143, 105, 1],
                [1, "cs", 2, 142, 103, 1],
                [1, "cs", 0, 142, 104, 1],
                [1, "cs", 2, 141, 103, 1],
                [1, "cs", 3, 142, 105, 1],
                [1, "cs", 3, 140, 103, 1],
                [1, "cs", 3, 141, 104, 1],
                [1, "la", 4, 151, 23, 1],
                [1, "la", 4, 150, 22, 1],
                [1, "la", 1, 149, 21, 1],
                [1, "la", 4, 148, 21, 1],
                [1, "la", 2, 147, 20, 1],
                [1, "la", 4, 147, 19, 1],
                [1, "la", 5, 147, 18, 1],
                [1, "la", 1, 147, 17, 1],
                [1, "la", 3, 144, 9, 1],
                [1, "la", 5, 147, 16, 1],
                [1, "la", 2, 147, 15, 1],
                [1, "la", 4, 147, 14, 1],
                [1, "la", 4, 145, 11, 1],
                [1, "la", 5, 145, 12, 1],
                [1, "la", 1, 146, 13, 1],
                [1, "la", 2, 145, 13, 1],
                [1, "la", 3, 155, 25, 1],
                [1, "la", 0, 155, 24, 1],
                [1, "la", 3, 153, 26, 1],
                [1, "cs", 0, 151, 24, 1],
                [1, "cs", 0, 153, 22, 1],
                [1, "cs", 3, 152, 22, 1],
                [1, "cs", 3, 154, 22, 1],
                [1, "cs", 1, 157, 26, 1],
                [1, "cs", 2, 157, 24, 1],
                [1, "cs", 2, 156, 26, 1],
                [1, "cs", 2, 154, 28, 1],
                [1, "cs", 2, 151, 26, 1],
                [1, "cs", 2, 152, 25, 1],
                [1, "cs", 2, 151, 25, 1],
                [1, "cs", 2, 156, 27, 1],
                [1, "cs", 2, 157, 23, 1],
                [1, "cs", 2, 157, 22, 1],
                [1, "cs", 3, 150, 24, 1],
                [1, "cs", 3, 150, 23, 1],
                [1, "de", 38, 155, 29, 0],
                [1, "de", 12, 157, 27, 0],
                [1, "de", 14, 153, 29, 0],
                [1, "de", 15, 158, 23, 0],
                [1, "de", 13, 156, 21, 0],
                [1, "de", 13, 147, 36, 0],
                [1, "de", 13, 161, 56, 0],
                [1, "de", 13, 147, 79, 0],
                [1, "de", 12, 157, 99, 0],
                [1, "de", 12, 172, 99, 0],
                [1, "la", 3, 143, 102, 1],
                [1, "la", 4, 149, 96, 1],
                [1, "la", 4, 145, 102, 1],
                [1, "la", 1, 148, 97, 1],
                [1, "la", 5, 148, 98, 1],
                [1, "cs", 3, 144, 104, 1],
                [1, "cs", 3, 144, 103, 1],
                [1, "cs", 3, 145, 103, 1],
                [1, "cs", 3, 145, 104, 1],
                [1, "cs", 3, 142, 101, 1],
                [1, "cs", 3, 143, 100, 1],
                [1, "cs", 3, 141, 101, 1],
                [1, "cs", 3, 142, 100, 1],
                [1, "cs", 0, 141, 100, 1],
                [1, "cs", 2, 140, 101, 1],
                [1, "cs", 2, 144, 105, 1],
                [1, "cs", 3, 146, 103, 1],
                [1, "cs", 3, 146, 102, 1],
                [1, "cs", 3, 150, 95, 1],
                [1, "cs", 0, 150, 97, 1],
                [1, "cs", 2, 151, 98, 1],
                [1, "cs", 0, 153, 97, 1],
                [1, "cs", 3, 153, 96, 1],
                [1, "cs", 2, 149, 95, 1],
                [1, "s", 0, 213, 127, 1],
                [1, "plm", 1, 214, 131, 0],
                [1, "plm", 1, 207, 128, 0],
                [1, "plm", 0, 208, 127, 0],
                [1, "s", 1, 207, 132, 1],
                [1, "s", 2, 208, 133, 1],
                [1, "plm", 0, 217, 132, 0],
                [1, "plm", 2, 186, 158, 0],
                [1, "plm", 0, 184, 160, 0],
                [1, "s", 1, 183, 156, 1],
                [1, "s", 2, 186, 159, 1],
                [1, "p", 0, 182, 157, 1],
                [1, "p", 0, 114, 205, 1],
                [1, "plm", 1, 117, 204, 0],
                [1, "plm", 0, 117, 205, 0],
                [1, "plm", 2, 112, 204, 0],
                [1, "s", 2, 114, 207, 1],
                [1, "s", 2, 115, 204, 1],
                [1, "plm", 2, 122, 151, 0],
                [1, "plm", 1, 123, 150, 0],
                [1, "plm", 1, 117, 151, 0],
                [1, "s", 0, 118, 150, 1],
                [1, "s", 1, 122, 152, 1],
                [1, "plm", 2, 156, 130, 0],
                [1, "plm", 1, 154, 127, 0],
                [1, "s", 0, 153, 128, 1],
                [1, "s", 2, 152, 130, 1],
                [1, "p", 0, 123, 65, 1],
                [1, "plm", 2, 125, 62, 0],
                [1, "plm", 1, 124, 62, 0],
                [1, "plm", 0, 120, 65, 0],
                [1, "s", 1, 125, 63, 1],
                [1, "s", 1, 121, 64, 1],
                [1, "s", 2, 122, 62, 1],
                [1, "cs", 0, 140, 106, 1],
                [1, "cs", 2, 144, 106, 1],
                [1, "cs", 2, 145, 105, 1],
                [1, "cs", 2, 144, 107, 1],
                [1, "cs", 2, 141, 106, 1],
                [1, "cs", 2, 141, 105, 1],
                [1, "cs", 2, 140, 105, 1],
                [1, "cs", 2, 140, 104, 1],
                [1, "cs", 1, 138, 103, 1],
                [1, "cs", 0, 139, 104, 1],
                [1, "cs", 2, 139, 103, 1],
                [1, "cs", 2, 139, 105, 1],
                [1, "cs", 2, 142, 106, 1],
                [1, "cs", 2, 142, 107, 1],
                [1, "cs", 2, 139, 101, 1],
                [1, "de", 19, 27, 264, 0],
                [1, "la", 4, 147, 99, 1],
                [1, "la", 1, 146, 100, 1],
                [1, "la", 4, 145, 101, 1],
                [1, "cs", 1, 215, 47, 1],
                [1, "cs", 2, 216, 47, 1],
                [1, "cs", 2, 215, 48, 1],
                [1, "la", 4, 214, 45, 1],
                [1, "la", 4, 215, 45, 1],
                [1, "la", 0, 216, 46, 1],
                [1, "la", 4, 216, 48, 1],
                [1, "la", 4, 216, 49, 1],
                [1, "la", 4, 217, 50, 1],
                [1, "la", 3, 214, 49, 1],
                [1, "la", 4, 211, 45, 1],
                [1, "la", 3, 213, 47, 1],
                [1, "cs", 2, 224, 48, 1],
                [1, "plm", 2, 111, 243, 0],
                [1, "plm", 1, 108, 246, 0],
                [1, "s", 1, 110, 243, 1],
                [1, "s", 0, 108, 245, 1],
                [1, "s", 0, 121, 276, 1],
                [1, "plm", 2, 122, 277, 0],
                [1, "plm", 2, 117, 276, 0],
                [1, "plm", 1, 118, 277, 0],
                [1, "s", 1, 118, 278, 1],
                [1, "cs", 2, 66, 16, 1],
                [1, "cs", 3, 67, 16, 1],
                [1, "cs", 0, 67, 17, 1],
                [1, "cs", 2, 66, 17, 1],
                [1, "cs", 3, 66, 18, 1],
                [1, "cs", 3, 68, 17, 1],
                [1, "cs", 0, 36, 16, 1],
                [1, "cs", 2, 36, 17, 1],
                [1, "cs", 2, 36, 18, 1],
                [1, "cs", 3, 35, 17, 1],
                [1, "cs", 3, 36, 19, 1],
                [1, "cs", 3, 35, 18, 1],
                [1, "cs", 2, 66, 30, 1],
                [1, "cs", 2, 66, 23, 1],
                [1, "cs", 3, 66, 22, 1],
                [1, "cs", 3, 66, 31, 1],
                [1, "cs", 2, 36, 30, 1],
                [1, "cs", 2, 36, 23, 1],
                [1, "cs", 1, 36, 22, 1],
                [1, "cs", 2, 36, 31, 1],
                [1, "cs", 3, 42, 13, 1],
                [1, "cs", 0, 43, 13, 1],
                [1, "cs", 2, 44, 13, 1],
                [1, "cs", 3, 42, 16, 1],
                [1, "cs", 3, 41, 16, 1],
                [1, "cs", 3, 40, 16, 1],
                [1, "cs", 0, 42, 19, 1],
                [1, "cs", 3, 43, 19, 1],
                [1, "cs", 3, 44, 19, 1],
                [1, "cs", 3, 45, 19, 1],
                [1, "cs", 2, 46, 19, 1],
                [1, "cs", 0, 43, 22, 1],
                [1, "cs", 2, 42, 22, 1],
                [1, "cs", 1, 41, 22, 1],
                [1, "cs", 0, 40, 22, 1],
                [1, "cs", 3, 39, 17, 1],
                [1, "cs", 1, 44, 26, 1],
                [1, "cs", 2, 45, 26, 1],
                [1, "cs", 3, 46, 26, 1],
                [1, "cs", 0, 47, 26, 1],
                [1, "cs", 2, 48, 26, 1],
                [1, "cs", 3, 47, 25, 1],
                [1, "cs", 3, 43, 27, 1],
                [1, "cs", 1, 49, 32, 1],
                [1, "cs", 2, 50, 32, 1],
                [1, "cs", 2, 51, 32, 1],
                [1, "cs", 2, 52, 32, 1],
                [1, "d", 0, 51, 29, 1],
                [1, "d", 1, 53, 29, 1],
                [1, "d", 1, 49, 29, 1],
                [1, "cs", 3, 55, 31, 1],
                [1, "cs", 3, 54, 32, 1],
                [1, "cs", 3, 47, 31, 1],
                [1, "cs", 3, 48, 32, 1],
                [1, "cs", 0, 51, 33, 1],
                [1, "cs", 2, 52, 33, 1],
                [1, "cs", 2, 50, 33, 1],
                [1, "cs", 3, 56, 30, 1],
                [1, "cs", 3, 56, 31, 1],
                [1, "cs", 3, 46, 30, 1],
                [1, "cs", 3, 46, 31, 1],
                [1, "cs", 1, 53, 33, 1],
                [1, "cs", 2, 49, 33, 1],
                [1, "cs", 2, 53, 32, 1],
                [1, "cs", 0, 55, 32, 1],
                [1, "cs", 0, 47, 32, 1],
                [1, "d", 1, 54, 35, 1],
                [1, "fo", 2, 35, 15, 0],
                [1, "fo", 2, 36, 12, 0],
                [1, "fo", 2, 67, 15, 0],
                [1, "cs", 3, 60, 13, 1],
                [1, "cs", 2, 59, 13, 1],
                [1, "cs", 1, 58, 13, 1],
                [1, "cs", 3, 62, 16, 1],
                [1, "cs", 0, 61, 16, 1],
                [1, "cs", 3, 60, 16, 1],
                [1, "cs", 3, 63, 17, 1],
                [1, "cs", 2, 60, 19, 1],
                [1, "cs", 1, 59, 19, 1],
                [1, "cs", 3, 58, 19, 1],
                [1, "cs", 2, 57, 19, 1],
                [1, "cs", 2, 56, 19, 1],
                [1, "cs", 0, 55, 18, 1],
                [1, "cs", 2, 55, 17, 1],
                [1, "cs", 2, 63, 23, 1],
                [1, "cs", 0, 62, 22, 1],
                [1, "cs", 2, 61, 22, 1],
                [1, "cs", 1, 60, 22, 1],
                [1, "cs", 0, 59, 22, 1],
                [1, "cs", 2, 54, 26, 1],
                [1, "cs", 2, 55, 26, 1],
                [1, "cs", 2, 56, 26, 1],
                [1, "cs", 1, 57, 26, 1],
                [1, "cs", 2, 58, 26, 1],
                [1, "cs", 2, 59, 27, 1],
                [1, "cs", 2, 68, 16, 1],
                [1, "cs", 2, 68, 15, 1],
                [1, "cs", 3, 69, 15, 1],
                [1, "cs", 3, 70, 15, 1],
                [1, "cs", 3, 70, 14, 1],
                [1, "cs", 1, 69, 14, 1],
                [1, "cs", 1, 69, 16, 1],
                [1, "cs", 2, 71, 13, 1],
                [1, "cs", 2, 71, 14, 1],
                [1, "cs", 3, 72, 13, 1],
                [1, "cs", 3, 70, 8, 1],
                [1, "cs", 3, 71, 8, 1],
                [1, "cs", 2, 72, 8, 1],
                [1, "cs", 0, 73, 8, 1],
                [1, "cs", 3, 74, 9, 1],
                [1, "cs", 3, 74, 8, 1],
                [1, "cs", 0, 75, 8, 1],
                [1, "cs", 3, 76, 8, 1],
                [1, "cs", 3, 75, 9, 1],
                [1, "cs", 3, 75, 10, 1],
                [1, "cs", 0, 76, 10, 1],
                [1, "cs", 0, 76, 16, 1],
                [1, "cs", 3, 76, 15, 1],
                [1, "cs", 3, 75, 16, 1],
                [1, "cs", 2, 77, 11, 1],
                [1, "cs", 2, 77, 14, 1],
                [1, "cs", 3, 77, 12, 1],
                [1, "cs", 3, 77, 13, 1],
                [1, "cs", 3, 77, 15, 1],
                [1, "cs", 0, 74, 18, 1],
                [1, "cs", 1, 75, 17, 1],
                [1, "cs", 2, 74, 17, 1],
                [1, "cs", 3, 73, 19, 1],
                [1, "cs", 3, 67, 23, 1],
                [1, "cs", 0, 68, 23, 1],
                [1, "cs", 0, 72, 20, 1],
                [1, "cs", 2, 73, 20, 1],
                [1, "cs", 2, 74, 19, 1],
                [1, "cs", 2, 74, 36, 1],
                [1, "cs", 2, 77, 27, 1],
                [1, "cs", 2, 76, 26, 1],
                [1, "cs", 2, 75, 26, 1],
                [1, "cs", 0, 74, 26, 1],
                [1, "cs", 2, 75, 25, 1],
                [1, "cs", 0, 76, 25, 1],
                [1, "cs", 1, 77, 23, 1],
                [1, "cs", 2, 77, 16, 1],
                [1, "cs", 2, 76, 17, 1],
                [1, "cs", 2, 76, 24, 1],
                [1, "cs", 2, 77, 24, 1],
                [1, "cs", 2, 77, 25, 1],
                [1, "cs", 2, 77, 26, 1],
                [1, "cs", 1, 75, 27, 1],
                [1, "cs", 3, 76, 27, 1],
                [1, "cs", 2, 67, 24, 1],
                [1, "cs", 2, 66, 24, 1],
                [1, "cs", 2, 73, 26, 1],
                [1, "cs", 2, 74, 27, 1],
                [1, "cs", 2, 74, 25, 1],
                [1, "cs", 2, 66, 19, 1],
                [1, "cs", 2, 66, 20, 1],
                [1, "cs", 2, 66, 21, 1],
                [1, "cs", 2, 67, 18, 1],
                [1, "cs", 2, 67, 22, 1],
                [1, "cs", 0, 77, 36, 1],
                [1, "cs", 0, 77, 32, 1],
                [1, "cs", 1, 75, 35, 1],
                [1, "cs", 2, 75, 36, 1],
                [1, "cs", 2, 76, 36, 1],
                [1, "cs", 2, 77, 35, 1],
                [1, "cs", 2, 77, 34, 1],
                [1, "cs", 2, 76, 35, 1],
                [1, "cs", 2, 77, 33, 1],
                [1, "cs", 2, 77, 31, 1],
                [1, "cs", 0, 77, 29, 1],
                [1, "cs", 0, 71, 32, 1],
                [1, "cs", 0, 76, 34, 1],
                [1, "cs", 2, 77, 30, 1],
                [1, "cs", 2, 77, 28, 1],
                [1, "cs", 2, 76, 28, 1],
                [1, "cs", 2, 75, 28, 1],
                [1, "cs", 2, 76, 29, 1],
                [1, "cs", 2, 76, 33, 1],
                [1, "cs", 2, 70, 32, 1],
                [1, "cs", 2, 69, 31, 1],
                [1, "cs", 0, 68, 31, 1],
                [1, "cs", 2, 67, 31, 1],
                [1, "cs", 2, 67, 30, 1],
                [1, "cs", 2, 69, 32, 1],
                [1, "cs", 1, 67, 32, 1],
                [1, "cs", 2, 68, 32, 1],
                [1, "cs", 2, 66, 32, 1],
                [1, "cs", 2, 66, 33, 1],
                [1, "cs", 2, 67, 33, 1],
                [1, "cs", 2, 70, 33, 1],
                [1, "cs", 2, 69, 33, 1],
                [1, "cs", 2, 68, 33, 1],
                [1, "cs", 0, 68, 34, 1],
                [1, "cs", 1, 66, 35, 1],
                [1, "cs", 2, 67, 34, 1],
                [1, "cs", 2, 66, 34, 1],
                [1, "cs", 2, 65, 35, 1],
                [1, "cs", 2, 64, 36, 1],
                [1, "cs", 2, 65, 36, 1],
                [1, "cs", 2, 67, 35, 1],
                [1, "cs", 2, 66, 36, 1],
                [1, "cs", 2, 69, 34, 1],
                [1, "cs", 2, 68, 35, 1],
                [1, "cs", 2, 76, 9, 1],
                [1, "cs", 2, 77, 9, 1],
                [1, "cs", 2, 77, 8, 1],
                [1, "cs", 2, 77, 10, 1],
                [1, "cs", 2, 78, 8, 1],
                [1, "cs", 2, 78, 9, 1],
                [1, "cs", 2, 78, 10, 1],
                [1, "cs", 2, 78, 11, 1],
                [1, "cs", 2, 78, 12, 1],
                [1, "cs", 2, 78, 13, 1],
                [1, "cs", 0, 79, 9, 1],
                [1, "cs", 1, 79, 11, 1],
                [1, "cs", 3, 79, 8, 1],
                [1, "cs", 3, 79, 10, 1],
                [1, "cs", 3, 79, 12, 1],
                [1, "cs", 3, 80, 8, 1],
                [1, "cs", 1, 80, 10, 1],
                [1, "cs", 2, 80, 9, 1],
                [1, "cs", 2, 80, 11, 1],
                [1, "cs", 2, 81, 8, 1],
                [1, "cs", 2, 81, 9, 1],
                [1, "cs", 2, 81, 10, 1],
                [1, "cs", 2, 78, 14, 1],
                [1, "cs", 2, 79, 13, 1],
                [1, "cs", 2, 78, 15, 1],
                [1, "cs", 2, 80, 12, 1],
                [1, "cs", 0, 79, 14, 1],
                [1, "cs", 0, 82, 9, 1],
                [1, "cs", 2, 82, 8, 1],
                [1, "cs", 2, 82, 10, 1],
                [1, "cs", 2, 81, 11, 1],
                [1, "cs", 3, 80, 13, 1],
                [1, "cs", 1, 78, 30, 1],
                [1, "cs", 1, 78, 34, 1],
                [1, "cs", 1, 78, 27, 1],
                [1, "cs", 0, 78, 25, 1],
                [1, "cs", 0, 79, 29, 1],
                [1, "cs", 0, 79, 32, 1],
                [1, "cs", 0, 79, 35, 1],
                [1, "cs", 2, 78, 35, 1],
                [1, "cs", 2, 78, 36, 1],
                [1, "cs", 2, 79, 34, 1],
                [1, "cs", 2, 78, 33, 1],
                [1, "cs", 2, 79, 33, 1],
                [1, "cs", 2, 78, 32, 1],
                [1, "cs", 2, 78, 31, 1],
                [1, "cs", 2, 79, 31, 1],
                [1, "cs", 2, 79, 30, 1],
                [1, "cs", 2, 78, 29, 1],
                [1, "cs", 2, 78, 28, 1],
                [1, "cs", 2, 79, 28, 1],
                [1, "cs", 2, 79, 27, 1],
                [1, "cs", 2, 78, 26, 1],
                [1, "cs", 2, 79, 26, 1],
                [1, "cs", 2, 78, 24, 1],
                [1, "cs", 2, 80, 34, 1],
                [1, "cs", 2, 80, 33, 1],
                [1, "cs", 2, 80, 31, 1],
                [1, "cs", 2, 80, 30, 1],
                [1, "cs", 2, 80, 32, 1],
                [1, "cs", 2, 80, 29, 1],
                [1, "cs", 2, 80, 28, 1],
                [1, "cs", 2, 80, 27, 1],
                [1, "cs", 0, 81, 30, 1],
                [1, "cs", 1, 81, 32, 1],
                [1, "cs", 1, 81, 28, 1],
                [1, "cs", 2, 81, 29, 1],
                [1, "cs", 2, 81, 31, 1],
                [1, "cs", 2, 81, 33, 1],
                [1, "cs", 2, 82, 30, 1],
                [1, "cs", 2, 82, 31, 1],
                [1, "cs", 2, 82, 32, 1],
                [1, "cs", 0, 37, 36, 1],
                [1, "cs", 2, 38, 36, 1],
                [1, "cs", 2, 37, 35, 1],
                [1, "cs", 2, 36, 36, 1],
                [1, "cs", 2, 34, 35, 1],
                [1, "cs", 2, 35, 35, 1],
                [1, "cs", 2, 36, 35, 1],
                [1, "cs", 0, 33, 34, 1],
                [1, "cs", 1, 35, 34, 1],
                [1, "cs", 2, 36, 34, 1],
                [1, "cs", 2, 34, 34, 1],
                [1, "cs", 2, 36, 33, 1],
                [1, "cs", 2, 35, 33, 1],
                [1, "cs", 2, 34, 33, 1],
                [1, "cs", 2, 33, 33, 1],
                [1, "cs", 2, 31, 32, 1],
                [1, "cs", 1, 36, 32, 1],
                [1, "cs", 1, 32, 32, 1],
                [1, "cs", 2, 35, 32, 1],
                [1, "cs", 2, 33, 32, 1],
                [1, "cs", 2, 32, 33, 1],
                [1, "cs", 2, 33, 31, 1],
                [1, "cs", 2, 34, 31, 1],
                [1, "cs", 2, 35, 31, 1],
                [1, "cs", 0, 34, 32, 1],
                [1, "cs", 2, 35, 30, 1],
                [1, "cs", 1, 39, 23, 1],
                [1, "cs", 3, 39, 22, 1],
                [1, "cs", 3, 36, 24, 1],
                [1, "cs", 3, 35, 24, 1],
                [1, "cs", 2, 34, 23, 1],
                [1, "cs", 2, 35, 23, 1],
                [1, "cs", 2, 36, 20, 1],
                [1, "cs", 2, 36, 21, 1],
                [1, "cs", 2, 35, 22, 1],
                [1, "cs", 2, 35, 16, 1],
                [1, "cs", 2, 34, 16, 1],
                [1, "cs", 2, 33, 16, 1],
                [1, "cs", 0, 34, 17, 1],
                [1, "cs", 0, 32, 15, 1],
                [1, "cs", 2, 31, 14, 1],
                [1, "cs", 3, 30, 13, 1],
                [1, "cs", 1, 33, 15, 1],
                [1, "cs", 1, 31, 13, 1],
                [1, "cs", 2, 32, 14, 1],
                [1, "cs", 0, 31, 8, 1],
                [1, "cs", 2, 32, 8, 1],
                [1, "cs", 2, 25, 13, 1],
                [1, "cs", 0, 25, 12, 1],
                [1, "cs", 2, 25, 11, 1],
                [1, "cs", 3, 25, 10, 1],
                [1, "cs", 0, 25, 9, 1],
                [1, "cs", 2, 25, 8, 1],
                [1, "cs", 2, 26, 8, 1],
                [1, "cs", 2, 27, 8, 1],
                [1, "cs", 2, 28, 8, 1],
                [1, "cs", 2, 29, 8, 1],
                [1, "cs", 2, 30, 8, 1],
                [1, "cs", 2, 26, 9, 1],
                [1, "cs", 2, 27, 9, 1],
                [1, "cs", 2, 26, 10, 1],
                [1, "cs", 1, 27, 10, 1],
                [1, "cs", 3, 28, 9, 1],
                [1, "cs", 3, 25, 14, 1],
                [1, "cs", 0, 25, 15, 1],
                [1, "cs", 2, 26, 15, 1],
                [1, "cs", 3, 27, 16, 1],
                [1, "cs", 0, 28, 17, 1],
                [1, "cs", 1, 29, 18, 1],
                [1, "cs", 2, 26, 16, 1],
                [1, "cs", 2, 25, 16, 1],
                [1, "cs", 2, 27, 17, 1],
                [1, "cs", 2, 26, 17, 1],
                [1, "cs", 1, 27, 18, 1],
                [1, "cs", 2, 28, 18, 1],
                [1, "cs", 2, 30, 19, 1],
                [1, "cs", 2, 29, 19, 1],
                [1, "cs", 2, 24, 14, 1],
                [1, "cs", 2, 24, 15, 1],
                [1, "cs", 0, 23, 14, 1],
                [1, "cs", 2, 24, 10, 1],
                [1, "cs", 2, 24, 11, 1],
                [1, "cs", 2, 24, 12, 1],
                [1, "cs", 2, 24, 13, 1],
                [1, "cs", 1, 23, 10, 1],
                [1, "cs", 0, 22, 8, 1],
                [1, "cs", 0, 22, 12, 1],
                [1, "cs", 1, 23, 8, 1],
                [1, "cs", 2, 24, 8, 1],
                [1, "cs", 2, 24, 9, 1],
                [1, "cs", 2, 23, 9, 1],
                [1, "cs", 2, 22, 9, 1],
                [1, "cs", 2, 22, 10, 1],
                [1, "cs", 2, 22, 11, 1],
                [1, "cs", 2, 23, 11, 1],
                [1, "cs", 2, 23, 12, 1],
                [1, "cs", 2, 23, 13, 1],
                [1, "cs", 2, 22, 13, 1],
                [1, "cs", 2, 21, 9, 1],
                [1, "cs", 2, 21, 8, 1],
                [1, "cs", 2, 29, 25, 1],
                [1, "cs", 2, 25, 24, 1],
                [1, "cs", 2, 26, 25, 1],
                [1, "cs", 2, 27, 25, 1],
                [1, "cs", 0, 28, 25, 1],
                [1, "cs", 1, 25, 23, 1],
                [1, "cs", 2, 26, 24, 1],
                [1, "cs", 0, 24, 25, 1],
                [1, "cs", 3, 23, 24, 1],
                [1, "cs", 3, 24, 24, 1],
                [1, "cs", 3, 25, 25, 1],
                [1, "cs", 3, 23, 25, 1],
                [1, "cs", 1, 22, 26, 1],
                [1, "cs", 1, 26, 26, 1],
                [1, "cs", 1, 29, 26, 1],
                [1, "cs", 2, 23, 26, 1],
                [1, "cs", 2, 24, 26, 1],
                [1, "cs", 2, 25, 26, 1],
                [1, "cs", 2, 27, 26, 1],
                [1, "cs", 2, 28, 26, 1],
                [1, "cs", 2, 30, 26, 1],
                [1, "cs", 2, 29, 27, 1],
                [1, "cs", 2, 28, 28, 1],
                [1, "cs", 1, 26, 29, 1],
                [1, "cs", 0, 28, 27, 1],
                [1, "cs", 2, 27, 28, 1],
                [1, "cs", 2, 27, 27, 1],
                [1, "cs", 2, 26, 28, 1],
                [1, "cs", 2, 26, 27, 1],
                [1, "cs", 2, 25, 28, 1],
                [1, "cs", 2, 25, 27, 1],
                [1, "cs", 2, 23, 27, 1],
                [1, "cs", 2, 22, 27, 1],
                [1, "cs", 2, 24, 27, 1],
                [1, "cs", 0, 24, 28, 1],
                [1, "cs", 0, 25, 32, 1],
                [1, "cs", 1, 24, 30, 1],
                [1, "cs", 2, 25, 31, 1],
                [1, "cs", 2, 25, 30, 1],
                [1, "cs", 2, 25, 29, 1],
                [1, "cs", 2, 24, 29, 1],
                [1, "cs", 2, 23, 29, 1],
                [1, "cs", 2, 26, 33, 1],
                [1, "cs", 0, 26, 34, 1],
                [1, "cs", 2, 27, 35, 1],
                [1, "cs", 2, 22, 28, 1],
                [1, "cs", 2, 23, 28, 1],
                [1, "cs", 2, 24, 31, 1],
                [1, "cs", 2, 24, 32, 1],
                [1, "cs", 2, 25, 33, 1],
                [1, "cs", 2, 26, 35, 1],
                [1, "cs", 2, 24, 33, 1],
                [1, "cs", 2, 25, 34, 1],
                [1, "cs", 1, 22, 29, 1],
                [1, "cs", 1, 24, 34, 1],
                [1, "cs", 0, 23, 35, 1],
                [1, "cs", 2, 25, 35, 1],
                [1, "cs", 2, 24, 35, 1],
                [1, "cs", 2, 23, 34, 1],
                [1, "cs", 2, 23, 33, 1],
                [1, "cs", 0, 22, 33, 1],
                [1, "cs", 1, 23, 32, 1],
                [1, "cs", 2, 22, 32, 1],
                [1, "cs", 2, 23, 31, 1],
                [1, "cs", 2, 23, 30, 1],
                [1, "cs", 2, 22, 30, 1],
                [1, "cs", 2, 22, 31, 1],
                [1, "cs", 1, 21, 31, 1],
                [1, "cs", 0, 21, 29, 1],
                [1, "cs", 2, 21, 30, 1],
                [1, "cs", 2, 24, 36, 1],
                [1, "cs", 2, 26, 36, 1],
                [1, "cs", 2, 25, 36, 1],
                [1, "cs", 2, 27, 36, 1],
                [1, "cs", 2, 28, 36, 1],
                [1, "d", 2, 83, 65, 1],
                [1, "d", 2, 16, 67, 1],
                [1, "g", 0, 15, 17, 1],
                [1, "s", 0, 18, 13, 1],
                [1, "s", 0, 85, 11, 1],
                [1, "f", 0, 41, 102, 1],
                [1, "f", 0, 42, 124, 1],
                [1, "f", 0, 64, 116, 1],
                [1, "f", 0, 74, 104, 1],
                [1, "f", 0, 70, 87, 1],
                [1, "f", 0, 27, 96, 1],
                [1, "f", 0, 22, 79, 1],
                [1, "f", 0, 20, 117, 1],
                [1, "f", 0, 30, 137, 1],
                [1, "f", 0, 59, 146, 1],
                [1, "f", 0, 52, 147, 1],
                [1, "f", 0, 20, 149, 1],
                [1, "f", 0, 36, 146, 1],
                [1, "f", 0, 62, 124, 1],
                [1, "g", 1, 34, 121, 1],
                [1, "g", 1, 52, 116, 1],
                [1, "g", 1, 78, 116, 1],
                [1, "g", 1, 71, 129, 1],
                [1, "s", 0, 53, 100, 1],
                [1, "s", 0, 73, 111, 1],
                [1, "s", 0, 77, 126, 1],
                [1, "s", 0, 48, 90, 1],
                [1, "s", 0, 19, 102, 1],
                [1, "s", 0, 18, 127, 1],
                [1, "s", 0, 35, 159, 1],
                [1, "s", 0, 65, 54, 1],
                [1, "s", 0, 44, 52, 1],
                [1, "s", 0, 26, 51, 1],
                [1, "f", 1, 56, 136, 1],
                [1, "f", 1, 41, 133, 1],
                [1, "f", 1, 80, 120, 1],
                [1, "f", 1, 16, 117, 1],
                [1, "f", 1, 13, 99, 1],
                [1, "f", 1, 17, 89, 1],
                [1, "f", 1, 90, 98, 1],
                [1, "f", 1, 84, 95, 1],
                [1, "f", 1, 16, 57, 1],
                [1, "f", 1, 77, 53, 1],
                [1, "d", 1, 48, 35, 1],
                [1, "de", 8, 33, 13, 0],
                [1, "de", 8, 30, 9, 0],
                [1, "de", 9, 32, 30, 0],
                [1, "de", 10, 30, 25, 0],
                [1, "de", 10, 33, 21, 0],
                [1, "de", 8, 31, 34, 0],
                [1, "de", 8, 67, 29, 0],
                [1, "de", 9, 70, 22, 0],
                [1, "de", 10, 70, 16, 0],
                [1, "de", 10, 75, 11, 0],
                [1, "de", 8, 68, 10, 0],
                [1, "de", 8, 75, 30, 0],
                [1, "de", 11, 71, 33, 0],
                [1, "de", 11, 72, 25, 0],
                [1, "de", 11, 64, 25, 0],
                [1, "de", 11, 52, 10, 0],
                [1, "de", 11, 31, 15, 0],
                [1, "de", 30, 29, 14, 0],
                [1, "de", 30, 36, 15, 0],
                [1, "de", 30, 34, 29, 0],
                [1, "de", 30, 30, 29, 0],
                [1, "de", 30, 71, 29, 0],
                [1, "de", 28, 68, 25, 0],
                [1, "de", 28, 75, 15, 0],
                [1, "de", 27, 67, 19, 0],
                [1, "de", 29, 72, 10, 0],
                [1, "de", 29, 75, 32, 0],
                [1, "de", 29, 32, 20, 0],
                [1, "fo", 1, 39, 12, 0],
                [1, "fo", 1, 34, 14, 0],
                [1, "fo", 1, 74, 28, 0],
                [1, "fo", 2, 74, 29, 0],
                [1, "fo", 2, 69, 30, 0],
                [1, "fo", 2, 77, 22, 0],
                [1, "fo", 2, 74, 21, 0],
                [1, "fo", 2, 76, 18, 0],
                [1, "fo", 1, 78, 17, 0],
                [1, "fo", 1, 28, 19, 0],
                [1, "fo", 2, 27, 24, 0],
                [1, "fo", 2, 24, 17, 0],
                [1, "fo", 2, 29, 21, 0],
                [1, "fo", 1, 27, 32, 0],
                [1, "fo", 2, 30, 33, 0],
                [1, "fo", 1, 29, 28, 0],
                [1, "fo", 2, 28, 31, 0],
                [1, "fo", 2, 20, 24, 0],
                [1, "fo", 2, 20, 26, 0],
                [1, "fo", 2, 23, 16, 0],
                [1, "fo", 2, 11, 25, 0],
                [1, "de", 33, 29, 22, 0],
                [1, "de", 34, 32, 25, 0],
                [1, "de", 34, 30, 18, 0],
                [1, "de", 33, 78, 18, 0],
                [1, "de", 33, 73, 35, 0],
                [1, "de", 36, 72, 23, 0],
                [1, "de", 35, 25, 18, 0],
                [1, "d", 1, 83, 41, 1],
                [1, "d", 1, 17, 40, 1],
                [1, "cs", 2, 224, 104, 1],
                [1, "cs", 0, 224, 105, 1],
                [1, "cs", 3, 224, 106, 1],
                [1, "la", 3, 216, 128, 1],
                [1, "la", 0, 215, 126, 1],
                [1, "s", 0, 216, 130, 1],
                [1, "s", 1, 217, 129, 1],
                [1, "s", 0, 218, 128, 1],
                [1, "s", 1, 217, 127, 1],
                [1, "s", 0, 217, 126, 1],
                [1, "s", 1, 217, 125, 1],
                [1, "s", 0, 216, 124, 1],
                [1, "s", 1, 215, 124, 1],
                [1, "s", 0, 214, 124, 1],
                [1, "s", 1, 213, 125, 1],
                [1, "s", 0, 213, 126, 1],
                [1, "plm", 2, 217, 130, 0],
                [1, "plm", 2, 212, 125, 0],
                [1, "p", 0, 214, 134, 1],
                [1, "s", 1, 211, 126, 1],
                [1, "b", 1, 45, 277, 0],
                [1, "b", 1, 50, 286, 0],
                [1, "b", 2, 51, 284, 0],
                [1, "b", 1, 47, 287, 0],
                [1, "b", 0, 39, 285, 0],
                [1, "b", 3, 40, 283, 0],
                [1, "b", 0, 52, 283, 0],
                [1, "b", 1, 51, 280, 0],
                [1, "g", 0, 45, 269, 1],
                [1, "p", 0, 55, 281, 1],
                [1, "b", 1, 5, 172, 0],
                [1, "b", 2, 6, 172, 0],
                [1, "t", 5, 6, 171, 0],
                [1, "t", 1, 5, 170, 0],
                [1, "t", 1, 5, 164, 0],
                [1, "t", 3, 6, 164, 0],
                [1, "b", 0, 6, 165, 0],
                [1, "t", 3, 5, 165, 0],
                [1, "b", 2, 6, 166, 0],
                [1, "t", 4, 5, 166, 0],
                [1, "t", 4, 6, 167, 0],
                [1, "t", 2, 6, 168, 0],
                [1, "t", 0, 6, 169, 0],
                [1, "t", 4, 6, 170, 0],
                [1, "t", 0, 5, 167, 0],
                [1, "t", 2, 5, 169, 0],
                [1, "b", 0, 5, 168, 0],
                [1, "s", 1, 7, 153, 1],
                [1, "s", 2, 7, 151, 1],
                [1, "de", 5, 7, 152, 0],
                [1, "t", 1, 5, 154, 0],
                [1, "b", 0, 6, 154, 0],
                [1, "t", 2, 6, 155, 0],
                [1, "b", 2, 6, 156, 0],
                [1, "t", 2, 5, 157, 0],
                [1, "t", 4, 5, 155, 0],
                [1, "b", 0, 6, 157, 0],
                [1, "t", 1, 5, 156, 0],
                [1, "t", 5, 6, 158, 0],
                [1, "b", 2, 6, 159, 0],
                [1, "b", 0, 6, 162, 0],
                [1, "t", 4, 6, 163, 0],
                [1, "t", 4, 6, 161, 0],
                [1, "b", 1, 6, 160, 0],
                [1, "b", 2, 5, 163, 0],
                [1, "b", 2, 5, 158, 0],
                [1, "b", 2, 5, 161, 0],
                [1, "t", 1, 5, 162, 0],
                [1, "t", 1, 5, 160, 0],
                [1, "b", 1, 85, 176, 0],
                [1, "b", 2, 83, 178, 0],
                [1, "s", 1, 82, 177, 1],
                [1, "b", 0, 76, 172, 0],
                [1, "b", 3, 76, 174, 0],
                [1, "t", 3, 73, 174, 0],
                [1, "t", 5, 72, 175, 0],
                [1, "t", 5, 87, 173, 0],
                [1, "de", 2, 76, 175, 0],
                [1, "de", 3, 77, 171, 0],
                [1, "de", 3, 86, 177, 0],
                [1, "de", 2, 71, 175, 0],
                [1, "s", 1, 70, 174, 1],
                [1, "r", 48, 174, 0],
                [1, "r", 49, 175, 0],
                [1, "r", 50, 175, 0],
                [1, "r", 51, 175, 0],
                [1, "r", 51, 174, 0],
                [1, "r", 50, 174, 0],
                [1, "r", 49, 174, 0],
                [1, "r", 52, 175, 0],
                [1, "r", 52, 176, 0],
                [1, "r", 51, 176, 0],
                [1, "r", 50, 176, 0],
                [1, "r", 49, 176, 0],
                [1, "r", 48, 175, 0],
                [1, "r", 47, 175, 0],
                [1, "r", 48, 176, 0],
                [1, "r", 69, 163, 0],
                [1, "r", 70, 163, 0],
                [1, "r", 71, 163, 0],
                [1, "r", 73, 163, 0],
                [1, "r", 72, 163, 0],
                [1, "r", 73, 164, 0],
                [1, "r", 72, 164, 0],
                [1, "r", 71, 164, 0],
                [1, "r", 70, 164, 0],
                [1, "r", 69, 164, 0],
                [1, "r", 68, 164, 0],
                [1, "r", 68, 165, 0],
                [1, "r", 69, 165, 0],
                [1, "r", 70, 165, 0],
                [1, "r", 71, 165, 0],
                [1, "r", 72, 165, 0],
                [1, "r", 74, 164, 0],
                [1, "r", 73, 165, 0],
                [1, "r", 72, 166, 0],
                [1, "r", 71, 166, 0],
                [1, "r", 70, 166, 0],
                [1, "r", 74, 165, 0],
                [1, "r", 24, 164, 0],
                [1, "r", 25, 164, 0],
                [1, "r", 27, 164, 0],
                [1, "r", 26, 164, 0],
                [1, "r", 28, 165, 0],
                [1, "r", 26, 165, 0],
                [1, "r", 27, 165, 0],
                [1, "r", 25, 165, 0],
                [1, "r", 24, 165, 0],
                [1, "r", 23, 165, 0],
                [1, "r", 22, 165, 0],
                [1, "r", 21, 165, 0],
                [1, "r", 21, 166, 0],
                [1, "r", 22, 166, 0],
                [1, "r", 23, 166, 0],
                [1, "r", 24, 166, 0],
                [1, "r", 25, 166, 0],
                [1, "r", 26, 166, 0],
                [1, "r", 27, 166, 0],
                [1, "r", 28, 166, 0],
                [1, "r", 28, 167, 0],
                [1, "r", 26, 167, 0],
                [1, "r", 25, 167, 0],
                [1, "r", 24, 167, 0],
                [1, "r", 23, 167, 0],
                [1, "r", 22, 167, 0],
                [1, "r", 27, 167, 0],
                [1, "r", 29, 166, 0],
                [1, "r", 29, 167, 0],
                [1, "r", 28, 168, 0],
                [1, "r", 27, 168, 0],
                [1, "r", 26, 168, 0],
                [1, "r", 25, 168, 0],
                [1, "r", 24, 168, 0],
                [1, "r", 23, 168, 0],
                [1, "r", 27, 169, 0],
                [1, "r", 26, 169, 0],
                [1, "r", 25, 169, 0],
                [1, "r", 24, 169, 0],
                [1, "r", 23, 169, 0],
                [1, "r", 22, 168, 0],
                [1, "r", 21, 167, 0],
                [1, "s", 1, 52, 174, 1],
                [1, "t", 3, 50, 177, 0],
                [1, "t", 4, 49, 177, 0],
                [1, "b", 0, 47, 174, 0],
                [1, "b", 0, 69, 166, 0],
                [1, "t", 2, 68, 166, 0],
                [1, "t", 5, 74, 163, 0],
                [1, "t", 1, 73, 162, 0],
                [1, "s", 0, 73, 166, 1],
                [1, "s", 2, 76, 165, 1],
                [1, "g", 2, 59, 175, 1],
                [1, "p", 0, 78, 168, 1],
                [1, "p", 0, 61, 162, 1],
                [1, "p", 0, 42, 170, 1],
                [1, "p", 0, 20, 174, 1],
                [1, "p", 0, 16, 160, 1],
                [1, "b", 1, 23, 164, 0],
                [1, "b", 1, 28, 169, 0],
                [1, "b", 2, 29, 168, 0],
                [1, "b", 2, 16, 170, 0],
                [1, "t", 1, 15, 171, 0],
                [1, "t", 5, 13, 175, 0],
                [1, "t", 5, 19, 166, 0],
                [1, "t", 5, 26, 163, 0],
                [1, "s", 1, 29, 165, 1],
                [1, "t", 5, 11, 167, 0],
                [1, "t", 0, 29, 176, 0],
                [1, "b", 2, 30, 175, 0],
                [1, "t", 2, 24, 177, 0],
                [1, "b", 1, 37, 174, 0],
                [1, "b", 0, 35, 172, 0],
                [1, "b", 3, 37, 170, 0],
                [1, "t", 4, 38, 169, 0],
                [1, "t", 4, 34, 173, 0],
                [1, "t", 5, 38, 175, 0],
                [1, "b", 2, 39, 173, 0],
                [1, "t", 3, 37, 176, 0],
                [1, "t", 4, 30, 168, 0],
                [1, "s", 2, 35, 176, 1],
                [1, "s", 1, 41, 175, 1],
                [1, "b", 2, 53, 176, 0],
                [1, "t", 5, 55, 173, 0],
                [1, "t", 5, 45, 170, 0],
                [1, "b", 1, 53, 162, 0],
                [1, "b", 0, 50, 164, 0],
                [1, "t", 2, 54, 163, 0],
                [1, "t", 3, 49, 165, 0],
                [1, "t", 4, 48, 160, 0],
                [1, "t", 4, 57, 164, 0],
                [1, "t", 4, 66, 162, 0],
                [1, "b", 1, 86, 161, 0],
                [1, "b", 2, 81, 163, 0],
                [1, "t", 3, 85, 162, 0],
                [1, "t", 5, 81, 162, 0],
                [1, "t", 5, 88, 163, 0],
                [1, "t", 1, 84, 166, 0],
                [1, "t", 5, 72, 160, 0],
                [1, "t", 5, 70, 170, 0],
                [1, "s", 1, 57, 162, 1],
                [1, "b", 1, 39, 161, 0],
                [1, "b", 0, 34, 164, 0],
                [1, "b", 2, 54, 164, 0],
                [1, "t", 1, 59, 169, 0],
                [1, "t", 3, 60, 170, 0],
                [1, "t", 4, 63, 169, 0],
                [1, "t", 4, 63, 174, 0],
                [1, "t", 1, 62, 175, 0],
                [1, "t", 5, 40, 162, 0],
                [1, "t", 1, 63, 180, 0],
                [1, "t", 2, 64, 179, 0],
                [1, "t", 2, 35, 165, 0],
                [1, "s", 1, 63, 173, 1],
                [1, "s", 2, 40, 165, 1],
                [1, "b", 0, 46, 169, 0],
                [1, "de", 22, 74, 168, 0],
                [1, "de", 22, 86, 168, 0],
                [1, "de", 22, 83, 175, 0],
                [1, "de", 22, 78, 175, 0],
                [1, "de", 19, 72, 176, 0],
                [1, "de", 19, 68, 168, 0],
                [1, "de", 19, 65, 163, 0],
                [1, "de", 19, 75, 162, 0],
                [1, "de", 19, 80, 162, 0],
                [1, "de", 19, 88, 159, 0],
                [1, "de", 19, 87, 164, 0],
                [1, "de", 19, 61, 177, 0],
                [1, "de", 19, 59, 172, 0],
                [1, "de", 19, 59, 167, 0],
                [1, "de", 19, 53, 165, 0],
                [1, "de", 19, 56, 163, 0],
                [1, "de", 19, 51, 161, 0],
                [1, "de", 19, 48, 167, 0],
                [1, "de", 19, 47, 170, 0],
                [1, "de", 19, 41, 163, 0],
                [1, "de", 19, 37, 161, 0],
                [1, "de", 19, 36, 166, 0],
                [1, "de", 19, 36, 171, 0],
                [1, "de", 19, 34, 174, 0],
                [1, "de", 19, 40, 172, 0],
                [1, "de", 19, 38, 177, 0],
                [1, "de", 19, 42, 176, 0],
                [1, "de", 19, 53, 178, 0],
                [1, "de", 19, 53, 172, 0],
                [1, "de", 19, 64, 181, 0],
                [1, "de", 19, 64, 175, 0],
                [1, "de", 19, 79, 172, 0],
                [1, "de", 19, 30, 170, 0],
                [1, "de", 19, 17, 168, 0],
                [1, "de", 19, 14, 173, 0],
                [1, "de", 19, 12, 162, 0],
                [1, "de", 19, 9, 167, 0],
                [1, "de", 19, 20, 161, 0],
                [1, "de", 19, 27, 162, 0],
                [1, "de", 19, 83, 195, 0],
                [1, "de", 2, 85, 163, 0],
                [1, "de", 2, 80, 164, 0],
                [1, "de", 2, 84, 169, 0],
                [1, "de", 2, 55, 165, 0],
                [1, "de", 3, 46, 163, 0],
                [1, "de", 2, 66, 169, 0],
                [1, "de", 0, 63, 175, 0],
                [1, "de", 0, 34, 164, 0],
                [1, "de", 0, 18, 160, 0],
                [1, "de", 2, 40, 160, 0],
                [1, "de", 2, 53, 160, 0],
                [1, "de", 2, 14, 170, 0],
                [1, "de", 2, 19, 175, 0],
                [1, "de", 2, 23, 176, 0],
                [1, "de", 5, 60, 147, 0],
                [1, "de", 33, 59, 160, 0],
                [1, "de", 33, 85, 157, 0],
                [1, "de", 33, 29, 143, 0],
                [1, "de", 33, 62, 140, 0],
                [1, "de", 33, 43, 127, 0],
                [1, "de", 33, 18, 129, 0],
                [1, "de", 33, 50, 134, 0],
                [1, "de", 33, 79, 127, 0],
                [1, "de", 33, 89, 139, 0],
                [1, "b", 1, 44, 156, 0],
                [1, "t", 2, 45, 157, 0],
                [1, "b", 0, 75, 156, 0],
                [1, "t", 3, 76, 157, 0],
                [1, "t", 5, 62, 157, 0],
                [1, "t", 5, 79, 156, 0],
                [1, "t", 5, 41, 156, 0],
                [1, "b", 1, 28, 156, 0],
                [1, "t", 2, 27, 157, 0],
                [1, "t", 4, 21, 156, 0],
                [1, "t", 4, 56, 159, 0],
                [1, "f", 1, 94, 153, 1],
                [1, "f", 2, 93, 153, 1],
                [1, "f", 2, 99, 153, 1],
                [1, "f", 1, 98, 153, 1],
                [1, "f", 0, 97, 153, 1],
                [1, "f", 1, 96, 153, 1],
                [1, "s", 1, 7, 149, 1],
                [1, "de", 4, 7, 150, 0],
                [1, "b", 3, 43, 281, 0],
                [1, "de", 50, 24, 39, 0],
                [1, "de", 50, 21, 39, 0],
                [1, "de", 50, 22, 43, 0],
                [1, "de", 50, 15, 34, 0],
                [1, "de", 50, 18, 26, 0],
                [1, "de", 50, 44, 42, 0],
                [1, "de", 50, 57, 39, 0],
                [1, "de", 50, 62, 43, 0],
                [1, "de", 50, 77, 44, 0],
                [1, "de", 50, 71, 41, 0],
                [1, "de", 50, 55, 39, 0],
                [1, "de", 50, 22, 39, 0],
                [1, "de", 50, 20, 41, 0],
                [1, "de", 50, 18, 21, 0],
                [1, "de", 50, 15, 21, 0],
                [1, "de", 50, 18, 19, 0],
                [1, "de", 50, 17, 17, 0],
                [1, "de", 50, 18, 10, 0],
                [1, "de", 50, 18, 9, 0],
                [1, "de", 50, 52, 41, 0],
                [1, "de", 50, 82, 39, 0],
                [1, "de", 50, 86, 38, 0],
                [1, "de", 50, 84, 31, 0],
                [1, "de", 50, 86, 30, 0],
                [1, "de", 50, 84, 26, 0],
                [1, "de", 50, 86, 23, 0],
                [1, "de", 50, 86, 14, 0],
                [1, "de", 50, 29, 42, 0],
                [1, "de", 9, 74, 37, 0],
                [1, "de", 9, 76, 22, 0],
                [1, "de", 10, 79, 24, 0],
                [1, "de", 11, 77, 17, 0],
                [1, "de", 36, 81, 25, 0],
                [1, "de", 36, 80, 36, 0],
                [1, "de", 36, 21, 36, 0],
                [1, "de", 28, 23, 22, 0],
                [1, "de", 28, 27, 31, 0],
                [1, "de", 28, 69, 36, 0],
                [1, "de", 28, 80, 20, 0],
                [1, "de", 51, 24, 155, 0],
                [1, "de", 51, 7, 154, 0],
                [1, "de", 51, 11, 154, 0],
                [1, "de", 51, 12, 156, 0],
                [1, "de", 51, 16, 154, 0],
                [1, "de", 51, 20, 154, 0],
                [1, "de", 51, 23, 154, 0],
                [1, "de", 51, 18, 157, 0],
                [1, "de", 51, 31, 154, 0],
                [1, "de", 51, 32, 157, 0],
                [1, "de", 51, 86, 154, 0],
                [1, "de", 51, 88, 156, 0],
                [1, "de", 51, 82, 154, 0],
                [1, "de", 51, 80, 154, 0],
                [1, "de", 51, 77, 154, 0],
                [1, "de", 51, 74, 154, 0],
                [1, "de", 51, 71, 154, 0],
                [1, "de", 51, 67, 154, 0],
                [1, "de", 51, 60, 154, 0],
                [1, "de", 51, 57, 154, 0],
                [1, "de", 51, 65, 154, 0],
                [1, "de", 51, 68, 156, 0],
                [1, "de", 51, 59, 156, 0],
                [1, "de", 51, 55, 154, 0],
                [1, "de", 51, 54, 154, 0],
                [1, "de", 51, 52, 154, 0],
                [1, "de", 51, 55, 155, 0],
                [1, "de", 51, 54, 157, 0],
                [1, "de", 51, 49, 154, 0],
                [1, "de", 51, 46, 154, 0],
                [1, "de", 51, 44, 154, 0],
                [1, "de", 51, 43, 154, 0],
                [1, "de", 51, 41, 154, 0],
                [1, "de", 51, 38, 154, 0],
                [1, "de", 51, 39, 156, 0],
                [1, "de", 51, 34, 154, 0],
                [1, "de", 5, 19, 142, 0],
                [1, "de", 5, 37, 147, 0],
                [1, "de", 7, 53, 147, 0],
                [1, "de", 6, 69, 150, 0],
                [1, "de", 4, 94, 148, 0],
                [1, "de", 4, 66, 147, 0],
                [1, "de", 4, 10, 145, 0],
                [1, "de", 4, 28, 137, 0],
                [1, "de", 4, 15, 137, 0],
                [1, "de", 4, 48, 134, 0],
                [1, "de", 5, 67, 135, 0],
                [1, "de", 34, 84, 155, 0],
                [1, "de", 35, 70, 156, 0],
                [1, "de", 35, 51, 156, 0],
                [1, "de", 35, 56, 157, 0],
                [1, "de", 35, 65, 159, 0],
                [1, "de", 35, 23, 156, 0],
                [1, "de", 35, 15, 155, 0],
                [1, "de", 35, 8, 155, 0],
                [1, "de", 33, 13, 155, 0],
                [1, "de", 33, 33, 158, 0],
                [1, "de", 36, 78, 155, 0],
                [1, "de", 36, 87, 157, 0],
                [1, "fo", 1, 73, 36, 0],
                [1, "fo", 1, 80, 24, 0],
                [1, "fo", 2, 67, 36, 0],
                [1, "fo", 2, 45, 36, 0],
                [1, "fo", 2, 53, 34, 0],
                [1, "fo", 1, 51, 35, 0],
                [1, "fo", 1, 58, 35, 0],
                [1, "fo", 1, 33, 35, 0],
                [1, "fo", 1, 31, 33, 0],
                [1, "fo", 2, 29, 36, 0],
                [1, "fo", 2, 56, 36, 0],
                [1, "fo", 2, 60, 37, 0],
                [1, "fo", 2, 45, 32, 0],
                [1, "fo", 2, 22, 25, 0],
                [1, "fo", 2, 21, 35, 0],
                [1, "de", 52, 90, 208, 0],
                [1, "de", 18, 94, 250, 0],
                [1, "de", 17, 95, 253, 0],
                [1, "cs", 0, 140, 5, 1],
                [1, "cs", 2, 139, 5, 1],
                [1, "cs", 2, 138, 5, 1],
                [1, "cs", 2, 138, 6, 1],
                [1, "cs", 2, 139, 6, 1],
                [1, "cs", 2, 141, 6, 1],
                [1, "cs", 2, 140, 6, 1],
                [1, "la", 3, 143, 7, 1],
                [1, "la", 3, 139, 7, 1],
                [1, "cs", 0, 137, 7, 1],
                [1, "cs", 1, 138, 8, 1],
                [1, "cs", 2, 137, 6, 1],
                [1, "cs", 2, 137, 8, 1],
                [1, "cs", 2, 136, 7, 1],
                [1, "cs", 2, 138, 9, 1],
                [1, "cs", 3, 139, 9, 1],
                [1, "cs", 3, 136, 8, 1],
                [1, "cs", 3, 137, 9, 1],
                [1, "de", 53, 92, 165, 0],
                [1, "de", 53, 92, 180, 0],
                [1, "de", 53, 92, 188, 0],
                [1, "de", 54, 92, 153, 0],
                [1, "de", 54, 91, 153, 0],
                [1, "de", 54, 90, 153, 0],
                [1, "de", 54, 89, 153, 0],
                [1, "de", 54, 88, 153, 0],
                [1, "de", 54, 87, 153, 0],
                [1, "de", 54, 86, 153, 0],
                [1, "de", 54, 85, 153, 0],
                [1, "de", 54, 84, 153, 0],
                [1, "de", 54, 83, 153, 0],
                [1, "de", 54, 82, 153, 0],
                [1, "de", 54, 81, 153, 0],
                [1, "de", 54, 80, 153, 0],
                [1, "de", 54, 79, 153, 0],
                [1, "de", 54, 78, 153, 0],
                [1, "de", 54, 77, 153, 0],
                [1, "de", 54, 76, 153, 0],
                [1, "de", 54, 75, 153, 0],
                [1, "de", 54, 74, 153, 0],
                [1, "de", 54, 73, 153, 0],
                [1, "de", 54, 72, 153, 0],
                [1, "de", 54, 70, 153, 0],
                [1, "de", 54, 71, 153, 0],
                [1, "de", 54, 69, 153, 0],
                [1, "de", 54, 68, 153, 0],
                [1, "de", 54, 67, 153, 0],
                [1, "de", 54, 66, 153, 0],
                [1, "de", 54, 65, 153, 0],
                [1, "de", 54, 64, 153, 0],
                [1, "de", 54, 63, 153, 0],
                [1, "de", 54, 61, 153, 0],
                [1, "de", 54, 62, 153, 0],
                [1, "de", 54, 60, 153, 0],
                [1, "de", 54, 59, 153, 0],
                [1, "de", 54, 57, 153, 0],
                [1, "de", 54, 58, 153, 0],
                [1, "de", 54, 56, 153, 0],
                [1, "de", 54, 55, 153, 0],
                [1, "de", 54, 54, 153, 0],
                [1, "de", 54, 53, 153, 0],
                [1, "de", 54, 52, 153, 0],
                [1, "de", 54, 51, 153, 0],
                [1, "de", 54, 50, 153, 0],
                [1, "de", 54, 49, 153, 0],
                [1, "de", 54, 48, 153, 0],
                [1, "de", 54, 47, 153, 0],
                [1, "de", 54, 46, 153, 0],
                [1, "de", 54, 45, 153, 0],
                [1, "de", 54, 44, 153, 0],
                [1, "de", 54, 43, 153, 0],
                [1, "de", 54, 42, 153, 0],
                [1, "de", 54, 41, 153, 0],
                [1, "de", 54, 40, 153, 0],
                [1, "de", 54, 39, 153, 0],
                [1, "de", 54, 37, 153, 0],
                [1, "de", 54, 38, 153, 0],
                [1, "de", 54, 36, 153, 0],
                [1, "de", 54, 35, 153, 0],
                [1, "de", 54, 34, 153, 0],
                [1, "de", 54, 33, 153, 0],
                [1, "de", 54, 32, 153, 0],
                [1, "de", 54, 31, 153, 0],
                [1, "de", 54, 30, 153, 0],
                [1, "de", 54, 29, 153, 0],
                [1, "de", 54, 28, 153, 0],
                [1, "de", 54, 27, 153, 0],
                [1, "de", 54, 26, 153, 0],
                [1, "de", 54, 25, 153, 0],
                [1, "de", 54, 24, 153, 0],
                [1, "de", 54, 23, 153, 0],
                [1, "de", 54, 22, 153, 0],
                [1, "de", 54, 21, 153, 0],
                [1, "de", 54, 20, 153, 0],
                [1, "de", 54, 19, 153, 0],
                [1, "de", 54, 18, 153, 0],
                [1, "de", 54, 17, 153, 0],
                [1, "de", 54, 16, 153, 0],
                [1, "de", 54, 15, 153, 0],
                [1, "de", 54, 14, 153, 0],
                [1, "de", 54, 13, 153, 0],
                [1, "de", 54, 12, 153, 0],
                [1, "de", 54, 11, 153, 0],
                [1, "de", 54, 10, 153, 0],
                [1, "de", 54, 8, 153, 0],
                [1, "de", 54, 9, 153, 0],
                [1, "de", 55, 83, 8, 0],
                [1, "de", 55, 83, 9, 0],
                [1, "de", 55, 83, 10, 0],
                [1, "de", 55, 83, 11, 0],
                [1, "de", 55, 83, 12, 0],
                [1, "de", 55, 83, 13, 0],
                [1, "de", 55, 83, 14, 0],
                [1, "de", 55, 83, 15, 0],
                [1, "de", 55, 83, 16, 0],
                [1, "de", 55, 83, 17, 0],
                [1, "de", 55, 83, 19, 0],
                [1, "de", 55, 83, 18, 0],
                [1, "de", 55, 83, 20, 0],
                [1, "de", 55, 83, 21, 0],
                [1, "de", 55, 83, 22, 0],
                [1, "de", 55, 83, 23, 0],
                [1, "de", 55, 83, 24, 0],
                [1, "de", 55, 83, 25, 0],
                [1, "de", 55, 83, 26, 0],
                [1, "de", 55, 83, 27, 0],
                [1, "de", 55, 83, 28, 0],
                [1, "de", 55, 83, 29, 0],
                [1, "de", 55, 83, 30, 0],
                [1, "de", 55, 83, 31, 0],
                [1, "de", 55, 83, 32, 0],
                [1, "de", 55, 83, 33, 0],
                [1, "de", 55, 83, 34, 0],
                [1, "de", 55, 83, 36, 0],
                [1, "de", 55, 83, 35, 0],
                [1, "de", 55, 83, 37, 0],
                [1, "de", 55, 83, 38, 0],
                [1, "de", 55, 81, 38, 0],
                [1, "de", 55, 82, 38, 0],
                [1, "de", 55, 80, 38, 0],
                [1, "de", 55, 79, 38, 0],
                [1, "de", 55, 78, 38, 0],
                [1, "de", 55, 77, 38, 0],
                [1, "de", 55, 76, 38, 0],
                [1, "de", 55, 75, 38, 0],
                [1, "de", 55, 73, 38, 0],
                [1, "de", 55, 74, 38, 0],
                [1, "de", 55, 72, 38, 0],
                [1, "de", 55, 71, 38, 0],
                [1, "de", 55, 70, 38, 0],
                [1, "de", 55, 68, 38, 0],
                [1, "de", 55, 69, 38, 0],
                [1, "de", 55, 67, 38, 0],
                [1, "de", 55, 66, 38, 0],
                [1, "de", 55, 65, 38, 0],
                [1, "de", 55, 64, 38, 0],
                [1, "de", 55, 63, 38, 0],
                [1, "de", 55, 62, 38, 0],
                [1, "de", 55, 60, 38, 0],
                [1, "de", 55, 61, 38, 0],
                [1, "de", 55, 59, 38, 0],
                [1, "de", 55, 57, 38, 0],
                [1, "de", 55, 58, 38, 0],
                [1, "de", 55, 56, 38, 0],
                [1, "de", 55, 55, 38, 0],
                [1, "de", 55, 54, 38, 0],
                [1, "de", 55, 53, 38, 0],
                [1, "de", 55, 52, 38, 0],
                [1, "de", 55, 51, 38, 0],
                [1, "de", 55, 49, 38, 0],
                [1, "de", 55, 50, 38, 0],
                [1, "de", 55, 48, 38, 0],
                [1, "de", 55, 47, 38, 0],
                [1, "de", 55, 46, 38, 0],
                [1, "de", 55, 45, 38, 0],
                [1, "de", 55, 44, 38, 0],
                [1, "de", 55, 43, 38, 0],
                [1, "de", 55, 42, 38, 0],
                [1, "de", 55, 41, 38, 0],
                [1, "de", 55, 40, 38, 0],
                [1, "de", 55, 39, 38, 0],
                [1, "de", 55, 38, 38, 0],
                [1, "de", 55, 37, 38, 0],
                [1, "de", 55, 36, 38, 0],
                [1, "de", 55, 34, 38, 0],
                [1, "de", 55, 35, 38, 0],
                [1, "de", 55, 33, 38, 0],
                [1, "de", 55, 31, 38, 0],
                [1, "de", 55, 32, 38, 0],
                [1, "de", 55, 30, 38, 0],
                [1, "de", 55, 29, 38, 0],
                [1, "de", 55, 28, 38, 0],
                [1, "de", 55, 27, 38, 0],
                [1, "de", 55, 26, 38, 0],
                [1, "de", 55, 25, 38, 0],
                [1, "de", 55, 24, 38, 0],
                [1, "de", 55, 23, 38, 0],
                [1, "de", 55, 21, 38, 0],
                [1, "de", 55, 22, 38, 0],
                [1, "de", 55, 20, 38, 0],
                [1, "de", 55, 19, 38, 0],
                [1, "de", 55, 19, 37, 0],
                [1, "de", 55, 19, 36, 0],
                [1, "de", 55, 19, 35, 0],
                [1, "de", 55, 19, 34, 0],
                [1, "de", 55, 19, 33, 0],
                [1, "de", 55, 19, 32, 0],
                [1, "de", 55, 19, 31, 0],
                [1, "de", 55, 19, 30, 0],
                [1, "de", 55, 19, 28, 0],
                [1, "de", 55, 19, 29, 0],
                [1, "de", 55, 19, 27, 0],
                [1, "de", 55, 19, 26, 0],
                [1, "de", 55, 19, 25, 0],
                [1, "de", 55, 19, 24, 0],
                [1, "de", 55, 19, 23, 0],
                [1, "de", 55, 19, 22, 0],
                [1, "de", 55, 19, 21, 0],
                [1, "de", 55, 19, 20, 0],
                [1, "de", 55, 19, 18, 0],
                [1, "de", 55, 19, 19, 0],
                [1, "de", 55, 19, 16, 0],
                [1, "de", 55, 19, 17, 0],
                [1, "de", 55, 19, 15, 0],
                [1, "de", 55, 19, 14, 0],
                [1, "de", 55, 19, 13, 0],
                [1, "de", 55, 19, 12, 0],
                [1, "de", 55, 19, 11, 0],
                [1, "de", 55, 19, 10, 0],
                [1, "de", 55, 19, 9, 0],
                [1, "de", 55, 19, 8, 0],
                [1, "de", 55, 84, 35, 0],
                [1, "de", 55, 84, 32, 0],
                [1, "de", 55, 84, 25, 0],
                [1, "de", 50, 84, 24, 0],
                [1, "de", 55, 84, 20, 0],
                [1, "de", 55, 84, 17, 0],
                [1, "de", 55, 84, 16, 0],
                [1, "de", 50, 84, 15, 0],
                [1, "de", 55, 84, 8, 0],
                [1, "de", 55, 84, 9, 0],
                [1, "de", 50, 85, 11, 0],
                [1, "de", 55, 81, 39, 0],
                [1, "de", 50, 83, 40, 0],
                [1, "de", 55, 72, 39, 0],
                [1, "de", 55, 74, 39, 0],
                [1, "de", 55, 66, 39, 0],
                [1, "de", 55, 65, 39, 0],
                [1, "de", 50, 67, 41, 0],
                [1, "de", 55, 56, 39, 0],
                [1, "de", 55, 58, 39, 0],
                [1, "de", 55, 50, 39, 0],
                [1, "de", 50, 49, 39, 0],
                [1, "de", 55, 44, 39, 0],
                [1, "de", 55, 42, 39, 0],
                [1, "de", 50, 43, 39, 0],
                [1, "de", 50, 41, 39, 0],
                [1, "de", 50, 37, 39, 0],
                [1, "de", 55, 36, 39, 0],
                [1, "de", 55, 32, 39, 0],
                [1, "de", 50, 31, 39, 0],
                [1, "de", 55, 23, 39, 0],
                [1, "de", 55, 18, 37, 0],
                [1, "de", 50, 18, 36, 0],
                [1, "de", 55, 18, 35, 0],
                [1, "de", 50, 18, 34, 0],
                [1, "de", 55, 18, 31, 0],
                [1, "de", 50, 18, 30, 0],
                [1, "de", 55, 18, 25, 0],
                [1, "de", 50, 18, 24, 0],
                [1, "de", 55, 18, 20, 0],
                [1, "de", 55, 18, 14, 0],
                [1, "de", 50, 18, 15, 0],
                [1, "de", 55, 18, 8, 0],
                [1, "de", 54, 90, 154, 0],
                [1, "de", 51, 89, 154, 0],
                [1, "de", 54, 85, 154, 0],
                [1, "de", 54, 81, 154, 0],
                [1, "de", 54, 76, 154, 0],
                [1, "de", 54, 70, 154, 0],
                [1, "de", 54, 66, 154, 0],
                [1, "de", 54, 61, 154, 0],
                [1, "de", 54, 56, 154, 0],
                [1, "de", 54, 53, 154, 0],
                [1, "de", 54, 45, 154, 0],
                [1, "de", 54, 42, 154, 0],
                [1, "de", 54, 37, 154, 0],
                [1, "de", 54, 30, 154, 0],
                [1, "de", 54, 25, 154, 0],
                [1, "de", 54, 17, 154, 0],
                [1, "de", 54, 10, 154, 0],
                [1, "de", 54, 8, 154, 0],
                [1, "de", 55, 20, 9, 0],
                [1, "de", 53, 93, 154, 0],
                [1, "de", 53, 93, 156, 0],
                [1, "de", 53, 93, 158, 0],
                [1, "de", 52, 91, 157, 0],
                [1, "de", 53, 93, 159, 0],
                [1, "de", 53, 93, 161, 0],
                [1, "de", 53, 93, 162, 0],
                [1, "de", 53, 93, 163, 0],
                [1, "de", 53, 93, 164, 0],
                [1, "de", 53, 93, 165, 0],
                [1, "de", 53, 93, 166, 0],
                [1, "de", 53, 93, 167, 0],
                [1, "de", 52, 91, 167, 0],
                [1, "de", 53, 93, 169, 0],
                [1, "de", 53, 93, 168, 0],
                [1, "de", 53, 93, 170, 0],
                [1, "de", 53, 93, 171, 0],
                [1, "de", 53, 93, 173, 0],
                [1, "de", 53, 93, 176, 0],
                [1, "de", 53, 93, 175, 0],
                [1, "de", 53, 92, 169, 0],
                [1, "de", 53, 93, 178, 0],
                [1, "de", 53, 93, 179, 0],
                [1, "de", 53, 93, 180, 0],
                [1, "de", 53, 93, 181, 0],
                [1, "de", 53, 93, 183, 0],
                [1, "de", 53, 93, 184, 0],
                [1, "de", 53, 93, 186, 0],
                [1, "de", 18, 95, 185, 0],
                [1, "de", 53, 93, 187, 0],
                [1, "de", 53, 93, 188, 0],
                [1, "de", 52, 91, 186, 0],
                [1, "de", 53, 93, 190, 0],
                [1, "de", 53, 93, 192, 0],
                [1, "de", 53, 93, 195, 0],
                [1, "de", 53, 93, 194, 0],
                [1, "de", 52, 91, 196, 0],
                [1, "de", 53, 93, 197, 0],
                [1, "de", 53, 93, 200, 0],
                [1, "de", 53, 93, 198, 0],
                [1, "de", 53, 93, 201, 0],
                [1, "de", 53, 93, 202, 0],
                [1, "de", 53, 93, 203, 0],
                [1, "de", 53, 93, 204, 0],
                [1, "de", 53, 93, 206, 0],
                [1, "de", 53, 93, 205, 0],
                [1, "de", 53, 93, 207, 0],
                [1, "de", 53, 93, 209, 0],
                [1, "de", 53, 93, 210, 0],
                [1, "de", 53, 93, 212, 0],
                [1, "de", 52, 91, 204, 0],
                [1, "de", 53, 93, 213, 0],
                [1, "de", 53, 93, 214, 0],
                [1, "de", 53, 93, 215, 0],
                [1, "de", 53, 93, 216, 0],
                [1, "de", 53, 93, 217, 0],
                [1, "de", 53, 93, 218, 0],
                [1, "de", 53, 93, 219, 0],
                [1, "de", 53, 93, 220, 0],
                [1, "de", 52, 92, 213, 0],
                [1, "de", 52, 92, 206, 0],
                [1, "de", 52, 92, 202, 0],
                [1, "de", 53, 92, 201, 0],
                [1, "de", 52, 92, 194, 0],
                [1, "de", 52, 92, 178, 0],
                [1, "de", 52, 92, 171, 0],
                [1, "de", 53, 93, 221, 0],
                [1, "de", 53, 93, 222, 0],
                [1, "de", 53, 93, 223, 0],
                [1, "de", 53, 93, 225, 0],
                [1, "de", 53, 93, 228, 0],
                [1, "de", 53, 93, 227, 0],
                [1, "de", 52, 92, 217, 0],
                [1, "de", 53, 92, 218, 0],
                [1, "de", 52, 92, 221, 0],
                [1, "de", 52, 92, 225, 0],
                [1, "de", 52, 93, 226, 0],
                [1, "de", 52, 93, 224, 0],
                [1, "de", 52, 93, 208, 0],
                [1, "de", 52, 93, 211, 0],
                [1, "de", 52, 93, 196, 0],
                [1, "de", 52, 93, 199, 0],
                [1, "de", 52, 93, 189, 0],
                [1, "de", 52, 93, 191, 0],
                [1, "de", 52, 93, 193, 0],
                [1, "de", 52, 93, 182, 0],
                [1, "de", 52, 93, 185, 0],
                [1, "de", 52, 93, 172, 0],
                [1, "de", 52, 93, 174, 0],
                [1, "de", 52, 93, 177, 0],
                [1, "de", 52, 93, 155, 0],
                [1, "de", 52, 93, 157, 0],
                [1, "de", 52, 93, 160, 0],
                [1, "de", 52, 92, 162, 0],
                [1, "de", 53, 93, 229, 0],
                [1, "de", 53, 93, 231, 0],
                [1, "de", 53, 93, 232, 0],
                [1, "de", 53, 93, 234, 0],
                [1, "de", 52, 93, 230, 0],
                [1, "de", 52, 92, 228, 0],
                [1, "de", 53, 93, 235, 0],
                [1, "de", 53, 93, 236, 0],
                [1, "de", 53, 93, 237, 0],
                [1, "de", 53, 93, 239, 0],
                [1, "de", 53, 93, 240, 0],
                [1, "de", 52, 93, 238, 0],
                [1, "de", 53, 93, 241, 0],
                [1, "de", 52, 93, 242, 0],
                [1, "de", 52, 93, 243, 0],
                [1, "de", 53, 93, 244, 0],
                [1, "de", 53, 93, 246, 0],
                [1, "de", 53, 93, 245, 0],
                [1, "de", 52, 93, 247, 0],
                [1, "de", 53, 93, 248, 0],
                [1, "de", 52, 92, 235, 0],
                [1, "de", 52, 92, 245, 0],
                [1, "de", 52, 93, 249, 0],
                [1, "de", 53, 93, 250, 0],
                [1, "de", 53, 93, 251, 0],
                [1, "de", 53, 93, 252, 0],
                [1, "de", 53, 93, 254, 0],
                [1, "de", 52, 93, 253, 0],
                [1, "de", 52, 93, 255, 0],
                [1, "de", 53, 93, 257, 0],
                [1, "de", 53, 93, 256, 0],
                [1, "de", 52, 93, 258, 0],
                [1, "de", 53, 93, 259, 0],
                [1, "de", 52, 93, 260, 0],
                [1, "de", 53, 93, 263, 0],
                [1, "de", 53, 93, 264, 0],
                [1, "de", 53, 93, 265, 0],
                [1, "de", 52, 93, 266, 0],
                [1, "de", 53, 93, 267, 0],
                [1, "de", 52, 93, 268, 0],
                [1, "de", 52, 93, 269, 0],
                [1, "de", 53, 93, 276, 0],
                [1, "de", 53, 93, 277, 0],
                [1, "de", 52, 93, 278, 0],
                [1, "de", 53, 93, 279, 0],
                [1, "de", 52, 93, 280, 0],
                [1, "de", 52, 93, 283, 0],
                [1, "de", 53, 93, 284, 0],
                [1, "de", 53, 93, 285, 0],
                [1, "de", 53, 93, 286, 0],
                [1, "de", 52, 93, 287, 0],
                [1, "de", 53, 93, 288, 0],
                [1, "de", 53, 93, 289, 0],
                [1, "de", 52, 93, 290, 0],
                [1, "de", 52, 93, 291, 0],
                [1, "de", 53, 93, 292, 0],
                [1, "de", 52, 93, 293, 0],
                [1, "de", 53, 93, 294, 0],
                [1, "de", 52, 93, 295, 0],
                [1, "de", 52, 93, 296, 0],
                [1, "de", 53, 93, 297, 0],
                [1, "de", 53, 93, 298, 0],
                [1, "de", 52, 93, 299, 0],
                [1, "de", 53, 93, 300, 0],
                [1, "de", 52, 92, 298, 0],
                [1, "de", 52, 92, 293, 0],
                [1, "r", 92, 262, 0],
                [1, "r", 93, 262, 0],
                [1, "de", 52, 93, 261, 0],
                [1, "cs", 0, 223, 104, 1],
                [1, "cs", 2, 223, 105, 1],
                [1, "cs", 2, 223, 102, 1],
                [1, "cs", 2, 223, 103, 1],
                [1, "la", 3, 141, 8, 1],
                [1, "cs", 2, 140, 9, 1],
                [1, "la", 4, 142, 9, 1],
                [1, "de", 4, 81, 149, 0],
                [1, "f", 0, 83, 148, 1],
                [1, "f", 1, 82, 149, 1],
                [1, "de", 34, 81, 156, 0],
                [1, "de", 51, 17, 9, 0],
                [1, "de", 54, 16, 9, 0],
                [1, "de", 54, 15, 9, 0],
                [1, "cs", 3, 223, 106, 1],
                [1, "p", 0, 119, 279, 1],
                [1, "p", 0, 109, 242, 1],
                [1, "cs", 1, 29, 9, 1],
                [1, "cs", 2, 30, 9, 1],
                [1, "cs", 2, 31, 9, 1],
                [1, "cs", 2, 32, 9, 1],
                [1, "cs", 2, 33, 9, 1],
                [1, "cs", 2, 69, 9, 1],
                [1, "cs", 2, 71, 9, 1],
                [1, "cs", 2, 70, 9, 1],
                [1, "cs", 1, 72, 9, 1],
                [1, "cs", 2, 73, 9, 1],
                [1, "de", 10, 31, 10, 0],
                [1, "de", 10, 29, 10, 0],
                [1, "de", 10, 44, 10, 0],
                [1, "de", 4, 87, 10, 0],
                [1, "de", 4, 86, 10, 0],
                [1, "de", 5, 87, 9, 0],
                [1, "de", 5, 13, 10, 0],
                [1, "de", 4, 14, 11, 0],
                [1, "de", 4, 16, 10, 0],
                [1, "de", 4, 17, 10, 0],
                [1, "cs", 2, 146, 9, 1],
                [1, "cs", 2, 148, 9, 1],
                [1, "cs", 2, 150, 9, 1],
                [1, "cs", 2, 153, 9, 1],
                [1, "cs", 2, 155, 9, 1],
                [1, "cs", 1, 149, 9, 1],
                [1, "cs", 1, 154, 9, 1],
                [1, "cs", 3, 147, 9, 1],
                [1, "cs", 3, 151, 9, 1],
                [1, "cs", 3, 152, 9, 1],
                [1, "cs", 3, 156, 9, 1],
                [1, "cs", 3, 157, 9, 1],
                [1, "cs", 3, 158, 9, 1],
                [1, "cs", 3, 159, 9, 1],
                [1, "cs", 3, 160, 9, 1],
                [1, "cs", 0, 161, 9, 1],
                [1, "cs", 2, 162, 9, 1],
                [1, "cs", 2, 163, 9, 1],
                [1, "cs", 1, 164, 9, 1],
                [1, "cs", 2, 165, 9, 1],
                [1, "cs", 3, 166, 9, 1],
                [1, "cs", 3, 168, 9, 1],
                [1, "cs", 3, 170, 9, 1],
                [1, "cs", 1, 169, 9, 1],
                [1, "cs", 2, 167, 9, 1],
                [1, "cs", 2, 171, 9, 1],
                [1, "cs", 2, 173, 9, 1],
                [1, "cs", 2, 172, 9, 1],
                [1, "cs", 2, 174, 9, 1],
                [1, "cs", 1, 175, 9, 1],
                [1, "cs", 3, 176, 9, 1],
                [1, "cs", 3, 178, 9, 1],
                [1, "cs", 3, 179, 9, 1],
                [1, "cs", 0, 180, 9, 1],
                [1, "cs", 2, 177, 9, 1],
                [1, "cs", 2, 182, 9, 1],
                [1, "cs", 2, 181, 9, 1],
                [1, "cs", 2, 183, 9, 1],
                [1, "cs", 2, 184, 9, 1],
                [1, "cs", 2, 185, 9, 1],
                [1, "cs", 2, 186, 9, 1],
                [1, "cs", 1, 187, 9, 1],
                [1, "cs", 2, 188, 9, 1],
                [1, "cs", 3, 189, 9, 1],
                [1, "cs", 3, 190, 9, 1],
                [1, "cs", 3, 191, 9, 1],
                [1, "cs", 2, 192, 9, 1],
                [1, "cs", 0, 193, 9, 1],
                [1, "cs", 2, 194, 9, 1],
                [1, "cs", 2, 196, 9, 1],
                [1, "cs", 2, 198, 9, 1],
                [1, "cs", 2, 200, 9, 1],
                [1, "cs", 3, 195, 9, 1],
                [1, "cs", 3, 197, 9, 1],
                [1, "cs", 3, 199, 9, 1],
                [1, "cs", 0, 201, 9, 1],
                [1, "cs", 2, 202, 9, 1],
                [1, "cs", 2, 203, 9, 1],
                [1, "cs", 3, 208, 9, 1],
                [1, "cs", 3, 207, 9, 1],
                [1, "cs", 3, 206, 9, 1],
                [1, "cs", 3, 205, 9, 1],
                [1, "cs", 3, 204, 9, 1],
                [1, "cs", 3, 214, 9, 1],
                [1, "cs", 3, 215, 9, 1],
                [1, "cs", 3, 216, 9, 1],
                [1, "cs", 3, 217, 9, 1],
                [1, "cs", 3, 218, 9, 1],
                [1, "b", 0, 5, 159, 0],
                [1, "b", 0, 5, 171, 0],
                [2, "isl", 1, 122, 63, 0],
                [2, "isl", 2, 119, 277, 0],
                [2, "isl", 2, 109, 244, 0],
                [2, "isl", 2, 114, 205, 0],
                [2, "isl", 1, 120, 150, 0],
                [2, "isl", 2, 154, 129, 0],
                [2, "isl", 0, 184, 158, 0],
                [2, "isl", 1, 208, 128, 0],
                [2, "isl", 1, 215, 132, 0],
                [2, "isl", 1, 214, 128, 0],
                [2, "isl", 1, 209, 132, 0],
                [1, "la", 3, 217, 20, 1],
                [1, "la", 1, 215, 19, 1],
                [1, "la", 0, 212, 18, 1],
                [1, "la", 4, 214, 18, 1],
                [1, "la", 4, 216, 19, 1],
                [1, "la", 4, 211, 20, 1],
                [1, "la", 3, 210, 19, 1],
                [1, "la", 3, 215, 21, 1],
                [1, "la", 1, 214, 20, 1],
                [1, "la", 3, 214, 22, 1],
                [1, "la", 3, 214, 24, 1],
                [1, "la", 4, 214, 26, 1],
                [1, "la", 4, 213, 27, 1],
                [1, "la", 1, 212, 28, 1],
                [1, "la", 2, 212, 29, 1],
                [1, "la", 5, 212, 30, 1],
                [1, "la", 4, 208, 19, 1],
                [1, "la", 4, 207, 19, 1],
                [1, "la", 1, 206, 19, 1],
                [1, "la", 1, 205, 19, 1],
                [1, "la", 2, 204, 19, 1],
                [1, "la", 5, 203, 19, 1],
                [1, "la", 3, 210, 17, 1]
            ],
            g = 0,
            e = {
                wv_: ["#133A2B", "#042b30"],
                WVWVo: ["#EBF2F0", "#136167"],
                uVQvO: ["#4EB687", "#187484"],
                $Wvu_: ["#664516", "#13474C"],
                Wuw$U: ["#FCEFBB", "#0F4D48"],
                oo_00: ["#C1AA7E", "#0F423D"],
                _OQ$V: ["#594837", "#163A3A"],
                uVVvO: ["#A5D6D6", "#539CA0"],
                OOo: ["#0B6A84", "#09373F"],
                QQ_o0: ["#2A8B9B", "#0F464C"],
                u0_vo: ["#A9D6D3", "#115E60"],
                $oWV$: ["#ECF7F9", "#539CA0"],
                o_W$v: ["#FFF", "#FFF"],
                wV_$$: ["#FFF", "#FFF"],
                oQU_$: ["#1C9BA4", "#00272F"],
                QWw: ["#2D2017", "#031C1E"],
                _v: 0,
                OW: 1,
                o_voo: 2300,
                OvQVW: 2290,
                QWvOO: 34,
                OovUw: 5,
                VwWwV: 68,
                vWvv0: 34,
                $u$Qv: 5,
                QQ_uV: 1,
                OuWVv: 0.6,
                QV_Wo: 0.25,
                ow$O$: 50,
                V$UQo: 10,
                v_WoO: 75,
                u0uwO: 20,
                ___u0: 5,
                QvW: g++,
                oOo: g++,
                vwU: g++,
                QWu: g++,
                OQv: g++,
                $Vu: g++,
                WU_: g++,
                $O_: g++,
                $ov: g++,
                UuV: g++,
                _UQ: g++,
                u$w: g++,
                $Uu: g++,
                $v$: g++,
                ow_: g++,
                wo0: g++,
                ___: g++,
                _U0: g++,
                QVV: g++,
                VQv: g++,
                _ov: g++,
                _vo: g++,
                U$v: g++,
                oo0: g++,
                $uv: g++,
                vOO: g++,
                uou: g++,
                _O$: g++,
                Q_$: g++,
                Uwv: g++,
                w$v: g++,
                _v_: g++,
                V_V: g++,
                _uV: g++,
                QUW: g++,
                oQw: g++,
                UQV: g++,
                wvo: g++,
                $OU: g++,
                VQ0: g++,
                vvW: g++,
                oO0: g++,
                o$$: g++,
                wOu: g++,
                vQ$: g++,
                vvV: g++,
                oVO: g++,
                vV$: g++,
                WV0: g++,
                _v0: g++,
                UwQ: g++,
                OvW: g++,
                oQo: g++,
                UOQ: g++,
                OoU: g++,
                uvV: g++,
                OVv: g++,
                WvU: g++,
                _U$: g++,
                $$Q: g++,
                _$0: g++,
                VUW: g++,
                _Wu: g++,
                WWu: g++,
                VWO: g++,
                _vW: g++,
                uuu: g++,
                OQW: g++,
                UwW: g++,
                vOV: g++,
                vvo: g++,
                WuO: g++,
                $Ow: g++,
                w$Q: g++,
                wQO: g++,
                VWv: g++,
                wQo: g++,
                w_v: g++,
                uWU: g++,
                VwO: g++,
                O__: g++,
                o_v: g++,
                VUO: g++,
                VoU: g++,
                o_Q: g++,
                $wo: g++,
                ow$: g++,
                oOO: g++,
                QwQ: g++,
                U_u: g++,
                $$w: g++,
                woU: g++,
                vwO: g++,
                O$O: g++,
                uv$V$: g++,
                wwo: g++,
                $w0: g++,
                OWv: g++,
                VWQ: g++,
                UWW: g++,
                Wv_: g++,
                vvU: g++,
                uuw: g++,
                vU_: g++,
                Q$_: g++,
                $U: g++,
                v$: g++,
                UoV: g++,
                oOQ: g++,
                W0OQv: g++,
                Wo_: g++,
                Qvv: g++,
                VQWUV: g++,
                WuOvV: g++,
                vOu: g++,
                $W: g++,
                $wu: g++,
                QwW: g++,
                vV$Wu: g++,
                OQ$: g++,
                uUO: g++,
                QQu: g++,
                vvv: g++,
                UVW: g++,
                vw_: g++,
                QQ_: g++,
                _W$: g++,
                O$w: g++,
                OwW: g++,
                U$W: g++,
                vV0: g++,
                wov: g++,
                vv$: g++,
                Ow_: g++,
                QW$U$: g++,
                uV$: g++,
                OOVw_: g++,
                W_Ouu: g++,
                $_uVo: g++,
                wuuO0: g++,
                v__: g++,
                $WQ: g++,
                vQQ: g++,
                WQw: g++,
                vWV: g++,
                _UO: g++,
                QW$: g++,
                u_V: g++,
                ouo: g++,
                _vU: g++,
                V_w: g++,
                W_W: g++,
                UoU: g++,
                Ww$: g++,
                oV_: g++,
                _$$: g++,
                _OW: g++,
                OwO: g++,
                uVv: g++,
                Wvw: g++,
                QOUuW: g++,
                V$Q: g++,
                wuW: g++,
                uuo: g++,
                _w0: g++,
                WwUoo: g++,
                o0Q00: g++,
                QOVu$: g++,
                QuO: g++,
                uUoWQ: g++,
                $uv0W: g++,
                OouUu: g++,
                oVoQv: g++,
                vvOwv: g++,
                oUvoQ: g++,
                v_woU: g++,
                vwOv_: g++,
                vuQ: g++,
                _WW: g++,
                U$U: g++,
                Ouv: g++,
                v_$: g++,
                OUVW_: g++,
                VWU: g++,
                WoV: g++,
                wWWv$: g++,
                oOu: g++,
                $oWQ$: g++,
                Vuw: g++,
                _Ww: g++,
                $uU: g++,
                QwQV_: g++,
                Wwv: g++,
                uUV: g++,
                o__UV: g++,
                Qww: g++,
                w_: g++,
                WUu: g++,
                $$oW0: g++,
                _w_: g++,
                WVo_0: g++,
                UVv: g++,
                w0O0W: g++,
                wwW: g++,
                QVUO_: g++,
                uUu_0: g++,
                vwQ: g++,
                v$_: g++,
                owo: g++,
                $W0: g++,
                Q$o: g++,
                oWQ: g++,
                wUO: g++,
                uQu: g++,
                $VU: g++,
                UWU: g++,
                wU$: g++,
                VuU: g++,
                uQW: g++,
                ovw: g++,
                ovO: g++,
                w$U: g++,
                O_U: g++,
                QOQ: g++,
                wuO: g++,
                vww: g++,
                $Uo: g++,
                $ww: g++,
                U_$: g++,
                uU_: g++,
                vOv: g++,
                o$0: g++,
                wQQ: g++,
                V$V: g++,
                QUU: g++,
                WwW: g++,
                QW_: g++,
                Wov: g++,
                $u0: g++,
                v$v: g++,
                o$VQV: g++,
                UQQ: g++,
                OW$: g++,
                $OV: g++,
                wuv: g++,
                vUu: g++,
                VU__O: g++,
                u$U: g++,
                uo$vu: g++,
                vWW: g++,
                WUQv0: g++,
                W$_OQ: g++,
                vouUo: g++,
                vUv: g++,
                uVQ: g++,
                VuW$U: g++,
                U$OoW: g++,
                ooQw0: g++,
                _$o: g++,
                oQO_O: g++,
                VV_: g++,
                vwovO: g++,
                U_UOO: g++,
                oOwOU: g++,
                _Uv0$: g++,
                oW_Uu: g++,
                uuvUW: g++,
                vQvov: g++,
                QoQVW: g++,
                V$_Q_: g++,
                $wVoO: g++,
                v$wv0: g++,
                $$w$Q: g++,
                VvW: g++,
                v$V: g++,
                QQV: g++,
                Vvv: g++,
                VW: g++,
                oQU0_: g++,
                WOv: g++,
                wu0: g++,
                _Ov$U: g++,
                $uu: g++,
                o_0: g++,
                _vO_0: g++,
                UvwW0: g++,
                Q$v_$: g++,
                $wWv$: g++,
                $QO: g++,
                QoVo_: g++,
                vWQvo: g++,
                __O: g++,
                V$W: g++,
                _Q$: g++,
                VVWoW: g++,
                QV_VO: g++,
                wvoWo: g++,
                WvVUV: g++,
                u_uvW: g++,
                OoQuV: g++,
                UowUU: g++,
                W_U: g++,
                V0O: g++,
                WvOUo: g++,
                $wWVu: g++,
                O_OO0: g++,
                UwUu_: g++,
                QUOQU: g++,
                O0woo: g++,
                O_$: g++,
                UQw: g++,
                U0QWO: g++,
                U0_QV: g++,
                $uQ$_: g++,
                UWQoo: g++,
                Qo_: g++,
                wwwUo: g++,
                OWuuv: g++,
                W$v$w: g++,
                u0QUV: g++,
                _vv$V: g++,
                wQQQV: g++,
                W0_: g++,
                u0v: g++,
                U0uuU: g++,
                vvVuO: g++,
                QQU$$: g++,
                vQU__: g++,
                wW$v$: g++,
                _UOou: g++,
                v_W: g++,
                vWUOQ: g++,
                QoUuV: g++,
                vv_0v: g++,
                vw$wV: g++,
                $_$Qw: g++,
                vuuwv: g++,
                $WOOv: g++,
                uuow_: g++,
                _Ov0w: g++,
                w0vuv: g++,
                o0vo0: g++,
                wO$0$: g++,
                o_ouw: g++,
                wQovw: g++,
                uVuwu: g++,
                QwQ0o: g++,
                Q_$$u: g++,
                __U_O: g++,
                o0UOU: g++,
                oW$wo: g++,
                WoU$0: g++,
                oVo0O: g++,
                uOooo: g++,
                V_UQW: g++,
                uU$$v: g++,
                w_Uwu: g++,
                _vUQV: g++,
                _QOwW: g++,
                vvWuQ: g++,
                wuw$0: g++,
                wo$o0: g++,
                uQvU0: g++,
                Wv0: g++,
                O0_: g++,
                _WQ0$: g++,
                UWu: g++,
                $U_: g++,
                u_V0U: g++,
                _wOV_: g++,
                Wu_: g++,
                OOOv$: g++,
                WWQoO: g++,
                $oU: g++,
                _Uo_o: g++,
                $Q$U$: g++,
                QV_V$: g++,
                $U__w: g++,
                $0Oou: g++,
                _owOW: g++,
                UWQV_: g++,
                UOv$$: g++,
                wuwV$: g++,
                vQVV$: g++,
                vQvuQ: g++,
                vvvuv: g++,
                Qvw: g++,
                uQVoU: g++,
                WVoW_: g++,
                Q$QQW: g++,
                vQQ_u: g++,
                OvQV$: g++,
                $OuQQ: g++,
                _oo$o: g++,
                WVVoV: g++,
                _uw: g++,
                $W$Wu: g++,
                VwVu_: g++,
                uowWO: g++,
                VuQUv: g++,
                WUWu_: g++,
                vUVwu: g++,
                $vwuO: g++,
                voWUw: g++,
                VVw_$: g++,
                wvU_Q: g++,
                oO_v0: g++,
                WUW: g++,
                VwwW0: g++,
                Qwo: g++,
                uW_: g++,
                $w$Vo: g++,
                uO0: g++,
                uOV: g++,
                u_wUO: g++,
                WQUQW: g++,
                $oWVw: g++,
                uvo: g++,
                vwo_W: g++,
                UoWvU: g++,
                u$o: g++,
                U_WwV: g++,
                U0u0w: g++,
                WUw_W: g++,
                _OW0W: g++,
                OwOuu: g++,
                w0U: g++,
                uvO_Q: g++,
                wOWVW: g++,
                Q_o: g++,
                Uwww$: g++,
                W_wV$: g++,
                _0v: g++,
                VOvwQ: g++,
                uWW_u: g++,
                u0o: g++,
                WUoQU: g++,
                VV$uW: g++,
                vU_O$: g++,
                W$o: g++,
                voU$W: g++,
                VOOwU: g++,
                vW_VU: g++,
                _oU: g++,
                _u$: g++,
                vo$Q$: g++,
                QUUUU: g++,
                Wvw_w: g++,
                OwUQo: g++,
                W$O_Q: g++,
                QUWov: g++,
                wOuU$: g++,
                VO_UU: g++,
                vuUVV: g++,
                uuQv0: g++,
                WOoUV: g++,
                wQwQW: g++,
                $u_OV: g++,
                W$$: g++,
                VuO_u: g++,
                VUvQ$: g++,
                wuQ$0: g++,
                vQ$uo: g++,
                nbirdA: g++,
                vVO: g++,
                UuO: g++,
                OwQv0: g++,
                wQQow: g++,
                wOOQu: g++,
                $OoQU: g++,
                uowOo: g++,
                vUUow: g++,
                owOvO: g++,
                QUw$V: g++,
                $$Ouw: g++,
                $Owu_: g++,
                wQw0O: g++,
                Q$ovQ: g++,
                VOvuQ: g++,
                uUOVW: g++,
                VQOuv: g++,
                vuov0: g++,
                uoUWO: g++,
                W$u: g++,
                __uO$: g++,
                uV_o_: g++,
                oVv0o: g++,
                QVuOv: g++,
                WWO0U: g++,
                VwQuu: g++,
                QWWVW: g++,
                Qvv$w: g++,
                w$WwQ: g++,
                UUWVv: g++,
                QVQ: g++,
                u0uuW: g++,
                w0UwO: g++,
                vuwW_: g++,
                UO_$W: g++,
                uu_wW: g++,
                vwuWV: g++,
                VuO_u: g++,
                WVo$0: g++,
                uwVW_: g++,
                V_V$v: g++,
                V_v$Q: g++,
                Quw_W: g++,
                $UOO$: g++,
                vVoW$: g++,
                v0W_v: g++,
                _W_: g++,
                OUvo_: g++,
                UwUVo: g++,
                wUou$: g++,
                owQ_W: g++,
                uQouu: g++,
                OowVo: g++,
                Quu: g++,
                o0_$U: g++,
                Uu$U0: g++,
                $$oV_: g++,
                oWuU0: g++,
                _WUQW: g++,
                oUooo: g++,
                owuww: g++,
                vwvuU: g++,
                WVVww: g++,
                VWQvV: g++,
                wv$wu: g++,
                _Wv: g++,
                VUV: g++,
                Vosocket: g++,
                __W: g++,
                ovUQo: g++,
                $vv: g++,
                w_QvU: g++,
                $v$vu: g++,
                vU$uW: g++,
                $vwQo: g++,
                POINTS: g++,
                Voo: g++,
                OQUW0: g++,
                _0o0O: g++,
                Q0$_$: g++,
                ovuV$: g++,
                vVOUu: g++,
                w0W0W: g++,
                UuWOQ: g++,
                Ou$wQ: g++,
                vuuwO: g++,
                _VO: g++,
                WvW: g++,
                vOUQu: g++,
                QuOuw: g++,
                O_Q: g++,
                WuU: g++,
                O$UoW: g++,
                $wO: g++,
                W$o__: g++,
                VuwVQ: g++,
                Q$O: g++,
                UoU0w: g++,
                _wWV_: g++,
                VOu: g++,
                u__Uo: g++,
                W0QOo: g++,
                WVQ: g++,
                uOuO$: g++,
                wvVQ$: g++,
                o_O: g++,
                $_VvQ: g++,
                OQwQV: g++,
                Wou: g++,
                v_U0v: g++,
                __vwQ: g++,
                _wo: g++,
                W_u_0: g++,
                WQWo$: g++,
                U$V: g++,
                OwvQQ: g++,
                vwOWQ: g++,
                uWo: g++,
                $wu$o: g++,
                _uVVO: g++,
                Qvvu0: g++,
                UVoWQ: g++,
                uo$: g++,
                O0uVU: g++,
                OvWuV: g++,
                ovvO0: g++,
                wWoVo: g++,
                $UwOv: g++,
                wUwUU: g++,
                VsocketO: g++,
                UWv0w: g++,
                WWwVW: g++,
                OUVuV: g++,
                ww0: g++,
                vOU_U: g++,
                _WuWO: g++,
                $_UuU: g++,
                uu_$o: g++,
                Ou0: g++,
                _wUvW: g++,
                VQvwW: g++,
                $UQUv: g++,
                wwVOQ: g++,
                W_$w$: g++,
                uVQUQ: g++,
                oUUUw: g++,
                __u$W: g++,
                Owowv: g++,
                Qvvow: g++,
                W$O: g++,
                u_W: g++,
                u_o: g++,
                WU_Vo: g++,
                $0vu$: g++,
                WwuU0: g++,
                WUuu0: g++,
                QWO$w: g++,
                OwuuQ: g++,
                VuWWo: g++,
                OoO0O: g++,
                QW$vV: g++,
                Q0VVO: g++,
                $_w_Q: g++,
                ow$Uu: g++,
                O$v_V: g++,
                OOUwV: g++,
                QuvVo: g++,
                WVv: g++,
                ___0O: g++,
                WuQw_: g++,
                W$_u_: g++,
                UOVQw: g++,
                OWO_V: g++,
                oOvOV: g++,
                UwvVw: g++,
                uWouv: g++,
                vOvV_: g++,
                w$OOu: g++,
                ovuOO: g++,
                Ov_Qv: g++,
                W_Woo: g++,
                OOQOu: g++,
                o0vvv: g++,
                uQOww: g++,
                $OQOV: g++,
                UuwQV: g++,
                oVOQQ: g++,
                UUwwQ: g++,
                wV_Q_: g++,
                wwwQQ: g++,
                wuWU0: g++,
                _WW0_: g++,
                VoWvv: g++,
                W_wVO: g++,
                uvuvO: g++,
                WW_QQ: g++,
                O0Quo: g++,
                OO$Ov: g++,
                Q_u$o: g++,
                o0UuV: g++,
                UvWvU: g++,
                w0UU0: g++,
                Wwow$: g++,
                vQv: g++,
                VOQOW: g++,
                oOww_: g++,
                ouw: g++,
                O$Vw_: g++,
                $OO: g++,
                wWu: g++,
                ow_$$: g++,
                uuw_w: g++,
                vvuOQ: g++,
                vou0$: g++,
                VVO0O: g++,
                VvOo0: g++,
                vuwvO: g++,
                wovQ$: g++,
                VouVv: g++,
                uV$OW: g++,
                voOOo: g++,
                wWO: g++,
                _OQ: g++,
                QoV: g++,
                $QU: g++,
                $vu: g++,
                WOw: g++,
                wovOQ: g++,
                w__WU: g++,
                o0OWU: g++,
                v$$OW: g++,
                _o_0Q: g++,
                vuvWU: g++,
                UuVU_: g++,
                oOU$V: g++,
                _Uv0Q: g++,
                $$QW0: g++,
                vvoOQ: g++,
                uOQ: g++,
                VOo$Q: g++,
                vOO_Q: g++,
                vQuWQ: g++,
                Vu_: g++,
                o_uw0: g++,
                U_Uuv: g++,
                $Ww: g++,
                WouWQ: g++,
                vQQ__: g++,
                wVvuu: g++,
                V$oou: g++,
                vwu0$: g++,
                v$_wV: g++,
                UVOwu: g++,
                wQVvw: g++,
                QQuwO: g++,
                wuo: g++,
                QWOU_: g++,
                w$O: g++,
                wQW: g++,
                OOVo_: g++,
                ouVWO: g++,
                wQ$$O: g++,
                QvUuu: g++,
                VUQ0W: g++,
                O_wwo: g++,
                vOW: g++,
                V_OQV: g++,
                uWwUU: g++,
                VuW: g++,
                _VQ0U: g++,
                _OWww: g++,
                OU_: g++,
                $_Uw0: g++,
                OvQ$O: g++,
                wUW: g++,
                UW$oo: g++,
                Q$vuQ: g++,
                WoU: g++,
                V$u0O: g++,
                UuQv_: g++,
                Q0o0v: g++,
                VUv_U: g++,
                $oQ$v: g++,
                _u$0O: g++,
                OVv__: g++,
                wVO: g++,
                O$o0Q: g++,
                o0OOO: g++,
                WVQ0V: g++,
                V_UWo: g++,
                $_u: g++,
                oQO0Q: g++,
                UV_UV: g++,
                Q__0W: g++,
                U0_: g++,
                _0O0V: g++,
                OwUUU: g++,
                _$Q: g++,
                $oQ0Q: g++,
                QQWU$: g++,
                WvwOw: g++,
                V0_: g++,
                oUuQ0: g++,
                OuuVW: g++,
                wV_UO: g++,
                w$uVQ: g++,
                W0V: g++,
                oUuvu: g++,
                oovoQ: g++,
                Q00: g++,
                V0O_Q: g++,
                QO_QO: g++,
                Q__: g++,
                VvQ: g++,
                UoOvU: g++,
                oo_o$: g++,
                uWU0w: g++,
                oUO$Q: g++,
                $0QUQ: g++,
                o$oUu: g++,
                VvoVo: g++,
                wQW_O: g++,
                uwQuw: g++,
                Ww0: g++,
                ouvW$: g++,
                o_o: g++,
                wwV: g++,
                VUu$w: g++,
                W0$V_: g++,
                _oOVQ: g++,
                $wOvw: g++,
                UVU_O: g++,
                $V$: g++,
                _wW: g++,
                uVO_V: g++,
                voVWv: g++,
                vw$VW: g++,
                Q$woU: g++,
                w_U: g++,
                O0_0V: g++,
                oWu_U: g++,
                U_w00: g++,
                Qwwuo: g++,
                U0oQo: g++,
                ouvoO: g++,
                Q_W0O: g++,
                ouvQo: g++,
                _0VWo: g++,
                uQQ: g++,
                _$W: g++,
                uvW: g++,
                OOW: g++,
                Qu0: g++,
                OQWO0: g++,
                vOoWo: g++,
                VWuvW: g++,
                $QOoU: g++,
                _0OOQ: g++,
                wUUOO: g++,
                _vUv$: g++,
                vVOvo: g++,
                $QwOw: g++,
                Wvu_u: g++,
                WouV_: g++,
                u$O: g++,
                W0UUU: g++,
                wouO_: g++,
                WoowU: g++,
                ou$0W: g++,
                WUVu0: g++,
                $w$WV: g++,
                u$vou: g++,
                uwV_v: g++,
                OUoVO: g++,
                oWWuv: g++,
                _QQ: g++,
                vWUQ_: g++,
                Vo$ou: g++,
                UQOWU: g++,
                OVV$v: g++,
                U$wOv: g++,
                Uv$Ou: g++,
                uOWwW: g++,
                wW_: g++,
                woW: g++,
                OUQV0: g++,
                v$Vvw: g++,
                $$U0O: g++,
                wuUWV: g++,
                W_w$V: g++,
                uVVuU: g++,
                UUW_v: g++,
                oQu_W: g++,
                OWV$U: g++,
                uQvoQ: g++,
                _$_v$: g++,
                _vu$v: g++,
                Ww$_o: g++,
                WwwVo: g++,
                $OOuv: g++,
                v$QO_: g++,
                o_QOw: g++,
                WWw: g++,
                UvW$V: g++,
                uQ0: g++,
                uVuoO: g++,
                vu$_w: g++,
                $$O: g++,
                UQvQw: g++,
                _0VQv: g++,
                $Vu_0: g++,
                $vWQv: g++,
                wUV_v: g++,
                V$UV0: g++,
                QvUw_: g++,
                VWOoO: g++,
                _U_o$: g++,
                w$W: g++,
                QWW$$: g++,
                Q_$0Q: g++,
                $0u_U: g++,
                uovuO: g++,
                OwUw_: g++,
                V0WOw: g++,
                _W$VV: g++,
                vUV_0: g++,
                _Qo$_: g++,
                ouwOV: g++,
                OO$QW: g++,
                U0Ow_: g++,
                _w_ww: g++,
                uU$ou: g++,
                WV$QW: g++,
                vO$$U: g++,
                VUVO0: g++,
                oQoo$: g++,
                VvWWV: g++,
                W$uvU: g++,
                oU$vo: g++,
                _OO0w: g++,
                WWVO0: g++,
                vVU_Q: g++,
                UUuuv: g++,
                WOo: g++,
                vowv0: g++,
                oo_WO: g++,
                U$uuu: g++,
                UovUo: g++,
                WUO$_: g++,
                $0vuU: g++,
                $oo: g++,
                Wvo: g++,
                vQUQW: g++,
                _wQWV: g++,
                Oo$: g++,
                uW0: g++,
                uuoo0: g++,
                W0vVQ: g++,
                Q_V: g++,
                vU$: g++,
                VVwW0: g++,
                UUQuQ: g++,
                OOU: g++,
                $0UUO: g++,
                uvVOV: g++,
                oO_: g++,
                O$V: g++,
                U_$O$: g++,
                wvQ: g++,
                wQovW: g++,
                $vuVw: g++,
                oOv: g++,
                Qo0: g++,
                wO_: g++,
                O0UQV: g++,
                UUO$o: g++,
                OVw: g++,
                $U_Qw: g++,
                VQQVV: g++,
                vVU: g++,
                VOWvv: g++,
                UwOu0: g++,
                vvvUv: g++,
                wWouU: g++,
                UUvv$: g++,
                OUV: g++,
                VuOuw: g++,
                OWUW0: g++,
                U_WV0: g++,
                socket: g++,
                QWVvu: g++,
                WOUuO: g++,
                wvv00: g++,
                vowWo: g++,
                _uQ$W: g++,
                VOU: g++,
                oQQ: g++,
                w_$u0: g++,
                v$Quw: g++,
                OwU$u: g++,
                _UOw_: g++,
                $u_$v: g++,
                QUO: g++,
                __WoW: g++,
                u$UOQ: g++,
                QWv: g++,
                vwo_$: g++,
                $VoWW: g++,
                UVQ: g++,
                ouuVQ: g++,
                OvVVQ: g++,
                QwVOu: g++,
                O$U_$: g++,
                woUQO: g++,
                UUw$_: g++,
                W0uV_: g++,
                U_wvQ: g++,
                _ou: g++,
                WVUow: g++,
                VWw: g++,
                wOsocket: g++,
                oQ_: g++,
                O_$$W: g++,
                $0uwO: g++,
                w__: g++,
                OVuWV: g++,
                QUWUw: g++,
                _O0: g++,
                VO__Q: g++,
                QV$uQ: g++,
                Qv_: g++,
                uu_OW: g++,
                OvU_U: g++,
                V_0: g++,
                VVOuQ: g++,
                VoQVo: g++,
                uoO: g++,
                uwWVO: g++,
                u0UQ0: g++,
                W_o: g++,
                UUOU0: g++,
                _uQWv: g++,
                OUQ: g++,
                vUoV_: g++,
                WOuvv: g++,
                OQu: g++,
                Qo$Vu: g++,
                QQW: g++,
                vwUV0: g++,
                $WuQU: g++,
                wQouo: g++,
                vuUWW: g++,
                u0o__: g++,
                uuovO: g++,
                WWV: g++,
                WV: g++,
                oouVU: g++,
                _VUwU: g++,
                $Wv: g++,
                UVvV0: g++,
                oOovW: g++,
                wU0: g++,
                uUoO0: g++,
                Q$W: g++,
                wOoQo: g++,
                Oo0: g++,
                OoWVo: g++,
                $QV: g++,
                QvVW0: g++,
                vw0: g++,
                vvuOo: g++,
                v_0: g++,
                vuu: g++,
                $$v: g++,
                wv$vo: g++,
                VUvVO: g++,
                ooQ: g++,
                oOuwV: g++,
                wvuw_: g++,
                _OU: g++,
                $oQW$: g++,
                UW_U_: g++,
                O_v: g++,
                uov_w: g++,
                vww: g++,
                vu_: g++,
                wo_QW: g++,
                voUV_: g++,
                v$Q_Q: g++,
                _wWUW: g++,
                W0O: g++,
                ouvQQ: g++,
                QwWVv: g++,
                voW: g++,
                UvwoQ: g++,
                _wVWu: g++,
                $QuWU: g++,
                V_Q$V: g++,
                uwuw$: g++,
                $Uo: g++,
                QWo: g++,
                uOuvW: g++,
                QOWUQ: g++,
                UV_$w: g++,
                _VV0W: g++,
                QOwoU: g++,
                WVWQQ: g++,
                oV0: g++,
                O$VwV: g++,
                vOv_W: g++,
                VVQ: g++,
                ou$Vv: g++,
                uOVWO: g++,
                OO_uv: g++,
                $ww: g++,
                WUU: g++,
                WuV_W: g++,
                VV$o_: g++,
                QV$vo: g++,
                _oowo: g++,
                WU$wU: g++,
                U0$Wo: g++,
                Uw$: g++,
                $_uQ0: g++,
                O0v: g++,
                $oQ: g++,
                vouoV: g++,
                W$$OV: g++,
                o0v: g++,
                uU_: g++,
                $vw: g++,
                V$_: g++,
                $oV: g++,
                UWo: g++,
                o0O: g++,
                _0o: g++,
                v0U: g++,
                wVv: g++,
                v0O: g++,
                _o$: g++,
                _VU: g++,
                WoU00: g++,
                $$uVV: g++,
                $$W: g++,
                _oO: g++,
                v0o: g++,
                V$vwQ: g++,
                oUv: g++,
                WVo$v: g++,
                OUO: g++,
                wQQ: g++,
                Qu_Uo: g++,
                Q0V: g++,
                wuwuo: g++,
                QVUvU: g++,
                U0w: g++,
                VWov0: g++,
                U_U_u: g++,
                QU0: g++,
                wVU: g++,
                V0V: g++,
                voO: g++,
                WoO0$: g++,
                Q_Ww0: g++,
                vVwww: g++,
                $vU: g++,
                $0Q: g++,
                vvw: g++,
                Qwov_: g++,
                uvOOo: g++,
                Oov: g++,
                voQUv: g++,
                V_V_O: g++,
                v$o0v: g++,
                $wvuw: g++,
                WOouO: g++,
                uVWQ_: g++,
                o0V_0: g++,
                w0$_o: g++,
                UWoVo: ["#E9CF96", "#144940"],
                U0_U0: g++,
                VuQWo: g++,
                wowQu: g++,
                $O$0W: g++,
                QOW_0: g++,
                UWv: g++,
                V$uWw: g++,
                Qv0: g++,
                wOW0o: g++,
                W$Q: g++,
                WoQwQ: g++,
                uu0: g++,
                VOVOV: g++,
                Qvsocket: g++,
                Q$OQv: g++,
                _WV: g++,
                QwoWV: g++,
                uv0: g++,
                WQOV0: g++,
                _Q$0_: g++,
                _$V: g++,
                wuQQw: g++,
                oVsocket: g++,
                Uw0: g++,
                OUUQ_: g++,
                wO$oQ: g++,
                Qvu: g++,
                VUu$_: g++,
                oV$W0: g++,
                wW$: g++,
                WQOou: g++,
                ww$0u: g++,
                _oW: g++,
                WVUv_: g++,
                OVw$w: g++,
                UUu: g++,
                uOOow: g++,
                wOw$Q: g++,
                _W0: g++,
                $U$Oo: g++,
                O$U: g++,
                VoV$Q: g++,
                U_wv0: g++,
                VoO0w: g++,
                WoUvo: g++,
                U$WvW: g++,
                oVU: g++,
                w0Qvw: g++,
                o$VUV: g++,
                VVuov: g++,
                UWV: g++,
                $vWwV: g++,
                Q0V_w: g++,
                wUOuo: g++,
                $VQ: g++,
                O$uO_: g++,
                wVvQu: g++,
                QuW$_: g++,
                $$0: g++,
                V0vUU: g++,
                uu_oQ: g++,
                OWVQO: g++,
                ou$: g++,
                VVQU$: g++,
                U0__O: g++,
                ou$QV: g++,
                V$o: g++,
                VwUoQ: g++,
                O0$wu: g++,
                Qvo: g++,
                wvQwO: g++,
                OW$: g++,
                U$w: g++,
                $_oUW: g++,
                UUUV0: g++,
                UUw: g++,
                vVV0$: g++,
                v0OOv: g++,
                WWU: g++,
                _O_wO: g++,
                u$ov0: g++,
                _w$: g++,
                V$UwW: g++,
                $$U_v: g++,
                UQO: g++,
                VWQwO: g++,
                QWUuO: g++,
                uWw: g++,
                wvouV: g++,
                wuw_v: g++,
                VvV: g++,
                vWUOw: g++,
                U$uuo: g++,
                QV0: g++,
                Vw$wV: g++,
                uuOQV: g++,
                VV$: g++,
                Vvo_W: g++,
                QoovQ: g++,
                UvV: g++,
                OwOo_: g++,
                vuOuQ: g++,
                UOv: g++,
                Qvwo0: g++,
                V$V0$: g++,
                o_U: g++,
                $UuUu: g++
            },
            g = 0,
            q = {
                $uu: g++,
                $ow: g++,
                UoQ: g++,
                oOQ: g++,
                $ov: g++,
                oOo: g++,
                QWu: g++,
                OQv: g++,
                _v_: g++,
                V_V: g++,
                oQw: g++,
                UQV: g++,
                wvo: g++,
                $OU: g++,
                VQ0: g++,
                vvV: g++,
                oVO: g++,
                UwQ: g++,
                OvW: g++,
                oQo: g++,
                vw_: g++,
                _v0: g++,
                UOQ: g++,
                OoU: g++,
                Q_$: g++,
                $Uu: g++,
                $v$: g++,
                ow_: g++,
                wo0: g++,
                _uV: g++,
                QUW: g++,
                ___: g++,
                _U0: g++,
                QVV: g++,
                WvU: g++,
                QvW: g++,
                $Vu: g++,
                WU_: g++,
                w$v: g++,
                VQv: g++,
                vUu: g++,
                _W$: g++,
                Wv$: g++,
                Q$u: g++,
                W_u: g++,
                oQW: g++,
                QvU: g++,
                vVW: g++,
                $v0: g++,
                Qvv: g++,
                vv$: g++,
                OU0: g++,
                O$w: g++,
                vV0: g++,
                _Ww: g++,
                _OW: g++,
                OwO: g++,
                uVv: g++,
                Wvw: g++,
                $wu: g++,
                oWQ: g++,
                Vw_: g++,
                wvV: g++,
                u_v: g++,
                vO0: g++,
                VuQ: g++,
                wUO: g++,
                oV_: g++,
                wuW: g++,
                uuo: g++,
                _w0: g++,
                QwW: g++,
                uQu: g++,
                vwQ: g++,
                v$_: g++,
                owo: g++,
                $W0: g++,
                Q$o: g++,
                $VU: g++,
                V$Q: g++,
                oo0: g++,
                $uv: g++,
                VUO: g++,
                _UQ: g++,
                u$w: g++,
                vvW: g++,
                QwQ: g++,
                _U$: g++,
                vOO: g++,
                uou: g++,
                _O$: g++,
                wOu: g++,
                vQ$: g++,
                WV0: g++,
                vV$: g++,
                _ov: g++,
                _vo: g++,
                U$v: g++,
                O__: g++,
                o_v: g++,
                Uwv: g++,
                vOu: g++,
                $WQ: g++,
                vQQ: g++,
                UoU: g++,
                Ww$: g++,
                OQ$: g++,
                WoV: g++,
                UWU: g++,
                uV$: g++,
                vvv: g++,
                QQu: g++,
                $WU: g++,
                Ow$: g++,
                U$W: g++,
                _UO: g++,
                QW$: g++,
                u_V: g++,
                ouo: g++,
                _vU: g++,
                V_w: g++,
                W_W: g++,
                uvV: g++,
                OVv: g++,
                VUQ: g++,
                wo_: g++,
                $$Q: g++,
                _$0: g++,
                VUW: g++,
                _Wu: g++,
                WWu: g++,
                VWO: g++,
                wwo: g++,
                _vW: g++,
                $w0: g++,
                uuu: g++,
                OWv: g++,
                OQW: g++,
                VWQ: g++,
                UwW: g++,
                UWW: g++,
                vOV: g++,
                Wv_: g++,
                vvo: g++,
                vvU: g++,
                WuO: g++,
                $Ow: g++,
                w$Q: g++,
                wQO: g++,
                VWv: g++,
                wQo: g++,
                w_v: g++,
                uWU: g++,
                VwO: g++,
                VoU: g++,
                o_Q: g++,
                $wo: g++,
                ow$: g++,
                wWQ: g++,
                Uwu: g++,
                wo$: g++,
                vuQ: g++,
                Wwv: g++,
                VuU: g++,
                uQW: g++,
                U_u: g++,
                vOv: g++,
                $$w: g++,
                vwO: g++,
                O$O: g++,
                woU: g++
            },
            g = 0,
            f = {
                QvW: g++,
                oOo: g++,
                vwU: g++,
                QWu: g++,
                OQv: g++,
                $Vu: g++,
                WU_: g++,
                $O_: g++,
                $ov: g++,
                UuV: g++,
                _UQ: g++,
                u$w: g++,
                $Uu: g++,
                $v$: g++,
                ow_: g++,
                wo0: g++,
                ___: g++,
                _U0: g++,
                QVV: g++,
                VQv: g++,
                _ov: g++,
                _vo: g++,
                U$v: g++,
                oo0: g++,
                $uv: g++,
                vOO: g++,
                uou: g++,
                _O$: g++,
                Q_$: g++,
                Uwv: g++,
                w$v: g++,
                _v_: g++,
                V_V: g++,
                _uV: g++,
                QUW: g++,
                oQw: g++,
                UQV: g++,
                wvo: g++,
                $OU: g++,
                VQ0: g++,
                vvW: g++,
                oO0: g++,
                o$$: g++,
                wOu: g++,
                vQ$: g++,
                vvV: g++,
                oVO: g++,
                vV$: g++,
                WV0: g++,
                _v0: g++,
                UwQ: g++,
                OvW: g++,
                oQo: g++,
                UOQ: g++,
                OoU: g++,
                uvV: g++,
                OVv: g++,
                WvU: g++,
                _U$: g++,
                $$Q: g++,
                _$0: g++,
                VUW: g++,
                _Wu: g++,
                WWu: g++,
                VWO: g++,
                _vW: g++,
                uuu: g++,
                OQW: g++,
                UwW: g++,
                vOV: g++,
                vvo: g++,
                WuO: g++,
                $Ow: g++,
                w$Q: g++,
                wQO: g++,
                VWv: g++,
                wQo: g++,
                w_v: g++,
                uWU: g++,
                VwO: g++,
                O__: g++,
                o_v: g++,
                VUO: g++,
                VoU: g++,
                o_Q: g++,
                $wo: g++,
                ow$: g++,
                oOO: g++,
                QwQ: g++,
                U_u: g++,
                $$w: g++,
                woU: g++,
                vwO: g++,
                O$O: g++,
                v$v: g++,
                wwo: g++,
                $w0: g++,
                OWv: g++,
                VWQ: g++,
                UWW: g++,
                Wv_: g++,
                vvU: g++,
                V0: g++,
                vv: g++,
                Q$_: g++,
                $U: g++,
                v$: g++,
                $uu: g++,
                oOQ: g++,
                vUu: g++,
                Wo_: g++,
                Qvv: g++,
                $ow: g++,
                UoQ: g++,
                vOu: g++,
                $W: g++,
                $wu: g++,
                QwW: g++,
                VuQ: g++,
                OQ$: g++,
                uUO: g++,
                QQu: g++,
                vvv: g++,
                UVW: g++,
                vw_: g++,
                QQ_: g++,
                _W$: g++,
                O$w: g++,
                OwW: g++,
                U$W: g++,
                vV0: g++,
                wov: g++,
                vv$: g++,
                Ow_: g++,
                wv_: g++,
                uV$: g++,
                Wuv: g++,
                OU0: g++,
                VUQ: g++,
                wo_: g++,
                v__: g++,
                $WQ: g++,
                vQQ: g++,
                WQw: g++,
                vWV: g++,
                _UO: g++,
                QW$: g++,
                u_V: g++,
                ouo: g++,
                _vU: g++,
                V_w: g++,
                W_W: g++,
                UoU: g++,
                Ww$: g++,
                oV_: g++,
                _$$: g++,
                _OW: g++,
                OwO: g++,
                uVv: g++,
                Wvw: g++,
                Vw_: g++,
                V$Q: g++,
                wuW: g++,
                uuo: g++,
                _w0: g++,
                wvV: g++,
                u_v: g++,
                vO0: g++,
                QuO: g++,
                WVV: g++,
                Ovv: g++,
                OvV: g++,
                $VW: g++,
                OwQ: g++,
                wWQ: g++,
                Uwu: g++,
                wo$: g++,
                vuQ: g++,
                _WW: g++,
                U$U: g++,
                Ouv: g++,
                v_$: g++,
                Wv$: g++,
                VWU: g++,
                WoV: g++,
                Q$u: g++,
                oOu: g++,
                W_u: g++,
                Vuw: g++,
                _Ww: g++,
                QOQ: g++,
                wuO: g++,
                Wwv: g++,
                uUV: g++,
                Vwv: g++,
                Qww: g++,
                w_: g++,
                vv_: g++,
                oQW: g++,
                _w_: g++,
                QvU: g++,
                UVv: g++,
                vVW: g++,
                wwW: g++,
                $v0: g++,
                V$V: g++,
                vwQ: g++,
                v$_: g++,
                owo: g++,
                $W0: g++,
                Q$o: g++,
                oWQ: g++,
                wUO: g++,
                uQu: g++,
                $VU: g++,
                UWU: g++,
                wU$: g++,
                VuU: g++,
                uQW: g++,
                w$U: g++,
                vww: g++,
                $Uo: g++,
                $ww: g++,
                uU_: g++,
                vOv: g++,
                o$0: g++,
                QUU: g++,
                VWw: g++,
                WwW: g++,
                OvO: g++,
                Quv: g++,
                QW_: g++,
                Wwo: g++,
                OW$: g++,
                UVO: g++
            },
            K = {
                $WO: 0,
                VO$: 1,
                QVo: 2,
                uU$: 3,
                UvQ: 4,
                Vuu: 5
            },
            D = [];
        D[f.vv] = {
            name: "Wood",
            Vv: e.UQw,
            __: 0,
            wV: 0
        };
        D[f.V0] = {
            name: "Stone",
            Vv: e.O_$,
            __: 0,
            wV: 0
        };
        D[f.$U] = {
            name: "Gold",
            Vv: e.__O,
            __: 0,
            wV: 0
        };
        D[f.v$] = {
            name: "Diamond",
            Vv: e.V$W,
            __: 0,
            wV: 0
        };
        D[f.$W] = {
            name: "Amethyst",
            Vv: e.uO0,
            __: 0,
            wV: 0
        };
        D[f.vwU] = {
            name: "Rabbit fur",
            Vv: e.uQvU0,
            __: 0,
            wV: 0
        };
        D[f.QuO] = {
            name: "Wolf fur",
            Vv: e.uQVoU,
            __: 0,
            wV: 0
        };
        D[f.QW_] = {
            name: "Boar fur",
            Vv: e.Qvsocket,
            __: 0,
            wV: 0
        };
        D[f.v$v] = {
            name: "Firefly",
            Vv: e._WV,
            __: 0,
            wV: 0
        };
        D[f.wwo] = {
            name: "Wood arrow",
            Vv: e.uv0,
            __: 0,
            wV: 1
        };
        D[f.$w0] = {
            name: "Stone arrow",
            Vv: e._$V,
            __: 0,
            wV: 1
        };
        D[f.OWv] = {
            name: "Gold arrow",
            Vv: e.Uw0,
            __: 0,
            wV: 1
        };
        D[f.VWQ] = {
            name: "Diamond arrow",
            Vv: e.Qvu,
            __: 0,
            wV: 1
        };
        D[f.UWW] = {
            name: "Amethyst arrow",
            Vv: e.wW$,
            __: 0,
            wV: 1
        };
        D[f.Wv_] = {
            name: "Reidite arrow",
            Vv: e._oW,
            __: 0,
            wV: 1
        };
        D[f.vvU] = {
            name: "Dragon arrow",
            Vv: e.UUu,
            __: 0,
            wV: 0
        };
        D[f.v__] = {
            name: "Winter fur",
            Vv: e.uu_wW,
            __: 0,
            wV: 0
        };
        D[f.UVO] = {
            name: "Fur mammoth",
            Vv: e.UQO,
            __: 0,
            wV: 0
        };
        D[f._$$] = {
            name: "Web",
            Vv: e.OoQuV,
            __: 0,
            wV: 0
        };
        D[f.Wo_] = {
            name: "Meat",
            Vv: e.VVWoW,
            __: 0,
            wV: 0
        };
        D[f.wov] = {
            name: "Fish",
            Vv: e.VoWvv,
            __: 0,
            wV: 0
        };
        D[f.UVW] = {
            name: "Kraken skin",
            Vv: e.WwuU0,
            __: 0,
            wV: 0
        };
        D[f.Ow_] = {
            name: "Piranha scales",
            Vv: e.VOQOW,
            __: 0,
            wV: 0
        };
        D[f.Wuv] = {
            name: "Ice",
            Vv: e.OOVw_,
            __: 0,
            wV: 0
        };
        D[f.uUO] = {
            name: "Sand",
            Vv: e._wUvW,
            __: 0,
            wV: 0
        };
        D[f.wv_] = {
            name: "Dirt",
            Vv: e.QW$U$,
            __: 0,
            wV: 0
        };
        D[f.Q$_] = {
            name: "Berrie",
            Vv: e.v$wv0,
            __: 0,
            wV: 0
        };
        D[f.QQ_] = {
            name: "Flour",
            Vv: e.OoO0O,
            __: 0,
            wV: 0
        };
        D[f.OwW] = {
            name: "Flour",
            Vv: e.WuQw_,
            __: 0,
            wV: 0
        };
        D[f.$VW] = {
            name: "Special fur peasant",
            Vv: e.oVoQv,
            __: 0,
            wV: 0
        };
        D[f.OwQ] = {
            name: "Special fur hood",
            Vv: e.vvOwv,
            __: 0,
            wV: 0
        };
        D[f.VWU] = {
            name: "Pumpkin",
            Vv: e.ouvoO,
            __: 0,
            wV: 0
        };
        D[f.oOu] = {
            name: "Garlic",
            Vv: e.$w$WV,
            __: 0,
            wV: 0
        };
        D[f.Vuw] = {
            name: "Thornbush",
            Vv: e.U$wOv,
            __: 0,
            wV: 0
        };
        D[f._w_] = {
            name: "Carrot",
            Vv: e.OUV,
            __: 0,
            wV: 0
        };
        D[f.UVv] = {
            name: "Tomato",
            Vv: e.VOU,
            __: 0,
            wV: 0
        };
        D[f.wwW] = {
            name: "Watermelon",
            Vv: e.QUO,
            __: 0,
            wV: 0
        };
        D[f.V$V] = {
            name: "Aloe Vera",
            Vv: e._ou,
            __: 0,
            wV: 0
        };
        D[f.wU$] = {
            name: "Penguin Feather",
            Vv: e.Oo0,
            __: 0,
            wV: 0
        };
        D[f.o$0] = {
            name: "Hawk Feather",
            Vv: e.$QV,
            __: 0,
            wV: 0
        };
        D[f.QUU] = {
            name: "Vulture Feather",
            Vv: e.vw0,
            __: 0,
            wV: 0
        };
        D[f.VWw] = {
            name: "Cactus",
            Vv: e.UWv,
            __: 0,
            wV: 0
        };
        D[f.Quv] = {
            name: "Cactus",
            Vv: e.uu0,
            __: 0,
            wV: 0
        };
        D[f.OvO] = {
            name: "Pitchfork Part",
            Vv: e.W$Q,
            __: 0,
            wV: 0
        };
        D[f.Wwo] = {
            name: "Emerald Machine",
            Vv: e._W0,
            __: 0,
            wV: 0
        };
        D[f.WwW] = {
            name: "Emerald",
            Vv: e.Qv0,
            __: 0,
            wV: 0
        };
        D[f.oO0] = {
            name: "Christmas Hat",
            Vv: e.$Vu_0,
            wV: 0
        };
        D[f.o$$] = {
            name: "Elf Hat",
            Vv: e.wUV_v,
            wV: 0
        };
        D[f.Qww] = {
            name: "Garland",
            Vv: e.v$QO_,
            wV: 0,
            __: 0
        };
        D[f.Vwv] = {
            name: "Candy",
            Vv: e.o__UV,
            wV: 0
        };
        D[f.uUV] = {
            name: "Sugar Cane",
            Vv: e._$_v$,
            wV: 0
        };
        D[f.UuV] = {
            name: "Pirate Sword",
            Vv: e.uVVuU,
            __: 0,
            wV: 0
        };
        D[f.QOQ] = {
            name: "Crab Stick",
            Vv: e.$uU,
            __: 0,
            wV: 0
        };
        D[f.w_] = {
            name: "Reidite",
            Vv: e.wvQ,
            __: 0,
            wV: 0
        };
        D[f.vv_] = {
            name: "Flame",
            Vv: e.O$V,
            __: 0,
            wV: 0
        };
        D[f.$uu] = {
            name: "Campfire",
            Vv: e.wvoWo,
            __: 0,
            wV: 1
        };
        D[f.Wwv] = {
            name: "Bed",
            Vv: e._OO0w,
            __: 0,
            wV: 1
        };
        D[f.oOQ] = {
            name: "Workbench",
            Vv: e.U$OoW,
            __: 0,
            wV: 1
        };
        D[f.QvW] = {
            name: "Stone sword",
            Vv: e.uo$vu,
            __: 0,
            wV: 1
        };
        D[f.oOo] = {
            name: "Stone pick",
            Vv: e.WUQv0,
            __: 0,
            wV: 1
        };
        D[f.vUu] = {
            name: "Berries bush",
            Vv: e.oQU0_,
            __: 0,
            wV: 0
        };
        D[f.QWu] = {
            name: "Gold pick",
            Vv: e.QoVo_,
            __: 0,
            wV: 1
        };
        D[f.OQv] = {
            name: "Diamond pick",
            Vv: e.W$_OQ,
            __: 0,
            wV: 1
        };
        D[f.WvU] = {
            name: "Wood sword",
            Vv: e.vVOvo,
            __: 0,
            wV: 1
        };
        D[f.$Vu] = {
            name: "Gold sword",
            Vv: e._vO_0,
            __: 0,
            wV: 1
        };
        D[f.WU_] = {
            name: "Diamond sword",
            Vv: e.UvwW0,
            __: 0,
            wV: 1
        };
        D[f.$ov] = {
            name: "Wood pick",
            Vv: e.O0woo,
            __: 0,
            wV: 1
        };
        D[f._OW] = {
            name: "Wood wall",
            Vv: e.U0_QV,
            __: 0,
            wV: 1
        };
        D[f.oV_] = {
            name: "Wood spike",
            Vv: e.UWQoo,
            __: 0,
            wV: 1
        };
        var Jb = M.console;
        Jb.log = Jb.info = Jb.error = Jb.warn = Jb.debug = Jb.o_W$V = Jb.trace = Jb.time = Jb.timeEnd = function() {};
        D[f.Qvv] = {
            name: "Cooked meat",
            Vv: e.u0QUV,
            __: 0,
            wV: 0
        };
        D[f.$ow] = {
            name: "Big campfire",
            Vv: e.wQQQV,
            __: 0,
            wV: 1
        };
        D[f._Ww] = {
            name: "Bandage",
            Vv: e.u_uvW,
            __: 0,
            wV: 1
        };
        D[f.OwO] = {
            name: "Stone wall",
            Vv: e.ooQw0,
            __: 0,
            wV: 1
        };
        D[f.uVv] = {
            name: "Gold wall",
            Vv: e.oQO_O,
            __: 0,
            wV: 1
        };
        D[f.Wvw] = {
            name: "Diamond wall",
            Vv: e.QQU$$,
            __: 0,
            wV: 1
        };
        D[f.Vw_] = {
            name: "Wood door",
            Vv: e.U_UOO,
            __: 0,
            wV: 1
        };
        D[f.V$Q] = {
            name: "Chest",
            Vv: e.QoUuV,
            __: 0,
            wV: 1
        };
        D[f.wuW] = {
            name: "Stone spike",
            Vv: e.V_UQW,
            __: 0,
            wV: 1
        };
        D[f.uuo] = {
            name: "Gold spike",
            Vv: e._vUQV,
            __: 0,
            wV: 1
        };
        D[f._w0] = {
            name: "Diamond spike",
            Vv: e.vvWuQ,
            __: 0,
            wV: 1
        };
        D[f.wvV] = {
            name: "Stone door",
            Vv: e._WQ0$,
            __: 0,
            wV: 1
        };
        D[f.u_v] = {
            name: "Gold door",
            Vv: e.u_V0U,
            __: 0,
            wV: 1
        };
        D[f.vO0] = {
            name: "Diamond door",
            Vv: e.OOOv$,
            __: 0,
            wV: 1
        };
        D[f._UQ] = {
            name: "Chapka",
            Vv: e.O0_,
            __: 0,
            wV: 1
        };
        D[f.u$w] = {
            name: "Big Chapka",
            Vv: e._Uo_o,
            __: 0,
            wV: 1
        };
        D[f.$Uu] = {
            name: "Wood spear",
            Vv: e.$W$Wu,
            __: 0,
            wV: 1
        };
        D[f.$v$] = {
            name: "Stone spear",
            Vv: e.vQQ_u,
            __: 0,
            wV: 1
        };
        D[f.ow_] = {
            name: "Gold spear",
            Vv: e._oo$o,
            __: 0,
            wV: 1
        };
        D[f.wo0] = {
            name: "Diamond spear",
            Vv: e.VuQUv,
            __: 0,
            wV: 1
        };
        D[f.___] = {
            name: "Dragon spear",
            Vv: e.vu$_w,
            __: 0,
            wV: 0
        };
        D[f._U0] = {
            name: "Dragon spear",
            Vv: e._0VQv,
            __: 0,
            wV: 0
        };
        D[f.QVV] = {
            name: "Crab spear",
            Vv: e._w_ww,
            __: 0,
            wV: 1
        };
        D[f.wuO] = {
            name: "Crab loot",
            Vv: e.QwQV_,
            __: 0,
            wV: 0
        };
        D[f.UoQ] = {
            name: "Furnace",
            Vv: e.voWUw,
            __: 0,
            wV: 1
        };
        D[f.oo0] = {
            name: "Explorer hat",
            Vv: e.WQUQW,
            __: 0,
            wV: 1
        };
        D[f.$uv] = {
            name: "Pirate hat",
            Vv: e.vwo_W,
            __: 0,
            wV: 1
        };
        D[f.oOO] = {
            name: "Flower hat",
            Vv: e._O_wO,
            __: 0,
            wV: 1
        };
        D[f.QwQ] = {
            name: "Fur hat",
            Vv: e.V$UwW,
            __: 0,
            wV: 1
        };
        D[f._U$] = {
            name: "Wood helmet",
            Vv: e._0OOQ,
            __: 0,
            wV: 1
        };
        D[f.vOO] = {
            name: "Stone helmet",
            Vv: e._OW0W,
            __: 0,
            wV: 1
        };
        D[f.uou] = {
            name: "Gold helmet",
            Vv: e.uvO_Q,
            __: 0,
            wV: 1
        };
        D[f._O$] = {
            name: "Diamond helmet",
            Vv: e.Uwww$,
            __: 0,
            wV: 1
        };
        D[f.Q_$] = {
            name: "Book",
            Vv: e.VOvwQ,
            __: 0,
            wV: 1
        };
        D[f.vOu] = {
            name: "Paper",
            Vv: e.WUoQU,
            __: 0,
            wV: 0
        };
        D[f.Uwv] = {
            name: "Bag",
            Vv: e.wo$o0,
            __: 0,
            wV: 1
        };
        D[f.w$v] = {
            name: "Amethyst sword",
            Vv: e.QUWov,
            __: 0,
            wV: 1
        };
        D[f._v_] = {
            name: "Amethyst pick",
            Vv: e.uuQv0,
            __: 0,
            wV: 1
        };
        D[f._uV] = {
            name: "Amethyst spear",
            Vv: e.wQQow,
            __: 0,
            wV: 1
        };
        D[f.oQw] = {
            name: "Stone hammer",
            Vv: e.owOvO,
            __: 0,
            wV: 1
        };
        D[f.UQV] = {
            name: "Gold hammer",
            Vv: e.$Owu_,
            __: 0,
            wV: 1
        };
        D[f.wvo] = {
            name: "Diamond hammer",
            Vv: e.VOvuQ,
            __: 0,
            wV: 1
        };
        D[f.$OU] = {
            name: "Amethyst hammer",
            Vv: e.vuov0,
            __: 0,
            wV: 1
        };
        D[f.VQ0] = {
            name: "Reidite hammer",
            Vv: e.__uO$,
            __: 0,
            wV: 1
        };
        D[f.$wu] = {
            name: "Amethyst wall",
            Vv: e.QVuOv,
            __: 0,
            wV: 1
        };
        D[f.QwW] = {
            name: "Amethyst spike",
            Vv: e.QWWVW,
            __: 0,
            wV: 1
        };
        D[f.VuQ] = {
            name: "Amethyst door",
            Vv: e.w$WwQ,
            __: 0,
            wV: 1
        };
        D[f.vvW] = {
            name: "Cap & scarf",
            Vv: e.vuwW_,
            __: 0,
            wV: 1
        };
        D[f.$WQ] = {
            name: "Blue cord",
            Vv: e.v0W_v,
            __: 0,
            wV: 0
        };
        D[f.vQQ] = {
            name: "Lock",
            Vv: e.wUou$,
            __: 0,
            wV: 1
        };
        D[f._UO] = {
            name: "Resurrection",
            Vv: e.owuww,
            __: 0,
            wV: 1
        };
        D[f.UoU] = {
            name: "Lockpick",
            Vv: e.VWQvV,
            __: 0,
            wV: 1
        };
        D[f.Ww$] = {
            name: "Totem",
            Vv: e.vuuwO,
            __: 0,
            wV: 1
        };
        D[f.wOu] = {
            name: "Amethyst helmet",
            Vv: e.$v$vu,
            __: 0,
            wV: 1
        };
        D[f.vvV] = {
            name: "Super hammer",
            Vv: e.vVOUu,
            __: 0,
            wV: 1
        };
        D[f.OQ$] = {
            name: "Bridge",
            Vv: e.vOU_U,
            __: 1,
            wV: 1
        };
        D[f.UWU] = {
            name: "Wood Tower",
            Vv: e.QWUuO,
            __: 1,
            wV: 1
        };
        D[f.QQu] = {
            name: "Bottle full",
            Vv: e.$Ww,
            __: 0,
            wV: 0
        };
        D[f.vvv] = {
            name: "Bottle empty",
            Vv: e.$UQUv,
            __: 0,
            wV: 0
        };
        D[f.oVO] = {
            name: "Stone shovel",
            Vv: e.Qvvow,
            __: 0,
            wV: 1
        };
        D[f.vw_] = {
            name: "Watering can",
            Vv: e.OwuuQ,
            __: 0,
            wV: 0
        };
        D[f._W$] = {
            name: "Wheat",
            Vv: e.$_w_Q,
            __: 0,
            wV: 0
        };
        D[f.O$w] = {
            name: "Cookie",
            Vv: e.OOUwV,
            __: 0,
            wV: 0
        };
        D[f.U$W] = {
            name: "Windmill",
            Vv: e.oOvOV,
            __: 0,
            wV: 1
        };
        D[f.vV$] = {
            name: "Super diving suit",
            Vv: e.w$OOu,
            __: 0,
            wV: 1
        };
        D[f.WV0] = {
            name: "Diving mask",
            Vv: e.W_Woo,
            __: 0,
            wV: 1
        };
        D[f._v0] = {
            name: "Watering can full",
            Vv: e.$OQOV,
            __: 0,
            wV: 0
        };
        D[f.vV0] = {
            name: "Cake",
            Vv: e.wuWU0,
            __: 0,
            wV: 0
        };
        D[f.vv$] = {
            name: "Foodfish cooked",
            Vv: e.O0Quo,
            __: 0,
            wV: 0
        };
        D[f.uV$] = {
            name: "Plot",
            Vv: e.VVO0O,
            __: 1,
            wV: 1
        };
        D[f.OU0] = {
            name: "Bread",
            Vv: e.voOOo,
            __: 0,
            wV: 0
        };
        D[f.$WU] = {
            name: "Bottle full (with ice)",
            Vv: e.Qw_o_,
            __: 0,
            wV: 1
        };
        D[f.Ow$] = {
            name: "Bottle full (with well)",
            Vv: e.wWW0v,
            __: 0,
            wV: 1
        };
        D[f.UwQ] = {
            name: "Gold shovel",
            Vv: e.v$$OW,
            __: 0,
            wV: 1
        };
        D[f.OvW] = {
            name: "Diamond shovel",
            Vv: e.oOU$V,
            __: 0,
            wV: 1
        };
        D[f.oQo] = {
            name: "Amethyst shovel",
            Vv: e.$$QW0,
            __: 0,
            wV: 1
        };
        D[f.uvV] = {
            name: "Spanner",
            Vv: e.vQuWQ,
            __: 0,
            wV: 1
        };
        D[f.OVv] = {
            name: "Machete",
            Vv: e.U_Uuv,
            __: 0,
            wV: 1
        };
        D[f.VUQ] = {
            name: "Bread oven",
            Vv: e.wVvuu,
            __: 0,
            wV: 1
        };
        D[f.wo_] = {
            name: "Sandwich",
            Vv: e.ouVWO,
            __: 0,
            wV: 0
        };
        D[f.$$Q] = {
            name: "Dragon helmet",
            Vv: e.O_wwo,
            __: 0,
            wV: 0
        };
        D[f._$0] = {
            name: "Dragon helmet",
            Vv: e.uWwUU,
            __: 0,
            wV: 0
        };
        D[f.$$w] = {
            name: "Witch",
            Vv: e._OWww,
            __: 0,
            wV: 0
        };
        D[f.woU] = {
            name: "Nimbus",
            Vv: e.OvQ$O,
            __: 0,
            wV: 0
        };
        D[f.vwO] = {
            name: "Wand1",
            Vv: e.Q$vuQ,
            __: 0,
            wV: 0
        };
        D[f.O$O] = {
            name: "Wand2",
            Vv: e.UuQv_,
            __: 0,
            wV: 0
        };
        D[f._Wu] = {
            name: "Dragon sword",
            Vv: e.W$o__,
            __: 0,
            wV: 0
        };
        D[f.WWu] = {
            name: "Dragon sword",
            Vv: e.UoU0w,
            __: 0,
            wV: 0
        };
        D[f.WuO] = {
            name: "Wood shield",
            Vv: e.wuw_v,
            __: 0,
            wV: 1
        };
        D[f.$Ow] = {
            name: "Stone shield",
            Vv: e.U$uuo,
            __: 0,
            wV: 1
        };
        D[f.w$Q] = {
            name: "Gold shield",
            Vv: e.uuOQV,
            __: 0,
            wV: 1
        };
        D[f.wQO] = {
            name: "Diamond shield",
            Vv: e.QoovQ,
            __: 0,
            wV: 1
        };
        D[f.VWv] = {
            name: "Amethyst shield",
            Vv: e.vuOuQ,
            __: 0,
            wV: 1
        };
        D[f.wQo] = {
            name: "Reidite shield",
            Vv: e.V$V0$,
            __: 0,
            wV: 1
        };
        D[f.VWO] = {
            name: "Wood bow",
            Vv: e.u__Uo,
            __: 0,
            wV: 1
        };
        D[f._vW] = {
            name: "Stone bow",
            Vv: e.uOuO$,
            __: 0,
            wV: 1
        };
        D[f.uuu] = {
            name: "Gold bow",
            Vv: e.$_VvQ,
            __: 0,
            wV: 1
        };
        D[f.OQW] = {
            name: "Diamond bow",
            Vv: e.v_U0v,
            __: 0,
            wV: 1
        };
        D[f.UwW] = {
            name: "Amethyst bow",
            Vv: e.W_u_0,
            __: 0,
            wV: 1
        };
        D[f.vOV] = {
            name: "Reidite bow",
            Vv: e.OwvQQ,
            __: 0,
            wV: 1
        };
        D[f.vvo] = {
            name: "Dragon bow",
            Vv: e.$wu$o,
            __: 0,
            wV: 0
        };
        D[f.w_v] = {
            name: "Crown of life",
            Vv: e.WVQ0V,
            __: 0,
            wV: 0
        };
        D[f.WVV] = {
            name: "Gem of life",
            Vv: e.$uv0W,
            __: 0,
            wV: 0
        };
        D[f.U$U] = {
            name: "Orb of the dragon",
            Vv: e.VU__O,
            __: 0,
            wV: 0
        };
        D[f.v_$] = {
            name: "Orb of the dragon",
            Vv: e.u$U,
            __: 0,
            wV: 0
        };
        D[f._WW] = {
            name: "Cube of the dragon",
            Vv: e.VUv_U,
            __: 0,
            wV: 0
        };
        D[f.Ouv] = {
            name: "Cube of the dragon",
            Vv: e._u$0O,
            __: 0,
            wV: 0
        };
        D[f.uWU] = {
            name: "Crown of luck",
            Vv: e.UV_UV,
            __: 0,
            wV: 0
        };
        D[f.Ovv] = {
            name: "Gem of luck",
            Vv: e.OouUu,
            __: 0,
            wV: 0
        };
        D[f.VwO] = {
            name: "Crown of the angel",
            Vv: e.WvwOw,
            __: 0,
            wV: 0
        };
        D[f.OvV] = {
            name: "Gem of the angel",
            Vv: e.uUoWQ,
            __: 0,
            wV: 0
        };
        D[f.WQw] = {
            name: "Dragon heart",
            Vv: e.uQouu,
            __: 0,
            wV: 0
        };
        D[f.vWV] = {
            name: "Lava heart",
            Vv: e.Quu,
            __: 0,
            wV: 0
        };
        D[f.VoU] = {
            name: "Hood",
            Vv: e.$oQ0Q,
            __: 0,
            wV: 1
        };
        D[f.o_Q] = {
            name: "Peasant",
            Vv: e.oUuQ0,
            __: 0,
            wV: 1
        };
        D[f.ow$] = {
            name: "Winter peasant",
            Vv: e.oUuvu,
            __: 0,
            wV: 0
        };
        D[f.$wo] = {
            name: "Winter hood",
            Vv: e.V0O_Q,
            __: 0,
            wV: 0
        };
        D[f.wWQ] = {
            name: "Bucket full",
            Vv: e.UoOvU,
            __: 0,
            wV: 0
        };
        D[f.Uwu] = {
            name: "Bucket empty",
            Vv: e.oo_o$,
            __: 0,
            wV: 1
        };
        D[f.wo$] = {
            name: "Well",
            Vv: e.wQW_O,
            __: 0,
            wV: 1
        };
        D[f.vuQ] = {
            name: "Sign",
            Vv: e._oOVQ,
            __: 0,
            wV: 1
        };
        D[f.Wv$] = {
            name: "Pumpkin Seed",
            Vv: e.O0_0V,
            __: 0,
            wV: 0
        };
        D[f.Q$u] = {
            name: "Garlic Seed",
            Vv: e.W0UUU,
            __: 0,
            wV: 0
        };
        D[f.W_u] = {
            name: "Thorbushes Seed",
            Vv: e.vWUQ_,
            __: 0,
            wV: 0
        };
        D[f.WoV] = {
            name: "Roof",
            Vv: e.OUoVO,
            __: 1,
            wV: 1
        };
        D[f.VUW] = {
            name: "Crab Crown",
            Vv: e.UUuuv,
            __: 0,
            wV: 1
        };
        D[f.oQW] = {
            name: "Carrot Seed",
            Vv: e.VOWvv,
            __: 0,
            wV: 0
        };
        D[f.QvU] = {
            name: "Tomato Seed",
            Vv: e.QWVvu,
            __: 0,
            wV: 0
        };
        D[f.vVW] = {
            name: "Watermelon Seed",
            Vv: e.w_$u0,
            __: 0,
            wV: 0
        };
        D[f.$v0] = {
            name: "Aloe Vera Seed",
            Vv: e.O$U_$,
            __: 0,
            wV: 0
        };
        D[f.O__] = {
            name: "Cap",
            Vv: e.Qwov_,
            __: 0,
            wV: 1
        };
        D[f.o_v] = {
            name: "Turban",
            Vv: e.voQUv,
            __: 0,
            wV: 1
        };
        D[f.VUO] = {
            name: "Pilot Helmet",
            Vv: e.U_WwV,
            __: 0,
            wV: 1
        };
        D[f.QW$] = {
            name: "Emerald Machine",
            Vv: e.w0Qvw,
            __: 0,
            wV: 0
        };
        D[f.u_V] = {
            name: "Emerald Machine",
            Vv: e.$vWwV,
            __: 0,
            wV: 1
        };
        D[f.ouo] = {
            name: "Emerald Machine",
            Vv: e.O$uO_,
            __: 0,
            wV: 1
        };
        D[f._vU] = {
            name: "Emerald Machine",
            Vv: e.V0vUU,
            __: 0,
            wV: 1
        };
        D[f.V_w] = {
            name: "Emerald Machine",
            Vv: e.VVQU$,
            __: 0,
            wV: 1
        };
        D[f.W_W] = {
            name: "Emerald Machine",
            Vv: e.VwUoQ,
            __: 0,
            wV: 1
        };
        D[f.UOQ] = {
            name: "Pitchfork",
            Vv: e.$VoWW,
            __: 0,
            wV: 1
        };
        D[f.vwQ] = {
            name: "Wood Door Spike",
            Vv: e.wOsocket,
            __: 0,
            wV: 1
        };
        D[f.v$_] = {
            name: "Stone Door Spike",
            Vv: e.$0uwO,
            __: 0,
            wV: 1
        };
        D[f.owo] = {
            name: "Gold Door Spike",
            Vv: e.QUWUw,
            __: 0,
            wV: 1
        };
        D[f.$W0] = {
            name: "Diamond Door Spike",
            Vv: e.QV$uQ,
            __: 0,
            wV: 1
        };
        D[f.Q$o] = {
            name: "Amethyst Door Spike",
            Vv: e.OvU_U,
            __: 0,
            wV: 1
        };
        D[f._ov] = {
            name: "Diamond Fire Protection ",
            Vv: e.vQUQW,
            __: 0,
            wV: 1
        };
        D[f._vo] = {
            name: "Amethyst Fire Protection ",
            Vv: e.uuoo0,
            __: 0,
            wV: 1
        };
        D[f.U$v] = {
            name: "Amethyst Fire Protection ",
            Vv: e.VVwW0,
            __: 0,
            wV: 1
        };
        D[f.VQv] = {
            name: "Reidite Sword",
            Vv: e.$0UUO,
            __: 0,
            wV: 1
        };
        D[f.QUW] = {
            name: "Reidite Spear",
            Vv: e.O0UQV,
            __: 0,
            wV: 1
        };
        D[f.vQ$] = {
            name: "Reidite Helmet",
            Vv: e.$U_Qw,
            __: 0,
            wV: 1
        };
        D[f.$VU] = {
            name: "Reidite Door Spike",
            Vv: e.VoQVo,
            __: 0,
            wV: 1
        };
        D[f.wUO] = {
            name: "Reidite Door",
            Vv: e.u0UQ0,
            __: 0,
            wV: 1
        };
        D[f.uQu] = {
            name: "Reidite Spike",
            Vv: e._uQWv,
            __: 0,
            wV: 1
        };
        D[f.oWQ] = {
            name: "Reidite Wall",
            Vv: e.WOuvv,
            __: 0,
            wV: 1
        };
        D[f.V_V] = {
            name: "Reidite pick",
            Vv: e.$WuQU,
            __: 0,
            wV: 1
        };
        D[f.VuU] = {
            name: "Boat",
            Vv: e._VUwU,
            __: 0,
            wV: 1
        };
        D[f.uQW] = {
            name: "Sled",
            Vv: e.oOovW,
            __: 0,
            wV: 1
        };
        D[f.U_u] = {
            name: "Saddle",
            Vv: e.wvuw_,
            __: 0,
            wV: 1
        };
        D[f.w$U] = {
            name: "Mount Boar",
            Vv: e.UW_U_,
            __: 0,
            wV: 0
        };
        D[f.vww] = {
            name: "Mount King Crab",
            Vv: e.U_wv0,
            __: 0,
            wV: 0
        };
        D[f.$Uo] = {
            name: "Mount Baby Dragon",
            Vv: e.uOVWO,
            __: 0,
            wV: 0
        };
        D[f.$ww] = {
            name: "Mount Baby Lava",
            Vv: e.W$$OV,
            __: 0,
            wV: 0
        };
        D[f.uU_] = {
            name: "Mount Hawk",
            Vv: e.$$uVV,
            __: 0,
            wV: 0
        };
        D[f.vOv] = {
            name: "Plane",
            Vv: e.V$vwQ,
            __: 0,
            wV: 0
        };
        D[f.OoU] = {
            name: "Pitchfork 2",
            Vv: e.OvVVQ,
            __: 0,
            wV: 0
        };
        D[f.OW$] = {
            name: "Baby Mammoth",
            Vv: e.v0OOv,
            __: 0,
            wV: 0
        };
        var vf = void 0,
            La = [{
                r: [
                    [f.vv, 25],
                    [f.V0, 5]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$uu,
                UU: f.$uu,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.$uu, 1],
                    [f.vv, 35],
                    [f.V0, 10]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$ow,
                UU: f.$ow,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 150],
                    [f.V0, 50],
                    [f.$U, 15]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UoQ,
                UU: f.UoQ,
                time: 0.05,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 20],
                    [f.V0, 10]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oOQ,
                UU: f.oOQ,
                time: 1 / 6,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 10]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$ov,
                UU: f.$ov,
                time: 1 / 3,
                wU: K.$WO
            }, {
                r: [
                    [f.$ov, 1],
                    [f.vv, 50],
                    [f.V0, 15]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oOo,
                UU: f.oOo,
                time: 0.125,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 40],
                    [f.$U, 20],
                    [f.V0, 30],
                    [f.oOo, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.QWu,
                UU: f.QWu,
                time: 1 / 12,
                wU: K.$WO
            }, {
                r: [
                    [f.v$, 20],
                    [f.$U, 50],
                    [f.V0, 80],
                    [f.QWu, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OQv,
                UU: f.OQv,
                time: 0.05,
                wU: K.$WO
            }, {
                r: [
                    [f.v$, 40],
                    [f.$U, 60],
                    [f.$W, 30],
                    [f.OQv, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._v_,
                UU: f._v_,
                time: 1 / 60,
                wU: K.$WO
            }, {
                r: [
                    [f.$W, 30],
                    [f.v$, 40],
                    [f.w_, 30],
                    [f._v_, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.V_V,
                UU: f.V_V,
                time: 1 / 90,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 90],
                    [f.V0, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oQw,
                UU: f.oQw,
                time: 0.1,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 160],
                    [f.V0, 120],
                    [f.$U, 80],
                    [f.oQw, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UQV,
                UU: f.UQV,
                time: 1 / 15,
                wU: K.$WO
            }, {
                r: [
                    [f.v$, 80],
                    [f.V0, 200],
                    [f.$U, 150],
                    [f.UQV, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wvo,
                UU: f.wvo,
                time: 0.05,
                wU: K.$WO
            }, {
                r: [
                    [f.v$, 160],
                    [f.$W, 60],
                    [f.$U, 250],
                    [f.wvo, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$OU,
                UU: f.$OU,
                time: 1 / 60,
                wU: K.$WO
            }, {
                r: [
                    [f.$W, 160],
                    [f.w_, 60],
                    [f.v$, 250],
                    [f.$OU, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VQ0,
                UU: f.VQ0,
                time: 1 / 90,
                wU: K.$WO
            }, {
                r: [
                    [f.VQ0, 1],
                    [f.QQu, 1],
                    [f.UVW, 1],
                    [f.Ow_, 10],
                    [f.$W, 20]
                ],
                w: 1,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vvV,
                UU: f.vvV,
                time: 1 / 120,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 30],
                    [f.V0, 15]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oVO,
                UU: f.oVO,
                time: 0.2,
                wU: K.$WO
            }, {
                r: [
                    [f.oVO, 1],
                    [f.$U, 20],
                    [f.V0, 30],
                    [f.vv, 40]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UwQ,
                UU: f.UwQ,
                time: 0.1,
                wU: K.$WO
            }, {
                r: [
                    [f.UwQ, 1],
                    [f.v$, 20],
                    [f.$U, 50],
                    [f.V0, 80]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OvW,
                UU: f.OvW,
                time: 0.05,
                wU: K.$WO
            }, {
                r: [
                    [f.OvW, 1],
                    [f.$U, 60],
                    [f.$W, 30],
                    [f.v$, 40]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oQo,
                UU: f.oQo,
                time: 0.025,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vw_,
                UU: f.vw_,
                time: 0.2,
                wU: K.$WO
            }, {
                r: [
                    [f.vw_, 1]
                ],
                w: 0,
                f: 0,
                Uo: 1,
                e: 0,
                id: q._v0,
                UU: f._v0,
                time: 0.2,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 100],
                    [f.V0, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UOQ,
                UU: f.UOQ,
                time: 0.1,
                wU: K.$WO
            }, {
                r: [
                    [f.UOQ, 1],
                    [f.OvO, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OoU,
                UU: f.OoU,
                time: 1 / 60,
                wU: K.$WO
            }, {
                r: [
                    [f.vOu, 4],
                    [f._$$, 4],
                    [f.QuO, 4]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Q_$,
                UU: f.Q_$,
                time: 1 / 15,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 40]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$Uu,
                UU: f.$Uu,
                time: 0.2,
                wU: K.VO$
            }, {
                r: [
                    [f.$Uu, 1],
                    [f.vv, 60],
                    [f.V0, 10]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$v$,
                UU: f.$v$,
                time: 0.1,
                wU: K.VO$
            }, {
                r: [
                    [f.vv, 80],
                    [f.$U, 30],
                    [f.V0, 30],
                    [f.$v$, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.ow_,
                UU: f.ow_,
                wU: K.VO$,
                time: 0.05
            }, {
                r: [
                    [f.vv, 200],
                    [f.v$, 40],
                    [f.$U, 60],
                    [f.ow_, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wo0,
                UU: f.wo0,
                time: 1 / 30,
                wU: K.VO$
            }, {
                r: [
                    [f.$W, 40],
                    [f.v$, 80],
                    [f.$U, 90],
                    [f.wo0, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._uV,
                UU: f._uV,
                time: 1 / 60,
                wU: K.VO$
            }, {
                r: [
                    [f.w_, 40],
                    [f.$W, 80],
                    [f.v$, 90],
                    [f._uV, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.QUW,
                UU: f.QUW,
                time: 1 / 90,
                wU: K.VO$
            }, {
                r: [
                    [f.$WQ, 20],
                    [f.U$U, 1],
                    [f.$W, 100],
                    [f.WQw, 3]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q.___,
                UU: f.___,
                time: 1 / 120,
                wU: K.VO$
            }, {
                r: [
                    [f.___, 1],
                    [f.v_$, 1],
                    [f.w_, 100],
                    [f.vWV, 2]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q._U0,
                UU: f._U0,
                time: 0.005,
                wU: K.VO$
            }, {
                r: [
                    [f.$Uu, 1],
                    [f.wuO, 5],
                    [f._$$, 6]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.QVV,
                UU: f.QVV,
                time: 1 / 30,
                wU: K.VO$
            }, {
                r: [
                    [f.vv, 30]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.WvU,
                UU: f.WvU,
                time: 0.2,
                wU: K.VO$
            }, {
                r: [
                    [f.vv, 50],
                    [f.V0, 25],
                    [f.WvU, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.QvW,
                UU: f.QvW,
                time: 0.1,
                wU: K.VO$
            }, {
                r: [
                    [f.vv, 60],
                    [f.$U, 40],
                    [f.V0, 50],
                    [f.QvW, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$Vu,
                UU: f.$Vu,
                time: 0.05,
                wU: K.VO$
            }, {
                r: [
                    [f.v$, 40],
                    [f.$U, 60],
                    [f.V0, 80],
                    [f.$Vu, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.WU_,
                UU: f.WU_,
                time: 1 / 30,
                wU: K.VO$
            }, {
                r: [
                    [f.v$, 60],
                    [f.$U, 100],
                    [f.$W, 40],
                    [f.WU_, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.w$v,
                UU: f.w$v,
                time: 1 / 60,
                wU: K.VO$
            }, {
                r: [
                    [f.v$, 100],
                    [f.$W, 80],
                    [f.w_, 40],
                    [f.w$v, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VQv,
                UU: f.VQv,
                time: 1 / 90,
                wU: K.VO$
            }, {
                r: [
                    [f.Q$_, 3]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vUu,
                UU: f.vUu,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.OwW, 3]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q._W$,
                UU: f._W$,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.VWU, 8]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.Wv$,
                UU: f.Wv$,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.oOu, 8]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.Q$u,
                UU: f.Q$u,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.Vuw, 8]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.W_u,
                UU: f.W_u,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f._w_, 8]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.oQW,
                UU: f.oQW,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.UVv, 8]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.QvU,
                UU: f.QvU,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.wwW, 16]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vVW,
                UU: f.vVW,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.V$V, 16]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.$v0,
                UU: f.$v0,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.Wo_, 1]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.Qvv,
                UU: f.Qvv,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.wov, 1]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vv$,
                UU: f.vv$,
                time: 1 / 3,
                wU: K.uU$
            }, {
                r: [
                    [f.QQ_, 3]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.OU0,
                UU: f.OU0,
                time: 1 / 3,
                wU: K.uU$
            }, {
                r: [
                    [f.QQ_, 3],
                    [f.Q$_, 1]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.O$w,
                UU: f.O$w,
                time: 1 / 3,
                wU: K.uU$
            }, {
                r: [
                    [f.QQ_, 5],
                    [f.Q$_, 2],
                    [f.Wuv, 2]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vV0,
                UU: f.vV0,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f._$$, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._Ww,
                UU: f._Ww,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 20]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._OW,
                UU: f._OW,
                time: 0.2,
                wU: K.Vuu
            }, {
                r: [
                    [f._OW, 1],
                    [f.V0, 17]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OwO,
                UU: f.OwO,
                time: 0.2,
                wU: K.Vuu
            }, {
                r: [
                    [f.OwO, 1],
                    [f.$U, 14]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uVv,
                UU: f.uVv,
                time: 0.2,
                wU: K.Vuu
            }, {
                r: [
                    [f.uVv, 1],
                    [f.v$, 11]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Wvw,
                UU: f.Wvw,
                time: 0.2,
                wU: K.Vuu
            }, {
                r: [
                    [f.Wvw, 1],
                    [f.$W, 8]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$wu,
                UU: f.$wu,
                time: 0.2,
                wU: K.Vuu
            }, {
                r: [
                    [f.$wu, 1],
                    [f.w_, 5]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oWQ,
                UU: f.oWQ,
                time: 0.2,
                wU: K.Vuu
            }, {
                r: [
                    [f.vv, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Vw_,
                UU: f.Vw_,
                time: 0.125,
                wU: K.Vuu
            }, {
                r: [
                    [f.Vw_, 1],
                    [f.V0, 27]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wvV,
                UU: f.wvV,
                time: 0.125,
                wU: K.Vuu
            }, {
                r: [
                    [f.wvV, 1],
                    [f.$U, 24]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.u_v,
                UU: f.u_v,
                time: 0.125,
                wU: K.Vuu
            }, {
                r: [
                    [f.u_v, 1],
                    [f.v$, 21]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vO0,
                UU: f.vO0,
                time: 0.125,
                wU: K.Vuu
            }, {
                r: [
                    [f.vO0, 1],
                    [f.$W, 18]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VuQ,
                UU: f.VuQ,
                time: 0.125,
                wU: K.Vuu
            }, {
                r: [
                    [f.VuQ, 1],
                    [f.w_, 15]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wUO,
                UU: f.wUO,
                time: 0.125,
                wU: K.Vuu
            }, {
                r: [
                    [f._OW, 1],
                    [f.vv, 40],
                    [f.V0, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oV_,
                UU: f.oV_,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.OwO, 1],
                    [f.V0, 70]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wuW,
                UU: f.wuW,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.uVv, 1],
                    [f.$U, 40],
                    [f.V0, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uuo,
                UU: f.uuo,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.Wvw, 1],
                    [f.v$, 40],
                    [f.V0, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._w0,
                UU: f._w0,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.$wu, 1],
                    [f.$W, 40],
                    [f.V0, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.QwW,
                UU: f.QwW,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.oWQ, 1],
                    [f.w_, 40],
                    [f.$U, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uQu,
                UU: f.uQu,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.Vw_, 1],
                    [f.vv, 80],
                    [f.V0, 60]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vwQ,
                UU: f.vwQ,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.wvV, 1],
                    [f.V0, 140]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.v$_,
                UU: f.v$_,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.u_v, 1],
                    [f.$U, 80],
                    [f.V0, 60]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.owo,
                UU: f.owo,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.vO0, 1],
                    [f.v$, 80],
                    [f.V0, 60]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$W0,
                UU: f.$W0,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.VuQ, 1],
                    [f.$W, 80],
                    [f.V0, 60]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Q$o,
                UU: f.Q$o,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.wUO, 1],
                    [f.w_, 80],
                    [f.$U, 60]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$VU,
                UU: f.$VU,
                time: 0.05,
                wU: K.Vuu
            }, {
                r: [
                    [f.vv, 25],
                    [f.$U, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.V$Q,
                UU: f.V$Q,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.vOu, 1],
                    [f.vwU, 1],
                    [f._$$, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.oo0,
                UU: f.oo0,
                time: 0.2,
                wU: K.QVo
            }, {
                r: [
                    [f.vOu, 5],
                    [f.wU$, 20],
                    [f.$WQ, 5],
                    [f.vwU, 5]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$uv,
                UU: f.$uv,
                time: 1 / 30,
                wU: K.QVo
            }, {
                r: [
                    [f.Quv, 1],
                    [f.o$0, 8],
                    [f.QUU, 8],
                    [f.wU$, 8],
                    [f._$$, 6]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VUO,
                UU: f.VUO,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.vwU, 1],
                    [f._$$, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._UQ,
                UU: f._UQ,
                time: 0.2,
                wU: K.QVo
            }, {
                r: [
                    [f._UQ, 1],
                    [f.QuO, 5],
                    [f._$$, 4]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.u$w,
                UU: f.u$w,
                time: 1 / 12,
                wU: K.QVo
            }, {
                r: [
                    [f.u$w, 1],
                    [f.v__, 5],
                    [f.$WQ, 4]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vvW,
                UU: f.vvW,
                time: 1 / 30,
                wU: K.QVo
            }, {
                r: [
                    [f.vvW, 1],
                    [f.v__, 5],
                    [f.UVO, 10],
                    [f.$WQ, 4]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.QwQ,
                UU: f.QwQ,
                time: 0.02,
                wU: K.QVo
            }, {
                r: [
                    [f.vv, 50]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._U$,
                UU: f._U$,
                time: 0.2,
                wU: K.QVo
            }, {
                r: [
                    [f.V0, 75],
                    [f.vv, 75],
                    [f._U$, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vOO,
                UU: f.vOO,
                time: 0.1,
                wU: K.QVo
            }, {
                r: [
                    [f.V0, 90],
                    [f.vv, 90],
                    [f.$U, 90],
                    [f.vOO, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uou,
                UU: f.uou,
                time: 0.05,
                wU: K.QVo
            }, {
                r: [
                    [f.V0, 100],
                    [f.$U, 100],
                    [f.v$, 100],
                    [f.uou, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._O$,
                UU: f._O$,
                time: 1 / 30,
                wU: K.QVo
            }, {
                r: [
                    [f.$W, 80],
                    [f.$U, 150],
                    [f.v$, 120],
                    [f._O$, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wOu,
                UU: f.wOu,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.w_, 80],
                    [f.v$, 150],
                    [f.$W, 120],
                    [f.wOu, 1]
                ],
                w: 1,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vQ$,
                UU: f.vQ$,
                time: 1 / 90,
                wU: K.QVo
            }, {
                r: [
                    [f.Ow_, 2],
                    [f.v$, 40],
                    [f._$$, 4]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.WV0,
                UU: f.WV0,
                time: 0.05,
                wU: K.QVo
            }, {
                r: [
                    [f.WV0, 1],
                    [f.$U, 80],
                    [f.UVW, 1],
                    [f.$W, 20]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vV$,
                UU: f.vV$,
                time: 1 / 90,
                wU: K.QVo
            }, {
                r: [
                    [f.vv_, 5],
                    [f.v$, 50],
                    [f.$WQ, 5]
                ],
                w: 1,
                f: 1,
                Uo: 0,
                e: 0,
                id: q._ov,
                UU: f._ov,
                time: 0.05,
                wU: K.QVo
            }, {
                r: [
                    [f._ov, 1],
                    [f.vv_, 10],
                    [f.$W, 50]
                ],
                w: 1,
                f: 1,
                Uo: 0,
                e: 0,
                id: q._vo,
                UU: f._vo,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f._vo, 1],
                    [f.vv_, 15],
                    [f.$W, 50],
                    [f.w_, 50]
                ],
                w: 1,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.U$v,
                UU: f.U$v,
                time: 1 / 90,
                wU: K.QVo
            }, {
                r: [
                    [f._$$, 4],
                    [f.QW_, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.O__,
                UU: f.O__,
                time: 1 / 15,
                wU: K.QVo
            }, {
                r: [
                    [f.O__, 1],
                    [f._$$, 6],
                    [f.QW_, 4],
                    [f.QUU, 12],
                    [f.wU$, 4]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.o_v,
                UU: f.o_v,
                time: 1 / 150,
                wU: K.QVo
            }, {
                r: [
                    [f._$$, 6],
                    [f.QuO, 5]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Uwv,
                UU: f.Uwv,
                time: 1 / 15,
                wU: K.QVo
            }, {
                r: [
                    [f.vv, 20]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vOu,
                UU: f.vOu,
                time: 1 / 3,
                wU: K.UvQ
            }, {
                r: [
                    [f.v$, 1],
                    [f._$$, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$WQ,
                UU: f.$WQ,
                time: 1 / 3,
                wU: K.UvQ
            }, {
                r: [
                    [f.$U, 10]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vQQ,
                UU: f.vQQ,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.$U, 250]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UoU,
                UU: f.UoU,
                time: 1 / 60,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Ww$,
                UU: f.Ww$,
                time: 0.1,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 15]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OQ$,
                UU: f.OQ$,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.WoV,
                UU: f.WoV,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 120]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UWU,
                UU: f.UWU,
                time: 1 / 15,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 20],
                    [f.wv_, 15]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uV$,
                UU: f.uV$,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.uUO, 25]
                ],
                w: 1,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.vvv,
                UU: f.vvv,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.vvv, 1]
                ],
                w: 0,
                f: 0,
                Uo: 1,
                e: 0,
                id: q.QQu,
                UU: f.QQu,
                time: 0.2,
                wU: K.uU$
            }, {
                r: [
                    [f.Wuv, 20],
                    [f.vvv, 1]
                ],
                w: 0,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.$WU,
                UU: f.QQu,
                time: 0.1,
                wU: K.uU$
            }, {
                r: [
                    [f.vvv, 1]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 1,
                id: q.Ow$,
                UU: f.QQu,
                time: 1 / 3,
                wU: K.uU$
            }, {
                r: [
                    [f.vv, 60],
                    [f.V0, 20],
                    [f._$$, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.U$W,
                UU: f.U$W,
                time: 0.1,
                wU: K.UvQ
            }, {
                r: [
                    [f.v$, 40],
                    [f.V0, 45]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._UO,
                UU: f._UO,
                time: 0.05,
                wU: K.UvQ
            }, {
                r: [
                    [f._UO, 1],
                    [f.WwW, 40],
                    [f.Wwo, 1]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q.QW$,
                UU: f.QW$,
                time: 0.005,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 50],
                    [f.V0, 100]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.u_V,
                UU: f.u_V,
                time: 1 / 90,
                wU: K.UvQ
            }, {
                r: [
                    [f.V0, 60],
                    [f.$U, 120]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.ouo,
                UU: f.ouo,
                time: 1 / 90,
                wU: K.UvQ
            }, {
                r: [
                    [f.$U, 70],
                    [f.v$, 140]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._vU,
                UU: f._vU,
                time: 1 / 90,
                wU: K.UvQ
            }, {
                r: [
                    [f.v$, 80],
                    [f.$W, 160]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.V_w,
                UU: f.V_w,
                time: 1 / 90,
                wU: K.UvQ
            }, {
                r: [
                    [f.$W, 90],
                    [f.w_, 180]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.W_W,
                UU: f.W_W,
                time: 1 / 90,
                wU: K.UvQ
            }, {
                r: [
                    [f.V0, 70]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uvV,
                UU: f.uvV,
                time: 0.1,
                wU: K.$WO
            }, {
                r: [
                    [f.V0, 70],
                    [f.vv, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OVv,
                UU: f.OVv,
                time: 0.1,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 40],
                    [f.V0, 40]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VUQ,
                UU: f.VUQ,
                time: 0.1,
                wU: K.UvQ
            }, {
                r: [
                    [f.OU0, 1],
                    [f.Qvv, 1]
                ],
                w: 0,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wo_,
                UU: f.wo_,
                time: 1 / 3,
                wU: K.uU$
            }, {
                r: [
                    [f.$WQ, 30],
                    [f._WW, 1],
                    [f.$W, 150],
                    [f.WQw, 3]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q.$$Q,
                UU: f.$$Q,
                time: 1 / 120,
                wU: K.QVo
            }, {
                r: [
                    [f.$$Q, 1],
                    [f.Ouv, 1],
                    [f.w_, 150],
                    [f.vWV, 2]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q._$0,
                UU: f._$0,
                time: 1 / 180,
                wU: K.QVo
            }, {
                r: [
                    [f.uou, 1],
                    [f.wuO, 10],
                    [f.QOQ, 10],
                    [f._$$, 10]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VUW,
                UU: f.VUW,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.$WQ, 20],
                    [f.U$U, 1],
                    [f.$W, 150],
                    [f.WQw, 3]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q._Wu,
                UU: f._Wu,
                time: 1 / 120,
                wU: K.VO$
            }, {
                r: [
                    [f._Wu, 1],
                    [f.v_$, 1],
                    [f.w_, 150],
                    [f.vWV, 2]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q.WWu,
                UU: f.WWu,
                time: 1 / 180,
                wU: K.VO$
            }, {
                r: [
                    [f.vv, 100],
                    [f._$$, 4]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VWO,
                UU: f.VWO,
                time: 0.05,
                wU: K.VO$
            }, {
                r: [
                    [f.vv, 30]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wwo,
                UU: f.wwo,
                time: 0.2,
                wU: K.VO$
            }, {
                r: [
                    [f.V0, 200],
                    [f._$$, 8],
                    [f.wU$, 4],
                    [f.VWO, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q._vW,
                UU: f._vW,
                time: 0.04,
                wU: K.VO$
            }, {
                r: [
                    [f.V0, 20],
                    [f.o$0, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$w0,
                UU: f.$w0,
                time: 0.2,
                wU: K.VO$
            }, {
                r: [
                    [f.$U, 200],
                    [f._$$, 12],
                    [f.o$0, 4],
                    [f.wU$, 4],
                    [f._vW, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uuu,
                UU: f.uuu,
                time: 1 / 30,
                wU: K.VO$
            }, {
                r: [
                    [f.$U, 20],
                    [f.wU$, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OWv,
                UU: f.OWv,
                time: 0.1,
                wU: K.VO$
            }, {
                r: [
                    [f.v$, 200],
                    [f.$WQ, 10],
                    [f.o$0, 8],
                    [f.wU$, 8],
                    [f.uuu, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.OQW,
                UU: f.OQW,
                time: 1 / 35,
                wU: K.VO$
            }, {
                r: [
                    [f.v$, 10],
                    [f.wU$, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VWQ,
                UU: f.VWQ,
                time: 0.1,
                wU: K.VO$
            }, {
                r: [
                    [f.$W, 200],
                    [f.$WQ, 10],
                    [f.wU$, 8],
                    [f.QUU, 8],
                    [f.OQW, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UwW,
                UU: f.UwW,
                time: 0.025,
                wU: K.VO$
            }, {
                r: [
                    [f.$W, 10],
                    [f.QUU, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.UWW,
                UU: f.UWW,
                time: 1 / 15,
                wU: K.VO$
            }, {
                r: [
                    [f.w_, 200],
                    [f.$WQ, 10],
                    [f.UVW, 1],
                    [f.UwW, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vOV,
                UU: f.vOV,
                time: 1 / 45,
                wU: K.VO$
            }, {
                r: [
                    [f.w_, 10],
                    [f.QUU, 1],
                    [f.vv_, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Wv_,
                UU: f.Wv_,
                time: 1 / 15,
                wU: K.VO$
            }, {
                r: [
                    [f.WwW, 200],
                    [f.$WQ, 10],
                    [f.U$U, 1],
                    [f.vOV, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vvo,
                UU: f.vvo,
                time: 0.02,
                wU: K.VO$
            }, {
                r: [
                    [f.WwW, 10],
                    [f.Wwo, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vvU,
                UU: f.vvU,
                time: 0.05,
                wU: K.VO$
            }, {
                r: [
                    [f.vv, 100]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.WuO,
                UU: f.WuO,
                time: 0.04,
                wU: K.VO$
            }, {
                r: [
                    [f.WuO, 1],
                    [f.V0, 100],
                    [f.vv, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$Ow,
                UU: f.$Ow,
                time: 0.025,
                wU: K.VO$
            }, {
                r: [
                    [f.$Ow, 1],
                    [f.$U, 50],
                    [f.V0, 50],
                    [f.vv, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.w$Q,
                UU: f.w$Q,
                time: 0.02,
                wU: K.VO$
            }, {
                r: [
                    [f.w$Q, 1],
                    [f.v$, 50],
                    [f.$U, 50],
                    [f.V0, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wQO,
                UU: f.wQO,
                time: 1 / 70,
                wU: K.VO$
            }, {
                r: [
                    [f.wQO, 1],
                    [f.$W, 50],
                    [f.v$, 50],
                    [f.$U, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VWv,
                UU: f.VWv,
                time: 1 / 90,
                wU: K.VO$
            }, {
                r: [
                    [f.VWv, 1],
                    [f.w_, 50],
                    [f.$W, 50],
                    [f.v$, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.wQo,
                UU: f.wQo,
                time: 1 / 120,
                wU: K.VO$
            }, {
                r: [
                    [f.WVV, 1],
                    [f.$U, 200]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q.w_v,
                UU: f.w_v,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.Ovv, 1],
                    [f.$U, 200]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q.uWU,
                UU: f.uWU,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.OvV, 1],
                    [f.$U, 200],
                    [f.WQw, 1]
                ],
                w: 1,
                f: 1,
                Uo: 1,
                e: 0,
                id: q.VwO,
                UU: f.VwO,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.QuO, 10],
                    [f.vwU, 5],
                    [f._$$, 6]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VoU,
                UU: f.VoU,
                time: 0.1,
                wU: K.QVo
            }, {
                r: [
                    [f.vwU, 3],
                    [f._$$, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.o_Q,
                UU: f.o_Q,
                time: 0.1,
                wU: K.QVo
            }, {
                r: [
                    [f.VoU, 1],
                    [f.OwQ, 1],
                    [f.v__, 15],
                    [f.$WQ, 5],
                    [f.wU$, 8]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.$wo,
                UU: f.$wo,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.o_Q, 1],
                    [f.$VW, 1],
                    [f.v__, 10],
                    [f.$WQ, 5],
                    [f.wU$, 8]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.ow$,
                UU: f.ow$,
                time: 1 / 60,
                wU: K.QVo
            }, {
                r: [
                    [f.Uwu, 1]
                ],
                w: 0,
                f: 0,
                Uo: 1,
                e: 0,
                id: q.wWQ,
                UU: f.wWQ,
                time: 0.2,
                wU: K.$WO
            }, {
                r: [
                    [f.vv, 20],
                    [f._$$, 1]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Uwu,
                UU: f.Uwu,
                time: 0.2,
                wU: K.$WO
            }, {
                r: [
                    [f.V0, 100],
                    [f.wv_, 30]
                ],
                w: 1,
                f: 1,
                Uo: 0,
                e: 0,
                id: q.wo$,
                UU: f.wo$,
                time: 0.1,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 20]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vuQ,
                UU: f.vuQ,
                time: 0.2,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 100],
                    [f.V0, 50],
                    [f.vwU, 5],
                    [f.QuO, 5],
                    [f._$$, 6]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.Wwv,
                UU: f.Wwv,
                time: 0.05,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 250],
                    [f.$WQ, 10],
                    [f.v__, 2],
                    [f.Ow_, 2]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.VuU,
                UU: f.VuU,
                time: 0.02,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 250],
                    [f._$$, 10],
                    [f.v__, 2],
                    [f.wU$, 8]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.uQW,
                UU: f.uQW,
                time: 0.02,
                wU: K.UvQ
            }, {
                r: [
                    [f._$$, 10],
                    [f.QuO, 6],
                    [f.vwU, 4],
                    [f.uUO, 50]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.U_u,
                UU: f.U_u,
                time: 0.05,
                wU: K.UvQ
            }, {
                r: [
                    [f.vv, 250],
                    [f._$$, 10],
                    [f.vOu, 10],
                    [f.o$0, 8]
                ],
                w: 1,
                f: 0,
                Uo: 0,
                e: 0,
                id: q.vOv,
                UU: f.vOv,
                time: 0.02,
                wU: K.UvQ
            }],
            g = 300;
        Wo = {
            vW_: g++,
            vUW: g++,
            UoO: g++,
            OWo: g++,
            WQU: g++,
            WwV: g++,
            $UO: g++,
            VOO: g++,
            oU$: g++,
            wvW: g++,
            w$0: g++,
            _QV: g++,
            EMPTY: g++,
            _vu: g++,
            UWO: g++,
            uoW: g++,
            VwU: g++,
            OOV: g++,
            vuO: g++,
            VQw: g++,
            ovQ: g++,
            wVo: g++,
            voQ: g++,
            QoW: g++,
            uvw: g++,
            W$v: g++,
            uw$: g++,
            Wo$: g++,
            u_$: g++,
            OUW: g++,
            QUv: g++,
            Q_Q: g++,
            POINTS: g++,
            OuO: g++,
            VQW: g++,
            vUV: g++,
            VVO: g++,
            _Qo: g++,
            VwWWw: g++,
            wVwUo: g++,
            Www$W: g++,
            QoOUW: g++,
            VW_Q_: g++,
            U0__u: g++
        };
        for (var Nd = function() {
                k[f.u_V] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"];
                k[f.ouo] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"];
                k[f._vU] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"];
                k[f.V_w] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"];
                k[f.W_W] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"];
                k[f.wQo] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"];
                k[f.VWv] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"];
                k[f.wQO] = ["Diamond Shield", "Run or attack, you\'ve obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"];
                k[f.w$Q] = ["Gold Shield", "When it\'s golden, it\'s always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"];
                k[f.$Ow] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"];
                k[f.WuO] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"];
                k[f.OVv] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"];
                k[f.UWU] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"];
                k[f.vvU] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"];
                k[f.vvo] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"];
                k[f.Wv_] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"];
                k[f.vOV] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"];
                k[f.UWW] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"];
                k[f.UwW] = ["Amethyst Bow", "It\'s super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"];
                k[f.VWQ] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"];
                k[f.OQW] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"];
                k[f.OWv] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"];
                k[f.uuu] = ["Gold Bow", "When it\'s golden, it\'s better.", "Requiers wood, stone or gold arrows to be used"];
                k[f.$w0] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"];
                k[f._vW] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"];
                k[f.wwo] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"];
                k[f.VWO] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"];
                k[f.QW$] = "Emerald Machine;Allows to automatically generate score points.;Be careful, you can only build one.;Once placed your soul is connected to the machine, if the machine is destroyed, you will die.;The machine can\'t be build in the sea;You earn more points in the desert, than in the lava, than in winter, than in the forest.".split(";");
                k[f.QW_] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"];
                k[f.UVO] = ["Mammoth fur", "Soft and warm. Perfect for a hat."];
                k[f.QUU] = ["Vulture Feather", "From a deadly vulture"];
                k[f.WwW] = ["Emerald", "How many golden breads can you get from it?"];
                k[f.Wwo] = ["Sand Worm Juice", "I don\'t want to know how you got this."];
                k[f.O__] = ["Turban", "Useful to survive in the desert."];
                k[f.o_v] = ["Ninja outfit", "Essential to survive in the desert"];
                k[f.VUO] = ["Pilot Hat", "Take off and land with flying objects much faster."];
                k[f.Quv] = ["Pilot Glasses"];
                k[f.w$U] = ["Tamed Boar", "Fast on lands and slow on water."];
                k[f.OW$] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."];
                k[f.vww] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"];
                k[f.$Uo] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"];
                k[f.$ww] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"];
                k[f.uU_] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"];
                k[f.U_u] = ["Saddle", "Hit a boar with it to tame it."];
                k[f.$$w] = ["Witch Hat", "You\'re a wizard Starvy!"];
                k[f.woU] = ["Nimbus 2000", "That\'s not just a broomstick, Starvy, it\'s a Nimbus 2000!", "Only works with the witch hat."];
                k[f.vwO] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"];
                k[f.O$O] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"];
                k[f.v$v] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."];
                k[f.$uv] = ["Pirate hat", "You are faster with it in a boat", "Warm outside water and in winter"];
                k[f.uQW] = ["Sled", "You are faster with it in the snow"];
                k[f.VuU] = ["Boat", "You are faster with it in the water"];
                k[f.vOv] = ["Plane", "Fly in the forest, ocean and winter", "Can\'t fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"];
                k[f.VQ0] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 60"];
                k[f.wU$] = ["Penguin Feather", "From a deadly cute penguin."];
                k[f.o$0] = ["Hawk Feather", "From a deadly hawk."];
                k[f.VWw] = ["Cactus", "Food : 20", "Water : 10"];
                k[f.V$V] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"];
                k[f.$v0] = ["Aloe Vera Seed", "Grows into Aloe Vera"];
                k[f.wwW] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"];
                k[f.vVW] = "Watermelon Seed;Grows into Watermelon;Birth: 4min;Growth: 180s;Need water: 3min 20s;Durability: 400;Lifetime: 8 days".split(";");
                k[f.wUO] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"];
                k[f.oWQ] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"];
                k[f.uQu] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"];
                k[f.$VU] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"];
                k[f.V_V] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 1"];
                k[f.vwQ] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"];
                k[f.v$_] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"];
                k[f.owo] = ["Gold Door Spike", 'Are you rebuilding the \"el dorado?\"', "Damage: 15", "On-Hit Damage: 2", "Durability: 400"];
                k[f.$W0] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"];
                k[f.Q$o] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"];
                k[f._w_] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"];
                k[f.UVv] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"];
                k[f.oQW] = "Carrot Seed;Grows into Carrot;Birth: 4min;Growth: 30s;Need water: 1min 40s;Durability: 700;Lifetime: 8 days".split(";");
                k[f.QvU] = "Tomato Seed;Grows into Tomato;Birth: 4min;Growth: 30s;Need water: 1min 40s;Durability: 700;Lifetime: 8 days".split(";");
                k[f.UOQ] = ["Pitchfork", "Perfect for gathering"];
                k[f.OoU] = ["Golden Pitchfork", "Essential for a real farmer."];
                k[f.OvO] = ["Pitchfork Part", "Shaped by the gods. You\'ll never be hungry again."];
                k[f.$uW] = ["Easter Egg", "Eat it or sell it in exchange for wood or stone", "Food : 12"];
                k[f.w_0] = ["Easter Egg", "Eat it or sell it in exchange for gold", "Food : 25"];
                k[f.QQU] = ["Easter Egg", "Eat it or sell it in exchange for diamond", "Food : 50"];
                k[f.ovU] = ["Easter Egg", "Eat it or sell it in exchange for amethyst", "Food : 75"];
                k[f._Qu] = ["Easter Egg", "Eat it or sell it in exchange for reidite", "Food : 100"];
                k[f.Ouv] = ["Lava Cube", "You feel an immense power emanating from this cube"];
                k[f.v_$] = ["Lava Orb", "You feel an immense power emanating from this orb"];
                k[f.WWu] = ["Lava Sword", "Don\'t be too mean with that.", "Damage: 33", "Building Damage: 11"];
                k[f._U0] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"];
                k[f.vWV] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."];
                k[f._$0] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"];
                k[f.QUW] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"];
                k[f.VQv] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"];
                k[f.vv_] = ["Flame", "It\'s hot!"];
                k[f._ov] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"];
                k[f._vo] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"];
                k[f.U$v] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"];
                k[f.w_] = ["Reidite", "The ultimate ore"];
                k[f._WW] = ["Dragon Cube", "You feel a great power emanating from this cube"];
                L[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
                L[23] = ["The heat makes you suffocate, you can see your skin fall apart. You\'re charred. The grilled marshmallow has never been so tasty."];
                L[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."];
                L[25] = ["The Will-O\'-The-Wisp devoured you from the inside with its fiery flames."];
                L[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."];
                L[27] = ['You were trampled by that boar. From now on, your new nickname is \"the doormat\".'];
                L[28] = ['With a force of 3300 newtons, the shock wave from the closing of the crab king\'s claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the \"crab rave\"'];
                L[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."];
                L[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don\'t have your life flashes before your eyes."];
                L[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."];
                L[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."];
                L[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."];
                L[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"];
                L[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"];
                L[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."];
                L[37] = ['You hear \"Avada Kedavra!\" before you turn to ashes.'];
                L[38] = ["You died crushed by an angry baby mammoth."];
                L[39] = ["You were skammed by a mammoth. In the violence of the animal\'s charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth\'s feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."];
                L[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."];
                k[f.QOQ] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
                k[Wo.QoOUW] = "A sandstorm is approaching in a few seconds.";
                k[Wo.Www$W] = "The sandstorm will soon stop.";
                k[Wo.U0__u] = "A blizzard is approaching in a few seconds.";
                k[Wo.VW_Q_] = "The blizzard will soon stop.";
                k[Wo.u_$] = " BACK TO THE GAME";
                k[Wo.OUW] = " Share on Twitter";
                k[Wo.QUv] = " Share on Facebook";
                k[Wo.Q_Q] = "You can buy items on the shop in the next game with your points";
                k[Wo.POINTS] = "points";
                k[Wo.OuO] = "Score";
                k[Wo.VQW] = "Kill";
                k[Wo.vUV] = "Days survived";
                k[Wo.VVO] = "Building method: Free. Press G to change";
                k[Wo._Qo] = "Building method: Grid. Press G to change";
                k[f.wuO] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
                k[f.QVV] = "Crab Spear;Allow you to calm crabs, and heal them;Gives a +10 damages bonus when holding it with;a Crab Helmet on a Crab King;Damage: 14;Building Damage: 4".split(";");
                k[f.VUW] = "Crab Helmet;You are the king of crabs!;Crabs follow you;They can\'t hit you and you can\'t hit them;Players Defense: 5;Animals Defense: 19".split(";");
                k[f.Wwv] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
                document.getElementById("typequest").innerHTML = "Chrono Quests";
                document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
                document.getElementById("constraintquest").innerHTML = " Constraints";
                document.getElementById("claim_rewards").innerHTML = " Claim rewards";
                document.getElementById("rewardquest").innerHTML = " Reward";
                document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave";
                document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
                document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
                document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
                document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
                document.getElementById("bread_6").innerHTML = "100 bread in winter, alone, without come back";
                document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
                for (var a = 0; 7 > a; a++) document.getElementById("claim_reward_" + a).innerHTML = "CLAIM REWARD!";
                document.getElementById("quit_chronoquest").innerHTML = " QUIT";
                k[f.$O_] = ["Hand"];
                k[f.wv_] = ["Dirt", "Dirty!"];
                k[f.uUO] = ["Sand", "I got it in my eyes!"];
                k[f.vv] = ["Wood", "You can\'t get enough of it!"];
                k[f.V0] = ["Stone", "Also called a rock"];
                k[f.$U] = ["Gold", "Be generous, give it to others"];
                k[f.v$] = ["Diamond", "What will you make with it?"];
                k[f.$W] = ["Amethyst", "It\'s Mauve like Lapa"];
                k[f.QQ_] = ["Flour", "Used in cooking"];
                k[f.O$w] = ["Cookie", "A sumptuous grandmother\'s cookie", "Food: 50"];
                k[f.vV0] = ["A cake", "Dream cake for the gourmets", "Food: 100"];
                k[f.Wo_] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"];
                k[f.Qvv] = ["Cooked meat", "A rare steak, please", "Food: 35"];
                k[f.wov] = ["Raw fish", "I think it\'s still alive", "Causes food poisoning: 10", "Food: 18"];
                k[f.vv$] = ["Cooked fish", "With lemon it\'s perfect", "Food: 35"];
                k[f.OU0] = ["Bread", "An excellent French bread", "It\'s the currency used in the market", "Food: 15"];
                k[f.wo_] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"];
                k[f.Vwv] = ["Candies", "Only for children!", "Food: 20"];
                k[f.uUV] = ["Sugar cane", "Taste it, it\'s delicious", "Food: 100"];
                k[f.Qww] = ["Garland", "Perfect decoration for roofs"];
                k[f.vUu] = "Berries Seed;Grows into Berry;Birth: 2min;Growth: 55s;Need water: 3min 20s;Durability: 700;Lifetime: 8 days".split(";");
                k[f.Q$_] = ["Berry", "Berry tasty!", "Food: 10"];
                k[f._W$] = "Wheat Seed;Grows into Wheat;Birth: 2min;Growth: 16s;Need water: 2min;Durability: 700;Lifetime: 8 days".split(";");
                k[f.OwW] = ["Wild Wheat", "Turns into Flour when placed in Windmill"];
                k[f.Wv$] = "Pumpkin Seed;Grows into pumpkin;Birth: 2min 40s;Growth: 2min;Need water: 2min;Durability: 700;Lifetime: 8 days".split(";");
                k[f.VWU] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"];
                k[f.Q$u] = "Garlic Seed;Very dangerous for vampires;Damage: 20;Birth: 4min;Growth: 1min 10s;Need water: 1min 40s;Durability: 700;Lifetime: 8 days".split(";");
                k[f.oOu] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"];
                k[f.W_u] = "Thorn bush Seed;Can damage your enemies;Damage: 20;Birth: 4min;Growth: 15s;Need water: 3min;Durability: 1000;Lifetime: 8 days".split(";");
                k[f.Vuw] = ["Thorn bush", "It stings!"];
                k[f.uV$] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", "Durability: 2000"];
                k[f.Wuv] = ["Ice", "Useful for making cakes and water"];
                k[f.uvV] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"];
                k[f.QuO] = ["Wolf Fur", "Puppy? But where is Puppy?!"];
                k[f.vwU] = ["Rabbit Fur", "That rabbit was so cute..."];
                k[f.$VW] = ["Pure Fur", "You\'re a bread factory"];
                k[f.OwQ] = ["Dark Fur", "You get ready to do something wrong"];
                k[f.v__] = ["Winter Fur", "These animals just wanted a hug..."];
                k[f.Ow_] = ["Scales", "It smells like fish!"];
                k[f.UVW] = ["Kraken Skin", "Weren\'t you too scared?"];
                k[f.$uu] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"];
                k[f.$ow] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"];
                k[f.oOQ] = ["Workbench", "Very useful to craft all kinds of objects"];
                k[f._$$] = ["Cord", "Used in crafting Hats and Bag"];
                k[f.$WQ] = ["Diamond Cord", "Used in crafting Special Hats"];
                k[f.V$Q] = ["Chest", "Allows you to store items", "Durability: 500"];
                k[f.WvU] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"];
                k[f.QvW] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"];
                k[f.$Vu] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"];
                k[f.WU_] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"];
                k[f.UuV] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"];
                k[f.w$v] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"];
                k[f._Wu] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"];
                k[f.___] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"];
                k[f.$ov] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"];
                k[f.oOo] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"];
                k[f.QWu] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"];
                k[f.OQv] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"];
                k[f._v_] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"];
                k[f.oQw] = ["Stone Hammer", "Useful to destroy buildings", "Doesn\'t work well on diamond or amethyst", "Damage: 2", "Building Damage: 20"];
                k[f.UQV] = ["Gold Hammer", "Useful to destroy buildings", "Doesn\'t work well on amethyst", "Damage: 3", "Building Damage: 30"];
                k[f.wvo] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"];
                k[f.$OU] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"];
                k[f.vvV] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 70"];
                k[f.$Uu] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"];
                k[f.$v$] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"];
                k[f.ow_] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"];
                k[f.wo0] = ["Diamond Spear", "You\'re ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"];
                k[f._uV] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"];
                k[f.oVO] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"];
                k[f.UwQ] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"];
                k[f.OvW] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"];
                k[f.oQo] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
                k[f._U$] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"];
                k[f.vOO] = ["Stone Helmet", "You\'re ready for battle!", "Players Defense: 2", "Animals Defense: 8"];
                k[f.uou] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"];
                k[f._O$] = ["Diamond Helmet", "Don\'t brag too much", "Players Defense: 5", "Animals Defense: 19"];
                k[f.wOu] = ["Amethyst Helmet", "You\'re no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"];
                k[f.vQ$] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"];
                k[f.$$Q] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"];
                k[f.oo0] = ["Explorer hat", "Animals won\'t pay attention to you", "but don\'t make noises!", "Warm outside water and in winter", "You also calm down aggressive monsters twice as fast"];
                k[f.oO0] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside water and in winter"];
                k[f.o$$] = ["Elf Hat", "Don\'t let yourself be exploited, you little snow elf!", "Warm outside water and in winter"];
                k[f.VoU] = "Hood;You\'re a rogue;You can steal someone only if;1) It\'s night;2) You\'re not wearing anything;3) If you haven\'t been touched for eight seconds;4) You are not close a fire;5) Your target doesn\'t wear a peasant outfit;Warm outside water and in winter".split(";");
                k[f._UQ] = ["Earmuffs", "Some kind of little chapka.", "Warm outside water and in winter"];
                k[f.u$w] = ["Chapka", "Also called a coat.", "Warmer outside water and in winter"];
                k[f.vvW] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"];
                k[f.QwQ] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"];
                k[f.o_Q] = ["Peasant", "Your plants grow faster", "Warm outside water and in winter"];
                k[f.$wo] = "Winter Hood;You can steal someone only if;- It\'s night;- You\'re not wearing anything;- If you haven\'t been touched for four seconds;- You are not close a fire;- Your target doesn\'t wear a winter peasant outfit;Warm outside water and in winter".split(";");
                k[f.ow$] = ["Winter Peasant", "Your plants grow faster", "Warm outside water and in winter"];
                k[f.WV0] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"];
                k[f.vV$] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", "Players Defense: 4, Animals Defense: 16"];
                k[f.U$U] = ["Dragon Orb", "You feel a great power emanating from this orb"];
                k[f.WQw] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"];
                k[f.WVV] = ["Green Gemstone", "You didn\'t cheat, promise?"];
                k[f.Ovv] = ["Orange Gemstone", "Only a real pirate can find it!"];
                k[f.OvV] = ["Blue Gemstone", "For too kind people"];
                k[f.w_v] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"];
                k[f.uWU] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"];
                k[f.VwO] = ["Blue Crown", "Once you\'re dead, you\'ll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"];
                k[f.wWQ] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"];
                k[f.Uwu] = ["Empty Bucket", "You need to fill this bucket near a water source"];
                k[f.QQu] = ["Bottle", "Allows you to drink water anywhere", "Water: 50"];
                k[f.vvv] = ["Empty Bottle", "You can fill this bottle near a water source"];
                k[f.vw_] = ["Empty Watering Can", "You must fill it with a water source to use it"];
                k[f._v0] = ["Watering Can", "Allows watering of plants", "Damage: 1"];
                k[f.Uwv] = ["Bag", "More space for your items!"];
                k[f.vOu] = ["Paper", "Used in book-crafting"];
                k[f.Q_$] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"];
                k[f._Ww] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"];
                k[f.vQQ] = ["Lock", "Allow you to lock your chest"];
                k[f.UoU] = ["Lock-pick", "Allows you to unlock one chest"];
                k[f.Ww$] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won\'t hurt your friend"];
                k[f.OQ$] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"];
                k[f.vuQ] = ["Sign", "Leave a message to others", "Durability: 200"];
                k[f.WoV] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"];
                k[f.wo$] = ["Well", "Allows bottle filling", "Durability: 1000"];
                k[f._OW] = ["Wood Wall", "It\'s just a wall", "Durability: 1000"];
                k[f.OwO] = ["Stone Wall", "It\'s a little more serious.", "Durability: 1500"];
                k[f.uVv] = ["Gold Wall", "Gold on your walls? It\'s kind of flashy.", "Durability: 2000"];
                k[f.Wvw] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"];
                k[f.$wu] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"];
                k[f.oV_] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"];
                k[f.wuW] = ["Stone Spike", "I wouldn\'t want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"];
                k[f.uuo] = ["Gold Spike", "You\'re so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"];
                k[f._w0] = ["Diamond Spike", "You don\'t like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"];
                k[f.QwW] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"];
                k[f.Vw_] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"];
                k[f.wvV] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"];
                k[f.u_v] = ["Gold Door", 'Are you rebuilding the \"el dorado?\"', "Durability: 2000"];
                k[f.vO0] = ["Diamond Door", "For a shining house", "Durability: 2500"];
                k[f.VuQ] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"];
                k[f.UoQ] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"];
                k[f.U$W] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"];
                k[f.VUQ] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"];
                k[f._UO] = ["Resurrection stone", "It\'s magic", "Resurrect you if you\'re a ghost", "You will lose your weapon", "Durability: 200"];
                k[Wo.vW_] = "You cannot join this server";
                k[Wo.vUW] = "Kicked: ";
                k[Wo.UoO] = "Your key is already used by someone else";
                k[Wo.OWo] = "Your key is wrong";
                k[Wo.WQU] = "You have an old version, you need to clear your cache";
                k[Wo.VwWWw] = "Your client version is too recent for this server. The server is being updated";
                k[Wo.wVwUo] = "Wrong password! To enter a password: https://starve.io/?password=...";
                k[Wo.WwV] = "There are no more new resources";
                k[Wo.$UO] = "You survived 1 day";
                k[Wo.VOO] = "You survived ";
                k[Wo.oU$] = " days";
                k[Wo.wvW] = "You are dead ;-;";
                k[Wo.w$0] = "Server cannot find spawn location! Spam the play button!";
                k[Wo._QV] = "Server is full! Spam the play button!";
                k[Wo.EMPTY] = "Resource is empty";
                k[Wo._vu] = "Inventory is full (right-click to empty items)";
                k[Wo.UWO] = " is dead";
                k[Wo.uoW] = "This is not the right tool";
                k[Wo.VwU] = "You joined a team";
                k[Wo.OOV] = "You are dead";
                k[Wo.vuO] = " joined the team";
                k[Wo.VQw] = "Your team was destroyed";
                k[Wo.ovQ] = "You left the team";
                k[Wo.wVo] = " left the team";
                k[Wo.voQ] = "Someone stole your token :>";
                k[Wo.QoW] = "Choose a server";
                k[Wo.uvw] = "players";
                k[Wo.W$v] = "total players";
                k[Wo.uw$] = "players on this mode";
                k[Wo.Wo$] = "Coming soon...";
                document.getElementById("nickname_input").placeholder = "Nickname";
                L[0] = ["You were killed for no reason"];
                L[1] = ["You starved to death, as the name of the game implies"];
                L[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."];
                L[3] = ["A player killed you whilst telling you to \'git gud.\'", "You got murdered by a player. Don\'t worry, that player will die too, eventually."];
                L[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."];
                L[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn\'t a rabbit."];
                L[6] = ["The wolf won\'t starve anymore after eating you", "They aren\'t dogs. Wolves don\'t like being pet."];
                L[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"];
                L[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I\'m not sorry."];
                L[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."];
                L[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."];
                L[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."];
                L[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."];
                L[13] = ["You died of thirst. Better drink your own piss."];
                L[14] = ["Did you know starver\'s mouths are always below water when swimming? Now you know."];
                L[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."];
                L[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."];
                L[17] = ["Your skin\'s falling apart, the sun killed you."];
                L[18] = ["Garlic stored in your pockets boiled your brain."];
                L[19] = ["As a vampire, don\'t stand near the garlic cloves."];
                L[20] = ["You ate garlic as a vampire, what did you expect?"];
                L[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
                $__ = "Uuunnnggg";
                u$$ = "Uuunnnggg... I\'m starving;Need your brain Uuunnnggg...;Fresh meat here... Uuunnnggg;Uuunnnggg... You are tasty;Uuunnnggg...;Eat... uuunnnggg...;I can smell blood... Uuunnnggg".split(";");
            }, ah = function() {
                k[f._WW] = ["You feel a great power emanating from this orb"];
                L[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
                k[f.QOQ] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
                k[Wo.u_$] = " BACK TO THE GAME";
                k[Wo.OUW] = " Share on Twitter";
                k[Wo.QUv] = " Share on Facebook";
                k[Wo.Q_Q] = "You can buy items on the shop in the next game with your points";
                k[Wo.POINTS] = "points";
                k[Wo.OuO] = "Score";
                k[Wo.VQW] = "Kill";
                k[Wo.vUV] = "Days survived";
                k[Wo.VVO] = "Building method: Free. Press G to change";
                k[Wo._Qo] = "Building method: Grid. Press G to change";
                k[f.wuO] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
                k[f.QVV] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
                k[f.VUW] = "Crab Helmet;You are the king of crabs!;Crabs follow you;They can\'t hit you and you can\'t hit them;Players Defense: 4;Animals Defense: 13".split(";");
                k[f.Wwv] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
                document.getElementById("typequest").innerHTML = "Chrono Quests";
                document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
                document.getElementById("constraintquest").innerHTML = " Constraints";
                document.getElementById("claim_rewards").innerHTML = " Claim rewards";
                document.getElementById("rewardquest").innerHTML = " Reward";
                document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
                document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
                document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
                document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
                document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
                document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
                document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
                for (var a = 0; 7 > a; a++) document.getElementById("claim_reward_" + a).innerHTML = "CLAIM REWARD!";
                document.getElementById("quit_chronoquest").innerHTML = " QUIT";
                k[f.$O_] = ["Рука"];
                k[f.wv_] = ["Земля", "Грязно!"];
                k[f.uUO] = ["Песок", "Он в моих глазах!"];
                k[f.vv] = ["Дерево", "Постоянно нужно больше!"];
                k[f.V0] = ["Камень", "Твердый"];
                k[f.$U] = ["Золото", "Будьте щедры, давайте его другим"];
                k[f.v$] = ["Алмаз", "Что вы создадите с помощью него?"];
                k[f.$W] = ["Аметист", "Он сиреневый, как Lapa"];
                k[f.QQ_] = ["Мука", "Используется в готовке"];
                k[f.O$w] = ["Печенье", "Превосходное бабушкино печенье", "Еда: 50"];
                k[f.vV0] = ["Торт", "Торт мечты для гурманов", "Еда: 100"];
                k[f.Wo_] = ["Сырое Мясо", "Ты можешь пожарить его с помощью огня", "Вызывает отравление: 10", "Еда: 15"];
                k[f.Qvv] = ["Жареное Мясо", "Превосходный стейк, пожалуйста", "Еда: 35"];
                k[f.wov] = ["Сырая Рыба", "Я думаю она всё ещё жива", "Вызывает отравление: 10", "Еда: 18"];
                k[f.vv$] = ["Жареная рыба", "С лимоном она прекрасна", "Еда: 35"];
                k[f.OU0] = ["Хлеб", "Прекрасный французский хлеб", "Это валюта, используемая на рынке", "Еда: 15"];
                k[f.wo_] = ["Бутерброд", "На вкус как Крабсбургер", "Еда: 100"];
                k[f.Vwv] = ["Конфеты", "Только для детей!", "Еда: 20"];
                k[f.uUV] = ["Сахарная Трость", "Попробуйте это, это вкусно", "Еда: 100"];
                k[f.Qww] = ["Гирлянда", "Прекрасная декорация для крыши"];
                k[f.vUu] = "Семя Ягоды;Вырастает в ягоды;Рождение: 2мин;Рост: 55сек;Нужна вода: 3мин 20сек;Прочность: 700;Продолжительность: 8 дней".split(";");
                k[f.Q$_] = ["Ягода", "Ягода вкусная!", "Еда: 10"];
                k[f._W$] = "Пшеничное Семя;Вырастает в пшеницу;Рождение: 2мин;Рост: 16сек;Нужна вода: 2мин;Прочность: 700;Продолжительность: 8 дней".split(";");
                k[f.OwW] = ["Дикая Пшеница", "Перемалывается в муку, когда помещается в мельницу"];
                k[f.Wv$] = "Семена Тыквы;Вырастает в тыкву;Рождение: 2мин 40сек;Рост: 2мин;Нужна вода: 2мин;Прочность: 700;Продолжительность: 8 дней".split(";");
                k[f.VWU] = ["Тыква", "Это напоминает мне Хеллоуин", "Еда: 30"];
                k[f.Q$u] = "Семена Чеснока;Очень опасно для вампиров;Урон: 20;Рождение: 4мин;Рост: 4 мин;Нужна вода: 1мин 40сек;Прочность: 700;Продолжительность: 8 дней".split(";");
                k[f.oOu] = ["Чеснок", "Лечит и снижает получаемый холод", "Еда: 14", "Лечит: 30", "Эффект: 1"];
                k[f.W_u] = "Семена Колючего Куста;Может нанести урон врагам;Урон: 20;Рождение: 4мин;Рост: 15сек;Нужна вода: 3мин;Прочность: 1000;Продолжительность: 8 дней".split(";");
                k[f.Vuw] = ["Колючий Куст", "Это больно!"];
                k[f.uV$] = ["Грядка", "Серьезно, используйте это.", "С этим ГМО удобрением ваши растения", "будут расти быстрее и потребуют меньше воды", "Прочность: 2000"];
                k[f.Wuv] = ["Лёд", "Используется для изготовления тортов и воды"];
                k[f.uvV] = ["Гаечный Ключ", "Для починки дверей, стен, колючек", "Урон: 2"];
                k[f.QuO] = ["Шкура Волка", "Щенок? Но где же Щенок?!"];
                k[f.vwU] = ["Шкура Зайца", "Этот кролик был таким милым..."];
                k[f.$VW] = ["Чистая Шкура", "Вы - фабрика хлеба"];
                k[f.OwQ] = ["Чёрная Шкура", "Вы готовы делать зло."];
                k[f.v__] = ["Зимняя Шкура", "Эти животные просто хотели обнять тебя..."];
                k[f.Ow_] = ["Чешуя", "Она пахнет рыбой!"];
                k[f.UVW] = ["Шкура Кракена", "Вы не испугались?"];
                k[f.$uu] = ["Костёр", "Согрейтесь!", "Прочность: 150", "Продолжительность: 2мин"];
                k[f.$ow] = ["Большой Костёр", "Согрейтесь больше!", "Прочность: 400", "Продолжительность: 6мин"];
                k[f.oOQ] = ["Верстак", "Необходим для создания многих предметов"];
                k[f._$$] = ["Нить", "Используется в изготовлении Шапок и Рюкзака"];
                k[f.$WQ] = ["Алмазная Нить", "Используется в изготовлении специальных шапок"];
                k[f.V$Q] = ["Сундук", "Позволяет хранить предметы", "Прочность: 500"];
                k[f.WvU] = ["Деревянный Меч", "Это работает?", "Урон: 12", "Урон по строениям: 4"];
                k[f.QvW] = ["Каменный Меч", "Будьте добры к другим", "Урон: 19", "Урон по строениям: 6"];
                k[f.$Vu] = ["Золотой Меч", "Король леса", "Урон: 22", "Урон по строениям: 7"];
                k[f.WU_] = ["Алмазный Меч", "Ты можешь почувствовать силу", "Урон: 24", "Урон по строениям: 8"];
                k[f.UuV] = ["Пиратский Меч", "Aррррр!", "Дальность атаки больше чем у нормального меча", "Урон: 24", "Урон по строениям: 8"];
                k[f.w$v] = ["Аметистовый Меч", "Сиреневый - самый красивый цвет в мире", "Урон: 27", "Урон по строениям: 9"];
                k[f._Wu] = ["Меч Дракона", "Без пощады!", "Урон: 30", "Урон по строениям: 10"];
                k[f.___] = ["Копьё Дракона", "Убивай всех!", "Урон: 22", "Урон по строениям: 6"];
                k[f.$ov] = ["Деревянная Кирка", "Может добывать только дерево и камень", "Урон: 1"];
                k[f.oOo] = ["Каменная Кирка", "Может добывать дерево, камень и золото", "Урон: 2"];
                k[f.QWu] = ["Золотая Кирка", "Также может добывать алмазы", "Урон: 3", "Урон по строениям: 1"];
                k[f.OQv] = ["Алмазная Кирка", "Можно добывать всё", "Урон: 4", "Урон по строениям: 1"];
                k[f._v_] = ["Аметистовая Кирка", "Можно добывать всё, ещё и выглядит красиво!", "Урон: 5", "Урон по строениям: 1"];
                k[f.oQw] = ["Каменный молот", "Используется для разрушения зданий", "Плохо разрушает алмазные и аметистовые здания", "Урон: 2", "Урон по строениям: 20"];
                k[f.UQV] = ["Золотой Молот", "Используется для разрушения зданий", "Плохо разрушает аметистовые здания", "Урон: 3", "Урон по строениям: 30"];
                k[f.wvo] = ["Алмазный Молот", "Используется для разрушения зданий", "Урон: 4", "Урон по строениям: 40"];
                k[f.$OU] = ["Аметистовый Молот", "Используется для разрушения зданий", "Урон: 5", "Урон по строениям: 50"];
                k[f.vvV] = ["Супер Молот", "У вас есть планы разрушить мир?", "Урон: 12", "Урон по строениям: 70"];
                k[f.$Uu] = ["Деревянное Копьё", "Выглядит как деревянная палочка, но делает больно.", "Урон: 10", "Урон по строениям: 2"];
                k[f.$v$] = ["Каменное Копьё", "Начало эволюции!", "Урон: 14", "Урон по строениям: 4"];
                k[f.ow_] = ["Золотое Копьё", "Осторожно, это больно!", "Урон: 15", "Урон по строениям: 5"];
                k[f.wo0] = ["Алмазное Копьё", "Вы готовы убивать дракона.", "Урон: 17", "Урон по строениям: 5"];
                k[f._uV] = ["Аметистовое Копьё", "Драконы больше не пугают вас", "Урон: 18", "Урон по строениям: 6"];
                k[f.oVO] = ["Каменная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 2"];
                k[f.UwQ] = ["Золотая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 3", "Урон по строениям: 1"];
                k[f.OvW] = ["Алмазная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 4", "Урон по строениям: 1"];
                k[f.oQo] = ["Аметистовая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 5", "Урон по стреониям: 1"];
                k[f._U$] = ["Деревянный Шлем", "Лучше чем ничего", "Защита от игроков: 1", "Защита от животных: 4"];
                k[f.vOO] = ["Каменный Шлем", "Вы готовы к битве!", "Защита от игроков: 2", "Защита от животных: 8"];
                k[f.uou] = ["Золотой Шлем", "Также известен как шлем жестоких людей", "Защита от игроков: 4", "Защита от животных: 13"];
                k[f._O$] = ["Алмазный Шлем", "Не слишком хвастайтесь", "Защита от игроков: 5", "Защита от животных: 19"];
                k[f.wOu] = ["Аметистовый Шлем", "Ты больше ничего не боишься", "Защита от игроков: 6", "Защита от животных: 23"];
                k[f.$$Q] = ["Шлем Дракона", "Ты покоришь мир", "Защита от игроков: 8", "Защита от животных: 27"];
                k[f.oo0] = ["Шапка Исследователя", "Животные не обращают на вас внимания", "но не шумите!", "Защищает от холода вне воды."];
                k[f.oO0] = ["Рождественская Шапка", "Ох-хо-хо, Счастливого Рождества", "Защищает от холода вне воды."];
                k[f.o$$] = ["Шапка Эльфа", "Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!", "Защищает от холода вне воды."];
                k[f.VoU] = "Капюшон;Вы разбойник;Вы можете украсть что-то, если;1) Ночь;2) Вы ничего не носите;3)Если вас не тронули в течение восьми секунд;4) Вы не рядом с огнём;5) Вы не можете ничего украсть у крестьянской туники;Защищает от холода вне воды.".split(";");
                k[f._UQ] = ["Теплые Наушники", "Какая-то маленькая шапка.", "Защищает от холода вне воды."];
                k[f.u$w] = ["Шапка", "Так же называется пальтом.", "Защищает от холода вне воды."];
                k[f.vvW] = ["Зимний Шарф и Шапка", "Очень комфортно", "Очень тепло"];
                k[f.o_Q] = ["Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
                k[f.$wo] = "Зимний Капюшон;Вы можете украсть что-то, если;- Ночь;- Вы ничего не носите;- Если вас не тронули в течение четырёх секунд;- Вы не рядом с огнём;- Вы не можете ничего украсть у крестьянской туники;Защищает от холода вне воды.".split(";");
                k[f.ow$] = ["Зимняя Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
                k[f.WV0] = ["Акваланг", "Вы быстрее передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 2, Защита от животных: 8"];
                k[f.vV$] = ["Супер Акваланг", "Вы очень быстро передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 4, Защита от животных: 16"];
                k[f.U$U] = ["Шар Дракона", "Даётся за квест"];
                k[f.WQw] = ["Сердце Дракона", "Превращает вас в призрака после смерти!", "Вы призрак на 60 секунд", "Найдите камень воскрешения"];
                k[f.WVV] = ["Зелёный Драгоценный Камень", "Вы без читов, правильно?"];
                k[f.Ovv] = ["Оранжевый Драгоценный Камень", "Только настоящий пират найдёт это!"];
                k[f.OvV] = ["Синий Драгоценный Камень", "Для очень добрых людей"];
                k[f.w_v] = ["Зеленая корона", "Вы лечите себя очень быстро", "Лечит: 40", "Защита от игроков: 4, Защита от животных: 16"];
                k[f.uWU] = ["Оранжевая Корона", "Вам очень повезло", "Защита от игроков: 4, Защита от животных: 16"];
                k[f.VwO] = ["Синяя Корона", "Как только вы умрёте, вы станете призраком", "Но вы потеряете своё оружие", "Защита от игроков: 4, Защита от животных: 16"];
                k[f.wWQ] = ["Ведро", "Используется для заполнения колодца", "Одно ведро равняется двенадцати бутылкам"];
                k[f.Uwu] = ["Пустое ведро", "Вам надо заполнить это ведро возле воды"];
                k[f.QQu] = ["Бутылка", "Позволяет пить воду в любом месте", "Вода: 50"];
                k[f.vvv] = ["Пустая бутылка", "Вы можете заполнить бутылку возле воды"];
                k[f.vw_] = ["Пустая Лейка", "Вы можете заполнить лейку возле воды"];
                k[f._v0] = ["Лейка", "Позволяет поливать растения", "Урон: 1"];
                k[f.Uwv] = ["Рюкзак", "Больше места для ваших предметов!"];
                k[f.vOu] = ["Бумага", "Используется при создании книги"];
                k[f.Q_$] = ["Книга", "Сокращает время изготовления предметов", "Должно быть одето для работы", "Урон: 1"];
                k[f._Ww] = ["Бинт", "Восстанавливает ваше здоровье быстрее", "Лечит: 30", "Эффект: 5"];
                k[f.vQQ] = ["Замок", "Позволяет вам закрыть ваш сундук"];
                k[f.UoU] = ["Ключ", "Даёт вам открыть один запертый сундук"];
                k[f.Ww$] = ["Тотем", "Позволяет вам создать команду", "Совместное использование дверей и сундуков", "Вредное здание не повредит вашего друга"];
                k[f.OQ$] = ["Мост", "Очень полезно на воде", "Позволяет вам пить без потери воздуха", "Передвигаетесь быстрее по воде"];
                k[f.vuQ] = ["Табличка", "Оставьте сообщение другим", "Прочность: 200"];
                k[f.WoV] = ["Крыша", "Немного скрывает вас и согревает!"];
                k[f.wo$] = ["Колодец", "Позволяет заполнить бутылку", "Прочность: 1000"];
                k[f._OW] = ["Деревянная Стена", "Это просто стена", "Прочность: 1000"];
                k[f.OwO] = ["Каменная Стена", "Это немного посерьезнее.", "Прочность: 1500"];
                k[f.uVv] = ["Золотая Стена", "Золото на ваших стенах? Она ослепляет.", "Прочность: 2000"];
                k[f.Wvw] = ["Алмазная Стена", "Очень блестит, следите за вашими глазами", "Прочность: 2500"];
                k[f.$wu] = ["Аметистовая стена", "Вы должны быть слишком напуганы, чтобы уйти!", "Прочность: 3500"];
                k[f.oV_] = ["Деревянная Стена с Шипами", "Может наносить урон врагам", "Урон: 10, Урон за один удар: 2", "Прочность: 150"];
                k[f.wuW] = ["Каменная Стена с Шипами", "Я не хотел бы быть вашим врагом", "Урон: 20", "Урон за один удар: 3", "Прочность: 300"];
                k[f.uuo] = ["Золотая Стена с Шипами", "Вы очень жестоки.", "Урон: 30", "Урон за один удар: 3", "Прочность: 600"];
                k[f._w0] = ["Алмазная Стена с Шипами", "Вам не нравится иметь компанию.", "Урон: 40", "Урон за один удар: 4", "Прочность: 1200"];
                k[f.QwW] = ["Аметистовая Стена с Шипами", "Какого черта, что ваши соседи сделали с вами?", "Урон: 50", "Урон за один удар: 4", "Прочность: 2400"];
                k[f.Vw_] = ["Деревянная Дверь", "Может быть открыта и закрыта вами или друзьями", "Прочность: 1000"];
                k[f.wvV] = ["Каменная Дверь", "Более серьезная и сильная дверь", "Прочность: 1500"];
                k[f.u_v] = ["Золотая Дверь", 'Вы перестраиваете \"Эль Дорадо?\"', "Прочность: 2000"];
                k[f.vO0] = ["Алмазная Дверь", "Для роскошного дома", "Прочность: 2500"];
                k[f.VuQ] = ["Аметистовая Дверь", "Ваш дом в безопасности?", "Прочность: 3000"];
                k[f.UoQ] = ["Печь", "Согревает", "Тратит дерево каждые 5 секунд", "Прочность: 1000"];
                k[f.U$W] = ["Мельница", "Может сделать муку из пшеницы", "Требует 5 секунд для получения муки", "Даёт очки при работе", "Прочность: 2000"];
                k[f.VUQ] = ["Хлебная Печь", "Позволяет готовить хлеб из муки", "Требует 10 секунд для получения хлеба", "Даёт очки при работе", "Прочность: 2000"];
                k[f._UO] = ["Камень Воскрешения", "Это магия", "Воскрешает вас, если вы призрак", "Вы потеряете своё оружие", "Прочность: 200"];
                k[Wo.vW_] = "Вы не можете зайти на этот сервер";
                k[Wo.vUW] = "Выгнаны: ";
                k[Wo.UoO] = "Ваш ключ уже используется кем-то";
                k[Wo.OWo] = "Ваш ключ неправильный";
                k[Wo.WQU] = "У вас старая версия, вам нужно очистить кеш";
                k[Wo.WwV] = "Ресурсов больше нет";
                k[Wo.$UO] = "Вы выжили 1 день";
                k[Wo.VOO] = "Вы выжили ";
                k[Wo.oU$] = " дней";
                k[Wo.wvW] = "Вы умерли ;-;";
                k[Wo.w$0] = "Сервер не может найти точку спавна! Спамьте кнопку играть!";
                k[Wo._QV] = "Сервер заполнен! Спамьте кнопку играть!";
                k[Wo.EMPTY] = "Ресурсы закончились";
                k[Wo._vu] = "Инвентарь заполнен (правая кнопка мыши для удаления предметов)";
                k[Wo.UWO] = " умер";
                k[Wo.uoW] = "Это не тот инструмент";
                k[Wo.VwU] = "Вы вошли в команду";
                k[Wo.OOV] = "Вы умерли";
                k[Wo.vuO] = " вошёл в команду";
                k[Wo.VQw] = "Ваша команда была разрушена";
                k[Wo.ovQ] = "Вы покинули команду";
                k[Wo.wVo] = " покинул команду";
                k[Wo.voQ] = "Кто-то использует ваш токен :>";
                k[Wo.QoW] = "Выберите сервер";
                k[Wo.uvw] = "игроков";
                k[Wo.W$v] = "игроков всего";
                k[Wo.uw$] = "игроков в этом режиме";
                k[Wo.Wo$] = "Скоро...";
                document.getElementById("nickname_input").placeholder = "Имя";
                L[0] = ["Вы были убиты без причины"];
                L[1] = ["Вы умерли от голода, как название игры подразумевает это"];
                L[2] = ["Вы замерзли до смерти. Так грустно", "У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём."];
                L[3] = ["Игрок убил тебя и сказал \'стань лучше.\'", "Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов."];
                L[4] = ["Вы стояли слишком близко к огню и сгорели. Плохая идея.", "Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого."];
                L[5] = ["Ваше тело станет гнездом для яиц паука", "Паук убил вас. По крайней мере это был не кролик."];
                L[6] = ["Волк больше не будет голодать после того, как наелся вами", "Они не собаки. Волки не любят ласкаться."];
                L[7] = ["Лиса была слишком быстрой для вас", "Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?"];
                L[8] = ["Медведь просто хотел обнять тебя.", "Медведь был слишком грустным. Мне не жаль."];
                L[9] = ["Вы были сожжены драконом. Так грустно.", "Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть."];
                L[10] = ["Вы прыгнули в стену с шипами. Плохая идея...", "Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей."];
                L[11] = ["Даже призрак может умереть.", "Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что..."];
                L[12] = ["Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.", "Вы убили сырую пищу. Она тоже тебя убила."];
                L[13] = ["Вы умерли от жажды. Лучше пить собственную мочу."];
                L[14] = ["Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь."];
                L[15] = ["Не волнуйся, пиранья сочла тебя вкусным.", "Веселый факт: Пираньи едят людей. В том числе тебя."];
                L[16] = ["LapaMauve не планировал, что ты убьёшь кракена", "Крак! Кракен сломал твой череп."];
                L[17] = ["Твоя кожа разваливается, солнце убило тебя"];
                L[18] = ["Чеснок, хранящийся в твоих карманах сварил твой мозг."];
                L[19] = ["Не стоит стоять рядом с чесночным зубком, когда вы вампир."];
                L[20] = ["Вы вампир, Вы ели чеснок, чего вы ожидали?"];
                L[21] = ["Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться."];
                $__ = "Uuunnnggg";
                u$$ = "Uuunnnggg... Я голоден;Нужны твои мозги Uuunnnggg...;Свежее мясо здесь... Uuunnnggg;Uuunnnggg... Ты вкусный;Uuunnnggg...;Еда… Uuunnnggg...;Я чувствую запах крови... Uuunnnggg".split(";");
            }, bh = function() {

            }, ch = function() {

            }, dh = function() {

            }, k = [], za = 0; za < g; za++) k[za] = "";
        var L = [];
        $(".md-languages").on("click", function() {
            $(this).toggleClass("active");
        });
        $(".md-languages ul li").on("click", function() {
            var a = $(this).text();
            ("English" === a) ? Nd(): (("\x46\x72\x61\x6e\xe7\x61\x69\x73" === a) ? fh() : (("Deutsch" === a) ? eh() : (("\x45\x73\x70\x61\xf1\x6f\x6c" === a) ? bh() : (("\x50\x6f\x72\x74\x75\x67\x75\xea\x73" === a) ? dh() : (("Русский" === a) ? ah() : (("Polski" === a) && ch()))))));
            wQu = [];
            m.Ow.label = [];
            $(".md-languages ul li").removeClass("active");
            $(this).addClass("active");
            $(".md-languages label button").text(a);
        });
        Ja = "EN";
        switch (navigator.language || navigator.userLanguage) {
            case "ru":
                Ja = "RU";
                break;
            case "en":
                Ja = "EN";
                break;
        }
        var Ua;
        ("FR" === Ja) ? ($(".md-languages label button").text("\x46\x72\x61\x6e\xe7\x61\x69\x73"), Ua = fh) : (("PL" === Ja) ? ($(".md-languages label button").text("Polski"), Ua = ch) : (("PT" === Ja) ? ($(".md-languages label button").text("\x50\x6f\x72\x74\x75\x67\x75\xea\x73"), Ua = dh) : (("SP" === Ja) ? ($(".md-languages label button").text("\x45\x73\x70\x61\xf1\x6f\x6c"), Ua = bh) : (("RU" === Ja) ? ($(".md-languages label button").text("Русский"), Ua = ah) : (("DE" === Ja) ? ($(".md-languages label button").text("Deutsch"), Ua = eh) : ($(".md-languages label button").text("English"), Ua = Nd))))));
        o = {
            QW_0w: "img/logo.png",
            vvw$$: "img/mapday.png",
            uvvVW: "img/mapnight.png",
            wWvvQ: "img/bigzday.png",
            QV$Ou: "img/bigznight.png",
            wVUQ$: "img/bigday-river1.png",
            W_uWO: "img/bigday-lake.png",
            uvuW0: "img/bigday-berry.png",
            vuOUo: "img/bigday-stone1.png",
            QVuov: "img/bigday-stone2.png",
            QouUQ: "img/bigday-gold1.png",
            WVW0U: "img/bigday-gold2.png",
            _V$uo: "img/bigday-emerald1.png",
            oQWWQ: "img/bigday-emerald2.png",
            QVWOV: "img/bigday-amethyst.png",
            vOVwv: "img/bigday-bear.png",
            Ovw$$: "img/bigday-cave.png",
            WVv_U: "img/bigday-diamond.png",
            U0_u$: "img/bigday-island.png",
            QoOu_: "img/bigday-reidite.png",
            $UOWO: "img/bigday-spider.png",
            $WWVV: "img/bigday-wolf.png",
            WoOo0: "img/bigday-fir-tree.png",
            _U$U0: "img/bigday-fox.png",
            QV$_0: "img/bigday-kraken.png",
            o0vVV: "img/bigday-piranha.png",
            Wuuwo: "img/bigday-cactus.png",
            $VuUU: "img/bigday-magma.png",
            W$vo0: "img/bigday-river1.png",
            ovv$O: "img/bignight-lake.png",
            wwvoU: "img/bignight-berry.png",
            _0wvo: "img/bignight-stone1.png",
            $$u0$: "img/bignight-stone2.png",
            oQvWU: "img/bignight-gold1.png",
            _wwWO: "img/bignight-gold2.png",
            QQWWQ: "img/bignight-emerald1.png",
            wWvu_: "img/bignight-emerald2.png",
            _wVQu: "img/bignight-amethyst.png",
            wWOow: "img/bignight-bear.png",
            WO_U$: "img/bignight-cave.png",
            QoOv$: "img/bignight-diamond.png",
            WoUUo: "img/bignight-island.png",
            oVQVw: "img/bignight-reidite.png",
            OQu$v: "img/bignight-spider.png",
            uUWO_: "img/bignight-wolf.png",
            uvvQU: "img/bignight-fir-tree.png",
            Q0V00: "img/bignight-fox.png",
            v$QuV: "img/bignight-kraken.png",
            wV$_Q: "img/bignight-piranha.png",
            OW_u$: "img/bignight-cactus.png",
            vVQu_: "img/bignight-magma.png",
            vUwwu: "img/bigday-desert.png",
            VVWWU: "img/bigday-winter.png",
            u_o$o: "img/bigday-lava.png",
            oU$vW: "img/bigday-forest.png",
            vWuWo: "img/bignight-desert.png",
            o$UQo: "img/bignight-winter.png",
            WVU0U: "img/bignight-lava.png",
            wuVoV: "img/bignight-forest.png",
            OVwwU: "img/day-river-wave.png",
            WUo_W: "img/night-river-wave.png",
            $QUw$: "img/day-fog0.png",
            VWOwu: "img/day-fog1.png",
            oWvou: "img/day-fog2.png",
            _w$oU: "img/night-fog0.png",
            Q$u0_: "img/night-fog1.png",
            oow_O: "img/night-fog2.png",
            OoOo$: "img/day-fogdesert0.png",
            QwWWO: "img/day-fogdesert1.png",
            OovW$: "img/day-fogdesert2.png",
            uQQ_W: "img/night-fogdesert0.png",
            QUVuu: "img/night-fogdesert1.png",
            VvuUV: "img/night-fogdesert2.png",
            voO_v: "img/day-cross-server.png",
            voQOQ: "img/day-here-server.png",
            ouw$Q: "img/day-finish-server.png",
            _OuQ$: "img/day-item-server.png",
            uOOWw: "img/night-cross-server.png",
            U_oVV: "img/night-here-server.png",
            osocket$: "img/night-finish-server.png",
            W0uVw: "img/night-item-server.png",
            OWWu_: "img/day-reidite0.png",
            VUOoV: "img/night-reidite0.png",
            QvOO0: "img/day-reidite1.png",
            VO$$0: "img/night-reidite1.png",
            V_QwU: "img/day-reidite2.png",
            u_v$Q: "img/night-reidite2.png",
            O_WUO: "img/day-lava1.png",
            uVw$O: "img/night-lava1.png",
            Wuu_u: "img/day-lava2.png",
            VVWo0: "img/night-lava2.png",
            OuUQW: "img/day-lava3.png",
            uUVuo: "img/night-lava3.png",
            UV__Q: "img/day-lava4.png",
            VuO_U: "img/night-lava4.png",
            uQvvV: "img/day-lava5.png",
            ouVW_: "img/night-lava5.png",
            VoVU_: "img/day-lava6.png",
            Uo$vV: "img/night-lava6.png",
            QuO_V: "img/day-lava-ground1.png",
            Uow_W: "img/night-lava-ground1.png",
            VWu0V: "img/day-lava-ground2.png",
            OWUWw: "img/night-lava-ground2.png",
            VwVoW: "img/day-lava-ground3.png",
            O0o$w: "img/night-lava-ground3.png",
            UWwwW: "img/day-lava-ground4.png",
            Ww$$U: "img/night-lava-ground4.png",
            _uwwv: "img/day-lava-ground5.png",
            wovOv: "img/night-lava-ground5.png",
            $OVu_: "img/day-lava-ground6.png",
            W_V_V: "img/night-lava-ground6.png",
            V_QvV: "img/day-fire-mob.png",
            uo_uU: "img/night-fire-mob.png",
            oWUuv: "img/hurt-fire-mob.png",
            oWQQ_: "img/day-diamond-protection.png",
            Ou_UV: "img/night-diamond-protection.png",
            QWoO_: "img/day-hand-diamond-protection.png",
            o_v_O: "img/night-hand-diamond-protection.png",
            Ow_0V: "img/inv-diamond-protection-out.png",
            uVQ_v: "img/inv-diamond-protection-in.png",
            WowQ_: "img/inv-diamond-protection-click.png",
            ooV_Q: "img/day-amethyst-protection.png",
            v__vQ: "img/night-amethyst-protection.png",
            w_O$_: "img/day-hand-amethyst-protection.png",
            $OVu$: "img/night-hand-amethyst-protection.png",
            o0Q$$: "img/inv-amethyst-protection-out.png",
            u0Uu$: "img/inv-amethyst-protection-in.png",
            Q_$UW: "img/inv-amethyst-protection-click.png",
            rsword: "img/day-reidite-sword.png",
            rnsword: "img/night-reidite-sword.png",
            uOQ$v: "img/inv-reidite-sword-out.png",
            _wW$O: "img/inv-reidite-sword-in.png",
            wvow0: "img/inv-reidite-sword-click.png",
            QVW_W: "img/inv-reidite-out.png",
            vuwOQ: "img/inv-reidite-in.png",
            oOWwu: "img/inv-reidite-click.png",
            VQvUv: "img/inv-flame-out.png",
            o0O$w: "img/inv-flame-in.png",
            WwOV$: "img/inv-flame-click.png",
            uuvQ$: "img/day-magma-buble0.png",
            $0UW$: "img/night-magma-buble0.png",
            QVw$W: "img/day-magma-buble1.png",
            v0OQO: "img/night-magma-buble1.png",
            QvVVu: "img/day-magma-buble2.png",
            _ou$o: "img/night-magma-buble2.png",
            WQOoU: "img/day-lava-dragon.png",
            OowQU: "img/night-lava-dragon.png",
            OWVv0: "img/day-fire-dragon.png",
            v0w_o: "img/night-fire-dragon.png",
            W$$: "img/hurt-lava-dragon.png",
            $_QQ$: "img/day-lava-wing-left.png",
            vvvWO: "img/night-lava-wing-left.png",
            Uv$UU: "img/day-lava-wing-right.png",
            _$vQV: "img/night-lava-wing-right.png",
            vQ$uo: "img/hurt-lava-wing-left.png",
            nbirdA: "img/hurt-lava-wing-right.png",
            redspeard: "img/day-reidite-spear.png",
            redspearn: "img/night-reidite-spear.png",
            $VuvQ: "img/inv-reidite-spear-out.png",
            U0W$w: "img/inv-reidite-spear-in.png",
            $uuw_: "img/inv-reidite-spear-click.png",
            rhelmetd: "img/day-reidite-helmet.png",
            rhelmetn: "img/night-reidite-helmet.png",
            oV_U$: "img/inv-reidite-helmet-out.png",
            ooUvu: "img/inv-reidite-helmet-in.png",
            w$w_u: "img/inv-reidite-helmet-click.png",
            Q_vvu: "img/day-hand-reidite-protection.png",
            u$vWQ: "img/night-hand-reidite-protection.png",
            _VQ_U: "img/day-reidite-protection.png",
            OuwVU: "img/night-reidite-protection.png",
            $Qw_Q: "img/inv-reidite-protection-out.png",
            wuoow: "img/inv-reidite-protection-in.png",
            oUwQV: "img/inv-reidite-protection-click.png",
            v$uUQ: "img/day-lava-dragon-sword.png",
            U0VQw: "img/night-lava-dragon-sword.png",
            $$VoO: "img/inv-lava-dragon-sword-out.png",
            u$OVW: "img/inv-lava-dragon-sword-in.png",
            _Vu$Q: "img/inv-lava-dragon-sword-click.png",
            o0Q_V: "img/day-lava-spear.png",
            QwuwU: "img/night-lava-spear.png",
            _0_00: "img/inv-lava-spear-out.png",
            WOwo0: "img/inv-lava-spear-in.png",
            V$vuu: "img/inv-lava-spear-click.png",
            u_oo$: "img/day-lava-helmet.png",
            $wOww: "img/night-lava-helmet.png",
            UVOQW: "img/inv-lava-helmet-out.png",
            o$WWO: "img/inv-lava-helmet-in.png",
            OVQoU: "img/inv-lava-helmet-click.png",
            vQWUo: "img/day-witch-hat.png",
            _u$OQ: "img/night-witch-hat.png",
            WWWW$: "img/inv-witch-hat-out.png",
            oWw0$: "img/inv-witch-hat-in.png",
            OWvU$: "img/inv-witch-hat-click.png",
            V_o_Q: "img/day-nimbus2000.png",
            VOvWw: "img/night-nimbus2000.png",
            wUV0U: "img/inv-nimbus2000-out.png",
            wWU_0: "img/inv-nimbus2000-in.png",
            _uQoV: "img/inv-nimbus2000-click.png",
            vV$OO: "img/day-accessory1-pacques.png",
            QVwvu: "img/night-accessory1-pacques.png",
            $u$0V: "img/day-accessory2-pacques.png",
            OVw_$: "img/night-accessory2-pacques.png",
            uQoV0: "img/day-accessory3-pacques.png",
            UuwQ0: "img/night-accessory3-pacques.png",
            UOWWV: "img/day-accessory5-pacques.png",
            VQoWO: "img/night-accessory5-pacques.png",
            WWwQv: "img/day-accessory6-pacques.png",
            v__oU: "img/night-accessory6-pacques.png",
            Q0w0v: "img/day-accessory7-pacques.png",
            W$w$Q: "img/night-accessory7-pacques.png",
            uUVVw: "img/day-accessory8-pacques.png",
            $Qovw: "img/night-accessory8-pacques.png",
            $vUW0: "img/day-bag-pacques.png",
            u_VO_: "img/night-bag-pacques.png",
            W0QOU: "img/day-carrot.png",
            Q_UWv: "img/night-carrot.png",
            wvW$_: "img/day-carrot-dried.png",
            v$o$0: "img/night-carrot-dried.png",
            wvV0O: "img/day-tomato-herb.png",
            wuOoW: "img/night-tomato-herb.png",
            U$uWw: "img/day-tomato-herb-dried.png",
            wWuuu: "img/night-tomato-herb-dried.png",
            _uVOO: "img/day-tomato.png",
            Ouw$Q: "img/night-tomato.png",
            U$vwu: "img/inv-carrot-out.png",
            QOQW0: "img/inv-carrot-in.png",
            O_w_u: "img/inv-carrot-click.png",
            QQQu_: "img/inv-tomato-out.png",
            UQOuU: "img/inv-tomato-in.png",
            W0_U$: "img/inv-tomato-click.png",
            V0$QV: "img/day-player0.png",
            _w$0v: "img/night-player0.png",
            _0VUU: "img/day-player1.png",
            V$v0w: "img/night-player1.png",
            u0U_W: "img/day-player2.png",
            U_OWo: "img/night-player22.png",
            uuvV$: "img/day-player3.png",
            uQWuu: "img/night-player33.png",
            vWWUO: "img/day-player4.png",
            _w$Uw: "img/night-player4.png",
            WOwOU: "img/day-player5.png",
            QWwou: "img/night-player5.png",
            WVWvo: "img/day-player6.png",
            vWoOO: "img/night-player6.png",
            w$$_W: "img/day-player7.png",
            O_V$W: "img/night-player7.png",
            VuoVQ: "img/day-player8.png",
            OV$_w: "img/night-player8.png",
            _vQUQ: "img/day-player9.png",
            OVV_V: "img/night-player9.png",
            OOVu$: "img/day-player10.png",
            VWVQW: "img/night-player10.png",
            WoUu_: "img/day-player11.png",
            W_W_W: "img/night-player11.png",
            $_Uuo: "img/day-player12.png",
            vwQVw: "img/night-player12.png",
            uVOUO: "img/day-player13.png",
            WVooQ: "img/night-player13.png",
            _$o$O: "img/day-player14.png",
            U0$QQ: "img/night-player14.png",
            UwO_W: "img/day-player15.png",
            vWwU0: "img/night-player15.png",
            uoWoV: "img/day-player16.png",
            WQv_O: "img/night-player16.png",
            Vo_0_: "img/day-player17.png",
            uvOvQ: "img/night-player17.png",
            WwUuO: "img/day-player18.png",
            oQWQo: "img/night-player18.png",
            _Oov_: "img/day-player19.png",
            _0oVQ: "img/night-player19.png",
            OOwV$: "img/day-hand-player0.png",
            WVU$o: "img/night-hand-player0.png",
            Q$$0U: "img/day-hand-player1.png",
            uWOuQ: "img/night-hand-player1.png",
            o0Uvv: "img/day-hand-player2.png",
            o0voW: "img/night-hand-player22.png",
            _$WUo: "img/day-hand-player3.png",
            uuuOO: "img/night-hand-player33.png",
            V$_WQ: "img/day-hand-player4.png",
            QwWO_: "img/night-hand-player4.png",
            v0vVu: "img/day-hand-player5.png",
            UoU$V: "img/night-hand-player5.png",
            wuv_O: "img/day-hand-player6.png",
            uWQUo: "img/night-hand-player6.png",
            ouwoU: "img/day-hand-player7.png",
            QuVU0: "img/night-hand-player7.png",
            Wov0$: "img/day-hand-player8.png",
            QWuwv: "img/night-hand-player8.png",
            QoU0v: "img/day-hand-player9.png",
            _$Qu$: "img/night-hand-player9.png",
            WuuWU: "img/day-hand-player10.png",
            wWoVu: "img/night-hand-player10.png",
            wVOQu: "img/day-hand-player11.png",
            W0$V$: "img/night-hand-player11.png",
            Uuuuu: "img/day-hand-player12.png",
            QVUoQ: "img/night-hand-player12.png",
            O___0: "img/day-hand-player13.png",
            U_$oV: "img/night-hand-player13.png",
            vo$ow: "img/day-hand-player14.png",
            VOOOW: "img/night-hand-player14.png",
            $wowQ: "img/day-hand-player15.png",
            o0Oo0: "img/night-hand-player15.png",
            VWQ$v: "img/day-hand-player16.png",
            _wuuu: "img/night-hand-player16.png",
            uUOoU: "img/day-hand-player17.png",
            Qu_U$: "img/night-hand-player17.png",
            uuO_o: "img/day-hand-player18.png",
            Uuuwu: "img/night-hand-player18.png",
            v__Wv: "img/day-hand-player19.png",
            wvQO$: "img/night-hand-player19.png",
            _$V_W: "img/day-accessory4.png",
            VUQo_: "img/night-accessory4.png",
            woVQW: "img/day-accessory9.png",
            _wuV$: "img/night-accessory9.png",
            $u$vU: "img/day-accessory10.png",
            WWOQU: "img/night-accessory10.png",
            vVQwQ: "img/day-accessory11.png",
            wVUo_: "img/night-accessory11.png",
            ou_O$: "img/day-accessory12.png",
            UVo$w: "img/night-accessory12.png",
            ouWwv: "img/day-bag.png",
            uuwv_: "img/night-bag.png",
            wO$00: "img/inv-bag-out.png",
            wuv__: "img/inv-bag-in.png",
            VWOuO: "img/inv-bag-click.png",
            u0uWu: "img/day-pitchfork.png",
            v_v$W: "img/night-pitchfork.png",
            $0OUO: "img/inv-pitchfork-out.png",
            VwuwV: "img/inv-pitchfork-in.png",
            QwWo0: "img/inv-pitchfork-click.png",
            wOOWu: "img/inv-wood-spike-door-out.png",
            OWQuW: "img/inv-wood-spike-door-in.png",
            OUOUv: "img/inv-wood-spike-door-click.png",
            VUWu0: "img/inv-stone-spike-door-out.png",
            VwuwO: "img/inv-stone-spike-door-in.png",
            $vo0V: "img/inv-stone-spike-door-click.png",
            W0v_0: "img/inv-gold-spike-door-out.png",
            UQVw0: "img/inv-gold-spike-door-in.png",
            wouvW: "img/inv-gold-spike-door-click.png",
            U$$QV: "img/inv-diamond-spike-door-out.png",
            _o_U$: "img/inv-diamond-spike-door-in.png",
            _$o00: "img/inv-diamond-spike-door-click.png",
            oQUO0: "img/inv-amethyst-spike-door-out.png",
            wQ$0w: "img/inv-amethyst-spike-door-in.png",
            _VV0V: "img/inv-amethyst-spike-door-click.png",
            _oO$$: "img/day-wood-spike-door.png",
            VwWOu: "img/night-wood-spike-door.png",
            OVvWo: "img/day-stone-spike-door.png",
            OVU_W: "img/night-stone-spike-door.png",
            o$ovV: "img/day-gold-spike-door.png",
            QvUWv: "img/night-gold-spike-door.png",
            __VQ$: "img/day-diamond-spike-door.png",
            WouV0: "img/night-diamond-spike-door.png",
            $UoVO: "img/day-amethyst-spike-door.png",
            VW_uU: "img/night-amethyst-spike-door.png",
            Q$u0v: "img/inv-reidite-spike-door-out.png",
            VVUvU: "img/inv-reidite-spike-door-in.png",
            _VQU0: "img/inv-reidite-spike-door-click.png",
            voO$Q: "img/inv-reidite-door-out.png",
            U$wuQ: "img/inv-reidite-door-in.png",
            voU__: "img/inv-reidite-door-click.png",
            oWQuQ: "img/inv-reidite-spike-out.png",
            _WUv_: "img/inv-reidite-spike-in.png",
            Q$UwQ: "img/inv-reidite-spike-click.png",
            Vwoo0: "img/inv-reidite-wall-out.png",
            V_vWO: "img/inv-reidite-wall-in.png",
            wuwuw: "img/inv-reidite-wall-click.png",
            _ouWo: "img/day-reidite-wall.png",
            _vvwV: "img/night-reidite-wall.png",
            __$uo: "img/day-reidite-door.png",
            $ou0Q: "img/night-reidite-door.png",
            redspiked: "img/day-reidite-spike.png",
            redspiken: "img/night-reidite-spike.png",
            oovO_: "img/day-reidite-spike-door.png",
            Ovwv$: "img/night-reidite-spike-door.png",
            vQvou: "img/inv-reidite-pickaxe-out.png",
            Vo_OO: "img/inv-reidite-pickaxe-in.png",
            $QwVo: "img/inv-reidite-pickaxe-click.png",
            OwO_o: "img/day-reidite-pickaxe.png",
            Q0wvQ: "img/night-reidite-pickaxe.png",
            vUoO_: "img/inv-reidite-hammer-out.png",
            QUv$o: "img/inv-reidite-hammer-in.png",
            wvwu0: "img/inv-reidite-hammer-click.png",
            WVOov: "img/day-reidite-hammer.png",
            voUo_: "img/night-reidite-hammer.png",
            uOUUW: "img/day-watermelon1.png",
            uQ$WU: "img/night-watermelon1.png",
            _VQvW: "img/day-watermelon-dried1.png",
            uVW_$: "img/night-watermelon-dried1.png",
            o$WUv: "img/inv-watermelon-out.png",
            Vo_wU: "img/inv-watermelon-in.png",
            $OOQw: "img/inv-watermelon-click.png",
            wo_WQ: "img/day-boat.png",
            uwO_O: "img/night-boat.png",
            _VVVU: "img/day-boat-wave.png",
            _wUWw: "img/night-boat-wave.png",
            Qouo$: "img/inv-boat-out.png",
            wvWO_: "img/inv-boat-in.png",
            oWVwW: "img/inv-boat-click.png",
            uO$$V: "img/day-plane.png",
            QVoVu: "img/night-plane.png",
            v$vWQ: "img/inv-plane-out.png",
            vWVV0: "img/inv-plane-in.png",
            ow$_w: "img/inv-plane-click.png",
            V_uww: "img/day-sled.png",
            uVQ$0: "img/night-sled.png",
            vw_Wv: "img/day-sled-wave.png",
            OoUVo: "img/night-sled-wave.png",
            Vvw$u: "img/inv-sled-out.png",
            wUUww: "img/inv-sled-in.png",
            W_o$Q: "img/inv-sled-click.png",
            OVvVV: "img/day-pirate-hat.png",
            wUoWv: "img/night-pirate-hat.png",
            wuOov: "img/inv-pirate-hat-out.png",
            U0OuU: "img/inv-pirate-hat-in.png",
            Qv_00: "img/inv-pirate-hat-click.png",
            QOv_U: "img/day-penguin.png",
            WQwUV: "img/night-penguin.png",
            wOoQo: "img/hurt-penguin.png",
            Oo0: "img/inv-penguin-feather-click.png",
            $QV: "img/inv-hawk-feather-click.png",
            _0U_v: "img/day-boar1.png",
            O_$wQ: "img/day-boar1-tamed.png",
            uuOWw: "img/day-boar1-angry.png",
            v_w0U: "img/night-boar1.png",
            wQ_V_: "img/night-boar1-tamed.png",
            _W_VV: "img/night-boar1-angry.png",
            Qo$oW: "img/inv-mount-boar-out.png",
            UUuQ$: "img/inv-mount-boar-in.png",
            _uW$Q: "img/inv-mount-boar-click.png",
            VUvVO: "img/day-hurt-boar1.png",
            O_U: "img/boar1-step.png",
            $VowV: "img/day-saddle1.png",
            ou_OQ: "img/night-saddle1.png",
            $VQUW: "img/inv-saddle-out.png",
            WuQvo: "img/inv-saddle-in.png",
            u$OvU: "img/inv-saddle-click.png",
            uWUUv: "img/day-magic-wand0.png",
            UQo$_: "img/night-magic-wand0.png",
            oouV0: "img/day-light-wand1.png",
            wuvvu: "img/night-light-wand1.png",
            OU$OV: "img/inv-magic-wand0-out.png",
            V0Qw0: "img/inv-magic-wand0-in.png",
            o$OQ_: "img/inv-magic-wand0-click.png",
            QOQQo: "img/day-magic-wand1.png",
            UwOuQ: "img/night-magic-wand1.png",
            o$$Q$: "img/day-light-wand0.png",
            VsocketW: "img/night-light-wand0.png",
            _WQV$: "img/inv-magic-wand1-out.png",
            o_UwO: "img/inv-magic-wand1-in.png",
            QOw0U: "img/inv-magic-wand1-click.png",
            VoU0$: "img/day-firefly.png",
            wQoVv: "img/night-firefly.png",
            o$VQV: "img/hurt-firefly.png",
            $0Q$u: "img/inv-firefly-out.png",
            o_wVu: "img/inv-firefly-in.png",
            uovWV: "img/inv-firefly-click.png",
            $$u$U: "img/day-baby-dragon.png",
            OWOQ$: "img/night-baby-dragon.png",
            vvu_w: "img/day-baby-dragon-angry.png",
            W$V$V: "img/night-baby-dragon-angry.png",
            _$Vo$: "img/day-baby-dragon-tamed.png",
            ou_0Q: "img/night-baby-dragon-tamed.png",
            uOuQO: "img/day-wing-dragon-left-angry.png",
            woWQu: "img/night-dragon-wing-left-angry.png",
            $_OV0: "img/day-wing-dragon-right-angry.png",
            uvVUu: "img/night-dragon-wing-right-angry.png",
            U0_V0: "img/day-wing-dragon-left-tamed.png",
            QOv__: "img/night-dragon-wing-left-tamed.png",
            UUVv$: "img/day-wing-dragon-right-tamed.png",
            vQOvo: "img/night-wing-dragon-right-tamed.png",
            ouo0O: "img/day-wing-dragon-left.png",
            _0QVU: "img/night-dragon-wing-left.png",
            _vQW$: "img/day-wing-dragon-right.png",
            WvVUw: "img/night-wing-dragon-right.png",
            oV0: "img/hurt-baby-dragon.png",
            O$VwV: "img/hurt-baby-dragon-wing-left.png",
            vOv_W: "img/hurt-baby-dragon-wing-right.png",
            VUQ0u: "img/inv-baby-dragon-out.png",
            oOu$_: "img/inv-baby-dragon-in.png",
            wvwwv: "img/inv-baby-dragon-click.png",
            _wU_w: "img/day-baby-lava.png",
            W__UQ: "img/night-baby-lava.png",
            v_v_U: "img/day-baby-lava-angry.png",
            VwO$w: "img/night-baby-lava-angry.png",
            $VvuO: "img/day-baby-lava-tamed.png",
            O$Vo0: "img/night-baby-lava-tamed.png",
            _QVv$: "img/day-wing-lava-left-angry.png",
            u0wVo: "img/night-wing-lava-left-angry.png",
            WuVOO: "img/day-wing-lava-right-angry.png",
            OoWoo: "img/night-wing-lava-right-angry.png",
            V_VV0: "img/day-wing-lava-left-tamed.png",
            Q$vu$: "img/night-wing-lava-left-tamed.png",
            wQWwW: "img/day-wing-lava-right-tamed.png",
            WOO0_: "img/night-wing-lava-right-tamed.png",
            ouUv0: "img/day-wing-lava-left.png",
            Vw_u$: "img/night-wing-lava-left.png",
            oWWWO: "img/day-wing-lava-right.png",
            W0oVo: "img/night-wing-lava-right.png",
            Uw$: "img/hurt-baby-lava.png",
            $_uQ0: "img/hurt-baby-lava-wing-left.png",
            O0v: "img/hurt-baby-lava-wing-right.png",
            _QQwW: "img/inv-baby-lava-out.png",
            UOw0w: "img/inv-baby-lava-in.png",
            w_QoO: "img/inv-baby-lava-click.png",
            dbird: "img/day-falcon.png",
            nbird: "img/night-falcon.png",
            dbirdA: "img/day-falcon-angry.png",
            nbirdA: "img/night-falcon-angry.png",
            daybirdG: "img/day-falcon-ground.png",
            nbirdg: "img/night-falcon-ground.png",
            OuooU: "img/day-falcon-ground-angry.png",
            vuO_o: "img/night-falcon-ground-angry.png",
            birdWingLeftDay: "img/day-falcon-wings-left.png",
            birdWingLeftNight: "img/night-falcon-wings-left.png",
            birdWingRightDay: "img/day-falcon-wings-right.png",
            birdWingRightNight: "img/night-falcon-wings-right.png",
            ovo$u: "img/day-falcon-angry-wings-left.png",
            vU_Ow: "img/night-falcon-angry-wings-left.png",
            U$O$U: "img/day-falcon-angry-wings-right.png",
            UOOVo: "img/night-falcon-angry-wings-right.png",
            Vvwww: "img/day-falcon-wings-left-tamed.png",
            $uvuQ: "img/night-falcon-wings-left-tamed.png",
            W_wW_: "img/day-falcon-wings-right-tamed.png",
            O$Ouu: "img/night-falcon-wings-right-tamed.png",
            $0_VV: "img/day-falcon-tamed.png",
            uVQVV: "img/night-falcon-tamed.png",
            v0o: "img/hurt-falcon-ground.png",
            wVv: "img/hurt-falcon.png",
            v0O: "img/hurt-falcon-wings-left.png",
            _o$: "img/hurt-falcon-wings-right.png",
            wOo0W: "img/inv-falcon-out.png",
            $$O_v: "img/inv-falcon-in.png",
            _Ow_V: "img/inv-falcon-click.png",
            O__Uw: "img/day-crab-boss.png",
            _uo00: "img/night-crab-boss.png",
            Q0UV_: "img/day-crab-boss-angry.png",
            u_OQ0: "img/night-crab-boss-angry.png",
            o$O_w: "img/day-crab-boss-tamed.png",
            Q0V_O: "img/night-crab-boss-tamed.png",
            wQ_QW: "img/day-crab-boss-claw-left-attack.png",
            Vvo_U: "img/night-crab-boss-claw-left-attack.png",
            $_UOU: "img/day-crab-boss-claw-right-attack.png",
            wUWVO: "img/night-crab-boss-claw-right-attack.png",
            $vQoQ: "img/day-crab-boss-claw-left-tamed.png",
            _WQw$: "img/night-crab-boss-claw-left-tamed.png",
            V0_0o: "img/day-crab-boss-claw-right-tamed.png",
            V$vOo: "img/night-crab-boss-claw-right-tamed.png",
            u_wuV: "img/day-crab-boss-claw-left.png",
            WWVQo: "img/night-crab-boss-claw-left.png",
            vU$vQ: "img/day-crab-boss-claw-right.png",
            VUuOQ: "img/night-crab-boss-claw-right.png",
            wo_QW: "img/hurt-crab-boss.png",
            voUV_: "img/hurt-crab-boss-claw-left.png",
            v$Q_Q: "img/hurt-crab-boss-claw-right.png",
            _wVWu: "img/heal-crab-boss.png",
            $QuWU: "img/heal-crab-boss-claw-left.png",
            V_Q$V: "img/heal-crab-boss-claw-right.png",
            U_$: "img/crab-step.png",
            O$_Oo: "img/inv-crab-boss-out.png",
            w$Q_V: "img/inv-crab-boss-in.png",
            WO$u0: "img/inv-crab-boss-click.png",
            QuVuO: "img/day-cactus10.png",
            UwU_V: "img/night-cactus10.png",
            W0VvW: "img/inv-cactus-out.png",
            _o_OU: "img/inv-cactus-in.png",
            V0$Wu: "img/inv-cactus-click.png",
            oWovW: "img/day-scorpion.png",
            voWow: "img/night-scorpion.png",
            V$W0o: "img/day-scorpion-hand-left.png",
            vOUwU: "img/night-scorpion-hand-left.png",
            VQO$v: "img/day-scorpion-hand-right.png",
            wQo0w: "img/night-scorpion-hand-right.png",
            $wvuw: "img/hurt-scorpion.png",
            o0V_0: "img/hurt-scorpion-hand-left.png",
            w0$_o: "img/hurt-scorpion-hand-right.png",
            vovWo: "img/day-vulture.png",
            u$w0u: "img/night-vulture.png",
            oVOWv: "img/day-vulture-angry.png",
            VVW$w: "img/night-vulture-angry.png",
            voUOU: "img/day-vulture-ground.png",
            VVUQ$: "img/night-vulture-ground.png",
            woowU: "img/day-vulture-ground-angry.png",
            V0O0_: "img/night-vulture-ground-angry.png",
            u$WWu: "img/day-vulture-wings-left.png",
            OuOQO: "img/night-vulture-wings-left.png",
            VUvWo: "img/day-vulture-wings-right.png",
            W_vwW: "img/night-vulture-wings-right.png",
            WQ_V0: "img/day-vulture-angry-wings-left.png",
            QOU0v: "img/night-vulture-angry-wings-left.png",
            w_$uO: "img/day-vulture-angry-wings-right.png",
            uUwwV: "img/night-vulture-angry-wings-right.png",
            vUoQw: "img/day-vulture-wings-left-tamed.png",
            QwvvW: "img/night-vulture-wings-left-tamed.png",
            VU_WQ: "img/day-vulture-wings-right-tamed.png",
            oovV$: "img/night-vulture-wings-right-tamed.png",
            WQOVu: "img/day-vulture-tamed.png",
            QW$Q$: "img/night-vulture-tamed.png",
            $0Q: "img/hurt-vulture-ground.png",
            QU0: "img/hurt-vulture.png",
            wVU: "img/hurt-vulture-wings-left.png",
            V0V: "img/hurt-vulture-wings-right.png",
            UoQoW: "img/day-aloe-vera.png",
            w0o$V: "img/night-aloe-vera.png",
            V0OOw: "img/inv-aloe-vera-out.png",
            WQO0u: "img/inv-aloe-vera-in.png",
            VWQuw: "img/inv-aloe-vera-click.png",
            V$U_u: "img/day-aloe-vera-grown.png",
            VUoOQ: "img/night-aloe-vera-grown.png",
            wu$U_: "img/day-aloe-vera-dried.png",
            wu$_0: "img/night-aloe-vera-dried.png",
            QUoU_: "img/day-turban1.png",
            u0wow: "img/night-turban1.png",
            vOUQ_: "img/day-turban2.png",
            ov$Qo: "img/night-turban2.png",
            VUO0U: "img/inv-turban2-out.png",
            _Q$QV: "img/inv-turban2-in.png",
            _$wwV: "img/inv-turban2-click.png",
            V$QQ_: "img/inv-turban1-out.png",
            uOOOV: "img/inv-turban1-in.png",
            OvvVU: "img/inv-turban1-click.png",
            vWWO$: "img/day-pitchfork2.png",
            $$wo0: "img/night-pitchfork2.png",
            O$QvW: "img/inv-pitchfork2-out.png",
            QwoQo: "img/inv-pitchfork2-in.png",
            o_vvU: "img/inv-pitchfork2-click.png",
            vV$vW: "img/inv-gold-fork-click.png",
            Wu$__: "img/inv-pilot-glasses-click.png",
            UWVwQ: "img/day-pilot-helmet.png",
            O$VvV: "img/night-pilot-helmet.png",
            vWQU$: "img/inv-pilot-helmet-out.png",
            Qu$_U: "img/inv-pilot-helmet-in.png",
            U$OvQ: "img/inv-pilot-helmet-click.png",
            $VOVu: "img/day-sandworm0.png",
            _0UuQ: "img/day-sandworm1.png",
            QVUWv: "img/day-sandworm2.png",
            _oVVo: "img/night-sandworm0.png",
            uV_U_: "img/night-sandworm1.png",
            $v_uw: "img/night-sandworm2.png",
            U0_U0: "img/hurt-sandworm0.png",
            wowQu: "img/hurt-sandworm1.png",
            QOW_0: "img/hurt-sandworm2.png",
            vw0: "img/inv-vulture-feather-click.png",
            VOuv_: "img/day-emerald0.png",
            UuU_$: "img/night-emerald0.png",
            _ow0U: "img/day-emerald1.png",
            oVUUW: "img/night-emerald1.png",
            v$wv$: "img/day-emerald2.png",
            $v$_V: "img/night-emerald2.png",
            Qv0: "img/inv-emerald-click.png",
            _WvQW: "img/inv-sworm-juice-out.png",
            wO_uU: "img/inv-sworm-juice-in.png",
            v$$WV: "img/inv-sworm-juice-click.png",
            uuvuU: "img/day-point-machine.png",
            $0uwo: "img/night-point-machine.png",
            UwVw_: "img/day-point-machine-hole.png",
            WovVw: "img/night-point-machine-hole.png",
            uOvvQ: "img/day-point-machine-ground.png",
            $wQvu: "img/night-point-machine-ground.png",
            U0W$V: "img/day-point-machine-rotate.png",
            $$OuW: "img/night-point-machine-rotate.png",
            VUUVu: "img/inv-point-machine-out.png",
            Q0VV_: "img/inv-point-machine-in.png",
            OVu$$: "img/inv-point-machine-click.png",
            UQQ$o: "img/day-extractor-machine0-stone.png",
            ooUOu: "img/night-extractor-machine0-stone.png",
            u_o_Q: "img/day-extractor-machine-stone.png",
            $WUuU: "img/night-extractor-machine-stone.png",
            WQoVQ: "img/inv-extractor-machine-stone-out.png",
            $OuUu: "img/inv-extractor-machine-stone-in.png",
            vWOW0: "img/inv-extractor-machine-stone-click.png",
            WWvvW: "img/day-extractor-machine0-gold.png",
            QVowo: "img/night-extractor-machine0-gold.png",
            QVQ$Q: "img/day-extractor-machine-gold.png",
            Vuvo0: "img/night-extractor-machine-gold.png",
            VOuUO: "img/inv-extractor-machine-gold-out.png",
            _oO$W: "img/inv-extractor-machine-gold-in.png",
            WQow_: "img/inv-extractor-machine-gold-click.png",
            wovww: "img/day-extractor-machine0-diamond.png",
            WuWvW: "img/night-extractor-machine0-diamond.png",
            QuQ$O: "img/day-extractor-machine-diamond.png",
            UvWvV: "img/night-extractor-machine-diamond.png",
            WOvOV: "img/inv-extractor-machine-diamond-out.png",
            wVuQ_: "img/inv-extractor-machine-diamond-in.png",
            o0$Qo: "img/inv-extractor-machine-diamond-click.png",
            _Ww$v: "img/day-extractor-machine0-amethyst.png",
            o_UuV: "img/night-extractor-machine0-amethyst.png",
            oQO0v: "img/day-extractor-machine-amethyst.png",
            OwUww: "img/night-extractor-machine-amethyst.png",
            oUOo_: "img/inv-extractor-machine-amethyst-out.png",
            UvUoO: "img/inv-extractor-machine-amethyst-in.png",
            V_$W0: "img/inv-extractor-machine-amethyst-click.png",
            V0uvu: "img/day-extractor-machine0-reidite.png",
            QQOOw: "img/night-extractor-machine0-reidite.png",
            QQQUO: "img/day-extractor-machine-reidite.png",
            $V_Wv: "img/night-extractor-machine-reidite.png",
            $wO$Q: "img/inv-extractor-machine-reidite-out.png",
            WWvoO: "img/inv-extractor-machine-reidite-in.png",
            $Q$W$: "img/inv-extractor-machine-reidite-click.png",
            oVOQQ: "img/extractor-cases.png",
            U_wWo: "img/day-golden-hen.png",
            wQw__: "img/night-golden-hen.png",
            $OO_w: "img/day-golden-chicken.png",
            vuv_Q: "img/night-golden-chicken.png",
            u0o__: "img/hurt-golden-hen.png",
            uuovO: "img/hurt-golden-chicken.png",
            Uw$uo: "img/logo-interface.png",
            QV$Vv: "img/forest-mode-hover.png",
            voUU$: "img/normal-mode-hover.png",
            u_Ov0: "img/vampire-mode-hover.png",
            QQVuO: "img/zombie-mode-hover.png",
            uVw$Q: "img/community-mode-hover2.png",
            uU_0v: "img/experimental-mode-hover.png",
            WVV$v: "img/zombie-mode-out.png",
            QOWwO: "img/zombie-mode-in.png",
            Wv$_V: "img/zombie-mode-click.png",
            _0_VO: "img/vampire-mode-out.png",
            OVOoo: "img/vampire-mode-in.png",
            WOVQV: "img/vampire-mode-click.png",
            u0vwU: "img/normal-mode-out.png",
            UvQVU: "img/normal-mode-in.png",
            VV_$$: "img/normal-mode-click.png",
            uQ_vu: "img/forest-mode-out.png",
            V$$uU: "img/forest-mode-in.png",
            ouUwv: "img/forest-mode-click.png",
            owQOo: "img/community-mode-out.png",
            _wWUo: "img/community-mode-in.png",
            vuwU0: "img/community-mode-click.png",
            uVW$v: "img/experimental-modes-out.png",
            UOvQw: "img/experimental-modes-in.png",
            _OWUW: "img/experimental-modes-click.png",
            UVwWu: "img/youtube-button-out.png",
            WQuvV: "img/youtube-button-in.png",
            oOuUw: "img/youtube-button-click.png",
            v_WvU: "img/wiki-button-out.png",
            WvQW$: "img/wiki-button-in.png",
            Uw$vQ: "img/wiki-button-click.png",
            WVOV0: "img/twitter-button-out.png",
            O0VoV: "img/twitter-button-in.png",
            VOO0o: "img/twitter-button-click.png",
            o0_$O: "img/facebook-button-out.png",
            voW0v: "img/facebook-button-in.png",
            VvW$u: "img/facebook-button-click.png",
            VWoQW: "img/reddit-button-out.png",
            v_vwv: "img/reddit-button-in.png",
            uvoVQ: "img/reddit-button-click.png",
            oowV_: "img/discord-button-out.png",
            UvOW0: "img/discord-button-in.png",
            vvW$_: "img/discord-button-click.png",
            $UWoo: "img/terminal-button-out.png",
            VVOuv: "img/terminal-button-in.png",
            $Wuuw: "img/terminal-button-click.png",
            WWV_w: "img/restart-out.png",
            UUWU_: "img/restart-in.png",
            V0Vv0: "img/restart-click.png",
            uUuu_: "img/guide-out.png",
            wUvQ_: "img/guide-in.png",
            W0_ou: "img/guide-click.png",
            Q_Wu0: "img/copy-paste-out.png",
            UOu0U: "img/copy-paste-in.png",
            VWu0w: "img/copy-paste-click.png",
            wv_oV: "img/link-buttons-bg.png",
            w0wwv: "img/changelog-box2.png",
            Wv$$_: "img/changelog_29.png",
            U0UVw: "img/banner-devast.png",
            $WvOu: "img/profile-button-out.png",
            VO_QU: "img/profile-button-in.png",
            oWOow: "img/profile-button-click.png",
            uw$OV: "img/login-button-out.png",
            wWvU_: "img/login-button-in.png",
            U0uvQ: "img/login-button-click.png",
            wu_W0: "img/login-google-out.png",
            vVQ00: "img/login-google-in.png",
            oVuuQ: "img/login-google-click.png",
            WuWOv: "img/login-facebook-out.png",
            wUUuU: "img/login-facebook-in.png",
            VuQU$: "img/login-facebook-click.png",
            o$V$U: "img/account-box.png",
            oVwvO: "img/account-under-maintenance.png",
            VQuu$: "img/close-button-account-out.png",
            _oW0w: "img/close-button-account-in.png",
            Q$UO0: "img/close-button-account-click.png",
            UwUVU: "img/play-button-out.png",
            w0vVw: "img/play-button-in.png",
            wWWU$: "img/play-button-click.png",
            _0uWQ: "img/modify-name-out.png",
            uVowo: "img/modify-name-in.png",
            ouQ_W: "img/modify-name-click.png",
            O_UUW: "img/yes-button-out.png",
            QwWou: "img/yes-button-in.png",
            VWw_U: "img/yes-button-click.png",
            U$$uV: "img/yes-300-button-out.png",
            __U$o: "img/yes-300-button-in.png",
            Ow$UO: "img/yes-300-button-click.png",
            VWQ_W: "img/no-button-out.png",
            Uvv0o: "img/no-button-in.png",
            UVQQ0: "img/no-button-click.png",
            wouQv: "img/no-thanks-button-out.png",
            UW$_$: "img/no-thanks-button-in.png",
            vov_u: "img/no-thanks-button-click.png",
            $O$uv: "img/shop-button-out.png",
            VQUuO: "img/shop-button-in.png",
            wOVUv: "img/shop-button-click.png",
            QuO$w: "img/logout-out.png",
            QU_Uv: "img/logout-in.png",
            _0o$$: "img/logout-click.png",
            Uvoov: "img/terms-button-out.png",
            wvUQO: "img/terms-button-in.png",
            uwOuV: "img/terms-button-click.png",
            _O$wU: "img/tutorial-icon.png",
            OWw_V: "img/skins-icon.png",
            OQOUU: "img/shop-icon.png",
            VOow0: "img/paint-icon.png",
            _vvo0: "img/leaderboard-icon.png",
            wvv_o: "img/start-icon.png",
            uwU$w: "img/profile-icon.png",
            W$$_v: "img/server-access-icon2.png",
            OWw: "img/button-homepage-bg-out.png",
            v$$: "img/button-homepage-bg-in.png",
            uW$: "img/button-homepage-bg-click.png",
            vuwww: "img/button-bottom-homepage-bg-out.png",
            _vOu_: "img/button-bottom-homepage-bg-in.png",
            w$wW$: "img/button-bottom-homepage-bg-click.png",
            $VWwV: "img/lvl-player.png",
            uvwoO: "img/avatar-player.png",
            uQo0u: "img/avatar-player1.png",
            $Q_vw: "img/avatar-player2.png",
            wVw0_: "img/avatar-player3.png",
            ouUw_: "img/avatar-player4.png",
            u0_ov: "img/avatar-player5.png",
            UWVoQ: "img/avatar-player6.png",
            _VOVU: "img/avatar-player7.png",
            WUU_0: "img/avatar-player8.png",
            VOU_0: "img/avatar-player9.png",
            u$$w_: "img/avatar-player10.png",
            UooU_: "img/avatar-player11.png",
            _vUuU: "img/avatar-player12.png",
            QUuwv: "img/avatar-player13.png",
            $oU$Q: "img/avatar-player14.png",
            UwQ_V: "img/avatar-player14.png",
            VVQO_: "img/avatar-player14.png",
            uuUW_: "img/avatar-player14.png",
            Wu_U_: "img/golden-bread.png",
            v0VVU: "img/buy-bread-out.png",
            _QvOv: "img/buy-bread-in.png",
            _O$vO: "img/buy-bread-click.png",
            UuoQu: "img/gauge.png",
            WUwuO: "img/season-4-out.png",
            UUWwo: "img/season-4-in.png",
            QOV$_: "img/season-4-click.png",
            VWVVw: "img/season4-box.png",
            wwQVv: "img/season-5-out.png",
            uuwQv: "img/season-5-in.png",
            $WOoO: "img/season-5-click.png",
            WOOWV: "img/season5-box.png",
            QW__u: "img/profile2-box.png",
            $QO$V: "img/skins-box.png",
            vuwWw: "img/shop-box.png",
            oO_0v: "img/private-server-box.png",
            QQVQU: "img/location-box.png",
            wQU0V: "img/server-duration-box.png",
            VowvO: "img/tutorial-box.png",
            UOWUw: "img/leaderboard1-box.png",
            u0uuV: "img/buy-breads-box.png",
            _$ouw: "img/bag-box.png",
            WwwvQ: "img/deadbox-box.png",
            Qou_v: "img/book-box.png",
            owVu$: "img/accessories-box.png",
            WuOvO: "img/customskin-box.png",
            Uuvuw: "img/bag-lasts.png",
            Uvo0u: "img/server-lasts.png",
            wvWQv: "img/server-access-box2.png",
            UQ$OO: "img/lootbox-box.png",
            VUwQW: "img/change-nickname0.png",
            vQwWV: "img/change-nickname1.png",
            Wo$O$: "img/cheating-box.png",
            UQUwV: "img/daily-quest-box.png",
            UWuVQ: "img/daily-5-bread.png",
            _WQWV: "img/daily-10-bread.png",
            Qou_$: "img/daily-valid.png",
            _u_U_: "img/normal-profile-out.png",
            OQuV_: "img/normal-profile-in.png",
            V$wVo: "img/normal-profile-click.png",
            w$O$v: "img/forest-profile-out.png",
            QVQQv: "img/forest-profile-in.png",
            Ovu$0: "img/forest-profile-click.png",
            u_o0V: "img/zombie-profile-out.png",
            WVw_V: "img/zombie-profile-in.png",
            _QOvw: "img/zombie-profile-click.png",
            W$vUo: "img/vampire-profile-out.png",
            uwo0O: "img/vampire-profile-in.png",
            QvVow: "img/vampire-profile-click.png",
            wWQUV: "img/total-profile-out.png",
            w$Quu: "img/total-profile-in.png",
            QwOuV: "img/total-profile-click.png",
            W0$QV: "img/season1-profile-out.png",
            OvVvO: "img/season1-profile-in.png",
            VuQVu: "img/season1-profile-click.png",
            QoV$Q: "img/season2-profile-out.png",
            v$_v0: "img/season2-profile-in.png",
            oVQu_: "img/season2-profile-click.png",
            OQWuO: "img/season3-profile-out.png",
            oQV$V: "img/season3-profile-in.png",
            $Qoo0: "img/season3-profile-click.png",
            wUsocket: "img/season4-profile-out.png",
            uwUov: "img/season4-profile-in.png",
            ouQOV: "img/season4-profile-click.png",
            OQOuO: "img/season5-profile-out.png",
            WWQoV: "img/season5-profile-in.png",
            uUowW: "img/season5-profile-click.png",
            v0OV_: "img/locked-skin-alert.png",
            vuOOu: "img/locked-custom-alert.png",
            wWuou: "img/bg-red-locked.png",
            $0u_W: "img/skin-button-out.png",
            __oVu: "img/skin-button-in.png",
            _ov$u: "img/skin-button-click.png",
            U0wV0: "img/accessory-button-out.png",
            $ouoo: "img/accessory-button-in.png",
            V0Qw$: "img/accessory-button-click.png",
            Qo$WQ: "img/bag-button-out.png",
            $VV0$: "img/bag-button-in.png",
            oWvvw: "img/bag-button-click.png",
            w0vO_: "img/book-button-out.png",
            w0UuW: "img/book-button-in.png",
            QwQUW: "img/book-button-click.png",
            U$ouw: "img/deadbox-button-out.png",
            WQuoo: "img/deadbox-button-in.png",
            V$$VU: "img/deadbox-button-click.png",
            U0UQw: "img/loot-button-out.png",
            _vWvU: "img/loot-button-in.png",
            VouW0: "img/loot-button-click.png",
            V$$Q$: "img/free-item-out.png",
            OvQW_: "img/free-item-in.png",
            VOv_Q: "img/free-item-click.png",
            vw$: "img/wood-item-out.png",
            $$U: "img/wood-item-in.png",
            _$U: "img/wood-item-click.png",
            uVWV_: "img/stone-item.png",
            _0Vvw: "img/stone-item-in.png",
            W_uv_: "img/stone-item-click.png",
            $oovU: "img/gold-item.png",
            WUw0O: "img/gold-item-in.png",
            VV$QV: "img/gold-item-click.png",
            uQuoQ: "img/diamond-item.png",
            uWvww: "img/diamond-item-in.png",
            _Qw_o: "img/diamond-item-click.png",
            o0OoQ: "img/amethyst-item.png",
            VV$O0: "img/amethyst-item-in.png",
            wo_O_: "img/amethyst-item-click.png",
            _v_wu: "img/reidite-item.png",
            $UwuV: "img/reidite-item-in.png",
            UV$$o: "img/reidite-item-click.png",
            UQVw$: "img/special-item-out.png",
            _vW$v: "img/special-item-in.png",
            wOOvQ: "img/special-item-click.png",
            WoO_w: "img/level-item-out.png",
            wQoW$: "img/level-item-in.png",
            v_Vou: "img/level-item-click.png",
            vuv: "img/skin-previous-out.png",
            u$W: "img/skin-previous-in.png",
            VW$: "img/skin-previous-click.png",
            OV$: "img/skin-next-out.png",
            www: "img/skin-next-in.png",
            O_0: "img/skin-next-click.png",
            $wQ: "img/back-button-out.png",
            UV0: "img/back-button-in.png",
            ovv: "img/back-button-click.png",
            woUVv: "img/get-more-button-out.png",
            w$WU$: "img/get-more-button-in.png",
            UWQQU: "img/get-more-button-click.png",
            $ovVu: "img/currency1-out.png",
            V_OUu: "img/currency1-in.png",
            vWuoQ: "img/currency1-click.png",
            UQQou: "img/currency2-out.png",
            wWvoQ: "img/currency2-in.png",
            VvQ_v: "img/currency2-click.png",
            uOWvV: "img/currency3-out.png",
            _v$Vw: "img/currency3-in.png",
            uUW$v: "img/currency3-click.png",
            WVQ_$: "img/currency4-out.png",
            WV$O$: "img/currency4-in.png",
            _$$QW: "img/currency4-click.png",
            _WvO0: "img/currency5-out.png",
            wwO$w: "img/currency5-in.png",
            wuWwu: "img/currency5-click.png",
            Qo_ov: "img/price1-out.png",
            wU_0W: "img/price1-in.png",
            _UQuV: "img/price1-click.png",
            $UUV$: "img/price2-out.png",
            _WW0w: "img/price2-in.png",
            UwVUW: "img/price2-click.png",
            O$W$w: "img/price3-out.png",
            WvU_v: "img/price3-in.png",
            wuQ_$: "img/price3-click.png",
            V0$O_: "img/price4-out.png",
            __Q0U: "img/price4-in.png",
            o0_UU: "img/price4-click.png",
            UQu0$: "img/price5-out.png",
            ovOOO: "img/price5-in.png",
            uoQw0: "img/price5-click.png",
            VuQo$: "img/buy-private-server-out.png",
            u_vVW: "img/buy-private-server-in.png",
            QQw$V: "img/buy-private-server-click.png",
            VOoV$: "img/atlanta-out.png",
            $_V$Q: "img/atlanta-in.png",
            vvOUo: "img/atlanta-click.png",
            v0OUW: "img/dallas-out.png",
            QvOoQ: "img/dallas-in.png",
            $OU0$: "img/dallas-click.png",
            W_Ouv: "img/fremont-out.png",
            $QQWw: "img/fremont-in.png",
            OvQwv: "img/fremont-click.png",
            u_w00: "img/newark-out.png",
            V_uwW: "img/newark-in.png",
            uWOvQ: "img/newark-click.png",
            wOV__: "img/toronto-out.png",
            V_QVo: "img/toronto-in.png",
            $_uwO: "img/toronto-click.png",
            wwV_v: "img/singapore-out.png",
            U0wUo: "img/singapore-in.png",
            VU$WU: "img/singapore-click.png",
            UwU$Q: "img/frankfurt-out.png",
            $V_Qv: "img/frankfurt-in.png",
            _W$_w: "img/frankfurt-click.png",
            U_Ou$: "img/london-out.png",
            v0WU$: "img/london-in.png",
            O$Q$U: "img/london-click.png",
            vWW_W: "img/mumbai-out.png",
            OwQuQ: "img/mumbai-in.png",
            v0voO: "img/mumbai-click.png",
            uOV_0: "img/tokyo-out.png",
            u$ovo: "img/tokyo-in.png",
            QoWVv: "img/tokyo-click.png",
            Qv$wv: "img/yes-location-out.png",
            uowu0: "img/yes-location-in.png",
            VUoQ$: "img/yes-location-click.png",
            $QQ0U: "img/3days-out.png",
            QvQ0v: "img/3days-in.png",
            WVQ_v: "img/3days-click.png",
            w$$$$: "img/7days-out.png",
            UvvUo: "img/7days-in.png",
            O_wvw: "img/7days-click.png",
            w0V$u: "img/30days-out.png",
            oU_ou: "img/30days-in.png",
            u_u0u: "img/30days-click.png",
            U0_W$: "img/90days-out.png",
            WVQ$U: "img/90days-in.png",
            _o$W0: "img/90days-click.png",
            VOWQQ: "img/spin1.png",
            VQwOo: "img/spin2.png",
            wWWWO: "img/spin3.png",
            OUowv: "img/spin4.png",
            _$oVo: "img/spin5.png",
            __UOo: "img/spin6.png",
            _uOo_: "img/arrow-spin.png",
            VwQWv: "img/spin-button-1-out.png",
            wOu0u: "img/spin-button-1-in.png",
            VQoOo: "img/spin-button-1-click.png",
            wvvoU: "img/spin-button-2-out.png",
            _uowu: "img/spin-button-2-in.png",
            oQVvO: "img/spin-button-2-click.png",
            V$O0O: "img/spin-button-3-out.png",
            __OuO: "img/spin-button-3-in.png",
            vowUU: "img/spin-button-3-click.png",
            WUwWO: "img/spin-button-4-out.png",
            U$Q_u: "img/spin-button-4-in.png",
            wUwvu: "img/spin-button-4-click.png",
            $WVUo: "img/spin-button-5-out.png",
            _W_Ow: "img/spin-button-5-in.png",
            ov$UV: "img/spin-button-5-click.png",
            QvOo0: "img/spin-light.png",
            o_oVu: "img/tuto-wiki-out.png",
            Vuo0_: "img/tuto-wiki-in.png",
            uoUvO: "img/tuto-wiki-click.png",
            UVwVU: "img/tuto-previous-out.png",
            OWOv$: "img/tuto-previous-in.png",
            UUWv0: "img/tuto-previous-click.png",
            OOuVW: "img/tuto-next-out.png",
            nbirdA: "img/tuto-next-in.png",
            $o$Vu: "img/tuto-next-click.png",
            oO$Uo: "img/time-leaderboard-out.png",
            uWU_Q: "img/time-leaderboard-in.png",
            U0UWU: "img/time-leaderboard-click.png",
            wOWvQ: "img/score-leaderboard-out.png",
            uWWQv: "img/score-leaderboard-in.png",
            OQWo$: "img/score-leaderboard-click.png",
            OVQ_0: "img/lvl-leaderboard-out.png",
            wQQQQ: "img/lvl-leaderboard-in.png",
            VWvWu: "img/lvl-leaderboard-click.png",
            QuOUU: "img/kill-leaderboard-out.png",
            u_$oV: "img/kill-leaderboard-in.png",
            VVWwO: "img/kill-leaderboard-click.png",
            u$$OV: "img/all-leaderboard-out.png",
            VVovV: "img/all-leaderboard-in.png",
            WwVVW: "img/all-leaderboard-click.png",
            Q0_$V: "img/today-leaderboard-out.png",
            ovu$U: "img/today-leaderboard-in.png",
            W0Wow: "img/today-leaderboard-click.png",
            o_O_U: "img/week-leaderboard-out.png",
            $$OWW: "img/week-leaderboard-in.png",
            ovoo$: "img/week-leaderboard-click.png",
            U$oOv: "img/season1-out.png",
            QVwuW: "img/season1-in.png",
            wuo$w: "img/season1-click.png",
            v_w__: "img/season2--out.png",
            VOWv$: "img/season2--in.png",
            wwQvV: "img/season2--click.png",
            Qu_wO: "img/season3-out.png",
            WQQWU: "img/season3-in.png",
            QovQ_: "img/season3-click.png",
            _Q__o: "img/season4-out.png",
            $_uw$: "img/season4-in.png",
            UVvVW: "img/season4-click.png",
            Q$wOW: "img/season5-out.png",
            uOwvU: "img/season5-in.png",
            QoWvv: "img/season5-click.png",
            $U_UO: "img/total-lead-out.png",
            UouQu: "img/total-lead-in.png",
            wQUOV: "img/total-lead-click.png",
            OouvQ: "img/normal-lead-out.png",
            uVQu0: "img/normal-lead-in.png",
            VoW_0: "img/normal-lead-click.png",
            u_Ov_: "img/forest-lead-out.png",
            W$VUU: "img/forest-lead-in.png",
            Wuwu$: "img/forest-lead-click.png",
            Uuv_o: "img/vampire-lead-out.png",
            OVUuU: "img/vampire-lead-in.png",
            UUQQo: "img/vampire-lead-click.png",
            U_wUo: "img/zombie-lead-out.png",
            WQ_OQ: "img/zombie-lead-in.png",
            _UvQV: "img/zombie-lead-click.png",
            $U$$W: "img/day-level5.png",
            $WOuw: "img/night-level5.png",
            QvVU0: "img/day-level10.png",
            wQvOQ: "img/night-level10.png",
            ovwV_: "img/day-level15.png",
            ovWvU: "img/night-level15.png",
            $$vVV: "img/day-level20.png",
            v_uwO: "img/night-level20.png",
            vQQUQ: "img/day-level25.png",
            o_owo: "img/night-level25.png",
            U$$v_: "img/day-level30.png",
            vuvWv: "img/night-level30.png",
            wVVQu: "img/day-level35.png",
            u0UV$: "img/night-level35.png",
            QOwvU: "img/day-level40.png",
            vUoQv: "img/night-level40.png",
            UUQQV: "img/day-level45.png",
            v0QoW: "img/night-level45.png",
            $WWo$: "img/day-level50.png",
            $uV_Q: "img/night-level50.png",
            _0OOw: "img/day-level55.png",
            UvOU0: "img/night-level55.png",
            ooO_O: "img/day-level60.png",
            _0OWO: "img/night-level60.png",
            uuWOQ: "img/day-skin-devast0.png",
            vwVVw: "img/night-skin-devast0.png",
            VowVO: "img/day-hand-devaster.png",
            WUw00: "img/night-hand-devaster.png",
            VVUW$: "img/day-skin-star0.png",
            VVQvu: "img/night-skin-star0.png",
            $$_UO: "img/day-hand-star0.png",
            uwOWu: "img/night-hand-star0.png",
            WWWoV: "img/day-vampire.png",
            Q__wV: "img/night-vampire.png",
            wWVW$: "img/day-hand-vampire.png",
            w$_wU: "img/night-hand-vampire.png",
            Q__0v: "img/day-zombie.png",
            woQw0: "img/night-zombie.png",
            v_QUO: "img/day-hand-zombie.png",
            _o$ou: "img/night-hand-zombie.png",
            QWQWu: "img/day-skin113.png",
            vW_0o: "img/night-skin113.png",
            OoWWu: "img/day-hand-skin113.png",
            WU$WV: "img/night-hand-skin113.png",
            UO_wW: "img/day-skin0.png",
            UuoWW: "img/night-skin0.png",
            UO_OQ: "img/day-skin1.png",
            QUV_0: "img/night-skin1.png",
            _0$$w: "img/day-skin2.png",
            Ousocket: "img/night-skin2.png",
            OuWOu: "img/day-skin3.png",
            Uww0w: "img/night-skin3.png",
            $Wwuw: "img/day-skin4.png",
            voOUO: "img/night-skin4.png",
            vuWOw: "img/day-skin5.png",
            _W_wW: "img/night-skin5.png",
            Vvw__: "img/day-skin6.png",
            V0oU$: "img/night-skin6.png",
            w0oV$: "img/day-skin7.png",
            $O_uU: "img/night-skin7.png",
            Q_VoO: "img/day-skin8.png",
            wovU_: "img/night-skin8.png",
            O_VwV: "img/day-skin9.png",
            $Ww0U: "img/night-skin9.png",
            $OUQ0: "img/day-skin10.png",
            Q_VQQ: "img/night-skin10.png",
            _uouQ: "img/day-skin11.png",
            Owv0v: "img/night-skin11.png",
            $o_uw: "img/day-skin12.png",
            QWwWO: "img/night-skin12.png",
            OU_ow: "img/day-skin13.png",
            U0Q_O: "img/night-skin13.png",
            wVVOQ: "img/day-skin14.png",
            WOO0w: "img/night-skin14.png",
            o$ou$: "img/day-skin15.png",
            uvQo$: "img/night-skin15.png",
            oWQUV: "img/day-skin16.png",
            _UQvV: "img/night-skin16.png",
            uVw$_: "img/day-skin17.png",
            OU$_V: "img/night-skin17.png",
            _O$vw: "img/day-skin18.png",
            wuOU$: "img/night-skin18.png",
            o$QQ_: "img/day-skin19.png",
            Wo_oo: "img/night-skin19.png",
            QQQOW: "img/day-skin20.png",
            OooVU: "img/night-skin20.png",
            v$$Ou: "img/day-skin21.png",
            o0W0Q: "img/night-skin21.png",
            wvUUU: "img/day-skin22.png",
            uVOuV: "img/night-skin22.png",
            V$w0v: "img/day-skin23.png",
            QO__O: "img/night-skin23.png",
            _w_O0: "img/day-skin24.png",
            QOvVu: "img/night-skin24.png",
            QWOUQ: "img/day-skin25.png",
            $Q$oV: "img/night-skin25.png",
            Q0ouv: "img/day-skin26.png",
            WO$Vv: "img/night-skin26.png",
            oWUWw: "img/day-skin27.png",
            $o_WV: "img/night-skin27.png",
            WUVvO: "img/day-skin28.png",
            wVV0v: "img/night-skin28.png",
            _uw$u: "img/day-skin29.png",
            QW__$: "img/night-skin29.png",
            v0W_o: "img/day-skin30.png",
            woW__: "img/night-skin30.png",
            $VoVO: "img/day-skin31.png",
            oWwuW: "img/night-skin31.png",
            Wv_$W: "img/day-skin32.png",
            QV__W: "img/night-skin32.png",
            VuUV$: "img/day-skin33.png",
            vwV_Q: "img/night-skin33.png",
            vOOUw: "img/day-skin34.png",
            Ovwu$: "img/night-skin34.png",
            $_vwU: "img/day-skin35.png",
            Vvo0W: "img/night-skin35.png",
            u0w$o: "img/day-skin36.png",
            uoVQ$: "img/night-skin36.png",
            wwOou: "img/day-skin37.png",
            _$QQ$: "img/night-skin37.png",
            UUQo0: "img/day-skin38.png",
            WWwVQ: "img/night-skin38.png",
            VUQu$: "img/day-skin39.png",
            VQQ$U: "img/night-skin39.png",
            uV$O_: "img/day-skin40.png",
            uwUv$: "img/night-skin40.png",
            VQVuV: "img/day-skin41.png",
            _VUQ$: "img/night-skin41.png",
            UuvOO: "img/day-skin42.png",
            W0$$Q: "img/night-skin42.png",
            QW$UV: "img/day-skin43.png",
            _UuU0: "img/night-skin43.png",
            Q0O0u: "img/day-skin44.png",
            WoU0v: "img/night-skin44.png",
            W_QVV: "img/day-skin45.png",
            wUwvO: "img/night-skin45.png",
            UO$O_: "img/day-skin46.png",
            _WUOO: "img/night-skin46.png",
            oWVOQ: "img/day-skin47.png",
            U_QoQ: "img/night-skin47.png",
            vQ_U_: "img/day-skin48.png",
            UvoVW: "img/night-skin48.png",
            Q_vQO: "img/day-skin49.png",
            vOQOO: "img/night-skin49.png",
            UO_Qu: "img/day-skin50.png",
            OooOV: "img/night-skin50.png",
            _u_$u: "img/day-skin51.png",
            QVoUU: "img/night-skin51.png",
            _QuVW: "img/day-skin52.png",
            V_vvu: "img/night-skin52.png",
            ovo0u: "img/day-skin53.png",
            oWW_O: "img/night-skin53.png",
            u0W0U: "img/day-skin54.png",
            vVoUV: "img/night-skin54.png",
            W0oVv: "img/day-skin55.png",
            VWO0Q: "img/night-skin55.png",
            v$$_W: "img/day-skin56.png",
            wwwuw: "img/night-skin56.png",
            WWUUV: "img/day-skin57.png",
            oouOV: "img/night-skin57.png",
            Wu_uU: "img/day-skin58.png",
            UvOu_: "img/night-skin58.png",
            Q0QWW: "img/day-skin59.png",
            uuOo$: "img/night-skin59.png",
            UvoOO: "img/day-skin60.png",
            QVV$O: "img/night-skin60.png",
            uQuQ0: "img/day-skin61.png",
            vWVwO: "img/night-skin61.png",
            VW_UW: "img/day-skin62.png",
            ___$W: "img/night-skin62.png",
            uOQ$V: "img/day-skin63.png",
            OWWUo: "img/night-skin63.png",
            wQWOu: "img/day-skin64.png",
            Q$Uuo: "img/night-skin64.png",
            vowUu: "img/day-skin65.png",
            oUWOw: "img/night-skin65.png",
            VvVwU: "img/day-skin66.png",
            w$UV$: "img/night-skin66.png",
            $$W__: "img/day-skin67.png",
            wVwVu: "img/night-skin67.png",
            Qov$o: "img/day-skin68.png",
            $UWo0: "img/night-skin68.png",
            QvvO_: "img/day-skin69.png",
            vuwQ0: "img/night-skin69.png",
            Ovuo_: "img/day-skin70.png",
            $OWQV: "img/night-skin70.png",
            Uo$O$: "img/day-skin71.png",
            woV$$: "img/night-skin71.png",
            Q0Q$Q: "img/day-skin72.png",
            _0oQW: "img/night-skin72.png",
            O$oO_: "img/day-skin73.png",
            OoVOo: "img/night-skin73.png",
            $0_$o: "img/day-skin74.png",
            O$VWo: "img/night-skin74.png",
            vu_0w: "img/day-skin75.png",
            Q_wQO: "img/night-skin75.png",
            oOwvW: "img/day-skin76.png",
            UvwUW: "img/night-skin76.png",
            w_$u$: "img/day-skin77.png",
            OQO_V: "img/night-skin77.png",
            voUuu: "img/day-skin78.png",
            WuUov: "img/night-skin78.png",
            vuvQ0: "img/day-skin79.png",
            OOvOQ: "img/night-skin79.png",
            $Ovwv: "img/day-skin80.png",
            v$OwV: "img/night-skin80.png",
            _U$$u: "img/day-skin81.png",
            W_wW$: "img/night-skin81.png",
            VVwvQ: "img/day-skin82.png",
            QUO$v: "img/night-skin82.png",
            O$_W_: "img/day-skin83.png",
            Vw$Ow: "img/night-skin83.png",
            vuW0w: "img/day-skin84.png",
            wvouQ: "img/night-skin84.png",
            V0oVV: "img/day-skin85.png",
            QUuV0: "img/night-skin85.png",
            UWvVW: "img/day-skin86.png",
            WV$Qo: "img/night-skin86.png",
            Ov_uw: "img/day-skin87.png",
            QQWw_: "img/night-skin87.png",
            V0O$$: "img/day-skin88.png",
            W__v_: "img/night-skin88.png",
            Qou$O: "img/day-skin89.png",
            vWUWv: "img/night-skin89.png",
            _QVoV: "img/day-skin90.png",
            w0uvO: "img/night-skin90.png",
            uoQv$: "img/day-skin91.png",
            oO$00: "img/night-skin91.png",
            UQwOv: "img/day-skin92.png",
            VQ$u_: "img/night-skin92.png",
            VW_UV: "img/day-skin93.png",
            vo_Vu: "img/night-skin93.png",
            UWWU0: "img/day-skin94.png",
            Q0wV_: "img/night-skin94.png",
            U0Qov: "img/day-skin95.png",
            _$voV: "img/night-skin95.png",
            VOWO_: "img/day-skin96.png",
            $oW_o: "img/night-skin96.png",
            VuOwo: "img/day-skin97.png",
            O_Vvu: "img/night-skin97.png",
            $Uu0V: "img/day-skin98.png",
            _0$vQ: "img/night-skin98.png",
            VUQuw: "img/day-skin99.png",
            oQU$u: "img/night-skin99.png",
            vwvOu: "img/day-skin100.png",
            o_uUU: "img/night-skin100.png",
            UU$$$: "img/day-skin101.png",
            QVo$V: "img/night-skin101.png",
            vO$uv: "img/day-skin102.png",
            _Q_VV: "img/night-skin102.png",
            ovv$W: "img/day-skin103.png",
            WuO0W: "img/night-skin103.png",
            $uu$V: "img/day-skin104.png",
            wVwWv: "img/night-skin104.png",
            $vvV0: "img/day-skin105.png",
            oOoO$: "img/night-skin105.png",
            ovwu_: "img/day-skin106.png",
            ooQ$V: "img/night-skin106.png",
            ouOQ0: "img/day-skin107.png",
            uuWwo: "img/night-skin107.png",
            _U$wO: "img/day-skin108.png",
            owOWv: "img/night-skin108.png",
            VOv__: "img/day-skin109.png",
            VWWou: "img/night-skin109.png",
            QVQuU: "img/day-skin110.png",
            WuoUw: "img/night-skin110.png",
            VovVQ: "img/day-skin111.png",
            QUuVQ: "img/night-skin111.png",
            wuV_0: "img/day-skin112.png",
            voQOo: "img/night-skin112.png",
            Vw$wO: "img/day-skin113.png",
            VuV_$: "img/night-skin113.png",
            u$ww$: "img/day-skin114.png",
            vwV_$: "img/night-skin114.png",
            $W$OQ: "img/day-skin115.png",
            QO$W$: "img/night-skin115.png",
            _$owV: "img/day-skin116.png",
            wUvQv: "img/night-skin116.png",
            QWW0W: "img/day-skin117.png",
            W0W0v: "img/night-skin117.png",
            UWowQ: "img/day-skin118.png",
            Vvow0: "img/night-skin118.png",
            wWW$U: "img/day-skin119.png",
            VOu0o: "img/night-skin119.png",
            vv_ow: "img/day-skin120.png",
            _QQ_v: "img/night-skin120.png",
            $oo$$: "img/day-skin121.png",
            $vuU0: "img/night-skin121.png",
            o$QoO: "img/day-skin122.png",
            _UvwV: "img/night-skin122.png",
            wowvv: "img/day-skin123.png",
            OOuvO: "img/night-skin123.png",
            uQUQw: "img/day-skin124.png",
            WUUvv: "img/night-skin124.png",
            wuOoO: "img/day-skin125.png",
            OvQUW: "img/night-skin125.png",
            $wuQu: "img/day-skin126.png",
            $u_OO: "img/night-skin126.png",
            ouO_O: "img/day-skin127.png",
            oOQ_O: "img/night-skin127.png",
            u$uw_: "img/day-skin128.png",
            O$_Ww: "img/night-skin128.png",
            V$OwO: "img/day-skin129.png",
            $UW__: "img/night-skin129.png",
            owWuU: "img/day-skin130-1.png",
            uo$QQ: "img/night-skin130-1.png",
            vvWOu: "img/day-skin131.png",
            _o$V$: "img/night-skin131.png",
            OVVu$: "img/day-skin132.png",
            $OVUQ: "img/night-skin132.png",
            _OwUU: "img/day-skin133.png",
            wWUVQ: "img/night-skin133.png",
            $Vv_0: "img/day-skin134.png",
            Ou_0W: "img/night-skin134.png",
            UQ_wv: "img/day-skin135.png",
            OQvo_: "img/night-skin135.png",
            UvowO: "img/day-skin136.png",
            Qw_VU: "img/night-skin136.png",
            QU$VO: "img/day-skin137.png",
            vuUOu: "img/night-skin137.png",
            w__QW: "img/day-skin138.png",
            wuWwV: "img/night-skin138.png",
            o$QQv: "img/day-skin139.png",
            wW_vW: "img/night-skin139.png",
            oO$QW: "img/day-skin140.png",
            Ovuww: "img/night-skin140.png",
            WU_uv: "img/day-skin141.png",
            W$o0O: "img/night-skin141.png",
            _0vwV: "img/day-skin142.png",
            o0OQo: "img/night-skin142.png",
            O0WUU: "img/day-skin143.png",
            _0v$o: "img/night-skin143.png",
            uUovO: "img/day-skin144.png",
            OQQWW: "img/night-skin144.png",
            QouuQ: "img/day-skin145.png",
            $UWw$: "img/night-skin145.png",
            OvvV$: "img/day-skin146.png",
            ooOuQ: "img/night-skin146.png",
            Oov0O: "img/day-skin147.png",
            uVoO_: "img/night-skin147.png",
            WUVoU: "img/day-skin148.png",
            OW$0w: "img/night-skin148.png",
            wQQWW: "img/day-skin149.png",
            vvVwU: "img/night-skin149.png",
            WQw$w: "img/day-skin150.png",
            $WU0v: "img/night-skin150.png",
            uWv_$: "img/day-hand-skin0.png",
            W$UW$: "img/night-hand-skin0.png",
            OwVuu: "img/day-hand-skin1.png",
            vUWQU: "img/night-hand-skin1.png",
            voouQ: "img/day-hand-skin2.png",
            oOUou: "img/night-hand-skin2.png",
            Q0wV0: "img/day-hand-skin3.png",
            WuWU$: "img/night-hand-skin3.png",
            voWUv: "img/day-hand-skin4.png",
            vvOw$: "img/night-hand-skin4.png",
            OW_QW: "img/day-hand-skin5.png",
            vvVQU: "img/night-hand-skin5.png",
            vUvwO: "img/day-hand-skin6.png",
            wVVWW: "img/night-hand-skin6.png",
            VOvwV: "img/day-hand-skin6.png",
            Owovu: "img/night-hand-skin6.png",
            oQOQo: "img/day-hand-skin8.png",
            o$VWO: "img/night-hand-skin8.png",
            VV$w_: "img/day-hand-skin9.png",
            oWwUv: "img/night-hand-skin9.png",
            QWvWo: "img/day-hand-skin10.png",
            Q0QQu: "img/night-hand-skin10.png",
            OuoV0: "img/day-hand-skin11.png",
            OooQV: "img/night-hand-skin11.png",
            WVO0u: "img/day-hand-skin12.png",
            _VoWW: "img/night-hand-skin12.png",
            OWQ0$: "img/day-hand-skin13.png",
            oVowv: "img/night-hand-skin13.png",
            Qo$_U: "img/day-hand-skin14.png",
            W0Vo_: "img/night-hand-skin14.png",
            wOVo0: "img/day-hand-skin15.png",
            uvvoO: "img/night-hand-skin15.png",
            wooQu: "img/day-hand-skin16.png",
            OWVWo: "img/night-hand-skin16.png",
            OU$wO: "img/day-hand-skin17.png",
            w0__o: "img/night-hand-skin17.png",
            $OVuU: "img/day-hand-skin18.png",
            v0OOw: "img/night-hand-skin18.png",
            $wwuQ: "img/day-hand-skin19.png",
            V_v_Q: "img/night-hand-skin19.png",
            w$Uow: "img/day-hand-skin20.png",
            WOuuv: "img/night-hand-skin20.png",
            UuO$w: "img/day-hand-skin21.png",
            VuWoO: "img/night-hand-skin21.png",
            QwU0W: "img/day-hand-skin22.png",
            uv$$w: "img/night-hand-skin22.png",
            $Ov0V: "img/day-hand-skin23.png",
            u0voO: "img/night-hand-skin23.png",
            ooUU0: "img/day-hand-skin24.png",
            $QO_O: "img/night-hand-skin24.png",
            OO_u$: "img/day-hand-skin25.png",
            WOvW_: "img/night-hand-skin25.png",
            uvWV_: "img/day-hand-skin26.png",
            _woUu: "img/night-hand-skin26.png",
            UU$Vw: "img/day-hand-skin27.png",
            WwUwU: "img/night-hand-skin27.png",
            wOv$O: "img/day-hand-skin28.png",
            VQVwQ: "img/night-hand-skin28.png",
            vu$u_: "img/day-hand-skin29.png",
            wVQWQ: "img/night-hand-skin29.png",
            Uw_u0: "img/day-hand-skin30.png",
            Q$UvO: "img/night-hand-skin30.png",
            _$_Vv: "img/day-hand-skin31.png",
            v_uOU: "img/night-hand-skin31.png",
            Q$$U$: "img/day-hand-skin32.png",
            Q_vv$: "img/night-hand-skin32.png",
            V0OoV: "img/day-hand-skin33.png",
            WO$WU: "img/night-hand-skin33.png",
            $$OwW: "img/day-hand-skin34.png",
            wVoVw: "img/night-hand-skin34.png",
            WUUuo: "img/day-hand-skin35.png",
            _0QOW: "img/night-hand-skin35.png",
            _wouQ: "img/day-hand-skin36.png",
            OvVWU: "img/night-hand-skin36.png",
            U0$0$: "img/day-hand-skin37.png",
            _uQQv: "img/night-hand-skin37.png",
            vWOVo: "img/day-hand-skin38.png",
            o_QvV: "img/night-hand-skin38.png",
            Vuuo_: "img/day-hand-skin39.png",
            Wo_W_: "img/night-hand-skin39.png",
            $Uv_Q: "img/day-hand-skin40.png",
            Q$Q_V: "img/night-hand-skin40.png",
            __uV0: "img/day-hand-skin41.png",
            _Uouo: "img/night-hand-skin41.png",
            VuU_o: "img/day-hand-skin42.png",
            V$uuw: "img/night-hand-skin42.png",
            uuuou: "img/day-hand-skin43.png",
            VW$0o: "img/night-hand-skin43.png",
            vUuvQ: "img/day-hand-skin16.png",
            Wowo_: "img/night-hand-skin16.png",
            wWWO$: "img/day-hand-skin45.png",
            vWuOo: "img/night-hand-skin45.png",
            QvWvo: "img/day-hand-skin46.png",
            v$UOW: "img/night-hand-skin46.png",
            UWWwv: "img/day-hand-skin47.png",
            __Ovv: "img/night-hand-skin47.png",
            V$$00: "img/day-hand-skin48.png",
            $UuVV: "img/night-hand-skin48.png",
            w0vVV: "img/day-hand-skin49.png",
            Q$u$W: "img/night-hand-skin49.png",
            U$OUW: "img/day-hand-skin49.png",
            vwuOQ: "img/night-hand-skin49.png",
            uwWOv: "img/day-hand-skin51.png",
            _vvWw: "img/night-hand-skin51.png",
            oo_$_: "img/day-hand-skin52.png",
            oO_wW: "img/night-hand-skin52.png",
            wUVuU: "img/day-hand-skin53.png",
            UWuOQ: "img/night-hand-skin53.png",
            uUw0Q: "img/day-hand-skin53.png",
            OvW0u: "img/night-hand-skin53.png",
            QvV$w: "img/day-hand-skin55.png",
            VoOwQ: "img/night-hand-skin55.png",
            QUu$O: "img/day-hand-skin56.png",
            $vQw0: "img/night-hand-skin56.png",
            VvU0u: "img/day-hand-skin57.png",
            w$OU$: "img/night-hand-skin57.png",
            oU_vV: "img/day-hand-skin58.png",
            $V$OV: "img/night-hand-skin58.png",
            vooQV: "img/day-hand-skin59.png",
            v_UVv: "img/night-hand-skin59.png",
            vuO0U: "img/day-hand-skin61.png",
            w0W$w: "img/night-hand-skin61.png",
            $Uu_O: "img/day-hand-skin61.png",
            ooOw$: "img/night-hand-skin61.png",
            O$$Wv: "img/day-hand-skin62.png",
            WWQ0v: "img/night-hand-skin62.png",
            WWW0o: "img/day-hand-skin63.png",
            QVQWO: "img/night-hand-skin63.png",
            $w_vo: "img/day-hand-skin64.png",
            oV$Oo: "img/night-hand-skin64.png",
            $uVVQ: "img/day-hand-skin65.png",
            w_v0W: "img/night-hand-skin65.png",
            UWQv$: "img/day-hand-skin66.png",
            WVv$Q: "img/night-hand-skin66.png",
            W0UWU: "img/day-hand-skin67.png",
            _0WvV: "img/night-hand-skin67.png",
            __www: "img/day-hand-skin68.png",
            UowuU: "img/night-hand-skin68.png",
            VUuQv: "img/day-hand-skin69.png",
            V0_wW: "img/night-hand-skin69.png",
            o_$VV: "img/day-hand-skin70.png",
            VoWoQ: "img/night-hand-skin70.png",
            _0wW$: "img/day-hand-skin71.png",
            QoQuU: "img/night-hand-skin71.png",
            $u_vV: "img/day-hand-skin72.png",
            oVVvo: "img/night-hand-skin72.png",
            $W$Uo: "img/day-hand-skin73.png",
            uouw_: "img/night-hand-skin73.png",
            O_uoU: "img/day-hand-skin74.png",
            uwW$o: "img/night-hand-skin74.png",
            Oo$u_: "img/day-hand-skin75.png",
            $QuQu: "img/night-hand-skin75.png",
            uVUwu: "img/day-hand-skin76.png",
            UQUQW: "img/night-hand-skin76.png",
            vuOU_: "img/day-hand-skin77.png",
            $voOW: "img/night-hand-skin77.png",
            W0Ou$: "img/day-hand-skin78.png",
            VVWwV: "img/night-hand-skin78.png",
            QQ$WU: "img/day-hand-skin79.png",
            vUo0W: "img/night-hand-skin79.png",
            W_OU_: "img/day-hand-skin80.png",
            UoOoO: "img/night-hand-skin80.png",
            VWQW0: "img/day-hand-skin81.png",
            W$uvQ: "img/night-hand-skin81.png",
            QOvwo: "img/day-hand-skin82.png",
            OvW0o: "img/night-hand-skin82.png",
            Ow$_v: "img/day-hand-skin83.png",
            wVW0u: "img/night-hand-skin83.png",
            VvuUU: "img/day-hand-skin84.png",
            QuUvO: "img/night-hand-skin84.png",
            uvuo$: "img/day-hand-skin85.png",
            Q0UVQ: "img/night-hand-skin85.png",
            o__V_: "img/day-hand-skin86.png",
            QuvOV: "img/night-hand-skin86.png",
            v$Uov: "img/day-hand-skin87.png",
            uwV_w: "img/night-hand-skin87.png",
            W_VOu: "img/day-hand-skin88.png",
            $Wuw0: "img/night-hand-skin88.png",
            o0vUw: "img/day-hand-skin89.png",
            VVQuO: "img/night-hand-skin89.png",
            QQQUo: "img/day-hand-skin90.png",
            Ou_W$: "img/night-hand-skin90.png",
            WoW_Q: "img/day-hand-skin91.png",
            VUOu0: "img/night-hand-skin91.png",
            $u$0U: "img/day-hand-skin92.png",
            v_$_o: "img/night-hand-skin92.png",
            vowvO: "img/day-hand-skin93.png",
            u0oOW: "img/night-hand-skin93.png",
            woQO_: "img/day-hand-skin94.png",
            _vQO$: "img/night-hand-skin94.png",
            QW_ww: "img/day-hand-skin95.png",
            O_Ouo: "img/night-hand-skin95.png",
            VvWwO: "img/day-hand-skin96.png",
            vouo$: "img/night-hand-skin96.png",
            $OUUo: "img/day-hand-skin97.png",
            vVOuo: "img/night-hand-skin97.png",
            VVoWU: "img/day-hand-skin98.png",
            v_uw_: "img/night-hand-skin98.png",
            u__u0: "img/day-hand-skin99.png",
            vuVo0: "img/night-hand-skin99.png",
            oWWWW: "img/day-hand-skin100.png",
            oQWw0: "img/night-hand-skin100.png",
            u_oWQ: "img/day-hand-skin101.png",
            uu$QV: "img/night-hand-skin101.png",
            W_v_v: "img/day-hand-skin102.png",
            Ovo0V: "img/night-hand-skin102.png",
            ___UV: "img/day-hand-skin103.png",
            OwOWW: "img/night-hand-skin103.png",
            o_v_u: "img/day-hand-skin104.png",
            VoQvv: "img/night-hand-skin104.png",
            Q0vwo: "img/day-hand-skin105.png",
            uw_Q_: "img/night-hand-skin105.png",
            W_VOO: "img/day-hand-skin106.png",
            $uvQV: "img/night-hand-skin106.png",
            _UOV_: "img/day-hand-skin107.png",
            QvVvV: "img/night-hand-skin107.png",
            v0VQ0: "img/day-hand-skin108.png",
            uQ_o_: "img/night-hand-skin108.png",
            WQQQ_: "img/day-hand-skin109.png",
            Uw$v$: "img/night-hand-skin109.png",
            ouwoO: "img/day-hand-skin110.png",
            Ovv_u: "img/night-hand-skin110.png",
            _0$$v: "img/day-hand-skin111.png",
            WouU_: "img/night-hand-skin111.png",
            u$vUv: "img/day-hand-skin112.png",
            QoOOu: "img/night-hand-skin112.png",
            wV___: "img/day-hand-skin113.png",
            WUuwU: "img/night-hand-skin113.png",
            _uUOo: "img/day-hand-skin114.png",
            $oV$V: "img/night-hand-skin114.png",
            W$$Ov: "img/day-hand-skin115.png",
            $$uw_: "img/night-hand-skin115.png",
            UVO_o: "img/day-hand-skin116.png",
            Wv_vV: "img/night-hand-skin116.png",
            oWvUv: "img/day-hand-skin117.png",
            QWwOO: "img/night-hand-skin117.png",
            VWUQU: "img/day-hand-skin118.png",
            WU_$O: "img/night-hand-skin118.png",
            UoUoQ: "img/day-hand-skin119.png",
            Vu_0$: "img/night-hand-skin119.png",
            OW_0W: "img/day-hand-skin120.png",
            U0u$o: "img/night-hand-skin120.png",
            WWoww: "img/day-hand-skin122.png",
            o0QUQ: "img/night-hand-skin122.png",
            oowVO: "img/day-hand-skin122.png",
            owW0V: "img/night-hand-skin122.png",
            Wv$wO: "img/day-hand-skin122.png",
            $_U$Q: "img/night-hand-skin122.png",
            $QWvv: "img/day-hand-skin124.png",
            uOuvv: "img/night-hand-skin124.png",
            u_V$W: "img/day-hand-skin125.png",
            $oOQv: "img/night-hand-skin125.png",
            _Ww$V: "img/day-hand-skin126.png",
            WVWo$: "img/night-hand-skin126.png",
            uW_wV: "img/day-hand-skin127.png",
            WWvV0: "img/night-hand-skin127.png",
            OvVUQ: "img/day-hand-skin128.png",
            vWv0U: "img/night-hand-skin128.png",
            vuwUv: "img/day-hand-skin129.png",
            VUVV_: "img/night-hand-skin129.png",
            usocketv: "img/day-hand-skin130.png",
            Quo0o: "img/night-hand-skin130.png",
            V_WOV: "img/day-hand-skin131.png",
            vwW$$: "img/night-hand-skin131.png",
            OOOow: "img/day-hand-skin130.png",
            uUUvU: "img/night-hand-skin130.png",
            QUv$Q: "img/day-hand-skin133.png",
            uvV$$: "img/night-hand-skin133.png",
            OvWWu: "img/day-hand-skin134.png",
            vvUvu: "img/night-hand-skin134.png",
            QwvO0: "img/day-hand-skin135.png",
            w_vUO: "img/night-hand-skin135.png",
            QwQ$_: "img/day-hand-skin136.png",
            Vow_U: "img/night-hand-skin136.png",
            wuWWV: "img/day-hand-skin137.png",
            $_Qo0: "img/night-hand-skin137.png",
            WvWwW: "img/day-hand-skin138.png",
            Owwww: "img/night-hand-skin138.png",
            $0VV_: "img/day-hand-skin139.png",
            V$$OQ: "img/night-hand-skin139.png",
            VQv__: "img/day-hand-skin140.png",
            VQ$vV: "img/night-hand-skin140.png",
            Ouvu0: "img/day-hand-skin141.png",
            W$VW0: "img/night-hand-skin141.png",
            V_w$U: "img/day-hand-skin142.png",
            wvuwu: "img/night-hand-skin142.png",
            OuWv_: "img/day-hand-skin143.png",
            uu$Uu: "img/night-hand-skin143.png",
            owQVW: "img/day-hand-skin144.png",
            oVuVU: "img/night-hand-skin144.png",
            Wvsocket: "img/day-hand-skin145.png",
            wOQW_: "img/night-hand-skin145.png",
            WUVw$: "img/day-hand-skin146.png",
            O0WO_: "img/night-hand-skin146.png",
            UO_WV: "img/day-hand-skin147.png",
            $wuw0: "img/night-hand-skin147.png",
            vo$U_: "img/day-hand-skin148.png",
            _oVOW: "img/night-hand-skin148.png",
            UU__o: "img/day-hand-skin149.png",
            _W_0$: "img/night-hand-skin149.png",
            wwVw_: "img/day-hand-skin150.png",
            _uUW$: "img/night-hand-skin150.png",
            OOQ_v: "img/day-bag-star0.png",
            QuVU_: "img/night-bag-star0.png",
            $wwwW: "img/day-bag0.png",
            QVUou: "img/night-bag0.png",
            QVW_$: "img/day-bag1.png",
            oWOoo: "img/night-bag1.png",
            _w$o$: "img/day-bag2.png",
            WQvV0: "img/night-bag2.png",
            vv$$u: "img/day-bag3.png",
            uWv_O: "img/night-bag3.png",
            vowvw: "img/day-bag4.png",
            wwUV$: "img/night-bag4.png",
            QvU$W: "img/day-bag5.png",
            WVVOu: "img/night-bag5.png",
            o_WuV: "img/day-bag6.png",
            uV_$o: "img/night-bag6.png",
            QW_00: "img/day-bag7.png",
            ooO__: "img/night-bag7.png",
            $UWVu: "img/day-bag8.png",
            v0W0W: "img/night-bag8.png",
            o$VUW: "img/day-bag9.png",
            UVu__: "img/night-bag9.png",
            $wvoo: "img/day-bag10.png",
            $vo_$: "img/night-bag10.png",
            _WoWv: "img/day-bag11.png",
            wUVuv: "img/night-bag11.png",
            ovoWv: "img/day-bag13.png",
            wVQ$0: "img/night-bag13.png",
            QVQ$v: "img/day-bag14.png",
            ou_Ww: "img/night-bag14.png",
            _$ou0: "img/day-bag16.png",
            UUuuO: "img/night-bag16.png",
            vuo0V: "img/day-bag17.png",
            VOWVo: "img/night-bag17.png",
            O_OOo: "img/day-bag18.png",
            oOV_$: "img/night-bag18.png",
            ouWvW: "img/day-bag19.png",
            V0OwQ: "img/night-bag19.png",
            $UV0O: "img/day-bag20.png",
            u$VUu: "img/night-bag20.png",
            UwQ_W: "img/day-bag21.png",
            o$oUo: "img/night-bag21.png",
            $_oou: "img/day-bag22.png",
            Vo_OQ: "img/night-bag22.png",
            o0oVO: "img/day-bag23.png",
            oQVu$: "img/night-bag23.png",
            vVQWo: "img/day-bag24.png",
            VvUvv: "img/night-bag24.png",
            OW_0o: "img/day-bag25.png",
            WuwO_: "img/night-bag25.png",
            OVU0V: "img/day-bag26.png",
            vvVW0: "img/night-bag26.png",
            uOwoW: "img/day-bag27.png",
            VwWwO: "img/night-bag27.png",
            Oww$W: "img/day-bag28.png",
            u0$0O: "img/night-bag28.png",
            QWOQ_: "img/day-bag29.png",
            uvO0o: "img/night-bag29.png",
            OVO$$: "img/day-bag30.png",
            _wwoO: "img/night-bag30.png",
            vuUuv: "img/day-bag31.png",
            uWvuW: "img/night-bag31.png",
            vvwoo: "img/day-bag32.png",
            vWQuo: "img/night-bag32.png",
            u_W0$: "img/day-bag33.png",
            Oo$oo: "img/night-bag33.png",
            vQO0_: "img/day-bag34.png",
            OWWou: "img/night-bag34.png",
            _WVQw: "img/day-bag35.png",
            o$uuv: "img/night-bag35.png",
            O0w$0: "img/day-bag36.png",
            _uo0v: "img/night-bag36.png",
            w0oOo: "img/day-bag37.png",
            uWvWw: "img/night-bag37.png",
            Q0Owo: "img/day-bag38.png",
            o$QWQ: "img/night-bag38.png",
            OWWWU: "img/day-bag39.png",
            Uvv_V: "img/night-bag39.png",
            _wo_o: "img/day-bag40.png",
            QVvU0: "img/night-bag40.png",
            w$W$0: "img/day-bag41.png",
            $$WU0: "img/night-bag41.png",
            $OQ_W: "img/day-bag42.png",
            $wUWQ: "img/night-bag42.png",
            VWwwV: "img/day-bag43.png",
            UOvQ$: "img/night-bag43.png",
            $VvuV: "img/day-bag44.png",
            _WWwQ: "img/night-bag44.png",
            w0vWu: "img/day-bag45.png",
            Q_$_Q: "img/night-bag45.png",
            wU$_v: "img/day-bag46.png",
            _vVoQ: "img/night-bag46.png",
            voW_w: "img/day-bag47.png",
            $OQvv: "img/night-bag47.png",
            QwQVo: "img/day-bag48.png",
            $0VwU: "img/night-bag48.png",
            uWoVV: "img/day-bag49.png",
            uvuQQ: "img/night-bag49.png",
            v$UUU: "img/day-bag50.png",
            vOO$_: "img/night-bag50.png",
            O0Uw$: "img/day-bag51.png",
            o_$Ww: "img/night-bag51.png",
            uouu0: "img/day-bag52.png",
            w_oUO: "img/night-bag52.png",
            UwoWU: "img/day-bag53.png",
            Wvou0: "img/night-bag53.png",
            WQuQ0: "img/day-bag54.png",
            voQw_: "img/night-bag54.png",
            _oQQW: "img/day-bag55.png",
            OV$V_: "img/night-bag55.png",
            vOV_0: "img/day-bag56.png",
            VwuoQ: "img/night-bag56.png",
            $VUO$: "img/day-bag57.png",
            _$oQ_: "img/night-bag57.png",
            U$uQu: "img/day-bag58.png",
            QWw_0: "img/night-bag58.png",
            W_ouw: "img/day-bag59.png",
            QVU_u: "img/night-bag59.png",
            V$o_V: "img/day-bag60.png",
            ovu_w: "img/night-bag60.png",
            uW$_$: "img/day-bag61.png",
            VWw0v: "img/night-bag61.png",
            o0VoV: "img/day-bag62.png",
            OUVw0: "img/night-bag62.png",
            _$wwo: "img/day-bag63.png",
            QU$0W: "img/night-bag63.png",
            V$wvu: "img/day-bag64.png",
            oo$Ov: "img/night-bag64.png",
            O0Ov0: "img/day-bag65.png",
            _WWuU: "img/night-bag65.png",
            $$_o0: "img/day-bag66.png",
            $woU_: "img/night-bag66.png",
            QU$Qu: "img/day-bag67.png",
            WOO_0: "img/night-bag67.png",
            Qvuuv: "img/day-bag68.png",
            ovv0W: "img/night-bag68.png",
            wUvv0: "img/day-accessory0.png",
            VV$v$: "img/day-accessory0-pacques.png",
            Q$wwv: "img/night-accessory0-pacques.png",
            UVw0v: "img/day-accessory13.png",
            ___uO: "img/night-accessory13.png",
            o0_$u: "img/day-accessory14.png",
            OQOWU: "img/night-accessory14.png",
            UQ$V_: "img/day-accessory15.png",
            w$vOW: "img/night-accessory15.png",
            $OvUw: "img/day-accessory16.png",
            u0Uv$: "img/night-accessory16.png",
            ww$0Q: "img/day-accessory17.png",
            vuW$o: "img/day-accessory17.png",
            QVvvv: "img/day-accessory19.png",
            O$ouo: "img/night-accessory19.png",
            UoO_u: "img/day-accessory20.png",
            oWoOV: "img/night-accessory20.png",
            OvwVW: "img/day-accessory21.png",
            uvVW0: "img/night-accessory21.png",
            WuOuW: "img/day-accessory22.png",
            owWWQ: "img/night-accessory22.png",
            vVUUV: "img/day-accessory23.png",
            OQw_Q: "img/night-accessory23.png",
            wvoww: "img/day-accessory24.png",
            V_o_W: "img/night-accessory24.png",
            UouO_: "img/day-accessory25.png",
            oV$QU: "img/night-accessory25.png",
            UUVo0: "img/day-accessory26.png",
            uOuWu: "img/night-accessory26.png",
            Vow_$: "img/day-accessory27.png",
            uwOU$: "img/night-accessory27.png",
            Ov$Q$: "img/day-accessory18.png",
            woQOo: "img/night-accessory18.png",
            VoOVQ: "img/day-accessory29.png",
            _QOV_: "img/night-accessory29.png",
            w0OUW: "img/day-accessory30.png",
            v_vWv: "img/night-accessory30.png",
            W0OQw: "img/day-accessory31.png",
            Wooov: "img/night-accessory31.png",
            WW$uW: "img/day-accessory32.png",
            __WO_: "img/night-accessory32.png",
            UOW_Q: "img/day-accessory33.png",
            VoOvQ: "img/night-accessory33.png",
            v0UQ0: "img/day-accessory34.png",
            u$u0O: "img/night-accessory34.png",
            _Qu_W: "img/day-accessory35.png",
            ouQOW: "img/night-accessory35.png",
            WVv__: "img/day-accessory28.png",
            uVO0v: "img/night-accessory28.png",
            vowW0: "img/day-accessory36.png",
            VoVvQ: "img/night-accessory36.png",
            uwU$v: "img/day-accessory37.png",
            $_$Q$: "img/night-accessory37.png",
            VuOvW: "img/day-accessory39.png",
            V$u$w: "img/night-accessory39.png",
            uo_ov: "img/day-accessory40.png",
            oow0v: "img/night-accessory40.png",
            W$_vo: "img/day-accessory41.png",
            v$ow0: "img/night-accessory41.png",
            UWuWQ: "img/day-accessory42.png",
            vWuUU: "img/night-accessory42.png",
            OvUOo: "img/day-accessory43.png",
            $UvuW: "img/night-accessory43.png",
            UowuW: "img/day-accessory44.png",
            owU_V: "img/night-accessory44.png",
            uuQVu: "img/day-accessory38.png",
            wwoWU: "img/night-accessory38.png",
            VvuVW: "img/day-accessory46.png",
            OOvuv: "img/night-accessory46.png",
            O0vvw: "img/day-accessory47.png",
            o_wV_: "img/night-accessory47.png",
            $QVOO: "img/day-accessory48.png",
            VOo$U: "img/night-accessory48.png",
            _UwWv: "img/day-accessory49.png",
            v_OO0: "img/night-accessory49.png",
            VuVQ_: "img/day-accessory45.png",
            Qvo$_: "img/night-accessory45.png",
            WWVVv: "img/day-accessory50.png",
            _O_wW: "img/night-accessory50.png",
            WVOQW: "img/day-accessory51.png",
            $Vw0v: "img/night-accessory51.png",
            $VwUO: "img/day-accessory52.png",
            vvwWv: "img/night-accessory52.png",
            QOouu: "img/day-accessory53.png",
            $Qo_w: "img/night-accessory53.png",
            wuuW$: "img/day-accessory54.png",
            oouV$: "img/night-accessory54.png",
            $$wvu: "img/day-accessory55.png",
            u_OVV: "img/night-accessory55.png",
            QWv0U: "img/day-accessory56.png",
            v_U$u: "img/night-accessory56.png",
            Qvv_0: "img/day-accessory57.png",
            WWo0_: "img/night-accessory57.png",
            _0vWQ: "img/day-accessory58.png",
            u_w0W: "img/night-accessory58.png",
            $0$uQ: "img/day-accessory59.png",
            Qv$_$: "img/night-accessory59.png",
            W__Vw: "img/day-accessory60.png",
            Quu$u: "img/night-accessory60.png",
            QoovU: "img/day-accessory61.png",
            VUwOQ: "img/night-accessory61.png",
            vQ_vo: "img/day-accessory62.png",
            w0QO$: "img/night-accessory62.png",
            $oU_O: "img/day-accessory63.png",
            WO$ow: "img/night-accessory63.png",
            $_OOW: "img/day-accessory64.png",
            QwWuV: "img/night-accessory64.png",
            O0VQv: "img/day-accessory65.png",
            _WVQO: "img/night-accessory65.png",
            oO$_o: "img/day-accessory66.png",
            wV_oo: "img/night-accessory66.png",
            Wovw0: "img/day-accessory67.png",
            VO$0V: "img/night-accessory67.png",
            uU_uO: "img/day-accessory68.png",
            OUWQU: "img/night-accessory68.png",
            wWUWV: "img/day-accessory69.png",
            V0O$0: "img/night-accessory69.png",
            V_UW0: "img/day-accessory70.png",
            Q_QQV: "img/night-accessory70.png",
            ovVWW: "img/day-accessory71.png",
            ooQQ_: "img/night-accessory71.png",
            W_o_v: "img/day-accessory72.png",
            _U_Uw: "img/night-accessory72.png",
            ou$_0: "img/day-accessory73.png",
            _QO_O: "img/night-accessory73.png",
            wQOu0: "img/day-accessory74.png",
            WVQW$: "img/night-accessory74.png",
            o0O0V: "img/day-accessory75.png",
            uoWO_: "img/night-accessory75.png",
            Vwvw$: "img/day-accessory76.png",
            vUuVO: "img/night-accessory76.png",
            v0_O_: "img/day-accessory77.png",
            vu__O: "img/night-accessory77.png",
            V$Qvo: "img/day-accessory78.png",
            oW_UO: "img/night-accessory78.png",
            uWwVU: "img/day-accessory79.png",
            UQWuV: "img/night-accessory79.png",
            u$O_u: "img/day-accessory80.png",
            VoO_W: "img/night-accessory80.png",
            QQVwv: "img/day-accessory81.png",
            UUwUo: "img/night-accessory81.png",
            UuQWu: "img/day-book0.png",
            oowuv: "img/night-book0.png",
            $Wouv: "img/day-book1.png",
            $VW_Q: "img/night-book1.png",
            U$vvO: "img/day-book2.png",
            u0WWo: "img/night-book2.png",
            OUVWO: "img/day-book3.png",
            wvVQV: "img/night-book3.png",
            v0vOQ: "img/day-book4.png",
            VOv_0: "img/night-book4.png",
            OwWww: "img/day-book5.png",
            U_wwO: "img/night-book5.png",
            WWo0O: "img/day-book6.png",
            Ov$vv: "img/night-book6.png",
            QV$$v: "img/day-book7.png",
            OuUwv: "img/night-book7.png",
            O$VUu: "img/day-book8.png",
            WUW_0: "img/night-book8.png",
            VwOv0: "img/day-book9.png",
            UwWVV: "img/night-book9.png",
            QQoUo: "img/day-book10.png",
            $O$Ou: "img/night-book10.png",
            Q$W__: "img/day-book11.png",
            QvuoU: "img/night-book11.png",
            _woQV: "img/day-book12.png",
            oVUo0: "img/night-book12.png",
            $OWVO: "img/day-book13.png",
            O_UWv: "img/night-book13.png",
            oOO_0: "img/day-book14.png",
            V$OVo: "img/night-book14.png",
            ooOW0: "img/day-book15.png",
            oQW0$: "img/night-book15.png",
            w0O$O: "img/day-book16.png",
            _uQQW: "img/night-book16.png",
            U0Ov0: "img/day-book17.png",
            _vOuU: "img/night-book17.png",
            UuUUu: "img/day-book18.png",
            UovoW: "img/night-book18.png",
            wuw0w: "img/day-book19.png",
            uu_wO: "img/night-book19.png",
            QQoQV: "img/day-book20.png",
            QUWQv: "img/night-book20.png",
            VvUWV: "img/day-book21.png",
            vQVU_: "img/night-book21.png",
            v_Uoo: "img/day-book22.png",
            vvvQu: "img/night-book22.png",
            uWvWO: "img/day-book23.png",
            vU_Uu: "img/night-book23.png",
            UoV0V: "img/day-book24.png",
            W_wQQ: "img/night-book24.png",
            $QUuu: "img/day-book25.png",
            owO$v: "img/night-book25.png",
            _u$_Q: "img/day-book26.png",
            $vuQO: "img/night-book26.png",
            WW$Q$: "img/day-book27.png",
            v_wwv: "img/night-book27.png",
            u_vww: "img/day-book28.png",
            vuOQQ: "img/night-book28.png",
            vUUou: "img/day-book29.png",
            vOw$Q: "img/night-book29.png",
            vWwuw: "img/day-book30.png",
            $Vw$_: "img/night-book30.png",
            UwQVU: "img/day-book31.png",
            QvOOO: "img/night-book31.png",
            UUVvU: "img/day-book32.png",
            u0vQV: "img/night-book32.png",
            o_VQ_: "img/day-book33.png",
            v_OUw: "img/night-book33.png",
            wOW0$: "img/day-book34.png",
            _OUV$: "img/night-book34.png",
            woou_: "img/day-book35.png",
            OvV0Q: "img/night-book35.png",
            oVVVV: "img/day-book36.png",
            WWUwW: "img/night-book36.png",
            wO$OO: "img/day-book37.png",
            ovU0U: "img/night-book37.png",
            V$Qo0: "img/day-book38.png",
            $OO_u: "img/night-book38.png",
            U$W0$: "img/day-book39.png",
            $VQvQ: "img/night-book39.png",
            V$VoW: "img/day-book40.png",
            Ww_$u: "img/night-book40.png",
            _0V$Q: "img/day-book41.png",
            uVOWO: "img/night-book41.png",
            vo_uQ: "img/day-book42.png",
            VQuoO: "img/night-book42.png",
            VO$vQ: "img/day-book43.png",
            $voO$: "img/night-book43.png",
            wWuvV: "img/day-book44.png",
            V$uVO: "img/night-book44.png",
            uoUou: "img/day-book45.png",
            QuWQ_: "img/night-book45.png",
            _uV$$: "img/day-crate1.png",
            WuOu0: "img/night-crate1.png",
            woOOu: "img/day-crate2.png",
            QUUOW: "img/night-crate2.png",
            wQoow: "img/day-crate3.png",
            $Wuuu: "img/night-crate3.png",
            vU_WU: "img/day-crate4.png",
            $__W_: "img/night-crate4.png",
            WWOQv: "img/day-crate5.png",
            QVwQU: "img/night-crate5.png",
            _$O_o: "img/day-crate6.png",
            oVWw_: "img/night-crate6.png",
            wv_$u: "img/day-crate7.png",
            QOWo$: "img/night-crate7.png",
            QWQUo: "img/day-crate8.png",
            Q__0$: "img/night-crate8.png",
            $VwuW: "img/day-crate9.png",
            Vo$UO: "img/night-crate9.png",
            __WQV: "img/day-crate10.png",
            VoUOU: "img/night-crate10.png",
            UOOU_: "img/day-crate11.png",
            Ouovv: "img/night-crate11.png",
            vO$ow: "img/day-crate12.png",
            Q_WOO: "img/night-crate12.png",
            vWvo0: "img/day-crate13.png",
            w_wQv: "img/night-crate13.png",
            vu_WU: "img/day-crate14.png",
            $O_Uv: "img/night-crate14.png",
            VUoVO: "img/day-crate15.png",
            u$$wV: "img/night-crate15.png",
            vwUwv: "img/day-crate16.png",
            vuuUQ: "img/night-crate16.png",
            Vw_Ou: "img/day-crate17.png",
            UuO$$: "img/night-crate17.png",
            uwuuQ: "img/day-crate18.png",
            WW$v_: "img/night-crate18.png",
            uUo0$: "img/day-crate19.png",
            VWouw: "img/night-crate19.png",
            WQ$wV: "img/day-crate20.png",
            ovvVo: "img/night-crate20.png",
            o_WuQ: "img/day-crate21.png",
            OvuuV: "img/night-crate21.png",
            OuuOQ: "img/day-crate22.png",
            QQWUO: "img/night-crate22.png",
            O0Qv_: "img/day-crate23.png",
            uWQwQ: "img/night-crate23.png",
            vUOuO: "img/day-crate24.png",
            _0Qu0: "img/night-crate24.png",
            UQ_W_: "img/day-crate25.png",
            _wWVV: "img/night-crate25.png",
            ovVQ0: "img/day-crate26.png",
            V_vW0: "img/night-crate26.png",
            WwwWo: "img/day-crate27.png",
            vQQUO: "img/night-crate27.png",
            vu$Vo: "img/day-crate28.png",
            WuU$V: "img/night-crate28.png",
            V0OoQ: "img/day-crate29.png",
            vU_0Q: "img/night-crate29.png",
            _ovoW: "img/day-crate30.png",
            $UQuW: "img/night-crate30.png",
            vovw$: "img/day-crate31.png",
            _QQ_u: "img/night-crate31.png",
            OQo0o: "img/day-crate32.png",
            _Wo0V: "img/night-crate32.png",
            UOVOv: "img/day-crate33.png",
            WVOo0: "img/night-crate33.png",
            Q$Ov0: "img/day-crate34.png",
            $uvwQ: "img/night-crate34.png",
            w$uQV: "img/day-crate35.png",
            UU$QU: "img/night-crate35.png",
            QOUuV: "img/day-crate36.png",
            w0$uV: "img/night-crate36.png",
            QvOV_: "img/day-crate37.png",
            WvWoU: "img/night-crate37.png",
            QoW$Q: "img/day-crate38.png",
            oWo_U: "img/night-crate38.png",
            QOvwQ: "img/day-crate39.png",
            UuO0W: "img/night-crate39.png",
            OQvUU: "img/day-crate40.png",
            $uwuw: "img/night-crate40.png",
            $U$W$: "img/day-crate41.png",
            oQ__0: "img/night-crate41.png",
            wV$U0: "img/day-crate42.png",
            o0oVW: "img/night-crate42.png",
            vOuvw: "img/day-crate43.png",
            woowW: "img/night-crate43.png",
            VUwWV: "img/day-crate44.png",
            QoOo$: "img/night-crate44.png",
            $v__U: "img/day-crate45.png",
            wvUVv: "img/night-crate45.png",
            VvU0W: "img/day-crate46.png",
            vwv0$: "img/night-crate46.png",
            ouv0w: "img/day-crate47.png",
            wQ$v_: "img/night-crate47.png",
            VovuO: "img/day-crate48.png",
            WQVOO: "img/night-crate48.png",
            _0WuU: "img/day-crate49.png",
            V0Vw_: "img/night-crate49.png",
            $Uoww: "img/day-crate50.png",
            $vUuO: "img/night-crate50.png",
            o0Qo0: "img/day-crate51.png",
            vWW0O: "img/night-crate51.png",
            OvWoQ: "img/day-crate52.png",
            vWw__: "img/night-crate52.png",
            UQOQ0: "img/day-crate53.png",
            WVW_W: "img/night-crate53.png",
            QUOWo: "img/day-crate54.png",
            O$wUO: "img/night-crate54.png",
            WQWOV: "img/day-crate55.png",
            _WUwQ: "img/night-crate55.png",
            $uQWV: "img/day-crate56.png",
            w$uo0: "img/night-crate56.png",
            _WvUO: "img/day-crate57.png",
            wuvvU: "img/night-crate57.png",
            wQ_ow: "img/day-crate58.png",
            U0$_W: "img/night-crate58.png",
            $WVOQ: "img/day-crate59.png",
            WuUUv: "img/night-crate59.png",
            UvWo$: "img/day-crate60.png",
            U0oQU: "img/night-crate60.png",
            _uO$Q: "img/day-crate61.png",
            _w_OU: "img/night-crate61.png",
            wuvQU: "img/day-crate62.png",
            WwOuw: "img/night-crate62.png",
            v$$0$: "img/day-crate63.png",
            vvoWo: "img/night-crate63.png",
            V0$0V: "img/day-crate64.png",
            ooQW_: "img/night-crate64.png",
            V$VQ0: "img/day-crate65.png",
            $OVOo: "img/night-crate65.png",
            o0QVV: "img/day-crate66.png",
            wv$vQ: "img/night-crate66.png",
            uuO0w: "img/day-crate67.png",
            U_UUW: "img/night-crate67.png",
            $vOVU: "img/day-crate68.png",
            OvuwV: "img/night-crate68.png",
            w0uvv: "img/day-crate69.png",
            $$VV$: "img/night-crate69.png",
            WwVvU: "img/day-crate70.png",
            QVWoQ: "img/night-crate70.png",
            $UWWV: "img/day-crate71.png",
            wwU_O: "img/night-crate71.png",
            $VU0_: "img/day-crate72.png",
            uVQvo: "img/night-crate72.png",
            QWWO_: "img/day-herb0.png",
            $uw0Q: "img/day-herb1.png",
            OOVoV: "img/day-herb2.png",
            QVUWo: "img/day-herb3.png",
            $VoW$: "img/day-herb4.png",
            uVv$o: "img/day-herb5.png",
            WOUoQ: "img/day-herb6.png",
            Qw$$_: "img/day-herb7.png",
            UWUoV: "img/day-herb8.png",
            v0w$Q: "img/day-herb9.png",
            VuUWu: "img/day-herb10.png",
            $O$w0: "img/day-herb11.png",
            u0WwO: "img/day-herb12.png",
            OovQw: "img/day-herb13.png",
            _VW0U: "img/day-herb14.png",
            v0V0v: "img/day-herb15.png",
            OOUQv: "img/day-shell0.png",
            Ou$oU: "img/day-shell1.png",
            vW_UO: "img/day-shell2.png",
            OUQ0v: "img/day-leaf1.png",
            v_VU0: "img/day-leaf2.png",
            W$$VO: "img/day-leaf3.png",
            QWVou: "img/day-leaf4.png",
            wOQQW: "img/day-leaf5.png",
            Uwu$v: "img/day-leaf6.png",
            vuQWQ: "img/day-leaf7.png",
            Ovu_V: "img/day-leaf8.png",
            o0Voo: "img/day-rock0.png",
            VQUw0: "img/day-rock1.png",
            UVOoQ: "img/day-rock2.png",
            oOUv_: "img/day-rock3.png",
            $__uQ: "img/day-rock4.png",
            ow$0V: "img/day-rock5.png",
            V0OQQ: "img/day-rock6.png",
            uuV$u: "img/day-rock7.png",
            wvUQ$: "img/day-rock8.png",
            QQVOv: "img/day-rock9.png",
            VVWQU: "img/day-rock10.png",
            Q$VQv: "img/day-rock11.png",
            QOoOw: "img/day-rock12.png",
            $_u0$: "img/day-rock13.png",
            UUwoO: "img/day-flower1.png",
            QWwVO: "img/day-flower2.png",
            VUQ00: "img/day-flower3.png",
            vuvV0: "img/day-flower4.png",
            UWvOW: "img/day-flower5.png",
            uQWwu: "img/day-flower6.png",
            uuQUw: "img/day-flower7.png",
            QOUQO: "img/day-flower8.png",
            $Oouw: "img/day-flower9.png",
            _Vw$u: "img/day-herb16.png",
            OUU_w: "img/day-herb17.png",
            v_UO_: "img/day-herb18.png",
            o$UwO: "img/day-herb19.png",
            Uuu0_: "img/day-herb20.png",
            Q$_o_: "img/day-herb21.png",
            v0wvO: "img/night-herb0.png",
            _W$0_: "img/night-herb1.png",
            _VUow: "img/night-herb2.png",
            $OoUV: "img/night-herb3.png",
            Ouvuu: "img/night-herb4.png",
            $wQu$: "img/night-herb5.png",
            uuv$o: "img/night-herb6.png",
            $uQU0: "img/night-herb7.png",
            WoUO$: "img/night-herb8.png",
            vV_UW: "img/night-herb9.png",
            oUU0u: "img/night-herb10.png",
            $$oQo: "img/night-herb11.png",
            QV_oo: "img/night-herb12.png",
            Wvu0_: "img/night-herb13.png",
            WQWu$: "img/night-herb14.png",
            Ww_QO: "img/night-herb15.png",
            QOW0Q: "img/night-shell0.png",
            UQVwv: "img/night-shell1.png",
            WV_wW: "img/night-shell2.png",
            Wu$0w: "img/night-leaf1.png",
            $QoQV: "img/night-leaf2.png",
            Qwwow: "img/night-leaf3.png",
            $U__V: "img/night-leaf4.png",
            QoQo_: "img/night-leaf5.png",
            uwQo_: "img/night-leaf6.png",
            W0W__: "img/night-leaf7.png",
            w0$wu: "img/night-leaf8.png",
            UwuU$: "img/night-rock0.png",
            w0_W$: "img/night-rock1.png",
            wQvwo: "img/night-rock2.png",
            _oV0v: "img/night-rock3.png",
            _Uv$w: "img/night-rock4.png",
            _W_Wo: "img/night-rock5.png",
            U0Wow: "img/night-rock6.png",
            vWOQ_: "img/night-rock7.png",
            WV_wu: "img/night-rock8.png",
            wWu$O: "img/night-rock9.png",
            W0Qv_: "img/night-rock10.png",
            vwvQv: "img/night-rock11.png",
            vwU$V: "img/night-rock12.png",
            Q0wWQ: "img/night-rock13.png",
            $O_uO: "img/night-flower1.png",
            OOO0Q: "img/night-flower2.png",
            VuWvQ: "img/night-flower3.png",
            oUuOo: "img/night-flower4.png",
            WWwWo: "img/night-flower5.png",
            V$V$Q: "img/night-flower6.png",
            UoOUo: "img/night-flower7.png",
            OU__0: "img/night-flower8.png",
            VvVwv: "img/night-flower9.png",
            Q0vOW: "img/night-herb16.png",
            wQWo_: "img/night-herb17.png",
            oU$vO: "img/night-herb18.png",
            v$uov: "img/night-herb19.png",
            _uVoW: "img/night-herb20.png",
            wuWUQ: "img/night-herb21.png",
            QovvO: "img/day-river000-010-000.png",
            wu$$U: "img/day-river000-010-010.png",
            VVUvu: "img/day-river000-011-000.png",
            UW__Q: "img/day-river000-011-010.png",
            _wwvO: "img/day-river000-011-011.png",
            Ww_WU: "img/day-river000-110-000.png",
            vwuQ$: "img/day-river000-110-010.png",
            oUW$V: "img/day-river000-110-110.png",
            WwU$Q: "img/day-river000-111-000.png",
            $ooOO: "img/day-river000-111-010.png",
            O_woo: "img/day-river000-111-011.png",
            VVvV0: "img/day-river000-111-110.png",
            _OWWU: "img/day-river000-111-111.png",
            UVwVQ: "img/day-river010-010-000.png",
            vU$0Q: "img/day-river010-010-010.png",
            W_uUv: "img/day-river010-011-000.png",
            oQ$vo: "img/day-river010-011-010.png",
            V_vVV: "img/day-river010-011-011.png",
            uwQOQ: "img/day-river010-110-000.png",
            wQvuo: "img/day-river010-110-010.png",
            QUOWW: "img/day-river010-110-110.png",
            WVQv_: "img/day-river010-111-000.png",
            wUOvW: "img/day-river010-111-010.png",
            QWQvQ: "img/day-river010-111-011.png",
            V_OUW: "img/day-river010-111-110.png",
            U$oV$: "img/day-river010-111-111.png",
            uUwWQ: "img/day-river011-011-000.png",
            $OQuV: "img/day-river011-011-010.png",
            Q_UuW: "img/day-river011-011-011.png",
            Q$v0U: "img/day-river011-111-000.png",
            ooO$U: "img/day-river011-111-010.png",
            Ou_Wu: "img/day-river011-111-011.png",
            oUUW0: "img/day-river011-111-110.png",
            QUU0U: "img/day-river011-111-111.png",
            UWVWO: "img/day-river110-110-000.png",
            vOuVv: "img/day-river110-110-010.png",
            uWuQQ: "img/day-river110-110-110.png",
            wVUVW: "img/day-river110-111-000.png",
            vQuUQ: "img/day-river110-111-010.png",
            QoOOo: "img/day-river110-111-011.png",
            $W_uO: "img/day-river110-111-110.png",
            Qu$O_: "img/day-river110-111-111.png",
            wwvQv: "img/day-river111-111-011.png",
            u0_OO: "img/day-river111-111-110.png",
            wwvQv: "img/day-river111-111-011.png",
            $vvUV: "img/day-river111-111-000.png",
            $wV$_: "img/day-river111-111-111.png",
            U$vV$: "img/day-river111-111-010.png",
            Vw_QO: "img/night-river000-010-000.png",
            QvQOU: "img/night-river000-010-010.png",
            UOwuW: "img/night-river000-011-000.png",
            OOW_$: "img/night-river000-011-010.png",
            O0Ouw: "img/night-river000-011-011.png",
            wV$u_: "img/night-river000-110-000.png",
            ww$Qv: "img/night-river000-110-010.png",
            oQVuU: "img/night-river000-110-110.png",
            U0Voo: "img/night-river000-111-000.png",
            W_QVW: "img/night-river000-111-010.png",
            v$voO: "img/night-river000-111-011.png",
            Q$$$W: "img/night-river000-111-110.png",
            VooVu: "img/night-river000-111-111.png",
            o0OVu: "img/night-river010-010-000.png",
            wUuVV: "img/night-river010-010-010.png",
            $vv_w: "img/night-river010-011-000.png",
            _uu$w: "img/night-river010-011-010.png",
            $uuVV: "img/night-river010-011-011.png",
            OVU$O: "img/night-river010-110-000.png",
            QUQ00: "img/night-river010-110-010.png",
            Quw0W: "img/night-river010-110-110.png",
            WQQOo: "img/night-river010-111-000.png",
            wVuW_: "img/night-river010-111-010.png",
            v0wWQ: "img/night-river010-111-011.png",
            wu$UQ: "img/night-river010-111-110.png",
            Q0WQW: "img/night-river010-111-111.png",
            vvoVw: "img/night-river011-011-000.png",
            _V_vW: "img/night-river011-011-010.png",
            $oUOU: "img/night-river011-011-011.png",
            V0$W0: "img/night-river011-111-000.png",
            OQ_WV: "img/night-river011-111-010.png",
            OWUv_: "img/night-river011-111-011.png",
            QOu$_: "img/night-river011-111-110.png",
            _Q$VU: "img/night-river011-111-111.png",
            oW_$W: "img/night-river110-110-000.png",
            VOwQw: "img/night-river110-110-010.png",
            OVwQQ: "img/night-river110-110-110.png",
            $OQu_: "img/night-river110-111-000.png",
            _VOW$: "img/night-river110-111-010.png",
            W_uo0: "img/night-river110-111-011.png",
            O0UV$: "img/night-river110-111-110.png",
            _0Q_w: "img/night-river110-111-111.png",
            WuuVU: "img/night-river111-111-011.png",
            vUVoO: "img/night-river111-111-110.png",
            WuuVU: "img/night-river111-111-011.png",
            Oo$uw: "img/night-river111-111-000.png",
            vQw__: "img/night-river111-111-111.png",
            uoO0$: "img/night-river111-111-010.png",
            uuQ: "img/day-pebblecompo1.png",
            oWV: "img/day-pebblecompo2.png",
            uUo: "img/day-pebblecompo3.png",
            _0u: "img/day-pebblecompo4.png",
            Uo_: "img/day-pebblecompo5.png",
            oov: "img/day-pebblecompo6.png",
            $$_: "img/day-pebblecompo7.png",
            UwVO_: "img/day-pebblecompo8.png",
            Vow: "img/day-pebblecompo9.png",
            vQu: "img/day-pebblecompo10.png",
            o$U: "img/day-pebblecompo11.png",
            $vvwU: "img/day-pebblecompo12.png",
            _Vw: "img/day-pebblecompo13.png",
            _wwvw: "img/day-pebblecompo14.png",
            uVo: "img/day-pebblecompo15.png",
            $Oo: "img/day-pebblecompo16.png",
            QUQ: "img/day-pebblecompo17.png",
            _Ov: "img/day-pebblecompo18.png",
            UOw: "img/day-pebblecompo19.png",
            uQO: "img/day-pebblecompo20.png",
            ouO: "img/day-pebblecompo21.png",
            UQU: "img/day-pebblecompo22.png",
            uv$: "img/day-pebblecompo23.png",
            woo: "img/day-pebblecompo24.png",
            OO_: "img/day-pebblecompo25.png",
            OOw: "img/day-pebblecompo26.png",
            WuvVU: "img/day-pebblecompo27.png",
            _u0: "img/day-pebblecompo28.png",
            uvv: "img/night-pebblecompo1.png",
            V_O: "img/night-pebblecompo2.png",
            vuU: "img/night-pebblecompo3.png",
            $v_: "img/night-pebblecompo4.png",
            UV_: "img/night-pebblecompo5.png",
            QVO: "img/night-pebblecompo6.png",
            Uvv: "img/night-pebblecompo7.png",
            uQ$wv: "img/night-pebblecompo8.png",
            Qw0: "img/night-pebblecompo9.png",
            _o_: "img/night-pebblecompo10.png",
            _Q_: "img/night-pebblecompo11.png",
            UQuov: "img/night-pebblecompo12.png",
            oU_: "img/night-pebblecompo13.png",
            wWuVw: "img/night-pebblecompo14.png",
            wu$: "img/night-pebblecompo15.png",
            uWV: "img/night-pebblecompo16.png",
            Uuo: "img/night-pebblecompo17.png",
            wOO: "img/night-pebblecompo18.png",
            UuW: "img/night-pebblecompo19.png",
            ww$: "img/night-pebblecompo20.png",
            oOW: "img/night-pebblecompo21.png",
            OQ0: "img/night-pebblecompo22.png",
            VoQ: "img/night-pebblecompo23.png",
            w_Q: "img/night-pebblecompo24.png",
            UwO: "img/night-pebblecompo25.png",
            uOw: "img/night-pebblecompo26.png",
            uWQ_V: "img/night-pebblecompo27.png",
            O$o: "img/night-pebblecompo28.png",
            QVouU: "img/day-baby-mammoth.png",
            vOWuO: "img/day-baby-mammoth-tamed.png",
            _Wv$Q: "img/day-baby-mammoth-angry.png",
            O_v0v: "img/night-baby-mammoth.png",
            V0vwU: "img/night-baby-mammoth-tamed.png",
            wOWvV: "img/night-baby-mammoth-angry.png",
            uO$wV: "img/inv-mammoth-out.png",
            Ouu_U: "img/inv-mammoth-in.png",
            oUvvU: "img/inv-mammoth-click.png",
            UUUV0: "img/hurt-baby-mammoth.png",
            $OV: "img/baby-mammoth-step.png",
            VOo_v: "img/day-flower-hat.png",
            WVv$v: "img/night-flower-hat.png",
            _VuWW: "img/inv-flower-hat-out.png",
            $Qw_w: "img/inv-flower-hat-in.png",
            $0Wv$: "img/inv-flower-hat-click.png",
            UvQVo: "img/day-fur-hat.png",
            Oo$0w: "img/night-fur-hat.png",
            ouU0$: "img/inv-fur-hat-out.png",
            vVU0V: "img/inv-fur-hat-in.png",
            O$wOQ: "img/inv-fur-hat-click.png",
            ouu00: "img/day-mammoth.png",
            oV_uv: "img/night-mammoth.png",
            wvQwO: "img/hurt-mammoth.png",
            WoV_0: "img/inv-mammoth-fur-out.png",
            U$VU0: "img/inv-mammoth-fur-in.png",
            QvOWO: "img/inv-mammoth-fur-click.png",
            O$o_U: "img/inv-wood-bow-out.png",
            v$uuQ: "img/inv-wood-bow-in.png",
            vwUv_: "img/inv-wood-bow-click.png",
            uWQ$W: "img/inv-wood-arrow-out.png",
            u0ooo: "img/inv-wood-arrow-in.png",
            ovovQ: "img/inv-wood-arrow-click.png",
            owU_o: "img/day-wood-bow2.png",
            uvouW: "img/night-wood-bow2.png",
            V0vu$: "img/day-wood-arrow.png",
            O$__w: "img/night-wood-arrow.png",
            u0WOu: "img/inv-stone-bow-out.png",
            Q0u_U: "img/inv-stone-bow-in.png",
            U0QUQ: "img/inv-stone-bow-click.png",
            WOvwU: "img/inv-stone-arrow-out.png",
            ooU_u: "img/inv-stone-arrow-in.png",
            VQowv: "img/inv-stone-arrow-click.png",
            Vv$uU: "img/day-stone-bow.png",
            vW$U0: "img/night-stone-bow.png",
            uuvo$: "img/day-stone-arrow.png",
            uuQO_: "img/night-stone-arrow.png",
            O_vvU: "img/inv-gold-bow-out.png",
            U_$wo: "img/inv-gold-bow-in.png",
            WWuo$: "img/inv-gold-bow-click.png",
            u0OO0: "img/inv-gold-arrow-out.png",
            wW$_U: "img/inv-gold-arrow-in.png",
            oUvOo: "img/inv-gold-arrow-click.png",
            QovoW: "img/day-gold-bow.png",
            vQWUu: "img/night-gold-bow.png",
            $UwVU: "img/day-gold-arrow.png",
            _$uou: "img/night-gold-arrow.png",
            _w$WQ: "img/inv-diamond-bow-out.png",
            w_Q__: "img/inv-diamond-bow-in.png",
            QuWwW: "img/inv-diamond-bow-click.png",
            _OvVv: "img/inv-diamond-arrow-out.png",
            VwwU_: "img/inv-diamond-arrow-in.png",
            v$oWQ: "img/inv-diamond-arrow-click.png",
            owQw_: "img/day-diamond-bow.png",
            UoO$v: "img/night-diamond-bow.png",
            UVQWv: "img/day-diamond-arrow.png",
            UwoQv: "img/night-diamond-arrow.png",
            v0uU_: "img/inv-amethyst-bow-out.png",
            v0socket: "img/inv-amethyst-bow-in.png",
            WUvuU: "img/inv-amethyst-bow-click.png",
            vW_UU: "img/inv-amethyst-arrow-out.png",
            QowOu: "img/inv-amethyst-arrow-in.png",
            OuovO: "img/inv-amethyst-arrow-click.png",
            W$VvV: "img/day-amethyst-bow.png",
            UWUou: "img/night-amethyst-bow.png",
            _WuQV: "img/day-amethyst-arrow.png",
            wuOUu: "img/night-amethyst-arrow.png",
            Ovw$o: "img/inv-dragon-bow-out.png",
            $__uo: "img/inv-dragon-bow-in.png",
            Wo_00: "img/inv-dragon-bow-click.png",
            _o$OO: "img/inv-dragon-arrow-out.png",
            UVWOu: "img/inv-dragon-arrow-in.png",
            vUO$0: "img/inv-dragon-arrow-click.png",
            Wo$$W: "img/day-dragon-bow.png",
            Q0U$Q: "img/night-dragon-bow.png",
            o_QwO: "img/day-dragon-arrow.png",
            VuWoV: "img/night-dragon-arrow.png",
            u0QW$: "img/inv-reidite-bow-out.png",
            oOO_Q: "img/inv-reidite-bow-in.png",
            u0Uov: "img/inv-reidite-bow-click.png",
            $UvwW: "img/inv-reidite-arrow-out.png",
            vwQwO: "img/inv-reidite-arrow-in.png",
            O0VO0: "img/inv-reidite-arrow-click.png",
            u$oQO: "img/day-reidite-bow.png",
            vvQv$: "img/night-reidite-bow.png",
            QoOUw: "img/day-reidite-arrow.png",
            WWuQO: "img/night-reidite-arrow.png",
            OQUW0: "img/bandage-activated.png",
            Voo: "img/auto-feed.png",
            Q0$_$: "img/stop-regeneration.png",
            _0o0O: "img/stop-regeneration2.png",
            _Vv_o: "img/day-wood-platform.png",
            OuO$O: "img/night-wood-platform.png",
            W$uvV: "img/inv-wood-platform-in.png",
            W_UVo: "img/inv-wood-platform-out.png",
            QO$WV: "img/inv-wood-platform-click.png",
            Vwvou: "img/day-wood-shield.png",
            VwVVU: "img/night-wood-shield.png",
            vw$$u: "img/day-stone-shield.png",
            $Vwow: "img/night-stone-shield.png",
            U_Vvo: "img/day-gold-shield.png",
            oVW$_: "img/night-gold-shield.png",
            w$vW0: "img/day-diamond-shield.png",
            ___o$: "img/night-diamond-shield.png",
            WUvQU: "img/day-amethyst-shield.png",
            owuoQ: "img/night-amethyst-shield.png",
            rdshield: "img/day-reidite-shield.png",
            rnshield: "img/night-reidite-shield.png",
            VuoU0: "img/inv-wood-shield-in.png",
            o$wWQ: "img/inv-wood-shield-out.png",
            uUu_U: "img/inv-wood-shield-click.png",
            V$$w0: "img/inv-stone-shield-in.png",
            U$WQO: "img/inv-stone-shield-out.png",
            UoQ_w: "img/inv-stone-shield-click.png",
            v_UoQ: "img/inv-gold-shield-in.png",
            oQVuQ: "img/inv-gold-shield-out.png",
            wQoov: "img/inv-gold-shield-click.png",
            WUuwO: "img/inv-diamond-shield-in.png",
            vOVVo: "img/inv-diamond-shield-out.png",
            uVQW$: "img/inv-diamond-shield-click.png",
            VuvvV: "img/inv-amethyst-shield-in.png",
            UVVQw: "img/inv-amethyst-shield-out.png",
            VwwWV: "img/inv-amethyst-shield-click.png",
            VQV$u: "img/inv-reidite-shield-in.png",
            _OuoV: "img/inv-reidite-shield-out.png",
            VooOv: "img/inv-reidite-shield-click.png",
            VvwV_: "img/day-machete.png",
            _U__w: "img/night-machete.png",
            OOuQO: "img/inv-machete-in.png",
            WoQ0O: "img/inv-machete-out.png",
            O0vUU: "img/inv-machete-click.png"
        };
        wUV_o = [{}];
        wUV_o[0].stringify = function(a) {
            for (var e = new Uint8Array(new ArrayBuffer(a.length)), f = 0; f < a.length; f++) e[f] = a[f];
            return e;
        };
        VWUwO = {};
        u$WW0 = {};
        for (za in o) VWUwO[za] = o[za];
        u = [];
        VV = {
            V$v: 0,
            vv: 1,
            V0: 2,
            $U: 3,
            v$: 4,
            $W: 5,
            w_: 6,
            W_v: 7,
            ouv: 8
        };
        Vwu = {};
        $VO = [];
        QWWQW = function(a, e) {
            for (var f = 0; f < a.length; f++)
                if (a[f].id === e) return f;
            return -1;
        };
        var td = [];
        OWwwU = function() {
            for (var a = 0; 2 > a; a++) {
                u[e.uQQ][a].clearRect(0, 0, 193, 193);
                u[e.uQQ][a].drawImage($VO.MAP[a], 0, 0, 193, 193);
                u[e._$W][a].clearRect(0, 0, 600, 600);
                u[e._$W][a].drawImage($VO.MAP[a], 0, 0, 600, 600);
                for (var f = p.wUv.length - 1; 0 <= f; f--) {
                    var g = p.wUv[f],
                        d = (193 * g.x1) / (100 * p.$$$),
                        c = (193 * g.y1) / (100 * p.WV_),
                        h = (193 * g.w) / (100 * p.$$$),
                        k = (193 * g.uQ) / (100 * p.WV_),
                        l = (600 * g.x1) / (100 * p.$$$),
                        m = (600 * g.y1) / (100 * p.WV_),
                        n = (600 * g.w) / (100 * p.$$$),
                        q = (600 * g.uQ) / (100 * p.WV_);
                    (g.wU === p.vWo) && (u[e.uQQ][a].drawImage($VO.FOREST[a], d, c, h, k), u[e._$W][a].drawImage($VO.FOREST[a], l, m, n, q));
                    (g.wU === p.wV$) && (u[e.uQQ][a].drawImage($VO.WINTER[a], d, c, h, k), u[e._$W][a].drawImage($VO.WINTER[a], l, m, n, q));
                    (g.wU === p.uQ$) && (u[e.uQQ][a].drawImage($VO.LAVA[a], d, c, h, k), u[e._$W][a].drawImage($VO.LAVA[a], l, m, n, q));
                    (g.wU === p.u_u) && (u[e.uQQ][a].drawImage($VO.CAVE[a], d, c, h, k), u[e._$W][a].drawImage($VO.CAVE[a], l, m, n, q));
                    (g.wU === p.$oW) && (u[e.uQQ][a].drawImage($VO.DESERT[a], d, c, h, k), u[e._$W][a].drawImage($VO.DESERT[a], l, m, n, q));
                }
            }
        };
        oO$ow = function() {
            Vwu = {
                U__: [{
                    id: 0,
                    V_: o.V0$QV,
                    u0: o._w$0v,
                    _u: o.OOwV$,
                    OU: o.WVU$o,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Starver"
                }, {
                    id: 3,
                    V_: o.uuvV$,
                    u0: o.uQWuu,
                    _u: o._$WUo,
                    OU: o.uuuOO,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Angry"
                }, {
                    id: 2,
                    V_: o.u0U_W,
                    u0: o.U_OWo,
                    _u: o.o0Uvv,
                    OU: o.o0voW,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Sad"
                }, {
                    id: 9,
                    V_: o._vQUQ,
                    u0: o.OVV_V,
                    _u: o.QoU0v,
                    OU: o._$Qu$,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Happy 1"
                }, {
                    id: 1,
                    V_: o._0VUU,
                    u0: o.V$v0w,
                    _u: o.Q$$0U,
                    OU: o.uWOuQ,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "What?"
                }, {
                    id: 4,
                    V_: o.vWWUO,
                    u0: o._w$Uw,
                    _u: o.V$_WQ,
                    OU: o.QwWO_,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Suspicious"
                }, {
                    id: 5,
                    V_: o.WOwOU,
                    u0: o.QWwou,
                    _u: o.v0vVu,
                    OU: o.UoU$V,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Scar"
                }, {
                    id: 6,
                    V_: o.WVWvo,
                    u0: o.vWoOO,
                    _u: o.wuv_O,
                    OU: o.uWQUo,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "In Trouble"
                }, {
                    id: 7,
                    V_: o.w$$_W,
                    u0: o.O_V$W,
                    _u: o.ouwoU,
                    OU: o.QuVU0,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Cute"
                }, {
                    id: 8,
                    V_: o.VuoVQ,
                    u0: o.OV$_w,
                    _u: o.Wov0$,
                    OU: o.QWuwv,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Bored 1"
                }, {
                    id: 10,
                    V_: o.OOVu$,
                    u0: o.VWVQW,
                    _u: o.WuuWU,
                    OU: o.wWoVu,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Happy 2"
                }, {
                    id: 11,
                    V_: o.WoUu_,
                    u0: o.W_W_W,
                    _u: o.wVOQu,
                    OU: o.W0$V$,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Crazy"
                }, {
                    id: 12,
                    V_: o.$_Uuo,
                    u0: o.vwQVw,
                    _u: o.Uuuuu,
                    OU: o.QVUoQ,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Happy 3"
                }, {
                    id: 13,
                    V_: o.uVOUO,
                    u0: o.WVooQ,
                    _u: o.O___0,
                    OU: o.U_$oV,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Very Cute"
                }, {
                    id: 14,
                    V_: o._$o$O,
                    u0: o.U0$QQ,
                    _u: o.vo$ow,
                    OU: o.VOOOW,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Curious"
                }, {
                    id: 15,
                    V_: o.UwO_W,
                    u0: o.vWwU0,
                    _u: o.$wowQ,
                    OU: o.o0Oo0,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Bored 2"
                }, {
                    id: 16,
                    V_: o.uoWoV,
                    u0: o.WQv_O,
                    _u: o.VWQ$v,
                    OU: o._wuuu,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Happy 4"
                }, {
                    id: 17,
                    V_: o.Vo_0_,
                    u0: o.uvOvQ,
                    _u: o.uUOoU,
                    OU: o.Qu_U$,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Scar 2"
                }, {
                    id: 18,
                    V_: o.WwUuO,
                    u0: o.oQWQo,
                    _u: o.uuO_o,
                    OU: o.Uuuwu,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Sick"
                }, {
                    id: 19,
                    V_: o._Oov_,
                    u0: o._0oVQ,
                    _u: o.v__Wv,
                    OU: o.wvQO$,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Somnambule"
                }, {
                    id: 24,
                    V_: o.w0oV$,
                    u0: o.$O_uU,
                    _u: o.VOvwV,
                    OU: o.Owovu,
                    wO: VV.vv,
                    Qu: "Pixelbitie",
                    name: "Feel Bad"
                }, {
                    id: 23,
                    V_: o.UO_wW,
                    u0: o.UuoWW,
                    _u: o.uWv_$,
                    OU: o.W$UW$,
                    wO: VV.vv,
                    Qu: "Pixelbitie",
                    name: "Mmmh."
                }, {
                    id: 103,
                    V_: o.voUuu,
                    u0: o.WuUov,
                    _u: o.W0Ou$,
                    OU: o.VVWwV,
                    wO: VV.vv,
                    Qu: "pizza wa",
                    name: "Panic"
                }, {
                    id: 105,
                    V_: o.$Ovwv,
                    u0: o.v$OwV,
                    _u: o.W_OU_,
                    OU: o.UoOoO,
                    wO: VV.vv,
                    Qu: "pizza wa",
                    name: "Hypnotic"
                }, {
                    id: 106,
                    V_: o._U$$u,
                    u0: o.W_wW$,
                    _u: o.VWQW0,
                    OU: o.W$uvQ,
                    wO: VV.vv,
                    Qu: "pizza wa",
                    name: "Stars in the eyes"
                }, {
                    id: 104,
                    V_: o.vuvQ0,
                    u0: o.OOvOQ,
                    _u: o.QQ$WU,
                    OU: o.vUo0W,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Scared at night"
                }, {
                    id: 20,
                    V_: o.WWWoV,
                    u0: o.Q__wV,
                    _u: o.wWVW$,
                    OU: o.w$_wU,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Vampire"
                }, {
                    id: 21,
                    V_: o.Q__0v,
                    u0: o.woQw0,
                    _u: o.v_QUO,
                    OU: o._o$ou,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Zombie"
                }, {
                    id: 22,
                    V_: o.uuWOQ,
                    u0: o.vwVVw,
                    _u: o.VowVO,
                    OU: o.WUw00,
                    wO: VV.V0,
                    Qu: "Pixelbitie",
                    name: "Devaster"
                }, {
                    id: 116,
                    V_: o.uoQv$,
                    u0: o.oO$00,
                    _u: o.WoW_Q,
                    OU: o.VUOu0,
                    wO: VV.V0,
                    Qu: "Fukss",
                    name: "Dead Devaster"
                }, {
                    id: 27,
                    V_: o.o$QQ_,
                    u0: o.Wo_oo,
                    _u: o.$wwuQ,
                    OU: o.V_v_Q,
                    wO: VV.V0,
                    Qu: "Winter",
                    name: "Cactus"
                }, {
                    id: 28,
                    V_: o.QQQOW,
                    u0: o.OooVU,
                    _u: o.w$Uow,
                    OU: o.WOuuv,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Bee"
                }, {
                    id: 49,
                    V_: o._w_O0,
                    u0: o.QOvVu,
                    _u: o.ooUU0,
                    OU: o.$QO_O,
                    wO: VV.V0,
                    Qu: "Taco4Life",
                    name: "Camo Skin"
                }, {
                    id: 58,
                    V_: o.vOOUw,
                    u0: o.Ovwu$,
                    _u: o.$$OwW,
                    OU: o.wVoVw,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Blue Limax Skin"
                }, {
                    id: 59,
                    V_: o.VuUV$,
                    u0: o.vwV_Q,
                    _u: o.V0OoV,
                    OU: o.WO$WU,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Red Limax Skin"
                }, {
                    id: 94,
                    V_: o.QvvO_,
                    u0: o.vuwQ0,
                    _u: o.VUuQv,
                    OU: o.V0_wW,
                    wO: VV.V0,
                    Qu: "Taco4Life",
                    name: "Mr. Pumpkin"
                }, {
                    id: 109,
                    V_: o.vuW0w,
                    u0: o.wvouQ,
                    _u: o.VvuUU,
                    OU: o.QuUvO,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Wood"
                }, {
                    id: 114,
                    V_: o.Qou$O,
                    u0: o.vWUWv,
                    _u: o.o0vUw,
                    OU: o.VVQuO,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Zebra"
                }, {
                    id: 120,
                    V_: o.U0Qov,
                    u0: o._$voV,
                    _u: o.QW_ww,
                    OU: o.O_Ouo,
                    wO: VV.V0,
                    Qu: "CrysTal",
                    name: "Tiger"
                }, {
                    id: 134,
                    V_: o.VOv__,
                    u0: o.VWWou,
                    _u: o.WQQQ_,
                    OU: o.Uw$v$,
                    wO: VV.V0,
                    Qu: "Franchestcreator",
                    name: "Day or Night"
                }, {
                    id: 135,
                    V_: o.QVQuU,
                    u0: o.WuoUw,
                    _u: o.ouwoO,
                    OU: o.Ovv_u,
                    wO: VV.V0,
                    Qu: "Poinet",
                    name: "Square Starver"
                }, {
                    id: 136,
                    V_: o.VovVQ,
                    u0: o.QUuVQ,
                    _u: o._0$$v,
                    OU: o.WouU_,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Voodoo Doll"
                }, {
                    id: 137,
                    V_: o.wuV_0,
                    u0: o.voQOo,
                    _u: o.u$vUv,
                    OU: o.QoOOu,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Frankenstein"
                }, {
                    id: 138,
                    V_: o.u$ww$,
                    u0: o.vwV_$,
                    _u: o._uUOo,
                    OU: o.$oV$V,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Mummy"
                }, {
                    id: 139,
                    V_: o.$W$OQ,
                    u0: o.QO$W$,
                    _u: o.W$$Ov,
                    OU: o.$$uw_,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Werewolf"
                }, {
                    id: 140,
                    V_: o._$owV,
                    u0: o.wUvQv,
                    _u: o.UVO_o,
                    OU: o.Wv_vV,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Cthulhu"
                }, {
                    id: 141,
                    V_: o.QWW0W,
                    u0: o.W0W0v,
                    _u: o.oWvUv,
                    OU: o.QWwOO,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Sea Man"
                }, {
                    id: 142,
                    V_: o.UWowQ,
                    u0: o.Vvow0,
                    _u: o.VWUQU,
                    OU: o.WU_$O,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Pumpkin"
                }, {
                    id: 148,
                    V_: o.uQUQw,
                    u0: o.WUUvv,
                    _u: o.$QWvv,
                    OU: o.uOuvv,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Snowman"
                }, {
                    id: 149,
                    V_: o.wuOoO,
                    u0: o.OvQUW,
                    _u: o.u_V$W,
                    OU: o.$oOQv,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Christmas Tree Man"
                }, {
                    id: 150,
                    V_: o.$wuQu,
                    u0: o.$u_OO,
                    _u: o._Ww$V,
                    OU: o.WVWo$,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Mrs Bell"
                }, {
                    id: 151,
                    V_: o.ouO_O,
                    u0: o.oOQ_O,
                    _u: o.uW_wV,
                    OU: o.WWvV0,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Elfy"
                }, {
                    id: 152,
                    V_: o.u$uw_,
                    u0: o.O$_Ww,
                    _u: o.OvVUQ,
                    OU: o.vWv0U,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Old Mr Present"
                }, {
                    id: 153,
                    V_: o.V$OwO,
                    u0: o.$UW__,
                    _u: o.vuwUv,
                    OU: o.VUVV_,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "My Dear Old Deer"
                }, {
                    id: 154,
                    V_: o.owWuU,
                    u0: o.uo$QQ,
                    _u: o.usocketv,
                    OU: o.Quo0o,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Mr Angel"
                }, {
                    id: 155,
                    V_: o.vvWOu,
                    u0: o._o$V$,
                    _u: o.V_WOV,
                    OU: o.vwW$$,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Mr Ice Cube"
                }, {
                    id: 156,
                    V_: o.OVVu$,
                    u0: o.$OVUQ,
                    _u: o.OOOow,
                    OU: o.uUUvU,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Mr Snowman"
                }, {
                    id: 159,
                    V_: o.UQ_wv,
                    u0: o.OQvo_,
                    _u: o.QwvO0,
                    OU: o.w_vUO,
                    wO: VV.V0,
                    Qu: "CrysTal",
                    name: "Crystal Sky Skin"
                }, {
                    id: 167,
                    V_: o.O0WUU,
                    u0: o._0v$o,
                    _u: o.OuWv_,
                    OU: o.uu$Uu,
                    wO: VV.V0,
                    Qu: "Franchestcreator",
                    name: "Radioactive Starver"
                }, {
                    id: 169,
                    V_: o.OvvV$,
                    u0: o.ooOuQ,
                    _u: o.WUVw$,
                    OU: o.O0WO_,
                    wO: VV.V0,
                    Qu: "TheScaryBlaze",
                    name: "Eaten Cookie"
                }, {
                    id: 170,
                    V_: o.Oov0O,
                    u0: o.uVoO_,
                    _u: o.UO_WV,
                    OU: o.$wuw0,
                    wO: VV.V0,
                    Qu: "aloner",
                    name: "Blob Thing"
                }, {
                    id: 172,
                    V_: o.wQQWW,
                    u0: o.vvVwU,
                    _u: o.UU__o,
                    OU: o._W_0$,
                    wO: VV.V0,
                    Qu: "aloner",
                    name: "Machine Mask"
                }, {
                    id: 29,
                    V_: o._0$$w,
                    u0: o.Ousocket,
                    _u: o.voouQ,
                    OU: o.oOUou,
                    wO: VV.$U,
                    Qu: "Pixelbitie",
                    name: "Lollipop 1"
                }, {
                    id: 30,
                    V_: o.OuWOu,
                    u0: o.Uww0w,
                    _u: o.Q0wV0,
                    OU: o.WuWU$,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Lollipop 2"
                }, {
                    id: 31,
                    V_: o.$Wwuw,
                    u0: o.voOUO,
                    _u: o.voWUv,
                    OU: o.vvOw$,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Lollipop 3"
                }, {
                    id: 32,
                    V_: o.vuWOw,
                    u0: o._W_wW,
                    _u: o.OW_QW,
                    OU: o.vvVQU,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Lollipop 4"
                }, {
                    id: 33,
                    V_: o.Q_VoO,
                    u0: o.wovU_,
                    _u: o.oQOQo,
                    OU: o.o$VWO,
                    wO: VV.$U,
                    Qu: "Sushui",
                    name: "Yellow Bird"
                }, {
                    id: 34,
                    V_: o.O_VwV,
                    u0: o.$Ww0U,
                    _u: o.VV$w_,
                    OU: o.oWwUv,
                    wO: VV.$U,
                    Qu: "Sushui",
                    name: "Red Bird"
                }, {
                    id: 35,
                    V_: o.$OUQ0,
                    u0: o.Q_VQQ,
                    _u: o.QWvWo,
                    OU: o.Q0QQu,
                    wO: VV.$U,
                    Qu: "Sushui",
                    name: "Blue Bird"
                }, {
                    id: 37,
                    V_: o.uVw$_,
                    u0: o.OU$_V,
                    _u: o.OU$wO,
                    OU: o.w0__o,
                    wO: VV.$U,
                    Qu: "Winter",
                    name: "Owl"
                }, {
                    id: 52,
                    V_: o.oWUWw,
                    u0: o.$o_WV,
                    _u: o.UU$Vw,
                    OU: o.WwUwU,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Nemo"
                }, {
                    id: 53,
                    V_: o.WUVvO,
                    u0: o.wVV0v,
                    _u: o.wOv$O,
                    OU: o.VQVwQ,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Mr. Bread"
                }, {
                    id: 74,
                    V_: o.Q_vQO,
                    u0: o.vOQOO,
                    _u: o.w0vVV,
                    OU: o.Q$u$W,
                    wO: VV.$U,
                    Qu: "Communist & Taco4Life",
                    name: "Mr. Bread 2"
                }, {
                    id: 75,
                    V_: o.UO_Qu,
                    u0: o.OooOV,
                    _u: o.U$OUW,
                    OU: o.vwuOQ,
                    wO: VV.$U,
                    Qu: "Communist & Taco4Life",
                    name: "Mr. Bread 3"
                }, {
                    id: 60,
                    V_: o.$_vwU,
                    u0: o.Vvo0W,
                    _u: o.WUUuo,
                    OU: o._0QOW,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Red Berry"
                }, {
                    id: 61,
                    V_: o.u0w$o,
                    u0: o.uoVQ$,
                    _u: o._wouQ,
                    OU: o.OvVWU,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Old Berry"
                }, {
                    id: 70,
                    V_: o.W_QVV,
                    u0: o.wUwvO,
                    _u: o.wWWO$,
                    OU: o.vWuOo,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Cake"
                }, {
                    id: 71,
                    V_: o.UO$O_,
                    u0: o._WUOO,
                    _u: o.QvWvo,
                    OU: o.v$UOW,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Christmas Cake"
                }, {
                    id: 77,
                    V_: o._QuVW,
                    u0: o.V_vvu,
                    _u: o.oo_$_,
                    OU: o.oO_wW,
                    wO: VV.$U,
                    Qu: "Pancakez",
                    name: "Mr. Pancake"
                }, {
                    id: 87,
                    V_: o.VW_UW,
                    u0: o.___$W,
                    _u: o.O$$Wv,
                    OU: o.WWQ0v,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Mr. Taco"
                }, {
                    id: 78,
                    V_: o.ovo0u,
                    u0: o.oWW_O,
                    _u: o.wUVuU,
                    OU: o.UWuOQ,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Mr. Bottle"
                }, {
                    id: 79,
                    V_: o.u0W0U,
                    u0: o.vVoUV,
                    _u: o.uUw0Q,
                    OU: o.OvW0u,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Mr. Bottle 2"
                }, {
                    id: 97,
                    V_: o.Uo$O$,
                    u0: o.woV$$,
                    _u: o._0wW$,
                    OU: o.QoQuU,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Pink Rabbit"
                }, {
                    id: 102,
                    V_: o.w_$u$,
                    u0: o.OQO_V,
                    _u: o.vuOU_,
                    OU: o.$voOW,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Marshmallow"
                }, {
                    id: 107,
                    V_: o.VVwvQ,
                    u0: o.QUO$v,
                    _u: o.QOvwo,
                    OU: o.OvW0o,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Fox"
                }, {
                    id: 132,
                    V_: o.ouOQ0,
                    u0: o.uuWwo,
                    _u: o._UOV_,
                    OU: o.QvVvV,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Raccoon"
                }, {
                    id: 111,
                    V_: o.UWvVW,
                    u0: o.WV$Qo,
                    _u: o.o__V_,
                    OU: o.QuvOV,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Cloud"
                }, {
                    id: 113,
                    V_: o.V0O$$,
                    u0: o.W__v_,
                    _u: o.W_VOu,
                    OU: o.$Wuw0,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Moon"
                }, {
                    id: 117,
                    V_: o.UQwOv,
                    u0: o.VQ$u_,
                    _u: o.$u$0U,
                    OU: o.v_$_o,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Mr. Panda"
                }, {
                    id: 118,
                    V_: o.VW_UV,
                    u0: o.vo_Vu,
                    _u: o.vowvO,
                    OU: o.u0oOW,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Mr. Strawberry"
                }, {
                    id: 119,
                    V_: o.UWWU0,
                    u0: o.Q0wV_,
                    _u: o.woQO_,
                    OU: o._vQO$,
                    wO: VV.$U,
                    Qu: "eogito & Sushuui",
                    name: "Mummy"
                }, {
                    id: 122,
                    V_: o.VuOwo,
                    u0: o.O_Vvu,
                    _u: o.$OUUo,
                    OU: o.vVOuo,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Dino"
                }, {
                    id: 127,
                    V_: o.vO$uv,
                    u0: o._Q_VV,
                    _u: o.W_v_v,
                    OU: o.Ovo0V,
                    wO: VV.$U,
                    Qu: "MADBalgouthi",
                    name: "Mr. Koala"
                }, {
                    id: 160,
                    V_: o.UvowO,
                    u0: o.Qw_VU,
                    _u: o.QwQ$_,
                    OU: o.Vow_U,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Bottle Protection"
                }, {
                    id: 162,
                    V_: o.w__QW,
                    u0: o.wuWwV,
                    _u: o.WvWwW,
                    OU: o.Owwww,
                    wO: VV.$U,
                    Qu: "CrysTal",
                    name: "Leaf Man"
                }, {
                    id: 166,
                    V_: o._0vwV,
                    u0: o.o0OQo,
                    _u: o.V_w$U,
                    OU: o.wvuwu,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Bubble"
                }, {
                    id: 174,
                    V_: o.QouuQ,
                    u0: o.$UWw$,
                    _u: o.Wvsocket,
                    OU: o.wOQW_,
                    wO: VV.$U,
                    Qu: "upfiz",
                    name: "Potato"
                }, {
                    id: 171,
                    V_: o.WUVoU,
                    u0: o.OW$0w,
                    _u: o.vo$U_,
                    OU: o._oVOW,
                    wO: VV.$U,
                    Qu: "aloner",
                    name: "Axolotl"
                }, {
                    id: 25,
                    V_: o.Vvw__,
                    u0: o.V0oU$,
                    _u: o.vUvwO,
                    OU: o.W$UW$,
                    wO: VV.v$,
                    Qu: "Pixelbitie",
                    name: "Test Dummy"
                }, {
                    id: 41,
                    V_: o.VVUW$,
                    u0: o.VVQvu,
                    _u: o.$$_UO,
                    OU: o.uwOWu,
                    wO: VV.v$,
                    Qu: "pizza wa",
                    name: "Star-ver"
                }, {
                    id: 43,
                    V_: o._uouQ,
                    u0: o.Owv0v,
                    _u: o.OuoV0,
                    OU: o.OooQV,
                    wO: VV.v$,
                    Qu: "Communist",
                    name: "Starver Chest"
                }, {
                    id: 88,
                    V_: o.uOQ$V,
                    u0: o.OWWUo,
                    _u: o.WWW0o,
                    OU: o.QVQWO,
                    wO: VV.v$,
                    Qu: "Communist",
                    name: "Starver Workbench"
                }, {
                    id: 121,
                    V_: o.VOWO_,
                    u0: o.$oW_o,
                    _u: o.VvWwO,
                    OU: o.vouo$,
                    wO: VV.v$,
                    Qu: "MADBalgouthi",
                    name: "Fish"
                }, {
                    id: 39,
                    V_: o.wvUUU,
                    u0: o.uVOuV,
                    _u: o.QwU0W,
                    OU: o.uv$$w,
                    wO: VV.v$,
                    Qu: "Negligent4Dia",
                    name: "Crab"
                }, {
                    id: 40,
                    V_: o.V$w0v,
                    u0: o.QO__O,
                    _u: o.$Ov0V,
                    OU: o.u0voO,
                    wO: VV.v$,
                    Qu: "Negligent4Dia",
                    name: "Piranha"
                }, {
                    id: 36,
                    V_: o.oWQUV,
                    u0: o._UQvV,
                    _u: o.wooQu,
                    OU: o.OWVWo,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Winter Fox"
                }, {
                    id: 69,
                    V_: o.Q0O0u,
                    u0: o.WoU0v,
                    _u: o.vUuvQ,
                    OU: o.Wowo_,
                    wO: VV.v$,
                    Qu: "Zed",
                    name: "Baby Foxy"
                }, {
                    id: 51,
                    V_: o.Q0ouv,
                    u0: o.WO$Vv,
                    _u: o.uvWV_,
                    OU: o._woUu,
                    wO: VV.v$,
                    Qu: "HOWI",
                    name: "Winter Bear"
                }, {
                    id: 133,
                    V_: o._U$wO,
                    u0: o.owOWv,
                    _u: o.v0VQ0,
                    OU: o.uQ_o_,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Hawk"
                }, {
                    id: 55,
                    V_: o.v0W_o,
                    u0: o.woW__,
                    _u: o.Uw_u0,
                    OU: o.Q$UvO,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Nice Little Yuki"
                }, {
                    id: 68,
                    V_: o.QW$UV,
                    u0: o._UuU0,
                    _u: o.uuuou,
                    OU: o.VW$0o,
                    wO: VV.v$,
                    Qu: "Taco4Life",
                    name: "Baby Yuki"
                }, {
                    id: 62,
                    V_: o.wwOou,
                    u0: o._$QQ$,
                    _u: o.U0$0$,
                    OU: o._uQQv,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mr. Carrot"
                }, {
                    id: 56,
                    V_: o.$VoVO,
                    u0: o.oWwuW,
                    _u: o._$_Vv,
                    OU: o.v_uOU,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Bat Limax"
                }, {
                    id: 72,
                    V_: o.oWVOQ,
                    u0: o.U_QoQ,
                    _u: o.UWWwv,
                    OU: o.__Ovv,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Mr. Crate"
                }, {
                    id: 73,
                    V_: o.vQ_U_,
                    u0: o.UvoVW,
                    _u: o.V$$00,
                    OU: o.$UuVV,
                    wO: VV.v$,
                    Qu: "Taco4Life & eogito",
                    name: "Mr. Spider"
                }, {
                    id: 93,
                    V_: o.Qov$o,
                    u0: o.$UWo0,
                    _u: o.__www,
                    OU: o.UowuU,
                    wO: VV.v$,
                    Qu: "Anyone want to play?",
                    name: "Mr. Spider 2"
                }, {
                    id: 82,
                    V_: o.WWUUV,
                    u0: o.oouOV,
                    _u: o.VvU0u,
                    OU: o.w$OU$,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mr. Blue Starfish"
                }, {
                    id: 83,
                    V_: o.Wu_uU,
                    u0: o.UvOu_,
                    _u: o.oU_vV,
                    OU: o.$V$OV,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mr. Orange Starfish"
                }, {
                    id: 84,
                    V_: o.Q0QWW,
                    u0: o.uuOo$,
                    _u: o.vooQV,
                    OU: o.v_UVv,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mr. Pink Starfish"
                }, {
                    id: 85,
                    V_: o.UvoOO,
                    u0: o.QVV$O,
                    _u: o.vuO0U,
                    OU: o.w0W$w,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mr. ShellMauve"
                }, {
                    id: 86,
                    V_: o.uQuQ0,
                    u0: o.vWVwO,
                    _u: o.$Uu_O,
                    OU: o.ooOw$,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mr. Shell Bead"
                }, {
                    id: 96,
                    V_: o.Q0Q$Q,
                    u0: o._0oQW,
                    _u: o.$u_vV,
                    OU: o.oVVvo,
                    wO: VV.v$,
                    Qu: "Fukss",
                    name: "Angry Crab"
                }, {
                    id: 98,
                    V_: o.O$oO_,
                    u0: o.OoVOo,
                    _u: o.$W$Uo,
                    OU: o.uouw_,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Penguin"
                }, {
                    id: 126,
                    V_: o.UU$$$,
                    u0: o.QVo$V,
                    _u: o.u_oWQ,
                    OU: o.uu$QV,
                    wO: VV.v$,
                    Qu: "Anyone want to play?",
                    name: "Mr. Boar"
                }, {
                    id: 145,
                    V_: o.$oo$$,
                    u0: o.$vuU0,
                    _u: o.WWoww,
                    OU: o.o0QUQ,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "I saw you"
                }, {
                    id: 146,
                    V_: o.o$QoO,
                    u0: o._UvwV,
                    _u: o.oowVO,
                    OU: o.owW0V,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "It was funny"
                }, {
                    id: 147,
                    V_: o.wowvv,
                    u0: o.OOuvO,
                    _u: o.Wv$wO,
                    OU: o.$_U$Q,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "You can scream"
                }, {
                    id: 158,
                    V_: o.$Vv_0,
                    u0: o.Ou_0W,
                    _u: o.OvWWu,
                    OU: o.vvUvu,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Mr. Book"
                }, {
                    id: 163,
                    V_: o.o$QQv,
                    u0: o.wW_vW,
                    _u: o.$0VV_,
                    OU: o.V$$OQ,
                    wO: VV.v$,
                    Qu: "Anyone want to play?",
                    name: "Mr. Mammoth"
                }, {
                    id: 164,
                    V_: o.oO$QW,
                    u0: o.Ovuww,
                    _u: o.VQv__,
                    OU: o.VQ$vV,
                    wO: VV.v$,
                    Qu: "SoOw",
                    name: "Mr. Mammoth 2"
                }, {
                    id: 161,
                    V_: o.QU$VO,
                    u0: o.vuUOu,
                    _u: o.wuWWV,
                    OU: o.$_Qo0,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Nightmare"
                }, {
                    id: 168,
                    V_: o.uUovO,
                    u0: o.OQQWW,
                    _u: o.owQVW,
                    OU: o.oVuVU,
                    wO: VV.v$,
                    Qu: "pizza wa",
                    name: "Shiny Crystal"
                }, {
                    id: 173,
                    V_: o.WQw$w,
                    u0: o.$WU0v,
                    _u: o.wwVw_,
                    OU: o._uUW$,
                    wO: VV.v$,
                    Qu: "pizza wa",
                    name: "Water skin"
                }, {
                    id: 42,
                    V_: o.wVVOQ,
                    u0: o.WOO0w,
                    _u: o.Qo$_U,
                    OU: o.W0Vo_,
                    wO: VV.$W,
                    Qu: "Winter",
                    name: "Will-O\'-The-Wisp"
                }, {
                    id: 91,
                    V_: o.VvVwU,
                    u0: o.w$UV$,
                    _u: o.UWQv$,
                    OU: o.WVv$Q,
                    wO: VV.$W,
                    Qu: "ExpertyAnimations",
                    name: "Flame"
                }, {
                    id: 26,
                    V_: o.o$ou$,
                    u0: o.uvQo$,
                    _u: o.wOVo0,
                    OU: o.uvvoO,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Be a Tree"
                }, {
                    id: 38,
                    V_: o._O$vw,
                    u0: o.wuOU$,
                    _u: o.$OVuU,
                    OU: o.v0OOw,
                    wO: VV.$W,
                    Qu: "Winter",
                    name: "Toxic Mutant"
                }, {
                    id: 50,
                    V_: o.QWOUQ,
                    u0: o.$Q$oV,
                    _u: o.OO_u$,
                    OU: o.WOvW_,
                    wO: VV.$W,
                    Qu: "Communist",
                    name: "Mr. Tomato"
                }, {
                    id: 54,
                    V_: o._uw$u,
                    u0: o.QW__$,
                    _u: o.vu$u_,
                    OU: o.wVQWQ,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Mr. Mauve, the Lapa"
                }, {
                    id: 57,
                    V_: o.Wv_$W,
                    u0: o.QV__W,
                    _u: o.Q$$U$,
                    OU: o.Q_vv$,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Golden Fish"
                }, {
                    id: 64,
                    V_: o.VUQu$,
                    u0: o.VQQ$U,
                    _u: o.Vuuo_,
                    OU: o.Wo_W_,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "LapaMauve"
                }, {
                    id: 65,
                    V_: o.uV$O_,
                    u0: o.uwUv$,
                    _u: o.$Uv_Q,
                    OU: o.Q$Q_V,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "LapaMauve "
                }, {
                    id: 92,
                    V_: o.$$W__,
                    u0: o.wVwVu,
                    _u: o.W0UWU,
                    OU: o._0WvV,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Mr. Burger"
                }, {
                    id: 66,
                    V_: o.VQVuV,
                    u0: o._VUQ$,
                    _u: o.__uV0,
                    OU: o._Uouo,
                    wO: VV.$W,
                    Qu: "pizza wa",
                    name: "Tropical Starver"
                }, {
                    id: 80,
                    V_: o.W0oVv,
                    u0: o.VWO0Q,
                    _u: o.QvV$w,
                    OU: o.VoOwQ,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Mr. ShellPink"
                }, {
                    id: 81,
                    V_: o.v$$_W,
                    u0: o.wwwuw,
                    _u: o.QUu$O,
                    OU: o.$vQw0,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Mr. OranShell"
                }, {
                    id: 99,
                    V_: o.$0_$o,
                    u0: o.O$VWo,
                    _u: o.O_uoU,
                    OU: o.uwW$o,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Pepe"
                }, {
                    id: 100,
                    V_: o.vu_0w,
                    u0: o.Q_wQO,
                    _u: o.Oo$u_,
                    OU: o.$QuQu,
                    wO: VV.$W,
                    Qu: "fatant",
                    name: "Mr. Ant"
                }, {
                    id: 115,
                    V_: o._QVoV,
                    u0: o.w0uvO,
                    _u: o.QQQUo,
                    OU: o.Ou_W$,
                    wO: VV.$W,
                    Qu: "MADBalgouthi",
                    name: "Mr. Watermelon"
                }, {
                    id: 101,
                    V_: o.oOwvW,
                    u0: o.UvwUW,
                    _u: o.uVUwu,
                    OU: o.UQUQW,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Mr. Thornbush"
                }, {
                    id: 131,
                    V_: o.ovwu_,
                    u0: o.ooQ$V,
                    _u: o.W_VOO,
                    OU: o.$uvQV,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Cthulhu"
                }, {
                    id: 143,
                    V_: o.wWW$U,
                    u0: o.VOu0o,
                    _u: o.UoUoQ,
                    OU: o.Vu_0$,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Mr. Cactus"
                }, {
                    id: 144,
                    V_: o.vv_ow,
                    u0: o._QQ_v,
                    _u: o.OW_0W,
                    OU: o.U0u$o,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Momo"
                }, {
                    id: 95,
                    V_: o.Ovuo_,
                    u0: o.$OWQV,
                    _u: o.o_$VV,
                    OU: o.VoWoQ,
                    wO: VV.w_,
                    Qu: "Taco4Life",
                    name: "Mr. Garlic"
                }, {
                    id: 76,
                    V_: o._u_$u,
                    u0: o.QVoUU,
                    _u: o.uwWOv,
                    OU: o._vvWw,
                    wO: VV.w_,
                    Qu: "Winter",
                    name: "Robot Dragon"
                }, {
                    id: 44,
                    V_: o.UO_OQ,
                    u0: o.QUV_0,
                    _u: o.OwVuu,
                    OU: o.vUWQU,
                    wO: VV.w_,
                    Qu: "Winter",
                    name: "Lava Dragon Version 1"
                }, {
                    id: 90,
                    V_: o.vowUu,
                    u0: o.oUWOw,
                    _u: o.$uVVQ,
                    OU: o.w_v0W,
                    wO: VV.w_,
                    Qu: "ExpertyAnimations",
                    name: "Lava Dragon Version 2"
                }, {
                    id: 124,
                    V_: o.VUQuw,
                    u0: o.oQU$u,
                    _u: o.u__u0,
                    OU: o.vuVo0,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Lava Dragon Version 3"
                }, {
                    id: 45,
                    V_: o.$o_uw,
                    u0: o.QWwWO,
                    _u: o.WVO0u,
                    OU: o._VoWW,
                    wO: VV.w_,
                    Qu: "Sushui",
                    name: "Ice Dragon Version 1"
                }, {
                    id: 46,
                    V_: o.OU_ow,
                    u0: o.U0Q_O,
                    _u: o.OWQ0$,
                    OU: o.oVowv,
                    wO: VV.w_,
                    Qu: "Winter",
                    name: "Ice Dragon Version 2"
                }, {
                    id: 108,
                    V_: o.O$_W_,
                    u0: o.Vw$Ow,
                    _u: o.Ow$_v,
                    OU: o.wVW0u,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Ice Dragon Version 3"
                }, {
                    id: 123,
                    V_: o.$Uu0V,
                    u0: o._0$vQ,
                    _u: o.VVoWU,
                    OU: o.v_uw_,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Baby Dragon Version 1"
                }, {
                    id: 128,
                    V_: o.ovv$W,
                    u0: o.WuO0W,
                    _u: o.___UV,
                    OU: o.OwOWW,
                    wO: VV.w_,
                    Qu: "MADBalgouthi",
                    name: "Baby Dragon Version 2"
                }, {
                    id: 125,
                    V_: o.vwvOu,
                    u0: o.o_uUU,
                    _u: o.oWWWW,
                    OU: o.oQWw0,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Baby Lava"
                }, {
                    id: 47,
                    V_: o.v$$Ou,
                    u0: o.o0W0Q,
                    _u: o.UuO$w,
                    OU: o.VuWoO,
                    wO: VV.w_,
                    Qu: "Taco4Life",
                    name: "Kraken"
                }, {
                    id: 129,
                    V_: o.$uu$V,
                    u0: o.wVwWv,
                    _u: o.o_v_u,
                    OU: o.VoQvv,
                    wO: VV.w_,
                    Qu: "Taco4Life",
                    name: "Sandworm"
                }, {
                    id: 63,
                    V_: o.UUQo0,
                    u0: o.WWwVQ,
                    _u: o.vWOVo,
                    OU: o.o_QvV,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Mr. Golden Bread"
                }, {
                    id: 67,
                    V_: o.UuvOO,
                    u0: o.W0$$Q,
                    _u: o.VuU_o,
                    OU: o.V$uuw,
                    wO: VV.w_,
                    Qu: "ForgottenHeroe",
                    name: "Starver Ores"
                }, {
                    id: 130,
                    V_: o.$vvV0,
                    u0: o.oOoO$,
                    _u: o.Q0vwo,
                    OU: o.uw_Q_,
                    wO: VV.w_,
                    Qu: "Taco4Life",
                    name: "Poo"
                }, {
                    id: 89,
                    V_: o.wQWOu,
                    u0: o.Q$Uuo,
                    _u: o.$w_vo,
                    OU: o.oV$Oo,
                    wO: VV.w_,
                    Qu: "Poinet",
                    name: "Volcano Starver"
                }, {
                    id: 112,
                    V_: o.Ov_uw,
                    u0: o.QQWw_,
                    _u: o.v$Uov,
                    OU: o.uwV_w,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Lava Starver"
                }, {
                    id: 48,
                    V_: o.QWQWu,
                    u0: o.vW_0o,
                    _u: o.OoWWu,
                    OU: o.WU$WV,
                    wO: VV.W_v,
                    Qu: "eogito",
                    name: "Robot"
                }, {
                    id: 110,
                    V_: o.V0oVV,
                    u0: o.QUuV0,
                    _u: o.uvuo$,
                    OU: o.Q0UVQ,
                    wO: VV.W_v,
                    Qu: "pizza wa",
                    name: "Blue Butterfly"
                }, {
                    id: 157,
                    V_: o._OwUU,
                    u0: o.wWUVQ,
                    _u: o.QUv$Q,
                    OU: o.uvV$$,
                    wO: VV.W_v,
                    Qu: "eogito",
                    name: "Yrifox"
                }, {
                    id: 165,
                    V_: o.WU_uv,
                    u0: o.W$o0O,
                    _u: o.Ouvu0,
                    OU: o.W$VW0,
                    wO: VV.W_v,
                    Qu: "OmarJr13",
                    name: "Blob Skin"
                }],
                Uwv: [{
                    id: 0,
                    V_: o.ouWwv,
                    u0: o.uuwv_,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Bag 1"
                }, {
                    id: 1,
                    V_: o.$wwwW,
                    u0: o.QVUou,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Old Bag"
                }, {
                    id: 2,
                    V_: o.vowvw,
                    u0: o.wwUV$,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Bag 2"
                }, {
                    id: 3,
                    V_: o.QvU$W,
                    u0: o.WVVOu,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Bag 3"
                }, {
                    id: 4,
                    V_: o.o_WuV,
                    u0: o.uV_$o,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Bag 4"
                }, {
                    id: 5,
                    V_: o.QW_00,
                    u0: o.ooO__,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Bag 5"
                }, {
                    id: 11,
                    V_: o.o0oVO,
                    u0: o.oQVu$,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wood Pickaxe Bag"
                }, {
                    id: 19,
                    V_: o._$ou0,
                    u0: o.UUuuO,
                    wO: VV.vv,
                    Qu: "Starve.io ",
                    name: "Wood Carrier"
                }, {
                    id: 37,
                    V_: o.O0w$0,
                    u0: o._uo0v,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Bag 6"
                }, {
                    id: 39,
                    V_: o.Q0Owo,
                    u0: o.o$QWQ,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Bag with Wooden Swords"
                }, {
                    id: 44,
                    V_: o.VWwwV,
                    u0: o.UOvQ$,
                    wO: VV.vv,
                    Qu: "Communist",
                    name: "Big Bag"
                }, {
                    id: 7,
                    V_: o.QVQ$v,
                    u0: o.ou_Ww,
                    wO: VV.V0,
                    Qu: "Communist",
                    name: "Bag 6"
                }, {
                    id: 8,
                    V_: o.$vUW0,
                    u0: o.u_VO_,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Easter Bag"
                }, {
                    id: 9,
                    V_: o.OOQ_v,
                    u0: o.QuVU_,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Star Bag"
                }, {
                    id: 10,
                    V_: o.o$VUW,
                    u0: o.UVu__,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Winter Bag"
                }, {
                    id: 20,
                    V_: o.vuo0V,
                    u0: o.VOWVo,
                    wO: VV.V0,
                    Qu: "Starve.io ",
                    name: "Stone Carrier"
                }, {
                    id: 24,
                    V_: o.vVQWo,
                    u0: o.VvUvv,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Stone Pickaxe Bag"
                }, {
                    id: 6,
                    V_: o.ovoWv,
                    u0: o.wVQ$0,
                    wO: VV.V0,
                    Qu: "Communist",
                    name: "Bag Camouflage"
                }, {
                    id: 38,
                    V_: o.w0oOo,
                    u0: o.uWvWw,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Bag with Stone Swords"
                }, {
                    id: 54,
                    V_: o.UwoWU,
                    u0: o.Wvou0,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Cow Bag"
                }, {
                    id: 59,
                    V_: o.U$uQu,
                    u0: o.QWw_0,
                    wO: VV.V0,
                    Qu: "CrysTal",
                    name: "Starver Bag"
                }, {
                    id: 62,
                    V_: o.uW$_$,
                    u0: o.VWw0v,
                    wO: VV.V0,
                    Qu: "CrysTal",
                    name: "Crystal Sky Bag"
                }, {
                    id: 13,
                    V_: o.$wvoo,
                    u0: o.$vo_$,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Honey Pot"
                }, {
                    id: 21,
                    V_: o.O_OOo,
                    u0: o.oOV_$,
                    wO: VV.$U,
                    Qu: "Starve.io ",
                    name: "Gold Carrier"
                }, {
                    id: 30,
                    V_: o.OW_0o,
                    u0: o.WuwO_,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Gold Pickaxe Bag"
                }, {
                    id: 29,
                    V_: o.vuUuv,
                    u0: o.uWvuW,
                    wO: VV.$U,
                    Qu: "Ariel",
                    name: "Mr and Mrs Bakers"
                }, {
                    id: 41,
                    V_: o._wo_o,
                    u0: o.QVvU0,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Bag with Golden Swords"
                }, {
                    id: 47,
                    V_: o.wU$_v,
                    u0: o._vVoQ,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Explorer Bag"
                }, {
                    id: 51,
                    V_: o.v$UUU,
                    u0: o.vOO$_,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Bamboo Bag"
                }, {
                    id: 53,
                    V_: o.uouu0,
                    u0: o.w_oUO,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Mummy Bag"
                }, {
                    id: 58,
                    V_: o.$VUO$,
                    u0: o._$oQ_,
                    wO: VV.$U,
                    Qu: "MADBalgouthi",
                    name: "Watermelon Bag"
                }, {
                    id: 60,
                    V_: o.W_ouw,
                    u0: o.ovu_w,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Garlic Bag"
                }, {
                    id: 61,
                    V_: o.V$o_V,
                    u0: o.QVU_u,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Pumpkin Bag"
                }, {
                    id: 64,
                    V_: o._$wwo,
                    u0: o.QU$0W,
                    wO: VV.$U,
                    Qu: "upfiz",
                    name: "Oil Barel bag"
                }, {
                    id: 67,
                    V_: o.Qvuuv,
                    u0: o.ovv0W,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Tree Bag"
                }, {
                    id: 14,
                    V_: o.QVW_$,
                    u0: o.oWOoo,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "a Rabbit in my Bag"
                }, {
                    id: 15,
                    V_: o._w$o$,
                    u0: o.WQvV0,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Bird\'s nest"
                }, {
                    id: 16,
                    V_: o.vv$$u,
                    u0: o.uWv_O,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "a Fish on your Back"
                }, {
                    id: 17,
                    V_: o.$UWVu,
                    u0: o.v0W0W,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "a Squirrel in my Bag"
                }, {
                    id: 22,
                    V_: o.ouWvW,
                    u0: o.V0OwQ,
                    wO: VV.v$,
                    Qu: "Starve.io ",
                    name: "Diamond Carrier"
                }, {
                    id: 12,
                    V_: o.$_oou,
                    u0: o.Vo_OQ,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Resources Bag"
                }, {
                    id: 32,
                    V_: o.OVU0V,
                    u0: o.vvVW0,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Diamond Pickaxe Bag"
                }, {
                    id: 40,
                    V_: o.OWWWU,
                    u0: o.Uvv_V,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Bag with Diamond Swords"
                }, {
                    id: 45,
                    V_: o.$VvuV,
                    u0: o._WWwQ,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "My Cake Bag"
                }, {
                    id: 46,
                    V_: o.w0vWu,
                    u0: o.Q_$_Q,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "My Christmas Cake Bag"
                }, {
                    id: 52,
                    V_: o.O0Uw$,
                    u0: o.o_$Ww,
                    wO: VV.v$,
                    Qu: "MADBalgouthi",
                    name: "Fish Bag"
                }, {
                    id: 65,
                    V_: o.V$wvu,
                    u0: o.oo$Ov,
                    wO: VV.v$,
                    Qu: "pizza wa",
                    name: "Cloud Bag"
                }, {
                    id: 68,
                    V_: o.$$_o0,
                    u0: o.$woU_,
                    wO: VV.v$,
                    Qu: "pizza wa",
                    name: "Bee Bag"
                }, {
                    id: 48,
                    V_: o.voW_w,
                    u0: o.$OQvv,
                    wO: VV.$W,
                    Qu: "fatant",
                    name: "Natural Bag"
                }, {
                    id: 23,
                    V_: o.$UV0O,
                    u0: o.u$VUu,
                    wO: VV.$W,
                    Qu: "Starve.io ",
                    name: "Amethyst Carrier"
                }, {
                    id: 25,
                    V_: o.uOwoW,
                    u0: o.VwWwO,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Amethyst Pickaxe Bag"
                }, {
                    id: 28,
                    V_: o.OVO$$,
                    u0: o._wwoO,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Your Baby"
                }, {
                    id: 33,
                    V_: o.vvwoo,
                    u0: o.vWQuo,
                    wO: VV.$W,
                    Qu: "pizza wa",
                    name: "Tropical Bag"
                }, {
                    id: 43,
                    V_: o.$OQ_W,
                    u0: o.$wUWQ,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Bag with Amethyst Swords"
                }, {
                    id: 35,
                    V_: o.vQO0_,
                    u0: o.OWWou,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Ice Bag"
                }, {
                    id: 50,
                    V_: o.uWoVV,
                    u0: o.uvuQQ,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Thornbush Bag"
                }, {
                    id: 56,
                    V_: o._oQQW,
                    u0: o.OV$V_,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Autumn Bag"
                }, {
                    id: 57,
                    V_: o.vOV_0,
                    u0: o.VwuoQ,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Dino Egg Bag"
                }, {
                    id: 66,
                    V_: o.O0Ov0,
                    u0: o._WWuU,
                    wO: VV.$W,
                    Qu: "pizza wa",
                    name: "Magic Cloud Bag"
                }, {
                    id: 69,
                    V_: o.QU$Qu,
                    u0: o.WOO_0,
                    wO: VV.$W,
                    Qu: "pizza wa",
                    name: "Chest Bag"
                }, {
                    id: 31,
                    V_: o.UwQ_W,
                    u0: o.o$oUo,
                    wO: VV.w_,
                    Qu: "Starve.io ",
                    name: "Reidite Carrier"
                }, {
                    id: 18,
                    V_: o._WoWv,
                    u0: o.wUVuv,
                    wO: VV.w_,
                    Qu: "Winter",
                    name: "Lava Bag"
                }, {
                    id: 49,
                    V_: o.QwQVo,
                    u0: o.$0VwU,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Lava Bag 2"
                }, {
                    id: 36,
                    V_: o._WVQw,
                    u0: o.o$uuv,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Dragon Bag"
                }, {
                    id: 55,
                    V_: o.WQuQ0,
                    u0: o.voQw_,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Winter Ice Bag"
                }, {
                    id: 26,
                    V_: o.Oww$W,
                    u0: o.u0$0O,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Reidite Pickaxe Bag"
                }, {
                    id: 27,
                    V_: o.QWOQ_,
                    u0: o.uvO0o,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Octopus Bowl"
                }, {
                    id: 34,
                    V_: o.u_W0$,
                    u0: o.Oo$oo,
                    wO: VV.w_,
                    Qu: "Taco4Life",
                    name: "Cave Bag"
                }, {
                    id: 42,
                    V_: o.w$W$0,
                    u0: o.$$WU0,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Bag with Reidite Swords"
                }, {
                    id: 63,
                    V_: o.o0VoV,
                    u0: o.OUVw0,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Engineer Bag"
                }],
                wuv: [{
                    id: 0,
                    V_: o.wv_$u,
                    u0: o.QOWo$,
                    wO: VV.V$v,
                    Qu: "eogito",
                    name: "Wooden Dead Box"
                }, {
                    id: 1,
                    V_: o._$O_o,
                    u0: o.oVWw_,
                    wO: VV.V$v,
                    Qu: "eogito",
                    name: "Hidden item"
                }, {
                    id: 2,
                    V_: o._uV$$,
                    u0: o.WuOu0,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Box 1"
                }, {
                    id: 3,
                    V_: o.woOOu,
                    u0: o.QUUOW,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Box 2"
                }, {
                    id: 4,
                    V_: o.wQoow,
                    u0: o.$Wuuu,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Box 3"
                }, {
                    id: 5,
                    V_: o.vU_WU,
                    u0: o.$__W_,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Broken Wooden Box"
                }, {
                    id: 6,
                    V_: o.WWOQv,
                    u0: o.QVwQU,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Box"
                }, {
                    id: 7,
                    V_: o.QWQUo,
                    u0: o.Q__0$,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Battle Box"
                }, {
                    id: 8,
                    V_: o.$VwuW,
                    u0: o.Vo$UO,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Box with a Cross"
                }, {
                    id: 9,
                    V_: o.__WQV,
                    u0: o.VoUOU,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Box with Bubbles"
                }, {
                    id: 10,
                    V_: o.UOOU_,
                    u0: o.Ouovv,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Wooden Box with Eyes"
                }, {
                    id: 11,
                    V_: o.vO$ow,
                    u0: o.Q_WOO,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Dark Wooden Box"
                }, {
                    id: 38,
                    V_: o.QOvwQ,
                    u0: o.UuO0W,
                    wO: VV.vv,
                    Qu: "Weddlz",
                    name: "Noob Box"
                }, {
                    id: 12,
                    V_: o.vWvo0,
                    u0: o.w_wQv,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Wooden and Stone Box"
                }, {
                    id: 14,
                    V_: o.uUo0$,
                    u0: o.VWouw,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Star Box 1"
                }, {
                    id: 15,
                    V_: o.WQ$wV,
                    u0: o.ovvVo,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Star Box 2"
                }, {
                    id: 27,
                    V_: o.V0OoQ,
                    u0: o.vU_0Q,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Flower Box"
                }, {
                    id: 46,
                    V_: o.ouv0w,
                    u0: o.wQ$v_,
                    wO: VV.V0,
                    Qu: "MADBalgouthi",
                    name: "Blue Box"
                }, {
                    id: 19,
                    V_: o.o_WuQ,
                    u0: o.OvuuV,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Beehive"
                }, {
                    id: 13,
                    V_: o.vu_WU,
                    u0: o.$O_Uv,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Wooden and Golden Box"
                }, {
                    id: 21,
                    V_: o.OuuOQ,
                    u0: o.QQWUO,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Gravestone"
                }, {
                    id: 25,
                    V_: o.ovVQ0,
                    u0: o.V_vW0,
                    wO: VV.$U,
                    Qu: "Communist",
                    name: "Sky Box"
                }, {
                    id: 29,
                    V_: o._ovoW,
                    u0: o.$UQuW,
                    wO: VV.$U,
                    Qu: "Winter",
                    name: "Golden Box"
                }, {
                    id: 34,
                    V_: o.w$uQV,
                    u0: o.UU$QU,
                    wO: VV.$U,
                    Qu: "Communist",
                    name: "Water Crate"
                }, {
                    id: 35,
                    V_: o.QOUuV,
                    u0: o.w0$uV,
                    wO: VV.$U,
                    Qu: "Communist",
                    name: "Glass Crate"
                }, {
                    id: 16,
                    V_: o.VUoVO,
                    u0: o.u$$wV,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Wooden and Diamond Box"
                }, {
                    id: 18,
                    V_: o.uwuuQ,
                    u0: o.WW$v_,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Don\'t Hit Me"
                }, {
                    id: 26,
                    V_: o.WwwWo,
                    u0: o.vQQUO,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Underwater Box"
                }, {
                    id: 31,
                    V_: o.OQo0o,
                    u0: o._Wo0V,
                    wO: VV.v$,
                    Qu: "Communist",
                    name: "Items Pile"
                }, {
                    id: 32,
                    V_: o.UOVOv,
                    u0: o.WVOo0,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Cake Box"
                }, {
                    id: 33,
                    V_: o.Q$Ov0,
                    u0: o.$uvwQ,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Christmas Cake Box"
                }, {
                    id: 36,
                    V_: o.QvOV_,
                    u0: o.WvWoU,
                    wO: VV.v$,
                    Qu: "Fukss",
                    name: "Crab Box"
                }, {
                    id: 42,
                    V_: o.vOuvw,
                    u0: o.woowW,
                    wO: VV.v$,
                    Qu: "MADBalgouthi",
                    name: "Fishing Box"
                }, {
                    id: 22,
                    V_: o.O0Qv_,
                    u0: o.uWQwQ,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Let me out of here"
                }, {
                    id: 17,
                    V_: o.vwUwv,
                    u0: o.vuuUQ,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Wooden and Amethyst Box"
                }, {
                    id: 24,
                    V_: o.UQ_W_,
                    u0: o._wWVV,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Aquarium"
                }, {
                    id: 28,
                    V_: o.vu$Vo,
                    u0: o.WuU$V,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Gift Box"
                }, {
                    id: 40,
                    V_: o.$U$W$,
                    u0: o.oQ__0,
                    wO: VV.$W,
                    Qu: "MADBalgouthi",
                    name: "Open Watermelon Box"
                }, {
                    id: 41,
                    V_: o.wV$U0,
                    u0: o.o0oVW,
                    wO: VV.$W,
                    Qu: "MADBalgouthi",
                    name: "Watermelon Box"
                }, {
                    id: 39,
                    V_: o.OQvUU,
                    u0: o.$uwuw,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Thornbush Box"
                }, {
                    id: 43,
                    V_: o.VUwWV,
                    u0: o.QoOo$,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Rabbit in the Box"
                }, {
                    id: 47,
                    V_: o.VovuO,
                    u0: o.WQVOO,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Garlic Plot"
                }, {
                    id: 48,
                    V_: o._0WuU,
                    u0: o.V0Vw_,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Pumpkin Plot"
                }, {
                    id: 45,
                    V_: o.VvU0W,
                    u0: o.vwv0$,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Autumn Box"
                }, {
                    id: 44,
                    V_: o.$v__U,
                    u0: o.wvUVv,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Winter Box"
                }, {
                    id: 20,
                    V_: o.Vw_Ou,
                    u0: o.UuO$$,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Metal and Reidite Box"
                }, {
                    id: 23,
                    V_: o.vUOuO,
                    u0: o._0Qu0,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Kraken Box"
                }, {
                    id: 30,
                    V_: o.vovw$,
                    u0: o._QQ_u,
                    wO: VV.w_,
                    Qu: "Winter",
                    name: "Lava Box"
                }, {
                    id: 37,
                    V_: o.QoW$Q,
                    u0: o.oWo_U,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Lava Box 2"
                }, {
                    id: 49,
                    V_: o.$Uoww,
                    u0: o.$vUuO,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Rabbit"
                }, {
                    id: 50,
                    V_: o.o0Qo0,
                    u0: o.vWW0O,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Wolf"
                }, {
                    id: 51,
                    V_: o.OvWoQ,
                    u0: o.vWw__,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Spider"
                }, {
                    id: 52,
                    V_: o.UQOQ0,
                    u0: o.WVW_W,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Hawk"
                }, {
                    id: 53,
                    V_: o.QUOWo,
                    u0: o.O$wUO,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Bear"
                }, {
                    id: 54,
                    V_: o.WQWOV,
                    u0: o._WUwQ,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Fox"
                }, {
                    id: 55,
                    V_: o.$uQWV,
                    u0: o.w$uo0,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Baby Mammoth"
                }, {
                    id: 56,
                    V_: o._WvUO,
                    u0: o.wuvvU,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Mammoth"
                }, {
                    id: 57,
                    V_: o.wQ_ow,
                    u0: o.U0$_W,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Sandworm"
                }, {
                    id: 58,
                    V_: o.$WVOQ,
                    u0: o.WuUUv,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Vulture"
                }, {
                    id: 59,
                    V_: o.UvWo$,
                    u0: o.U0oQU,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Kraken"
                }, {
                    id: 60,
                    V_: o._uO$Q,
                    u0: o._w_OU,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Piranha"
                }, {
                    id: 61,
                    V_: o.wuvQU,
                    u0: o.WwOuw,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Baby Dragon"
                }, {
                    id: 62,
                    V_: o.v$$0$,
                    u0: o.vvoWo,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Baby Lava"
                }, {
                    id: 63,
                    V_: o.V0$0V,
                    u0: o.ooQW_,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Dragon"
                }, {
                    id: 64,
                    V_: o.V$VQ0,
                    u0: o.$OVOo,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Penguin"
                }, {
                    id: 65,
                    V_: o.o0QVV,
                    u0: o.wv$vQ,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Lava Dragon"
                }, {
                    id: 66,
                    V_: o.uuO0w,
                    u0: o.U_UUW,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Boar"
                }, {
                    id: 67,
                    V_: o.$vOVU,
                    u0: o.OvuwV,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Fire mob"
                }, {
                    id: 68,
                    V_: o.w0uvv,
                    u0: o.$$VV$,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the Crab"
                }, {
                    id: 69,
                    V_: o.WwVvU,
                    u0: o.QVWoQ,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Box of the King Crab"
                }, {
                    id: 70,
                    V_: o.$UWWV,
                    u0: o.wwU_O,
                    wO: VV.$U,
                    Qu: "CrysTal",
                    name: "Crystal Sky Box"
                }, {
                    id: 71,
                    V_: o.$VU0_,
                    u0: o.uVQvo,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Dragon Box"
                }],
                Q_$: [{
                    id: 0,
                    V_: o.UuQWu,
                    u0: o.oowuv,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Book 1"
                }, {
                    id: 1,
                    V_: o.OUVWO,
                    u0: o.wvVQV,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Book 2"
                }, {
                    id: 2,
                    V_: o.v0vOQ,
                    u0: o.VOv_0,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Book 3"
                }, {
                    id: 3,
                    V_: o.OwWww,
                    u0: o.U_wwO,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Book 4"
                }, {
                    id: 4,
                    V_: o.WWo0O,
                    u0: o.Ov$vv,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Damaged Book 1"
                }, {
                    id: 18,
                    V_: o.UuUUu,
                    u0: o.UovoW,
                    wO: VV.vv,
                    Qu: "SeveR",
                    name: "Damaged Book 2"
                }, {
                    id: 5,
                    V_: o.$Wouv,
                    u0: o.$VW_Q,
                    wO: VV.V0,
                    Qu: "Doctorpus",
                    name: "Scroll"
                }, {
                    id: 6,
                    V_: o.U$vvO,
                    u0: o.u0WWo,
                    wO: VV.V0,
                    Qu: "Doctorpus",
                    name: "Clipboard"
                }, {
                    id: 7,
                    V_: o.QV$$v,
                    u0: o.OuUwv,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Seed Book"
                }, {
                    id: 20,
                    V_: o.QQoQV,
                    u0: o.QUWQv,
                    wO: VV.V0,
                    Qu: "Taco4Life",
                    name: "Camo Book"
                }, {
                    id: 24,
                    V_: o.UoV0V,
                    u0: o.W_wQQ,
                    wO: VV.V0,
                    Qu: "Communist",
                    name: "Stone Tablet"
                }, {
                    id: 10,
                    V_: o.$OWVO,
                    u0: o.O_UWv,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Star Book"
                }, {
                    id: 8,
                    V_: o.VwOv0,
                    u0: o.UwWVV,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Gold Book"
                }, {
                    id: 15,
                    V_: o.ooOW0,
                    u0: o.oQW0$,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Old Mysterious Paper"
                }, {
                    id: 17,
                    V_: o.U0Ov0,
                    u0: o._vOuU,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Gold Engraving"
                }, {
                    id: 25,
                    V_: o.$QUuu,
                    u0: o.owO$v,
                    wO: VV.$U,
                    Qu: "fatant",
                    name: "Ant Book"
                }, {
                    id: 32,
                    V_: o.UUVvU,
                    u0: o.u0vQV,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Mummy Book"
                }, {
                    id: 37,
                    V_: o.U$W0$,
                    u0: o.$VQvQ,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Garlic Book"
                }, {
                    id: 38,
                    V_: o.V$Qo0,
                    u0: o.$OO_u,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Pumpkin Book"
                }, {
                    id: 39,
                    V_: o.V$VoW,
                    u0: o.Ww_$u,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Christmas Tree Book"
                }, {
                    id: 11,
                    V_: o.QQoUo,
                    u0: o.$O$Ou,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Diamond Book"
                }, {
                    id: 9,
                    V_: o.O$VUu,
                    u0: o.WUW_0,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Obscure Book"
                }, {
                    id: 16,
                    V_: o.w0O$O,
                    u0: o._uQQW,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Rolled Parchment"
                }, {
                    id: 22,
                    V_: o.v_Uoo,
                    u0: o.vvvQu,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Cake Book"
                }, {
                    id: 23,
                    V_: o.uWvWO,
                    u0: o.vU_Uu,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Christmas Cake Book"
                }, {
                    id: 30,
                    V_: o.vWwuw,
                    u0: o.$Vw$_,
                    wO: VV.v$,
                    Qu: "MADBalgouthi",
                    name: "Fish Book"
                }, {
                    id: 31,
                    V_: o.UwQVU,
                    u0: o.QvOOO,
                    wO: VV.v$,
                    Qu: "CrysTal",
                    name: "Once upon a time"
                }, {
                    id: 13,
                    V_: o.Q$W__,
                    u0: o.QvuoU,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Amethyst Book"
                }, {
                    id: 28,
                    V_: o.u_vww,
                    u0: o.vuOQQ,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Paint Pallet"
                }, {
                    id: 29,
                    V_: o.vUUou,
                    u0: o.vOw$Q,
                    wO: VV.$W,
                    Qu: "CrysTal",
                    name: "Watermelon Book"
                }, {
                    id: 27,
                    V_: o.WW$Q$,
                    u0: o.v_wwv,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Thornbush Book"
                }, {
                    id: 35,
                    V_: o.woou_,
                    u0: o.OvV0Q,
                    wO: VV.$W,
                    Qu: "Taco4Life",
                    name: "Menu"
                }, {
                    id: 36,
                    V_: o.oVVVV,
                    u0: o.WWUwW,
                    wO: VV.$W,
                    Qu: "CrysTal",
                    name: "Lover Letter"
                }, {
                    id: 40,
                    V_: o._0V$Q,
                    u0: o.uVOWO,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Fresh-Baked Cookies"
                }, {
                    id: 41,
                    V_: o.vo_uQ,
                    u0: o.VQuoO,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Inside, there is just a book."
                }, {
                    id: 33,
                    V_: o.o_VQ_,
                    u0: o.v_OUw,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Winter Book"
                }, {
                    id: 34,
                    V_: o.wOW0$,
                    u0: o._OUV$,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Autumn Book"
                }, {
                    id: 14,
                    V_: o._woQV,
                    u0: o.oVUo0,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Reidite Book"
                }, {
                    id: 12,
                    V_: o.oOO_0,
                    u0: o.V$OVo,
                    wO: VV.w_,
                    Qu: "Winter",
                    name: "Lava Book"
                }, {
                    id: 26,
                    V_: o._u$_Q,
                    u0: o.$vuQO,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Lava Book 2"
                }, {
                    id: 19,
                    V_: o.wuw0w,
                    u0: o.uu_wO,
                    wO: VV.w_,
                    Qu: "Winter",
                    name: "Ocean Mystery"
                }, {
                    id: 21,
                    V_: o.VvUWV,
                    u0: o.vQVU_,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Dragon Book"
                }, {
                    id: 42,
                    V_: o.VO$vQ,
                    u0: o.$voO$,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Engineer Book"
                }, {
                    id: 43,
                    V_: o.wWuvV,
                    u0: o.V$uVO,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Nightmare Book"
                }, {
                    id: 44,
                    V_: o.uoUou,
                    u0: o.QuWQ_,
                    wO: VV.w_,
                    Qu: "aloner",
                    name: "Mystery Book"
                }],
                wwV: [{
                    id: 0,
                    V_: o.wUvv0,
                    u0: o.wUvv0,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Nothing"
                }, {
                    id: 2,
                    V_: o._$V_W,
                    u0: o.VUQo_,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Pink Cheeks"
                }, {
                    id: 3,
                    V_: o.UOWWV,
                    u0: o.VQoWO,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Heart"
                }, {
                    id: 1,
                    V_: o.uQoV0,
                    u0: o.UuwQ0,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Bandage 1"
                }, {
                    id: 4,
                    V_: o.WWwQv,
                    u0: o.v__oU,
                    wO: VV.V$v,
                    Qu: "Starve.io",
                    name: "Flower 1"
                }, {
                    id: 5,
                    V_: o.uUVVw,
                    u0: o.$Qovw,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Bow 1"
                }, {
                    id: 6,
                    V_: o.woVQW,
                    u0: o._wuV$,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Bandage 2"
                }, {
                    id: 7,
                    V_: o.UQ$V_,
                    u0: o.w$vOW,
                    wO: VV.vv,
                    Qu: "Starve.io",
                    name: "Flower 2"
                }, {
                    id: 8,
                    V_: o.$u$vU,
                    u0: o.WWOQU,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Bandage 3"
                }, {
                    id: 36,
                    V_: o.WVv__,
                    u0: o.uVO0v,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Foliage"
                }, {
                    id: 59,
                    V_: o.O0vvw,
                    u0: o.o_wV_,
                    wO: VV.vv,
                    Qu: "eogito",
                    name: "Peaceful"
                }, {
                    id: 67,
                    V_: o.wuuW$,
                    u0: o.oouV$,
                    wO: VV.vv,
                    Qu: "pizza wa",
                    name: "Sparkles"
                }, {
                    id: 68,
                    V_: o.$$wvu,
                    u0: o.u_OVV,
                    wO: VV.vv,
                    Qu: "pizza wa",
                    name: "Luxury"
                }, {
                    id: 69,
                    V_: o.QWv0U,
                    u0: o.v_U$u,
                    wO: VV.vv,
                    Qu: "pizza wa",
                    name: "Snow Flakes Crown"
                }, {
                    id: 17,
                    V_: o.VV$v$,
                    u0: o.Q$wwv,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Glasses 1"
                }, {
                    id: 10,
                    V_: o.Q0w0v,
                    u0: o.W$w$Q,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Bow 2"
                }, {
                    id: 11,
                    V_: o.UVw0v,
                    u0: o.___uO,
                    wO: VV.V0,
                    Qu: "pizza wa",
                    name: "Little Stars"
                }, {
                    id: 12,
                    V_: o.vVQwQ,
                    u0: o.wVUo_,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Pirate Eye Patch 1"
                }, {
                    id: 44,
                    V_: o.UowuW,
                    u0: o.owU_V,
                    wO: VV.V0,
                    Qu: "Taco4Life",
                    name: "Pirate Eye Patch 2"
                }, {
                    id: 23,
                    V_: o.vVUUV,
                    u0: o.OQw_Q,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Clown nose"
                }, {
                    id: 16,
                    V_: o.$u$0V,
                    u0: o.OVw_$,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Eye Patch"
                }, {
                    id: 30,
                    V_: o.w0OUW,
                    u0: o.v_vWv,
                    wO: VV.V0,
                    Qu: "eogito",
                    name: "Flower 3"
                }, {
                    id: 38,
                    V_: o.uwU$v,
                    u0: o.$_$Q$,
                    wO: VV.V0,
                    Qu: "Winter",
                    name: "False Nose"
                }, {
                    id: 74,
                    V_: o.QoovU,
                    u0: o.VUwOQ,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Red Cloth"
                }, {
                    id: 75,
                    V_: o.vQ_vo,
                    u0: o.w0QO$,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Blue Cloth"
                }, {
                    id: 79,
                    V_: o.oO$_o,
                    u0: o.wV_oo,
                    wO: VV.V0,
                    Qu: "Starve.io",
                    name: "Transparent Mask"
                }, {
                    id: 89,
                    V_: o.Vwvw$,
                    u0: o.vUuVO,
                    wO: VV.V0,
                    Qu: "Anyone want to play?",
                    name: "Starve.io Anime"
                }, {
                    id: 94,
                    V_: o.v0_O_,
                    u0: o.vu__O,
                    wO: VV.V0,
                    Qu: "Ant",
                    name: "Hero Mask"
                }, {
                    id: 15,
                    V_: o.$OvUw,
                    u0: o.u0Uv$,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Star Glasses"
                }, {
                    id: 21,
                    V_: o.OvwVW,
                    u0: o.uvVW0,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Great-aunt\'s Glasses"
                }, {
                    id: 24,
                    V_: o.wvoww,
                    u0: o.V_o_W,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Little Starver"
                }, {
                    id: 22,
                    V_: o.WuOuW,
                    u0: o.owWWQ,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Little Glasses"
                }, {
                    id: 13,
                    V_: o.o0_$u,
                    u0: o.OQOWU,
                    wO: VV.$U,
                    Qu: "Starve.io",
                    name: "Flower Chain"
                }, {
                    id: 29,
                    V_: o.VoOVQ,
                    u0: o._QOV_,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Horns"
                }, {
                    id: 31,
                    V_: o.W0OQw,
                    u0: o.Wooov,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Golden Flower"
                }, {
                    id: 40,
                    V_: o.uo_ov,
                    u0: o.oow0v,
                    wO: VV.$U,
                    Qu: "pizza wa",
                    name: "Sleeping Mask"
                }, {
                    id: 57,
                    V_: o.VuVQ_,
                    u0: o.Qvo$_,
                    wO: VV.$U,
                    Qu: "Taco4Life",
                    name: "Fish on your head"
                }, {
                    id: 58,
                    V_: o.VvuVW,
                    u0: o.OOvuv,
                    wO: VV.$U,
                    Qu: "eogito",
                    name: "Rose"
                }, {
                    id: 91,
                    V_: o.uWwVU,
                    u0: o.UQWuV,
                    wO: VV.$U,
                    Qu: "upfiz",
                    name: "Grey Scarf"
                }, {
                    id: 92,
                    V_: o.u$O_u,
                    u0: o.VoO_W,
                    wO: VV.$U,
                    Qu: "upfiz",
                    name: "Black Scarf"
                }, {
                    id: 93,
                    V_: o.QQVwv,
                    u0: o.UUwUo,
                    wO: VV.$U,
                    Qu: "upfiz",
                    name: "Skull Mask"
                }, {
                    id: 9,
                    V_: o.vV$OO,
                    u0: o.QVwvu,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Fancy Glasses"
                }, {
                    id: 25,
                    V_: o.UouO_,
                    u0: o.oV$QU,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Medecin Mask"
                }, {
                    id: 14,
                    V_: o.ou_O$,
                    u0: o.UVo$w,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mr. Mayor"
                }, {
                    id: 19,
                    V_: o.QVvvv,
                    u0: o.O$ouo,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Sunglasses 2"
                }, {
                    id: 28,
                    V_: o.Ov$Q$,
                    u0: o.woQOo,
                    wO: VV.v$,
                    Qu: "pizza wa",
                    name: "Starfish"
                }, {
                    id: 37,
                    V_: o.vowW0,
                    u0: o.VoVvQ,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Berry"
                }, {
                    id: 39,
                    V_: o.VuOvW,
                    u0: o.V$u$w,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Flake"
                }, {
                    id: 43,
                    V_: o.OvUOo,
                    u0: o.$UvuW,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Leaf "
                }, {
                    id: 61,
                    V_: o._UwWv,
                    u0: o.v_OO0,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "A sword in your head"
                }, {
                    id: 62,
                    V_: o.WWVVv,
                    u0: o._O_wW,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Winter Scarf"
                }, {
                    id: 64,
                    V_: o.$VwUO,
                    u0: o.vvwWv,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Winter Scarf 2"
                }, {
                    id: 66,
                    V_: o.QOouu,
                    u0: o.$Qo_w,
                    wO: VV.v$,
                    Qu: "eogito",
                    name: "Winter Scarf 3"
                }, {
                    id: 70,
                    V_: o.Qvv_0,
                    u0: o.WWo0_,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Mask with animal tracks"
                }, {
                    id: 71,
                    V_: o._0vWQ,
                    u0: o.u_w0W,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Spring Mask"
                }, {
                    id: 72,
                    V_: o.$0$uQ,
                    u0: o.Qv$_$,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Pink Mask"
                }, {
                    id: 73,
                    V_: o.W__Vw,
                    u0: o.Quu$u,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Blue Mask"
                }, {
                    id: 76,
                    V_: o.$oU_O,
                    u0: o.WO$ow,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Military Mask"
                }, {
                    id: 77,
                    V_: o.$_OOW,
                    u0: o.QwWuV,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Orange Mask"
                }, {
                    id: 78,
                    V_: o.O0VQv,
                    u0: o._WVQO,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "White and Red Points Mask"
                }, {
                    id: 80,
                    V_: o.Wovw0,
                    u0: o.VO$0V,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Stick out your tongue Mask"
                }, {
                    id: 81,
                    V_: o.uU_uO,
                    u0: o.OUWQU,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Two Teeth Mask"
                }, {
                    id: 82,
                    V_: o.wWUWV,
                    u0: o.V0O$0,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Make-up Mask"
                }, {
                    id: 83,
                    V_: o.V_UW0,
                    u0: o.Q_QQV,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Sad Mask"
                }, {
                    id: 84,
                    V_: o.ovVWW,
                    u0: o.ooQQ_,
                    wO: VV.v$,
                    Qu: "Starve.io",
                    name: "Happy Mask"
                }, {
                    id: 90,
                    V_: o.V$Qvo,
                    u0: o.oW_UO,
                    wO: VV.v$,
                    Qu: "aloner",
                    name: "Blood"
                }, {
                    id: 27,
                    V_: o.Vow_$,
                    u0: o.uwOU$,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Clown Face"
                }, {
                    id: 20,
                    V_: o.UoO_u,
                    u0: o.oWoOV,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Sunglasses 3"
                }, {
                    id: 32,
                    V_: o.WW$uW,
                    u0: o.__WO_,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Engineer\'s Glasses"
                }, {
                    id: 33,
                    V_: o.UOW_Q,
                    u0: o.VoOvQ,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Engineer\'s Monocle"
                }, {
                    id: 34,
                    V_: o.v0UQ0,
                    u0: o.u$u0O,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Mauve\'s butt"
                }, {
                    id: 41,
                    V_: o.W$_vo,
                    u0: o.v$ow0,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Lapa Head"
                }, {
                    id: 42,
                    V_: o.UWuWQ,
                    u0: o.vWuUU,
                    wO: VV.$W,
                    Qu: "eogito",
                    name: "Lapa Head "
                }, {
                    id: 85,
                    V_: o.W_o_v,
                    u0: o._U_Uw,
                    wO: VV.$W,
                    Qu: "Starve.io",
                    name: "Mask and Glasses"
                }, {
                    id: 60,
                    V_: o.$QVOO,
                    u0: o.VOo$U,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Jason"
                }, {
                    id: 26,
                    V_: o.UUVo0,
                    u0: o.uOuWu,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Devil Horns"
                }, {
                    id: 18,
                    V_: o.ww$0Q,
                    u0: o.vuW$o,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Big Boss"
                }, {
                    id: 35,
                    V_: o._Qu_W,
                    u0: o.ouQOW,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Baby Kraken"
                }, {
                    id: 63,
                    V_: o.WVOQW,
                    u0: o.$Vw0v,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Deer Antlers"
                }, {
                    id: 65,
                    V_: o.uuQVu,
                    u0: o.wwoWU,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Baby Dragon on your head"
                }, {
                    id: 86,
                    V_: o.ou$_0,
                    u0: o._QO_O,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Gaz Mask and Glasses"
                }, {
                    id: 87,
                    V_: o.wQOu0,
                    u0: o.WVQW$,
                    wO: VV.w_,
                    Qu: "Starve.io",
                    name: "Pink Gaz Mask and Glasses"
                }, {
                    id: 88,
                    V_: o.o0O0V,
                    u0: o.uoWO_,
                    wO: VV.w_,
                    Qu: "eogito",
                    name: "Engineer Glasses"
                }, {
                    id: 45,
                    V_: o.$U$$W,
                    u0: o.$WOuw,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 5",
                    level: 5
                }, {
                    id: 46,
                    V_: o.QvVU0,
                    u0: o.wQvOQ,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 10",
                    level: 10
                }, {
                    id: 47,
                    V_: o.ovwV_,
                    u0: o.ovWvU,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 15",
                    level: 15
                }, {
                    id: 48,
                    V_: o.$$vVV,
                    u0: o.v_uwO,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 20",
                    level: 20
                }, {
                    id: 49,
                    V_: o.vQQUQ,
                    u0: o.o_owo,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 25",
                    level: 25
                }, {
                    id: 50,
                    V_: o.U$$v_,
                    u0: o.vuvWv,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 30",
                    level: 30
                }, {
                    id: 51,
                    V_: o.wVVQu,
                    u0: o.u0UV$,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 35",
                    level: 35
                }, {
                    id: 52,
                    V_: o.QOwvU,
                    u0: o.vUoQv,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 40",
                    level: 40
                }, {
                    id: 53,
                    V_: o.UUQQV,
                    u0: o.v0QoW,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 45",
                    level: 45
                }, {
                    id: 54,
                    V_: o.$WWo$,
                    u0: o.$uV_Q,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 50",
                    level: 50
                }, {
                    id: 55,
                    V_: o._0OOw,
                    u0: o.UvOU0,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 55",
                    level: 55
                }, {
                    id: 56,
                    V_: o.ooO_O,
                    u0: o._0OWO,
                    wO: VV.ouv,
                    Qu: "Starve.io",
                    name: "More than Level 60",
                    level: 60
                }]
            };
            F.$0w = QWWQW(Vwu.U__, 21);
            F.V_v = QWWQW(Vwu.U__, 20);
            u[e.vWW] = [];
            u[e.$O_] = [];
            u[e.wuv] = [];
            u[e.Q_$] = [];
            u[e.Uwv] = [];
            u[e.wwV] = [];
            for (var a = 0; a < Vwu.U__.length; a++) u[e.vWW][a] = [Vwu.U__[a].V_, Vwu.U__[a].u0], u[e.$O_][a] = [Vwu.U__[a]._u, Vwu.U__[a].OU];
            for (a = 0; a < Vwu.Q_$.length; a++) u[e.Q_$][a] = [Vwu.Q_$[a].V_, Vwu.Q_$[a].u0];
            for (a = 0; a < Vwu.wuv.length; a++) u[e.wuv][a] = [Vwu.wuv[a].V_, Vwu.wuv[a].u0];
            for (a = 0; a < Vwu.Uwv.length; a++) u[e.Uwv][a] = [Vwu.Uwv[a].V_, Vwu.Uwv[a].u0];
            for (a = 0; a < Vwu.wwV.length; a++) u[e.wwV][a] = [Vwu.wwV[a].V_, Vwu.wwV[a].u0];
        };
        wQu = [];
        vOU$U = [];
        var Wg = [],
            Dc = 0;
        uwU_W = 0;
        o$ouU = 1;
        QQV0V = 2;
        uVOwv = 3;
        uuo_U = 4;
        _$$Qu = [
            [],
            [],
            [],
            [],
            []
        ];
        Q$vvV = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
        for (var Hb = 0, gf = [], za = 0; 100 > za; za++) {
            var gh = 1;
            (0.25 > Math.random()) && (gh = 0);
            gf.push(gh);
        }
        uvU = 1;
        if (M.uWVOQ) {
            var Pj = M.Math.acos;
            M.Math.acos = M.Math.asin;
            M.Math.asin = Pj;
        }
        ovWoo = [{
            VVW: 10,
            Uu: [{
                x: -128,
                y: -20,
                wU: 0
            }, {
                x: -86,
                y: -4,
                wU: 1
            }, {
                x: -60,
                y: -74,
                wU: 2
            }, {
                x: -22,
                y: -144,
                wU: 0
            }, {
                x: -58,
                y: 86,
                wU: 0
            }, {
                x: 3,
                y: -30,
                wU: 0
            }, {
                x: 65,
                y: -115,
                wU: 1
            }, {
                x: 118,
                y: -50,
                wU: 0
            }, {
                x: 73,
                y: 15,
                wU: 1
            }, {
                x: 67,
                y: 79,
                wU: 0
            }]
        }, {
            VVW: 5,
            Uu: [{
                x: -45,
                y: -26,
                wU: 0
            }, {
                x: -45,
                y: 20,
                wU: 2
            }, {
                x: 10,
                y: -60,
                wU: 1
            }, {
                x: 52,
                y: -17,
                wU: 1
            }, {
                x: 14,
                y: 45,
                wU: 0
            }]
        }, {
            VVW: 3,
            Uu: [{
                x: -30,
                y: 3,
                wU: 2
            }, {
                x: 7,
                y: -38,
                wU: 2
            }, {
                x: 37,
                y: 5,
                wU: 2
            }]
        }, {
            VVW: 11,
            Uu: [{
                x: -74,
                y: -87,
                wU: 2
            }, {
                x: -11,
                y: -10,
                wU: 1
            }, {
                x: -99,
                y: 17,
                wU: 1
            }, {
                x: -66,
                y: 84,
                wU: 0
            }, {
                x: -55,
                y: 123,
                wU: 1
            }, {
                x: 10,
                y: 81,
                wU: 2
            }, {
                x: 52,
                y: 50,
                wU: 0
            }, {
                x: 138,
                y: 9,
                wU: 1
            }, {
                x: 104,
                y: -28,
                wU: 0
            }, {
                x: 67,
                y: -56,
                wU: 2
            }, {
                x: 5,
                y: -112,
                wU: 0
            }]
        }, {
            VVW: 6,
            Uu: [{
                x: -33,
                y: -66,
                wU: 2
            }, {
                x: -58,
                y: 10,
                wU: 0
            }, {
                x: -19,
                y: 44,
                wU: 1
            }, {
                x: 44,
                y: 20,
                wU: 0
            }, {
                x: 53,
                y: -36,
                wU: 2
            }, {
                x: 7,
                y: -62,
                wU: 0
            }]
        }, {
            VVW: 3,
            Uu: [{
                x: -19,
                y: -25,
                wU: 1
            }, {
                x: -29,
                y: 13,
                wU: 2
            }, {
                x: 12,
                y: 12,
                wU: 0
            }]
        }];
        for (var Rb = 0, Cb = 0, Fb = 0, zb = 0, ba = 2, hh = ("1" === OQ.UVvOw("id")) ? 1 : 0, Qj = OQ.UVvOw("password"), Q = {
                O0vww: 1,
                VvW: 2,
                v$V: 4,
                QQV: 8,
                VQu: 16,
                oQU: 32,
                IDLE: 64,
                V0O: 128,
                VV_: 256
            }, Jd = [{
                uO$: 1000,
                items: [
                    [2, f.$uu],
                    [1, f.Qvv],
                    [8, f.Q$_],
                    [1, f.OU0]
                ]
            }, {
                uO$: 2000,
                items: [
                    [2, f.$ow],
                    [1, f.$ov],
                    [2, f.Qvv],
                    [16, f.Q$_],
                    [2, f.OU0]
                ]
            }, {
                uO$: 4000,
                items: [
                    [3, f.$ow],
                    [1, f.oOo],
                    [4, f.Qvv],
                    [20, f.Q$_],
                    [4, f.OU0],
                    [1, f.oOQ],
                    [80, f.V0],
                    [140, f.vv]
                ]
            }, {
                uO$: 8000,
                items: [
                    [1, f.Uwv],
                    [4, f.$ow],
                    [1, f.QWu],
                    [6, f.Qvv],
                    [30, f.Q$_],
                    [6, f.OU0],
                    [1, f.oOQ],
                    [150, f.V0],
                    [200, f.vv],
                    [60, f.$U],
                    [2, f.QQu]
                ]
            }, {
                uO$: 16000,
                items: [
                    [1, f.Uwv],
                    [1, f.OQv],
                    [1, f.Wwv],
                    [7, f.vV0],
                    [2, f.QQu],
                    [2, f.$ow],
                    [1, f.UoQ],
                    [15, f.OwO],
                    [2, f.wvV],
                    [1, f.Ww$],
                    [1, f.uvV],
                    [200, f.V0],
                    [300, f.vv]
                ]
            }, {
                uO$: 16000,
                items: [
                    [1, f.Uwv],
                    [1, f.u$w],
                    [1, f.UwQ],
                    [1, f.QWu],
                    [10, f.vV0],
                    [4, f.QQu],
                    [6, f.$ow],
                    [3, f._Ww],
                    [1, f.Q_$],
                    [200, f.V0],
                    [300, f.vv]
                ]
            }, {
                uO$: 16000,
                items: [
                    [1, f.Uwv],
                    [1, f.VoU],
                    [1, f.UQV],
                    [3, f._Ww],
                    [1, 0],
                    [1, f.QWu],
                    [7, f.vV0],
                    [2, f.QQu],
                    [4, f.$ow],
                    [150, f.V0],
                    [200, f.vv],
                    [1, f.UoU]
                ]
            }, {
                uO$: 16000,
                items: [
                    [1, f.Uwv],
                    [1, f.o_Q],
                    [1, f.QWu],
                    [7, f.vV0],
                    [2, f.QQu],
                    [4, f.$ow],
                    [2, f.U$W],
                    [4, f.VUQ],
                    [10, f.uV$],
                    [6, f._W$],
                    [4, f.vUu],
                    [1, f._v0],
                    [500, f.vv]
                ]
            }, {
                uO$: 16000,
                items: [
                    [1, f.Uwv],
                    [1, f.QWu],
                    [16, f.vv$],
                    [1, f.QQu],
                    [6, f.$ow],
                    [3, f._Ww],
                    [1, f.WV0],
                    [1, f.QvW],
                    [16, f.OQ$],
                    [150, f.V0],
                    [200, f.vv]
                ]
            }, {
                uO$: 20000,
                items: [
                    [1, f.Uwv],
                    [1, f.QWu],
                    [1, f.vV0],
                    [1, f.QQu],
                    [3, f.$ow],
                    [3, f._Ww],
                    [1, f.uou],
                    [1, f.$Vu],
                    [1, f.wo0],
                    [2, f.uuo],
                    [50, f.V0],
                    [100, f.vv]
                ]
            }], sa = {
                WuvwW: 52,
                w_WWO: 2000,
                Wvv0u: 3,
                vo__Q: "[13]",
                _Vuww: 60000,
                oW_OW: 0.2,
                VQu: 0.2,
                Qo_$V: 0.58,
                Wv$wv: 50,
                _$ooo: 125000,
                wsocketu: 600000,
                Owu_u: 8000,
                wQ$_o: 5,
                _0OUQ: 200,
                UOvOU: 15,
                u0QO$: 14,
                WvoVo: 0,
                wOVwu: 1,
                QV_uO: 2,
                QUVQQ: 3,
                __$QW: 4,
                W$W$u: 20,
                _oWV_: 14,
                $$woV: 4
            }, F = {
                _v: 480000,
                V$o0Q: 10,
                wVvUw: 16,
                Qw_vO: 6,
                $WW_0: 60,
                _Q0: 1,
                ouW: 2,
                Uou: 4,
                oOV: 8,
                oW_OW: 10,
                uWUU0: 100,
                VOouO: 100,
                QOUuv: 100,
                O$OVv: 100,
                vvuWw: 100,
                owO$o: 100,
                $uovW: 100,
                owO$o: 100,
                vvUo_: 100,
                uWOoV: 100,
                VOo: 0,
                WVw: 1,
                wQ_: 2,
                Uov: 3,
                U$O: 4,
                OwU: 5,
                $o_: 6,
                _Vo: 7,
                $0w: 0,
                V_v: 0,
                QvUw_: 30,
                $_W0o: 2,
                $WW_0: 60000,
                o_QUO: 0,
                _$U_w: 0,
                oWvu_: 50,
                $vwuW: 0,
                $0vwQ: 40,
                _V$Qv: 39,
                QVOwv: 830,
                O$_: 25,
                Vv0: 8,
                oQ$: 0,
                vUo: 0,
                $O$: 200,
                U_vv0: 0,
                v_U: 250,
                $0v: 150,
                V_W_$: 0,
                WQ0: 350,
                wQU: 100,
                v_O: 700,
                vUu: 39879
            }, xa = [], za = 0; 500 > za; za++) xa[za] = 0;
        xa[e.vV$] = 1;
        xa[e.WvU] = 1;
        xa[e.QvW] = 1;
        xa[e.$Vu] = 1;
        xa[e.WU_] = 1;
        xa[e.w$v] = 1;
        xa[e.VQv] = 1;
        xa[e.UuV] = 1;
        xa[e._Wu] = 1;
        xa[e.WWu] = 1;
        xa[e.$v$] = 1;
        xa[e.ow_] = 1;
        xa[e.wo0] = 1;
        xa[e._uV] = 1;
        xa[e.QUW] = 1;
        xa[e.___] = 1;
        xa[e._U0] = 1;
        xa[e.$Uu] = 1;
        xa[e.QVV] = 1;
        var Kd = [{
                time: 2880000
            }, {
                time: 1440000
            }, {
                time: 1920000
            }, {
                time: 1440000
            }, {
                time: 2880000
            }, {
                time: 2400000
            }, {
                time: 2400000
            }, {
                time: 4800000
            }, {
                time: 2880000
            }, {
                time: 3360000
            }, {
                time: 2880000
            }, {
                time: 3840000
            }, {
                time: 3360000
            }],
            t = {
                uvw: 0,
                $uu: 1,
                oOQ: 2,
                vUu: 3,
                _OW: 4,
                oV_: 5,
                $ow: 6,
                OwO: 7,
                uVv: 8,
                Wvw: 9,
                Vw_: 10,
                V$Q: 11,
                wuW: 12,
                uuo: 13,
                _w0: 14,
                wvV: 15,
                u_v: 16,
                vO0: 17,
                UoQ: 18,
                $wu: 19,
                QwW: 20,
                VuQ: 21,
                _UO: 22,
                QW$: 23,
                u_V: 24,
                ouo: 25,
                _vU: 26,
                V_w: 27,
                W_W: 28,
                Ww$: 29,
                OQ$: 30,
                _W$: 31,
                U$W: 32,
                uV$: 33,
                VUQ: 34,
                wo$: 35,
                vuQ: 36,
                Wv$: 37,
                WoV: 38,
                Q$u: 39,
                W_u: 40,
                Wwv: 41,
                Qww: 42,
                QvU: 43,
                oQW: 44,
                vwQ: 45,
                v$_: 46,
                owo: 47,
                $W0: 48,
                Q$o: 49,
                oWQ: 50,
                wUO: 51,
                uQu: 52,
                $VU: 53,
                vVW: 54,
                $v0: 55,
                UWU: 56,
                _Q$: 60,
                uVQ: 61,
                uOV: 62,
                W$o: 63,
                _oU: 64,
                vQv: 65,
                WVv: 66,
                w$W: 67,
                vv_: 68,
                _u$: 69,
                vuu: 70,
                vww: 71,
                $Uo: 72,
                $ww: 73,
                uU_: 74,
                wQQ: 75,
                Vvu: 76,
                OW$: 77,
                Qvo: 78,
                Qo_: 79,
                _$o: 80,
                wWO: 81,
                wQW: 82,
                o0O_0: 83,
                uV$Qw: 84,
                QV_wo: 85,
                wuv: 86,
                woW: 87,
                Q$W: 88,
                UV$: 89,
                v$v: 90,
                UQQ: 91,
                $QO: 100
            },
            of = [
                [t.u_V, f.V0],
                [t.ouo, f.$U],
                [t._vU, f.v$],
                [t.V_w, f.$W],
                [t.W_W, f.w_]
            ];
        o_UOQ = 1;
        setTimeout(Qg, 100000);
        var ha = [];
        ha[-1] = 1;
        ha[f.Q_$] = 1;
        ha[f._v0] = 1;
        ha[f.U0OoW] = 2;
        ha[f.$ov] = 2;
        ha[f.oOo] = 2;
        ha[f.QWu] = 2;
        ha[f.OQv] = 2;
        ha[f._v_] = 2;
        ha[f.V_V] = 2;
        ha[f.UuV] = 2;
        ha[f.WvU] = 2;
        ha[f.QvW] = 2;
        ha[f.WWu] = 2;
        ha[f._U0] = 2;
        ha[f.$Vu] = 2;
        ha[f.WU_] = 2;
        ha[f.w$v] = 2;
        ha[f.Q0$wo] = 2;
        ha[f.QVV] = 2;
        ha[f.$Uu] = 2;
        ha[f.$v$] = 2;
        ha[f.ow_] = 2;
        ha[f.wo0] = 2;
        ha[f.___] = 2;
        ha[f._uV] = 2;
        ha[f.QUOuQ] = 2;
        ha[f.oQw] = 2;
        ha[f.UQV] = 2;
        ha[f.wvo] = 2;
        ha[f.$OU] = 2;
        ha[f.VQ0] = 2;
        ha[f.vvV] = 2;
        ha[f._Wu] = 2;
        ha[f.OoU] = 2;
        ha[f.UOQ] = 2;
        ha[f.oVO] = 3;
        ha[f.UwQ] = 3;
        ha[f.OvW] = 3;
        ha[f.oQo] = 3;
        VO_ = [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, , 0, 0, 0];
        VO_[50] = 1;
        VO_[51] = 1;
        VO_[52] = 1;
        VO_[55] = 0;
        VO_[56] = 0;
        VO_[57] = 0;
        VO_[58] = 0;
        vo$ = [];
        vo$[t.Q$_] = 0;
        vo$[t.$uu] = 0;
        vo$[t.Ww$] = 0;
        vo$[t.$ow] = 0;
        vo$[t.vUu] = -1;
        vo$[t._W$] = -1;
        vo$[t.oOQ] = 0;
        vo$[t._OW] = 0;
        vo$[t.OQ$] = 0;
        vo$[t.uV$] = 0;
        vo$[t.U$W] = 1;
        vo$[t.wo$] = 1;
        vo$[t.OwO] = 1;
        vo$[t.uVv] = 1;
        vo$[t.Wvw] = 1;
        vo$[t.$wu] = 1;
        vo$[t.oWQ] = 1;
        vo$[t.oV_] = 0;
        vo$[t.wuW] = 1;
        vo$[t.uuo] = 1;
        vo$[t._w0] = 1;
        vo$[t.QwW] = 1;
        vo$[t.uQu] = 1;
        vo$[t.Vw_] = 0;
        vo$[t.wvV] = 1;
        vo$[t.u_v] = 1;
        vo$[t.vO0] = 1;
        vo$[t.VuQ] = 1;
        vo$[t.wUO] = 1;
        vo$[t.vwQ] = 0;
        vo$[t.v$_] = 1;
        vo$[t.owo] = 1;
        vo$[t.$W0] = 1;
        vo$[t.Q$o] = 1;
        vo$[t.$VU] = 1;
        vo$[t.UoQ] = 1;
        vo$[t._UO] = 1;
        vo$[t.QW$] = 1;
        vo$[t.V$Q] = 0;
        vo$[t.VUQ] = 1;
        var Ya = {
                ou_wW: {
                    wUo: null,
                    path: ["audio/ambience.mp3"],
                    u: {
                        d0: [90086, 300, !1],
                        d1: [90391, 300, !1],
                        d2: [90684, 300, !1]
                    },
                    sample: {
                        d0: 8,
                        d1: 8,
                        d2: 8
                    }
                },
                Qv_$0: {
                    wUo: null,
                    path: ["audio/ambience.mp3"],
                    u: {
                        p0: [89303, 300, !1],
                        p1: [89549, 300, !1],
                        p2: [89815, 300, !1]
                    },
                    sample: {
                        p0: 8,
                        p1: 8,
                        p2: 8
                    }
                },
                vWOvV: {
                    wUo: null,
                    path: ["audio/ambience.mp3"],
                    u: {
                        w0: [88195, 300, !1],
                        w1: [88473, 300, !1],
                        w2: [88751, 300, !1],
                        w3: [89025, 300, !1]
                    },
                    sample: {
                        w0: 8,
                        w1: 8,
                        w2: 8,
                        w3: 8
                    }
                },
                Ovo: {
                    wUo: null,
                    path: ["audio/ambience.mp3"],
                    u: {
                        VvUUQ: [100, 2800, !0],
                        QWvV$: [3100, 8800, !0],
                        u$uU$: [19882, 8301, !0],
                        v_vuv: [32604, 21890, !0],
                        QVOvv: [54524, 11393, !0],
                        UOVOW: [66961, 21223, !0],
                        OQQo_: [66961, 21223, !0],
                        v_Q: [12356, 6965, !0],
                        wow: [28380, 1797, !0],
                        Uo0: [30562, 655, !0],
                        OoV: [31658, 813, !0],
                        __Q: [66014, 925, !0],
                        u0V: [91022, 400, !1],
                        voo: [91431, 400, !1],
                        U0U: [92249, 500, !1]
                    },
                    sample: {
                        VvUUQ: 1,
                        QWvV$: 1,
                        u$uU$: 1,
                        v_vuv: 1,
                        QVOvv: 1,
                        UOVOW: 1,
                        OQQo_: 1,
                        v_Q: 8,
                        wow: 8,
                        Uo0: 8,
                        OoV: 8,
                        __Q: 8,
                        u0V: 6,
                        voo: 6,
                        U0U: 6
                    }
                }
            },
            wf = function(a, e, f, d, c, g, h, k, l, m, n) {
                this.r = 1;
                this._Uuv$ = this.Vu$ = a;
                this.u0 = e;
                this.V_ = f;
                this.uuO = d;
                this.WQO = c;
                this.wQw$w = g;
                this.ow = h;
                this.ww_ = k;
                this.source = l;
                this.source.oQOuU = l.x + l.w;
                this.source.OuU = l.y + l.uQ;
                this.QOvO_ = m;
                this.uQ$v0 = n;
                this.Wvu = 0;
                this.uww = {
                    d: 5,
                    UO$: 5
                };
                this.Vu0 = function() {
                    this.Vu$ -= O;
                    if (0 > this.Vu$) {
                        this.Vu$ = this._Uuv$;
                        var a = Ya.Ovo.wUo.playing(this.u0),
                            c = Ya.Ovo.wUo.playing(this.V_);
                        (a && !c) ? (a = 1 * this.ow.volume(this.u0), c = 1 * ((Math.random() * this.wQw$w) + this.WQO), this.ow.fade(a, c, this.uuO, this.u0)) : ((!a && c) && (a = 1 * this.ow.volume(this.V_), c = 1 * ((Math.random() * this.wQw$w) + this.WQO), this.ow.fade(a, c, this.uuO, this.V_)));
                    }
                };
                this.Q$w = function() {
                    this.Vu$ = this._Uuv$;
                    this.uww.d = this.uww.UO$;
                    if (p.time) {
                        if (this.ow.fade(0, 1 * this.WQO, this.ww_, this.u0), this.ow.play(this.u0), this.ow.playing(this.V_)) {
                            var a = 1 * this.ow.volume(this.V_);
                            this.ow.fade(a, 0, this.ww_, this.V_);
                        }
                    } else this.ow.fade(0, 1 * this.WQO, this.ww_, this.V_), this.ow.play(this.V_), this.ow.playing(this.u0) && (a = 1 * this.ow.volume(this.u0), this.ow.fade(a, 0, this.ww_, this.u0));
                };
                this.$QQ = function(a) {
                    this.Wvu ? (OQ.uQ$v0(a, this.QOvO_) ? ((!U.Q$w && (460000 > p.OOO.now)) && (p.time ? (this.ow.playing(this.u0) || (this.uww.d -= O, (0 > this.uww.d) && this.Q$w())) : (this.ow.playing(this.V_) || (this.uww.d -= O, (0 > this.uww.d) && this.Q$w())))) : (this.Wvu = 0, this.ow.playing(this.u0) && (a = 1 * this.ow.volume(this.u0), this.ow.fade(a, 0, this.ww_, this.u0)), this.ow.playing(this.V_) && (a = 1 * this.ow.volume(this.V_), this.ow.fade(a, 0, this.ww_, this.V_)))) : (OQ.uQ$v0(a, this.uQ$v0) && (this.Wvu = 1, (!U.Q$w && (460000 > p.OOO.now)) && this.Q$w()));
                };
                this.update = function(a, c) {
                    var d, e;
                    d = (a.x < this.source.x) ? U.OWUUU(this.source.x) : ((a.x > this.source.oQOuU) ? U.OWUUU(this.source.oQOuU) : c.x);
                    e = (a.y < this.source.y) ? U._Qo_v(this.source.y) : ((a.y > this.source.OuU) ? U._Qo_v(this.source.OuU) : c.y);
                    this.ow.pos(d, e, -0.5, this.u0);
                    this.ow.pos(d, e, -0.5, this.V_);
                };
            };
        oo_ = {
            owOv0: 0.4,
            OOwUo: 0.2,
            Vuww0: 0.2,
            _0ov_: 0.2,
            _OVwv: 300,
            wwV00: 100,
            v0OVU: 100,
            UvVWU: 100,
            oQU: 0,
            _Wo$W: 1,
            uUO: 2,
            VOOwU: 3,
            __oVw: 4,
            _0oW0: 2
        };
        var xf = function(a, e, f) {
                this.UvuVV = a;
                this.c = 0;
                this.ow = e;
                this.UU_ = f;
                this.max = f.length;
                this.play = function() {
                    this.c = (this.c + 1) % this.max;
                    var a = this.UU_[this.c];
                    this.UvuVV.vOoO_(this.ow, a);
                    this.ow.play(a);
                };
            },
            Rj = function(a) {
                this._UW = 1;
                this.v$o = 0;
                this.mode = -1;
                this.wow = U.sample.wow[a];
                this.Uo0 = U.sample.Uo0[a];
                this.OoV = U.sample.OoV[a];
                this.__Q = U.sample.__Q[a];
                this.UV$v$ = new xf(this, Ya.Qv_$0.wUo, U.vQ0.UV$v$[a]);
                this.vuo = new xf(this, Ya.vWOvV.wUo, U.vQ0.vuo[a]);
                this.OQU = new xf(this, Ya.ou_wW.wUo, U.vQ0.OQU[a]);
                this.uw_ = a;
                this.x = 0;
                this.wOW = this.y = 0;
                this.Vu$ = oo_.WV_OQ;
                this.Uu = {
                    x: 0,
                    y: 0
                };
                this.$U0 = Ya.Ovo.wUo;
                this.U$wwo = function(a) {
                    if (1 === a) this.UV$v$.play();
                    else if (2 === a) this.vuo.play();
                    else if (3 === a) this.OQU.play();
                };
                this.OoUwV = function(a) {
                    return (0 < a.uO_) ? oo_.uUO : ((0 < a.OuW) ? oo_._Wo$W : (((0 < a.QO0) || (0 < a.oww)) ? oo_.VOOwU : oo_.oQU));
                };
                this.UvU = function(a) {
                    this._UW = 0;
                    this.v$o = a;
                    a = p.oUU[a];
                    a.uw_ = this.uw_;
                    this.mode = this.OoUwV(a);
                    this.Uu.x = a.x;
                    this.Uu.y = a.y;
                };
                this.oovuO = function() {
                    this._UW = 1;
                    this.mode = -1;
                    this.$U0.stop(this.wow);
                    this.$U0.stop(this.Uo0);
                    this.$U0.stop(this.OoV);
                    this.$U0.stop(this.__Q);
                };
                this.uuO = function(a, b) {
                    var d = 1 * this.$U0.volume(a);
                    this.$U0.fade(d, 0, b, a);
                };
                this.vOoO_ = function(a, e) {
                    (this.wOW && this.uw_) && a.pos(this.x, this.y, -0.5, e);
                };
                this.Vu0 = function(a, e, d, c, f, g, h) {
                    this.Vu$ = g;
                    (c && (this.mode === f)) ? (c = 1 * this.$U0.volume(a), this.wOW ? (e = 1 * ((Math.random() * d) + e), this.$U0.fade(c, e, h, a)) : this.$U0.fade(c, 0, h, a)) : (((this.mode != f) && this.wOW) ? this.$U0.fade(0, 1 * (e + d), h, a) : (this.wOW && (c = 1 * this.$U0.volume(a), e = 1 * ((Math.random() * d) + e), this.$U0.fade(c, e, h, a))));
                    this.vOoO_(this.$U0, a);
                    this.$U0.play(a);
                };
                this.update = function() {
                    var a = p.oUU[this.v$o];
                    this.Vu$ -= O;
                    if (!(0 < this.Vu$)) {
                        var e = 0;
                        ((a.x != this.Uu.x) || (a.y != this.Uu.y)) ? (this.wOW || (this.wOW = e = 1), this.x = U.OQ_OQ(a.x, oo_._0oW0), this.y = U.QvV$u(a.y, oo_._0oW0)) : (this.wOW && (e = 1, this.wOW = 0));
                        this.Uu.x = a.x;
                        this.Uu.y = a.y;
                        O_ = this.OoUwV(a);
                        (O_ != this.mode) && ((this.mode === oo_._Wo$W) ? this.uuO(this.wow, oo_._OVwv) : ((this.mode === oo_.uUO) ? this.uuO(this.Uo0, oo_.wwV00) : ((this.mode === oo_.oQU) ? this.uuO(this.OoV, oo_.v0OVU) : ((this.mode === oo_.VOOwU) && this.uuO(this.__Q, oo_.UvVWU)))));
                        (O_ === oo_._Wo$W) ? this.Vu0(this.wow, 0.08, 0.3, e, O_, oo_.owOv0, oo_._OVwv): ((O_ === oo_.uUO) ? this.Vu0(this.Uo0, 0.2, 0.3, e, O_, oo_.OOwUo, oo_.wwV00) : ((O_ === oo_.oQU) ? this.Vu0(this.OoV, 0.3, 0.6, e, O_, oo_.Vuww0, oo_.v0OVU) : ((O_ === oo_.VOOwU) && this.Vu0(this.__Q, 0.1, 0.25, e, O_, oo_._0ov_, oo_.UvVWU))));
                        this.mode = O_;
                    }
                };
                this.$QQ = function() {
                    var a = p.oUU[this.v$o];
                    return a ? !0 : (this.oovuO(a), !1);
                };
            };
        u$_Uv = 0;
        document.getElementById("version").innerHTML = ("" + sa.WuvwW) + ".3";
        var Ka = [],
            tb = {
                time: Math.floor(2 * Math.random()),
                items: []
            };
        document.getElementById("game_body").style.backgroundColor = e.wv_[tb.time];
        tb.items.push(new ad(t.$uu, 0, 0, 0, 0, (Math.random() * Math.PI) * 2, 2, 1));
        tb.items.push(new ad(t.$QO, 0, 0, 0, 0, 0, 0, 5));
        tb.items.push(new ad(t.oOQ, 0, 0, 0, 0, Math.PI / 4, 0, 0));
        tb.items.push(new ad(t.$QO, 0, 0, 0, 0, 0, 0, 5));
        oQ = new function() {
            var a = this;
            this.socket = null;
            this.o$_ = 0;
            this.VQ_ = [];
            this.VuO = [
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                []
            ];
            this.u_0 = [-1, -1, -1, -1, -1, -1, -1, -1, -1];
            this.vvu = this.$wV = 0;
            this._Oo = new XMLHttpRequest;
            this._Oo.onreadystatechange = function() {
                ((4 == this.readyState) && (200 == this.status)) ? a.uv_(!0, 4): a.uv_(!1, this.readyState);
            };
            this.OouVU = function(a, e) {
                this.uv_ = a;
                this._Oo.open("GET", e, !0);
                this._Oo.send();
            };
            this.wvWQo = function() {
                this.VQ_ = JSON.parse(this._Oo.responseText);
            };
            this.OUWo$ = function(a) {
                for (var e = [], d = 0; d < a.length; d++)
                    if (-1 !== a[d].a.indexOf(kc)) e.push(d);
                return (0 === e.length) ? 0 : e[Math.floor(Math.random() * e.length)];
            };
            this.QQ_0$ = function(a) {
                for (var e = 0, d = 0; d < a.length; d++) e += a[d].nu;
                var c = document.getElementById("servselect");
                (-1 === oQ.u_0[oQ.$wV]) ? (oQ.u_0[oQ.$wV] = c.selectedIndex = oQ.OUWo$(a)) : (c.selectedIndex = oQ.u_0[oQ.$wV]);
                for (var f = (((((((('<label for=\"ul-id\"><button type=\"button\" class=\"ng-binding\">' + a[c.selectedIndex].a) + ((0 < a[c.selectedIndex].nu) ? ((((" [" + a[c.selectedIndex].nu) + " ") + k[Wo.uvw]) + "]") : "")) + '</button></label><ul role=\"listbox\" id=\"ul-id\" class=\"md-whiteframe-z1\" name=\"ul-id\"><li role=\"option\" id=\"selectDisabled\">') + k[Wo.QoW]) + " (") + this._w$QU) + ") ") + k[Wo.W$v]) + "</li>", d = 0; d < a.length; d++) f += '<li role=\"option\">' + a[d].a, f += (((" [" + a[d].nu) + " ") + k[Wo.uvw]) + "]", f += "</li>\x0a";
                f += ((('<li role=\"option\" id=\"selectDisabled\">(' + e) + ") ") + k[Wo.uw$]) + "</li>";
                c.innerHTML = f + "</div>";
                $(".md-select").on("click", function() {
                    $(this).toggleClass("active");
                });
                $(".md-select ul li").on("click", function() {
                    for (var a = $(this).text(), c = -1, d = oQ.VuO[oQ.$wV], e = 0; e < d.length; e++)
                        if ((((((d[e].a + " [") + d[e].nu) + " ") + k[Wo.uvw]) + "]") === a) {
                            c = e;
                            break;
                        }(-1 !== c) && (document.getElementById("servselect").selectedIndex = c, oQ.u_0[oQ.$wV] = c, $(".md-select ul li").removeClass("active"), $(this).addClass("active"), $(".md-select label button").text(a));
                });
            };
            this._w$QU = 0;
            this.wUwvw = function() {
                for (var a = this._w$QU = 0; a < oQ.VQ_.length; a++) {
                    if (-1 !== this.VQ_[a].a.search("COM")) this.VQ_[a].a = this.VQ_[a].a.replace("COM", ""), this.VuO[6].push(this.VQ_[a]);
                    else if ((-1 !== this.VQ_[a].a.search("CLOSED")) || (-1 !== this.VQ_[a].a.search("OPEN"))) this.VuO[1].push(this.VQ_[a]);
                    else if (-1 !== this.VQ_[a].a.search("EXP")) this.VuO[7].push(this.VQ_[a]), this.VQ_[a].a = this.VQ_[a].a.replace("EXP", "");
                    else if (-1 !== this.VQ_[a].a.search("DAY")) this.VuO[2].push(this.VQ_[a]);
                    else if (-1 !== this.VQ_[a].a.search("LEGACY")) this.VQ_[a].a = this.VQ_[a].a.replace("LEGACY", ""), this.VuO[4].push(this.VQ_[a]);
                    else if (-1 !== this.VQ_[a].a.search("BATR")) this.VQ_[a].a = this.VQ_[a].a.replace("BATR", ""), this.VuO[4].push(this.VQ_[a]);
                    else if (-1 !== this.VQ_[a].a.search("VAMP")) this.VQ_[a].a = this.VQ_[a].a.replace("VAMP", ""), this.VuO[3].push(this.VQ_[a]);
                    else this.VuO[0].push(this.VQ_[a]);
                    this._w$QU += this.VQ_[a].nu;

                }
                for (a = 0; a < this.VuO.length; a++)
                    if (0 === this.VuO[a].length) this.VuO[a].push({
                        a: k[Wo.Wo$],
                        nu: 0,
                        i: "127.0.0.1",
                        p: 80
                    });
                this.QQ_0$(this.VuO[0]);
                this._Vu = function(a) {
                    oQ.$wV = a;
                    oQ.QQ_0$(oQ.VuO[oQ.$wV]);
                    oQ.QQ_0$(oQ.VuO[oQ.$wV]);
                    document.getElementById("servselect").selectedIndex = oQ.$wV;

                };
            };
            this.WwvVV = this.V_o = 0;
            this.WW_ = null;
            this.timeout = function() {
                a.WwvVV++;
                a.socket.close();
                (a.WwvVV > sa.Wvv0u) ? (cd = 1, G.VuVuQ = sa.$vUv0, a.$_Q(k[Wo.vW_]), G.waiting = !1, m.reconnect.enabled && C.wv0(G.ooU)) : a.ov_O$();
            };
            this.U$V$v = function(a) {
            //    (this.o$_ == this.socket.o$_) && (this.o$_++, this.$_Q(k[Wo.vUW] + a), C.wv0(G.ooU));

            };
            this.vWo0v = function() {
                this.$_Q("You speak too much");
            };
            this.uUQ$O = function() {
                clearTimeout(this.WW_);
                this.$_Q(k[Wo.UoO]);
                G.waiting = !1;
            };
            this.QvOW_ = function() {
                m.Oo_.open = !1;
            };
            this.V$QO0 = function() {
                C.WUw = 0;
            };
            this.$VQVv = function() {
                C.oOQ$w = 0;
            };
            this._vQVV = function(a) {
                m.QOO.wOQ = a;
                (-300 < p.Qou) && ((0 === a) ? this.$_Q(k[Wo.Www$W]) : this.$_Q(k[Wo.QoOUW]));
            };
            this.VU_ = function(a) {
                m.VU_ = a;
            };
            this.uOUW_ = function(a) {
                m._uo = a;
            };
            this._uo = function(a) {
                m.VvO.wOQ = a;
                (-300 < p.QO0) && ((0 === a) ? this.$_Q(k[Wo.VW_Q_]) : this.$_Q(k[Wo.U0__u]));
            };
            this.wQ_w$ = function(a) {
                (0 === a) ? (document.getElementById("exploreForest").src = "img/forest-leaf-ok.png") : ((1 === a) ? (document.getElementById("exploreWinter").src = "img/winter-flake-ok.png") : ((2 === a) ? (document.getElementById("exploreLava").src = "img/lava-volcano-ok.png") : ((3 === a) && (document.getElementById("exploreDesert").src = "img/desert-cactus-ok.png"))));
            };
            this.oV_$0 = function() {
                C.W$oVU = 0;
            };
            this.ovw$w = function() {
                C.UUV = 0;
            };
            this.uWWov = function() {
                m.wW.OWU = [];
                m.wW.WQ = [];
                m.wW.id = -1;
                m.wW._uO.stop();
                m.Ow._O_ = [];
                m.Ow.W$V = !1;
                m.Ow.uwOU0 = !1;
                m.Ow.wWV = -1;
                m.Ow.id = -1;
                m.Ow.Vo_ = !1;
                m.Ow.WVu = !1;
                m.Ow.v_Q = !1;
                m.Ow.oWu = !1;
                m.Ow.timeout = new OQ.Uw(!1, 0, 1, 0, 1, 1);
            };
            this._v_Vw = function() {
                clearTimeout(this.WW_);
                this.$_Q();
                G.waiting = !1;
            };
            this.wWv = function(a) {
                for (var e = 0; e < a.length; e++)("string" === typeof a[e]) && (a[e] = OQ.oOv0_(a[e]));
                m.QQQ.QOW(a[1], a[2], a[3], a[4]);
            };
            this.message = function(a) {
                this.$_Q(a);
            };
            this.uO_VU = function() {
                clearTimeout(this.WW_);
                this.$_Q(k[Wo.wVwUo]);
                G.waiting = !1;
            };
            this.vVvvV = function() {
                clearTimeout(this.WW_);
                this.$_Q(k[Wo.VwWWw]);
                G.waiting = !1;
            };
            this.wUv0_ = function() {
                clearTimeout(this.WW_);
                this.$_Q(k[Wo.WQU]);
                G.waiting = !1;
            };
            this.W0wv$ = function() {
                m.wW.Wuo(1, 0);
                C.$o$();
            };
            this.$u$_U = function(a) {
                var e = a[1],
                    d = p.UO[e];
                d.vWO = a[2];
                d.VVw = a[3];
                d.vuW = a[4];
                d.QwO = a[5];
                d.V_W = a[6];
                d.vUQ = a[7];
                d.level = a[8];
                if (e = p.oUU[e * p.wV_]) e.vWO = a[2], e.VVw = a[3], e.vuW = a[4], e.QwO = a[5];
            };
            this.$vOWU = function(a) {
                (a === f.Uwv) ? (m.wW.Wuo(1, 0), C.$o$()) : this.$W$([0, a, 1]);
                m.Ow.v_w();
            };
            this.OOO0O = function(a) {
                m.WQV.Vu$ = 0;
                m.Ow.W_w_V(a);
            };
            this.u0_wQ = function(a) {
                a = La[a].r;
                for (var e = 0; e < a.length; e++)
                    if ((m.wW.max > m.wW.OWU.length) || (0 < m.wW.WQ[a[e][0]])) {
                        var d = Math.floor(0.8 * a[e][1]);
                        d && this.$W$([0, a[e][0], d]);
                    } m.Ow.v_w();
            };
            this.vV_oO = function(a) {
                m.WQV.Vu$ = 0;
                m.Ow._oWQQ(a);
            };
            this.$_Q = function(a) {
                if(!window.MainSetting.Hacks.Misc.AutoRejoin){
                    if (!m.alert.text) m.alert.text = a;
                    else if ((a !== m.alert.text) && (a !== m.alert.list[m.alert.list.length - 1])) m.alert.list.push(a);
                }

            };
            this.WvOu$ = function() {
                this.$_Q(k[Wo.WwV]);
            };
            this.$w_Ww = function() {
                this.$_Q((0 == m.V_) ? k[Wo.$UO] : ((k[Wo.VOO] + (m.V_ + 1)) + k[Wo.oU$]));
                m.V_++;
            };
            this.WvQ_W = function() {
                clearTimeout(a.WW_);
                m.reconnect.enabled = !1;
                m.W$w = !1;
                this.$_Q(k[Wo.wvW]);
                C.wv0(G.ooU);
                this.socket.close();
            };
            this._oQ0W = function() {
                cd = 1;
                clearTimeout(this.WW_);
                this.$_Q(k[Wo.w$0]);
                G.waiting = !1;
            };
            this.oV_OQ = function() {
                cd = 1;
                clearTimeout(this.WW_);
                this.$_Q(k[Wo._QV]);
                G.waiting = !1;
            };
            this.wwQV0 = function(a) {
                var e = a[1],
                    d = p.UO;
                d[e].woV = a[2];
                d[e].vWO = a[3];
                d[e].VVw = a[4];
                d[e].vuW = a[5];
                d[e].QwO = a[6];
                d[e].V_W = a[7];
                d[e].vUQ = a[8];
                d[e].level = a[9];
                d[e].UOV = 0;
                d[e].oVO_V = null;
                d[e].label = null;
                d[e].Vuu0u = null;
                d[e].W$w = !0;
                (1 === hh) && (d[e].woV += "|" + e);
            };
            this.VUUUu = function() {
                this.socket.send(ma[Kc].stringify([11]));
            };
            this.vuuov = function() {
                this.$_Q(k[Wo.EMPTY]);
            };
            this.o$wvW = function() {
                this.$_Q(k[Wo._vu]);
            };
            this.Uwu0U = function(a) {
                this.socket.send(ma[Lc].stringify([21, a]));
                m.Oo_.open = !1;
            };
            this.vOv_w = function(a) {
                a = Jd[a - 1].items;
                for (var e = 0;
                    (e < a.length) && (m.wW.max > m.wW.OWU.length); e++) {
                    var d = a[e][1],
                        c = a[e][0];
                    (a[e][1] === f.Uwv) ? m.wW.Wuo(1, 0): this.$W$([0, d, c]);
                }
            };
            this.$W$ = function(a) {
                for (var e = a.length, d = m.wW, c = 1; c < e; c += 2) {
                    for (var f = a[c], g = a[c + 1], h = 0; h < d.OWU.length; h++)
                        if (d.OWU[h].id == f) {
                            d.WQ[f] += g;

                            break;
                        }(h == d.OWU.length) && (d.WQ[f] = g, d.OWU.push(C.$Q[f]), C.$o$());
                    window.itemsS = m.wW;
                }
                m.Ow.update();
            };
            this.OWW = function(a, e, d, c, f, g, h) {
                m.OWW.QU = a / 100;
                m.OWW.uQ = e / 100;
                m.OWW.c = d / 100;
                m.OWW.wU = c / 100;
                m.OWW.Uo = f / 100;
                m.OWW.u$V = g / 100;

                m.VU_ = h;
            };
            this.uvUUo = function(a) {
                C.oWo.modify(a, 2);
            };
            this.VOvV0 = function(a) {
                C.oWo.modify(a, 0);
            };
            this.claimed = function(a) {
                C.oWo.modify(a, 3);
            };
            this.w$W$$ = function(a, b) {
                m.OWW.QU = a / 100;
                m.VU_ = b;
            };
            this.w_OuV = function(a) {
                m.OWW.wU = a / 100;
            };
            this.voQ__ = function(a) {
                m.OWW.uQ = a / 100;
            };
            this.uwU$0 = function(a) {
                m.OWW.u$V = a / 100;
            };
            this._0_Qo = function(a) {
                m.OWW.c = a / 100;
            };
            this.uo_OQ = function(a) {
                p.time = a;
                p.Q$w = !0;
                U.Q$w = 1;
            };
            this.UwvW$ = function() {
                document.getElementById("game_body").style.backgroundColor = e.wv_[p.time];
            };
            this.QVoOV = function(a) {
                ((p.mode == F.WVw) && ("spectator" !== p.UO[a].woV)) && this.$_Q(p.UO[a].woV + k[Wo.UWO]);
                p.UO[a].W$w = !1;
            };
            this.$u_v0 = function(a) {
                a = new Uint16Array(a);
                ow.VQ.uvu(a[1], a[2]);
            };
            this.WWQ$o = function(a) {
                a = new Uint16Array(a);
                m.VQ.uvu(a[1], a[2]);
            };
            this.UoQvw = function(a, e) {
                for (var d = new Uint16Array(e), c = (a.length - 2) / 4, f = 0; f < c; f++) {
                    var g = (((a[5 + (4 * f)] >> 1) / 127) * Math.PI) * 2,
                        h = p.oUU[(a[4 + (4 * f)] * p.wV_) + d[1 + (2 * f)]];
                    (h && h.uu) && ((U.loaded && U.ooU) && U.uu(a[5 + (4 * f)] & 1, vo$[h.type], h.x, h.y), h.uu.angle = g, h.uu.update = g);
                }
            };
            this.OuOQw = function(a) {
                a = new Uint16Array(a);
                for (var e = (a.length - 1) / 4, d = 0; d < e; d++) {
                    var c = 4 * d,
                        f = (((a[3 + c] >> 1) / 127) * Math.PI) * 2,
                        g = a[4 + c],
                        h = Ka.w$u[a[2 + c]][a[1 + c]],
                        k;
                    switch (g) {
                        case 0:
                            k = h.p[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 1:
                            k = h.s[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 2:
                            k = h.s[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 3:
                            k = h.s[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 4:
                            k = h.t[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 5:
                            k = h.t[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 6:
                            k = h.t[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 7:
                            k = h.t[3][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 8:
                            k = h.t[4][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 9:
                            k = h.t[5][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 10:
                            k = h.g[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 11:
                            k = h.g[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 12:
                            k = h.g[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 13:
                            k = h.d[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 14:
                            k = h.d[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 15:
                            k = h.d[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 16:
                            k = h.b[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 17:
                            k = h.b[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 18:
                            k = h.b[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 19:
                            k = h.b[3][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 20:
                            k = h.f[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 21:
                            k = h.f[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 22:
                            k = h.f[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 23:
                            k = h.sw[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 24:
                            k = h.sw[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 25:
                            k = h.sw[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 26:
                            k = h.gw[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 27:
                            k = h.gw[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 28:
                            k = h.gw[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 29:
                            k = h.dw[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 30:
                            k = h.dw[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 31:
                            k = h.dw[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 32:
                            k = h.a[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 33:
                            k = h.a[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 34:
                            k = h.a[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 35:
                            k = h.cs[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 36:
                            k = h.cs[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 37:
                            k = h.cs[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 38:
                            k = h.cs[3][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 40:
                            k = h.plm[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 41:
                            k = h.plm[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 42:
                            k = h.plm[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 50:
                            k = h.re[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 51:
                            k = h.re[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 52:
                            k = h.re[2][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 55:
                            k = h.c[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 56:
                            k = h.m[0][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 57:
                            k = h.m[1][0];
                            k.angle = f;
                            k.update = !0;
                            break;
                        case 58:
                            k = h.m[2][0], k.angle = f, k.update = !0;
                    }((U.loaded && U.ooU) && k) && U.uu(a[3 + c] & 1, VO_[g], k.x, k.y);
                }
            };
            this.WUV = function() {
                this.socket.send(ma[Aa].stringify([17, m.WUV.OV_, m.WUV.O$Q]));
            };
            this.v_o$$ = function(a, e) {
                this.socket.send(ma[Qa].stringify([22, e, a.OV_, a.O$Q]));
            };
            this.wOWwo = function(a, e, d) {
                e ? this.socket.send(ma[Qa].stringify([25, e, a.OV_, a.O$Q])) : this.socket.send(ma[Aa].stringify([24, d, a.OV_, a.O$Q]));
            };
            this.U0W_Q = function(a) {
                this.socket.send(ma[Qa].stringify([26, a.OV_, a.O$Q]));
            };
            this.U_OWO = function(a) {
                this.socket.send(ma[Aa].stringify([27, a]));
            };
            this.OOwuU = function(a) {
                this.socket.send(ma[Aa].stringify([30, a.OV_, a.O$Q]));
            };
            this.o0U0w = function(a, e) {
                this.socket.send(ma[Qa].stringify([38, e, a.OV_, a.O$Q, a.type]));
            };
            this._VQvV = function(a, e) {
                this.socket.send(ma[Qa].stringify([12, e, a.OV_, a.O$Q]));
            };
            this.__Qww = function(a, e, d) {
                this.socket.send(ma[Qa].stringify([8, e, d, a.OV_, a.O$Q]));
            };
            this.WvO = function(a) {
                this.socket.send(ma[Qa].stringify([37, a.OV_, a.O$Q, a.type]));
            };
            this.UwuwQ = function(a) {
                this.socket.send(ma[Qa].stringify([23, a.OV_, a.O$Q]));
            };
            this.QwQU_ = function(a) {
                this.socket.send(ma[Qa].stringify([9, a.OV_, a.O$Q]));
            };
            this.OUvO$ = function(a) {
                this.socket.send(ma[Aa].stringify([15, a.OV_, a.O$Q]));
            };
            this.VvO_W = function(a) {
                this.socket.send(ma[Lc].stringify([16, a.O$Q]));
            };
            this.UOW = function(e) {
                a.socket.send(Mc[Aa].stringify([20, m._OV.id, m.uoU[e]]));
            };
            this.uU$wW = function() {
                a.socket.send(gd[Nc].stringify([18, m._OV.OV_, m._OV.id]));
            };
            this.VQO$V = function() {
                a.socket.send(gd[Aa].stringify([19]));
            };
            this._VWU$ = function() {
                a.socket.send(gd[Aa].stringify([35, m._OV.id]));
                ("LOCK" == document.getElementById("lock_team").innerHTML) ? (m._OV.lock = 1, document.getElementById("lock_team").innerHTML = "UNLOCK") : (m._OV.lock = 0, document.getElementById("lock_team").innerHTML = "LOCK");
            };
            this.Ww = function(a, e, d) {
                a = new Uint16Array(a);
                d && p.ooVOU();
                d = (e.length - 2) / 18;
                for (var c = 0; c < d; c++) {
                    var f = 2 + (18 * c),
                        g = 1 + (9 * c),
                        h = e[f],
                        k = a[g + 1],
                        l = a[g + 5];
                        n = (h * p.wV_) + l;

                           if (k & Q.O0vww){
                                if(_Spect.enabled && n == m.v$o) {

                                }else{
                                    p.WO$uO(n)
                                }





                }

                    else {
                        var q = a[g + 2],
                            r = a[g + 3],
                            t = a[g + 4],
                            z = a[g + 6],
                            A = a[g + 7],
                            g = a[g + 8],
                            f = ((e[f + 1] / 255) * Math.PI) * 2;
                        switch (q) {
                            case 0:
                                if (h === oQ.player.id) {
                                    if (r + t != 0) {
                                        this.player.x = r;
                                        this.player.y = t;
                                    };
                                };
                                break;
                        }
                        if (p.oUU[n]) {
                            n = p.oUU[n];
                            n.r.x = r;
                            n.r.y = t;
                            ((0 != h) && (OQ.U_o(n, n.r) > sa._0OUQ)) && (n.x = r, n.y = t);
                            if ((n.id !== m.id) || (0 === h)) n.U$Q = f;
                            n.action |= k;
                            n.info = z;
                            n.UUv = A;
                            n.uOo = g;
                            if (q === 18) {
                                n.hack.wood = Ia(1, 'x' + n.info, 19, '#fff', null, null, null, null, null, '#000000', 8);
                            } else if (q === 29) {
                                n.hack.owner = Ia(1, p.UO[n.OV_].woV, 22, '#fff', null, null, null, null, null, '#000000', 8);
                                n.hack.lock = (n.info >= 17) ? Ia(1, 'Lock', 20, '#ff0000', null, null, null, null, null, '#000000', 8) : false;
                                var Tnum = !1;
                                n.hack.lock ? (Tnum = lookbetter(n), n.hack.place = Ia(1, Tnum, 20, (Tnum=== 8) ? '#ff0000' : '#fff', null, null, null, null, null, '#000000', 8)) : n.info != 0 ? n.hack.place = Ia(1, 'P:' + n.info, 20, (n.info == 8) ? '#ff0000' : '#fff', null, null, null, null, null, '#000000', 8) : n.hack.place = false;
                            } else if (q === 24 || q === 25 || q === 26 || q === 27 || q === 28) {
                                let w = ~~(n.info & 255);
                                let r = ~~(n.info & 65280) >> 8;
                                n.hack.wood = (w > 0) ? genImg2(Ia(1, 'x' + w, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false;
                                n.hack.res = (r > 0) ? genImg2(Ia(1, 'x' + r, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false;
                            } else if (q === 34) {
                                let breadoven = n.info & 31,
                                    breadoven2 = (n.info & 992) >> 5,
                                    breadoven3 = (n.info & 31744) >> 10;
                                n.hack.wood = (breadoven > 0) ? genImg2(Ia(1, 'x' + breadoven, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                                    n.hack.flour = (breadoven2 > 0) ? genImg2(Ia(1, 'x' + breadoven2, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false,
                                    n.hack.bread = (breadoven3 > 0) ? genImg2(Ia(1, 'x' + breadoven3, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false

                            } else if (q === 32) {
                                let wheat = n.info & 255,
                                    flour = (n.info & 65280) >> 8;
                                n.hack.wheat = (wheat > 0) ? genImg2(Ia(1, 'x' + wheat, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false;
                                n.hack.flour = (flour > 0) ? genImg2(Ia(1, 'x' + flour, 19, '#fff', null, null, null, null, null, '#000000', 8)) : false;
                            } else if (q === 35) {
                                n.hack.uses = (n.info >= 1) ? Ia(1, 'x' + n.info, 20, '#fff', null, null, null, null, null, '#000000', 8) : false;
                            }
                            if (n.update) n.update(k);
                            if (k === 2 && (q === 86 || q === 82 || q === 87)){ n.hit++; console.log('box' + n.hit) };
                            if (k === 2 && q === 0) {n.hit++; console.log(`player` +n.hit)};
                        } else h = new ad(q, h, l, r, t, f, k, z, A, g), p.oUU[n] = h, p.Ww[q].push(h);
                    }
                }
            };
            this.uvQ = function(a) {
                this.V_o = bb;
                a = new Uint16Array(a);
                m.o$O.UvU(a);
            };
            this.UuW0V = function(a) {
                (void 0 !== vf) && (La = vf);
                if (0 < a.length) {
                    vf = JSON.parse(JSON.stringify(La));
                    for (var e = 0; e < a.length; e++) {
                        var d = a[e],
                            c = La[d.item];
                        (void 0 !== c) && (c.r = d.recipe, c.w = d.workbench, c.f = d.fire, c.Uo = d.water, c.e = d.well, c.time = 1 / d.time);
                    }
                }
            };
            this.vwu = function(a) {
                if (a && (0 !== a.length)) {
                    var e = m.vwu,
                        d = b[3],
                        c = document.createElement("canvas"),
                        f = c.getContext("2d");
                    for (f.lineJoin = "round"; - 1 !== a.indexOf("\\n");) a = a.replace("\\n", "\x0a");
                    a = a.split("\x0a");
                    v = [];
                    var g = (18 * a.length) + 10,
                        h = 0;
                    f.font = "14px Baloo Paaji";
                    for (var k = 0; k < a.length; k++)("#" === a[k].charAt(0)) ? (v[k] = a[k].substring(0, 7), a[k] = a[k].substring(8)) : (v[k] = "#FFFFFF"), h = Math.max(f.measureText(a[k]).width + 16, h);
                    c.height = g;
                    c.width = h;
                    for (k = 0; k < a.length; k++) g = Ia(1, a[k], 14, v[k], null, null, null, null, null, "#000", 6), f.drawImage(g, 8, (18 * k) + 5);
                    e[d] = c;
                } else m.vwu.message = void 0;
            };
            this.Uo$ = function(a) {
                var e = p.oUU[a[1] * p.wV_];
                if (e)
                    if ((p.mode === F.wQ_) && (e.vWO === F.$0w))
                        if (m.$_o)
                            if (0.5 < Math.random()) e.text.push((a[2] + " ...") + $__);
                            else e.text.push(($__ + "... ") + a[2]);
                else e.text.push(u$$[Math.floor(Math.random() * u$$.length)]);
                else e.text.push(a[2]);
            };
            this.Q$_Uw = function(a) {
                if ((((m.wW.max === m.wW.OWU.length) && (La[a].UU !== f.Uwv)) && (-1 == m.wW._Uo(La[a].UU))) && !m.wW.UUvUu(La[a].r)) return this.o$wvW(), 0;
                lastItemCraft = a;
                autobook && (this.socket.send(ma[Kc].stringify([5, 28])));
                this.socket.send(ma[Kc].stringify([7, a]));
                return 1;
            };
            this.Vo_ = function(a) {
                m.Ow._owO0(a);
            };
            this.WVu = function(a) {
                m.Ow.WVu = a;
                m.Ow.update();
            };
            this.v_Q = function(a) {
                m.Ow.v_Q = a;
                m.Ow.update();
            };
            this.oWu = function(a) {
                m.Ow.oWu = a;
                m.Ow.update();
            };
            this.W$voU = function(a) {
                this.$_Q(k[Wo.uoW]);
            };
            this.oQoQo = function() {
                m.Ow.v_w();
            };
            this._u_ = function(a) {
                C._u_.UO = [];
                for (var e = p.oUU[m.v$o], d = 0, c = 1; c < a.length; c += 2) {
                    var f = {
                        x: Math.floor((a[c] * p.w) / 250),
                        y: Math.floor((a[c + 1] * p.uQ) / 250)
                    };
                    if (((e && !d) && !m._Ou) && (250 > OQ.U_o(f, e))) d += 1;
                    else C._u_.UO.push(f);
                }
            };
            this.vQQU_ = function() {
                m.WUV.open = !1;
                m.QW0.enabled = !1;
                m.QW0.Vu$ = -1;
                m.QW0.label = null;
                m.QW0._0Wwv = null;
                m.QW0.now = -1;
            };
            this.QW0 = function(a) {
                F.$WW_0 = a;
                m.QW0.enabled = !0;
                m.QW0.Vu$ = (new Date).getTime();
                m.QW0.label = null;
                m.QW0.now = -1;
                a = [f.vvV, f.WQw, f.WvU, f.QvW, f.$Vu, f.WU_, f.w$v, f.VQv, f._Wu, f.WWu, f.UuV, f.$v$, f.$Uu, f.ow_, f.wo0, f._uV, f.QUW, f.___, f._U0, f.QVV, f.VWO, f._vW, f.uuu, f.OQW, f.UwW, f.vOV, f.vvo, f.WuO, f.$Ow, f.w$Q, f.wQO, f.VWv, f.wQo, f.vwO, f.O$O, f.$ov, f.oOo, f.QWu, f.OQv, f._v_, f.V_V, f.uvV, f.UOQ, f.OoU];
                for (var e = 0; e < a.length; e++) {
                    var d = m.wW._Uo(a[e]);
                    (-1 != d) && m.wW.WO__v(a.length[e], d);
                }
                m.Ow.v_w();
            };
            this.v$_Ou = function(a, b, d) {
                this.Uvuv_(a, (256 * b) + d);
            };
            this.Uvuv_ = function(a, e) {
                m.Ow.wWV = -1;
                m.wW.$Uw(a, e, m.wW._Uo(a));
                m.Ow.update();
            };
            this.wOQ_$ = function(a) {
                m.Ow.wWV = -1;
                m.QVW.wait = !0;
                var e = m.wW._Uo(a);
                m.wW.$Uw(a, 1, e);
                if ((0 <= e) && !m.wW.WQ[a]) m.Ow.update();
                (a == f.Ww$) && (m.uoU = [m.id]);
            };
            this.VWoUV = function() {
                this.socket.send(ma[Aa].stringify([31]));
            };
            this.O0_Vv = function(a) {
                this.socket.send(ma[Aa].stringify([32, a.Uu0, a.id]));
            };
            this.U_QQO = function(a, e) {
                this.socket.send(ma[Qa].stringify([33, a, e]));
            };
            this.U0_w$ = function() {
                var a = p.oUU[m.v$o];
                if (a) {
                    var e = 2 * Math.PI;
                    this.socket.send(ma[Aa].stringify([10, m.Ow.wWV, Math.floor((((a.angle + e) % e) * 255) / e), m.Ow.mode]));
                }
            };
            this.uwV = function(a, e) {
                switch (a) {
                    case f._Ww:
                    case f.Q$_:
                    case f.Wo_:
                    case f.Qvv:
                    case f.wo_:
                    case f.QQu:
                    case f.O$w:
                    case f.vV0:
                    case f.Wuv:
                    case f.OU0:
                    case f.VWU:
                    case f.UVv:
                    case f.VWw:
                    case f._w_:
                    case f.wwW:
                    case f.V$V:
                    case f.oOu:
                    case f.wov:
                    case f.vv$:
                    case f.QOQ:
                    case f.wuO:
                    case f.Vwv:
                    case f.uUV:
                        m.Ow.wWV = -1;
                        this.socket.send(ma[Qa].stringify([5, a]));
                        break;
                    case f.oOQ:
                    case f.oV_:
                    case f.vUu:
                    case f._W$:
                    case f.Wv$:
                    case f.QvU:
                    case f.oQW:
                    case f.Q$u:
                    case f.W_u:
                    case f.vVW:
                    case f.$v0:
                    case f.$uu:
                    case f._OW:
                    case f.OwO:
                    case f.uVv:
                    case f.Wvw:
                    case f.$ow:
                    case f.V$Q:
                    case f._UO:
                    case f.QW$:
                    case f.Vw_:
                    case f.wvV:
                    case f.u_v:
                    case f.vO0:
                    case f.VuQ:
                    case f.wUO:
                    case f.vwQ:
                    case f.v$_:
                    case f.owo:
                    case f.$W0:
                    case f.Q$o:
                    case f.$VU:
                    case f.wuW:
                    case f.uuo:
                    case f._w0:
                    case f.UoQ:
                    case f.$wu:
                    case f.QwW:
                    case f.oWQ:
                    case f.uQu:
                    case f.OQ$:
                    case f.WoV:
                    case f.uV$:
                    case f.U$W:
                    case f.u_V:
                    case f.ouo:
                    case f._vU:
                    case f.V_w:
                    case f.W_W:
                    case f.Wwv:
                    case f.Qww:
                    case f.wo$:
                    case f.vuQ:
                    case f.VUQ:
                    case f.Ww$:
                    case f.UWU:
                        m.$_o || (m.Ow.wWV = (m.Ow.wWV === a) ? -1 : a);
                        break;
                    case f.QvW:
                    case f.WvU:
                    case f.$Vu:
                    case f.WU_:
                    case f.w$v:
                    case f.VQv:
                    case f.UuV:
                    case f._Wu:
                    case f.WWu:
                    case f.VWO:
                    case f._vW:
                    case f.uuu:
                    case f.OQW:
                    case f.UwW:
                    case f.vOV:
                    case f.vvo:
                    case f.vwO:
                    case f.O$O:
                    case f.$Uu:
                    case f.$v$:
                    case f.ow_:
                    case f.wo0:
                    case f._uV:
                    case f.QUOuQ:
                    case f.___:
                    case f._U0:
                    case f.QUW:
                    case f.QVV:
                        if (!m.$_o) {
                            m.Ow.wWV = -1;
                            var d = p.oUU[m.v$o];
                            (d && (d.right === a)) ? this.socket.send(ma[Qa].stringify([5, f.$O_])): (m.vuo.wait = !0, p.Ww[t.uvw].lastWeapon = a, this.socket.send(ma[Aa].stringify([5, a])));
                        }
                        break;
                    case f.oOo:
                    case f.$ov:
                    case f.QWu:
                    case f.OQv:
                    case f.oQw:
                    case f.UQV:
                    case f.wvo:
                    case f.Q_$:
                    case f.$OU:
                    case f.VQ0:
                    case f._v_:
                    case f.V_V:
                    case f.vvV:
                    case f.oVO:
                    case f.UwQ:
                    case f.OvW:
                    case f.oQo:
                    case f.uvV:
                    case f.OVv:
                    case f.UOQ:
                    case f.OoU:
                    case f.U_u:
                    case f._v0:
                    case f.WuO:
                    case f.$Ow:
                    case f.w$Q:
                    case f.wQO:
                    case f.VWv:
                    case f.wQo:
                        m.$_o || (m.Ow.wWV = -1, ((d = p.oUU[m.v$o]) && (d.right === a)) ? this.socket.send(ma[Lc].stringify([5, f.$O_])) : this.socket.send(Mc[Aa].stringify([5, a])));
                        break;
                    case f.VuU:
                    case f.uQW:
                    case f.w$U:
                    case f.OW$:
                    case f.vww:
                    case f.$Uo:
                    case f.$ww:
                    case f.uU_:
                    case f.vOv:
                    case f.woU:
                        m.$_o || (m.Ow.wWV = -1, this.socket.send(Mc[Aa].stringify([5, a])));
                        break;
                    case f.w_v:
                    case f.uWU:
                    case f.VwO:
                    case f._U$:
                    case f.vOO:
                    case f.uou:
                    case f._O$:
                    case f.wOu:
                    case f.vQ$:
                    case f._ov:
                    case f._vo:
                    case f.U$v:
                    case f.$$Q:
                    case f._$0:
                    case f.$$w:
                    case f.VUW:
                    case f.vV$:
                        ((d = p.oUU[m.v$o]) && (d.$Qu !== a)) && (m.vW0.wait = !0);
                        this.socket.send(ma[Qa].stringify([5, a]));
                        break;
                    case f._UQ:
                    case f.VoU:
                    case f.o_Q:
                    case f.ow$:
                    case f.u$w:
                    case f.vvW:
                    case f.QwQ:
                    case f.VUO:
                    case f.O__:
                    case f.o_v:
                    case f.oO0:
                    case f.o$$:
                    case f.$wo:
                    case f.oo0:
                    case f.$uv:
                    case f.WV0:
                        this.socket.send(gd[Nc].stringify([5, a]));
                }
            };
            this.U$$uU = function(a) {
                this.socket.send(ma[Kc].stringify([6, a]));
            };
            this.QQvWU = function(a) {
                m.QVW.wait = !0;
                var e = m.wW._Uo(a);
                m.wW.WO__v(a, e);
                m.Ow.update();
            };
            this.UOO_Q = function(a, e) {
                lastItemRecycle = a;
                this.socket.send(ma[Lc].stringify([29, a]));
            };
            this.oUowU = function(a, e) {
                this.socket.send(ma[Aa].stringify([28, a]));
            };
            this.Qwv0o = function(a) {
                m.QVW.wait = !0;
                var e = m.wW._Uo(a);
                m.wW.$Uw(a, 1, e);
                m.Ow.update();
            };
            this.uVo0w = function(a) {
                var e = a[1];
                a = a[2];
                m.QVW.wait = !0;
                var d = m.wW._Uo(e);
                m.wW.$Uw(e, a, d);
                m.Ow.update();
            };
            this.uO___ = function() {
                this.socket.send(ma[Aa].stringify([14]));
            };
            this.QOOUV = function(a) {
                if (window.MainSetting.Hacks.AutoFarm.enabledfarm) {
                    return 1;
                };
                var e = 2 * Math.PI;


               if(AimBotStfu.isTargeting) {
                this.socket.send(ma[Aa].stringify([4, Math.floor((((AimBotStfu.Angls + e) % e) * 255) / e)]));
               }else {
                this.socket.send(ma[Aa].stringify([4, Math.floor((((a + e) % e) * 255) / e)]));
               }
                curan = a;
            };
            this._Vv$W = function(a) {
                if (window.MainSetting.Hacks.AutoFarm.enabledfarm) {
                    return 1;
                };
                var e = 2 * Math.PI;
                if (AimBotStfu.isTargeting) {
                    this.socket.send(ma[Aa].stringify([3, Math.floor((((AimBotStfu.Angls + e) % e) * 255) / e)]));
                }else{
                    this.socket.send(ma[Aa].stringify([3, Math.floor((((a + e) % e) * 255) / e)]));
                }

              curan = a;

            };
            this.vo_0o = function(a) {
                if(!_Spect.enabled){
                    this.socket.send(wUV_o[0].stringify([2, a]));
                }

            };
            this._Vv0U = function(a) {
                this.socket.send(ma[Qa].stringify([36, a]));

            };
            this.w$U_u = function(a) {
                var e = p.oUU[m.v$o];
                if (m.$_o)
                    if (0.5 < Math.random()) e.text.push((a.substring(0, 25) + " ...") + $__);
                    else e.text.push(($__ + "... ") + a.substring(0, 25));
                else e.text.push(a);
                this.socket.send(ma[Qa].stringify([0, a]));
            };
            this.u__ = function(a) {
                var e = ow.select.Ww;
                if (0 != e.length) {
                    var d = [2],
                        c = [];
                    OQ.o_wow(a, {
                        x: ow.VQ.rx,
                        y: ow.VQ.ry
                    });
                    d.push(a.x);
                    d.push(a.y);
                    for (a = 0; a < e.length; a++) c.push(e[a].VoV_u);
                    d.push(c);
                    this.socket.send(ma[Aa].stringify(d));
                }
            };
            this.vQuU0 = 0;
            this.UW_uv = {
                u$: 0,
                ov: 0
            };
            this.$QUO_ = function() {
                if ((bb - this.vQuU0) > sa.Wv$wv) {
                    this.vQuU0 = bb;
                    var a = m.VQ,
                        e = Math.floor(a.x / 100),
                        d = Math.floor(a.y / 100);
                        /*  Sending to lapa server camera/object stfu */
                    if ((this.UW_uv.u$ != e) || (this.UW_uv.ov != d)) this.socket.send(Mc[Lc].stringify([1, Math.floor(-a.x), Math.floor(-a.y)])), this.UW_uv.u$ = e, this.UW_uv.ov = d;

                }
            };
            this.QUoVu = 0;
            this.Q0QU0 = function() {
                ((bb - this.QUoVu) > sa._Vuww) && (this.QUoVu = bb, this.ping());
            };
            this.vUQWw = function() {
                m.reconnect.enabled = !0;
                (this.o$_ == this.socket.o$_) && (this.o$_++, this.socket.close(), oQ.connect());
            };
            this._wQ$O = function(a) {
                this.$_Q(k[Wo.VwU]);
                for (var e = 1; e < a.length; e++) m.uoU.push(a[e]), totemArray = m.uoU;
            };
            this.Vo$$_ = function(a) {
                this.$_Q(p.UO[a].woV + k[Wo.vuO]);
                m.uoU.push(a);
                totemArray = m.uoU;
                a = document.getElementById("team_box");
                if ((-1 != C.wO0) && ("inline-block" == a.style.display)) C.oQV[C.wO0].action();
            };
            this._OQQ_ = function() {
                this.$_Q(k[Wo.VQw]);
                m._OV.wait = !0;
                m.uoU = [];
                totemArray = m.uoU;
                document.getElementById("team_box").style.display = "none";
            };
            this.Uu$Ov = function(a) {
                if (a == m.id) this.$_Q(k[Wo.ovQ]), m._OV.wait = !0, m.uoU = [], totemArray = m.uoU, document.getElementById("team_box").style.display = "none";
                else {
                    this.$_Q(p.UO[a].woV + k[Wo.wVo]);
                    for (var e = 0; e < m.uoU.length; e++)
                        if (m.uoU[e] == a) {
                            m.uoU.splice(e, 1);
                            totemArray = m.uoU;
                            break;
                        } a = document.getElementById("team_box");
                    if ((-1 != C.wO0) && ("inline-block" == a.style.display)) C.oQV[C.wO0].action();
                }
            };
            this.OOw0_ = function(a) {
                m.W$w = !1;
                this.$_Q(k[Wo.voQ]);
                (this.o$_ == this.socket.o$_) && (this.o$_++, C.wv0(G.ooU), this.socket.close());
            };
            this.QvVuu = function(a, e) {
                m.W$w = !1;
                var d = new Uint16Array(e),
                    c = new Uint32Array(e);
                m.wQ0.vOQ = L[a][Math.floor(Math.random() * L[a].length)];
                m.wQ0.UOV = OQ.$w$(p.UO[m.id].UOV);
                m.wQ0.u_Uw_ = OQ.$w$(c[1]);
                m.wQ0.VQ$ = d[1];
                this.$_Q(k[Wo.OOV]);
                (this.o$_ == this.socket.o$_) && (this.o$_++, C.wv0(Tb.ooU), this.socket.close(), M.aiptag.cmd.display.push(function() {
                    M.aipDisplayTag.display("MFN_starve-io_300x250");
                }));
            };
            this.ping = function() {
                this.socket.send(sa.vo__Q);
            };
            this.Wwu0o = function() {
                (3 == this.socket.readyState) && (this.V_o -= sa.wsocketu);
            };
            this._0U0u = function() {
                (O > sa.UOvOU) && (this.V_o = bb);
                ((bb - this.V_o) > sa.wsocketu) && (this.V_o = bb, this.vUQWw());
            };
            this.QVw0v = function(e) {
                cd++;
                clearTimeout(this.WW_);
                document.getElementById("commandMainBoxName").innerHTML = this.VuO[this.$wV][this.u_0[this.$wV]].a;
                document.getElementById("exploreForest").src = "img/forest-leaf.png";
                document.getElementById("exploreWinter").src = "img/winter-flake.png";
                document.getElementById("exploreDesert").src = "img/desert-cactus.png";
                document.getElementById("exploreLava").src = "img/lava-volcano.png";
                this.V_o = bb;
                m.OWW.QwV.QUw = m.OWW.QwV.U$0;
                m.OWW.Uv0.QUw = m.OWW.Uv0.U$0;
                m.OWW.uUw.QUw = m.OWW.uUw.U$0;
                m.OWW.$vW.QUw = m.OWW.$vW.U$0;
                m.OWW.WuV.QUw = m.OWW.WuV.U$0;
                m.OWW.QU = 1;
                m.OWW.c = 1;
                m.OWW.uQ = 1;
                m.OWW.wU = 1;
                m.OWW.Uo = 1;
                m.OWW.u$V = 1;
                m.U0W = !1;
                C.Uvw.display = 0;
                m.wW.OWU = [];
                m.wW.WQ = [];
                m.wW.max = F.V$o0Q;
                m.wW.vO_w$ = 0;
                m.wW.Vou = 0;
                m.wW.id = -1;
                C.WUw = 1;
                C.oOQ$w = 1;
                C.UUV = 1;
                C.W$oVU = 1;
                m.W$w = !0;
                m.wW._uO.stop();
                m.Ow._O_ = [];
                m.Ow.W$V = !1;
                m.Ow.uwOU0 = !1;
                m.Ow.wWV = -1;
                m.Ow.id = -1;
                m.Ow.Vo_ = !1;
                m.Ow.WVu = !1;
                m.Ow.v_Q = !1;
                m.Ow.oWu = !1;
                m.Ow.timeout = new OQ.Uw(!1, 0, 1, 0, 1, 1);
                m.vuo.timeout = new OQ.Uw(!1, 0, 1, 0, 0.1, 1);
                m.vuo.wait = !1;
                m.vW0.timeout = new OQ.Uw(!1, 0, 1, 0, 0.2, 1);
                m.vW0.wait = !1;
                m.QVW.timeout = new OQ.Uw(!1, 0, 1, 0, 1, 1);
                m.QVW.wait = !1;
                m._OV.id = -1;
                m._OV.OV_ = -1;
                m._OV.wait = !1;
                m._OV.timeout = new OQ.Uw(!1, 0, 1, 0, 1 / 30, 1);
                C._u_._Wo.x = -1;
                C._u_._Wo.y = -1;
                C.uVO.open = !1;
                C._u_.UO = [];
                m.$UW.enabled = !1;
                p.mode = e[1];
                ((void 0 !== e[20]) && (void 0 !== e[21])) && (p.$$$ = e[20], p.WV_ = e[21], p.w = p.$$$ * p.oUw, p.uQ = p.WV_ * p.OQo);
                p.u0Ouu = e[22];
                p.wVW = e[23];
                a.vwu(e[24]);
                a.UuW0V(e[25]);
                m.QOO.wOQ = e[26];
                m._uo = 0;
                m.VvO.wOQ = e[27];
                p.QvWoO(e[19]);
                p.time = e[5];
                p.OOO.ow0 = e[15];
                p.OOO.UvU = (new Date).getTime();
                C.oWo.vwo = e[16];
                p.Q$w = !1;
                m.V_ = e[2];
                C.oWo.reset();
                m.uoU = e[8];
                totemArray = m.uoU;
                p.Ww[t.uvw] = [];
                p.Ww[t.$QO] = [];
                p.Ww[t.oOQ] = [];
                p.Ww[t.$uu] = [];
                p.Ww[t.$ow] = [];
                p.Ww[t.vUu] = [];
                p.Ww[t._W$] = [];
                p.Ww[t.Wv$] = [];
                p.Ww[t.QvU] = [];
                p.Ww[t.oQW] = [];
                p.Ww[t.Q$u] = [];
                p.Ww[t.W_u] = [];
                p.Ww[t.vVW] = [];
                p.Ww[t.$v0] = [];
                p.Ww[t._OW] = [];
                p.Ww[t.OwO] = [];
                p.Ww[t.uVv] = [];
                p.Ww[t.Wvw] = [];
                p.Ww[t.Vw_] = [];
                p.Ww[t.wvV] = [];
                p.Ww[t.u_v] = [];
                p.Ww[t.vO0] = [];
                p.Ww[t.vwQ] = [];
                p.Ww[t.v$_] = [];
                p.Ww[t.owo] = [];
                p.Ww[t.$W0] = [];
                p.Ww[t.Q$o] = [];
                p.Ww[t.$VU] = [];
                p.Ww[t.V$Q] = [];
                p.Ww[t._UO] = [];
                p.Ww[t.QW$] = [];
                p.Ww[t.oV_] = [];
                p.Ww[t.wuW] = [];
                p.Ww[t.uuo] = [];
                p.Ww[t._w0] = [];
                p.Ww[t._Q$] = [];
                p.Ww[t.vuu] = [];
                p.Ww[t.vww] = [];
                p.Ww[t.$Uo] = [];
                p.Ww[t.$ww] = [];
                p.Ww[t.uU_] = [];
                p.Ww[t.wWO] = [];
                p.Ww[t.wQW] = [];
                p.Ww[t.woW] = [];
                p.Ww[t.wuv] = [];
                p.Ww[t.VUQ] = [];
                p.Ww[t.vQv] = [];
                p.Ww[t.WVv] = [];
                p.Ww[t.w$W] = [];
                p.Ww[t.uOV] = [];
                p.Ww[t.W$o] = [];
                p.Ww[t.Qvo] = [];
                p.Ww[t.OW$] = [];
                p.Ww[t.wQQ] = [];
                p.Ww[t.Vvu] = [];
                p.Ww[t._oU] = [];
                p.Ww[t._u$] = [];
                p.Ww[t.vv_] = [];
                p.Ww[t.Qo_] = [];
                p.Ww[t.UV$] = [];
                p.Ww[t.o0O_0] = [];
                p.Ww[t.uV$Qw] = [];
                p.Ww[t.QV_wo] = [];
                p.Ww[t._$o] = [];
                p.Ww[t.Q$W] = [];
                p.Ww[t.UQQ] = [];
                p.Ww[t.v$v] = [];
                p.Ww[t.uVQ] = [];
                p.Ww[t.UoQ] = [];
                p.Ww[t.$wu] = [];
                p.Ww[t.QwW] = [];
                p.Ww[t.VuQ] = [];
                p.Ww[t.oWQ] = [];
                p.Ww[t.uQu] = [];
                p.Ww[t.wUO] = [];
                p.Ww[t.Ww$] = [];
                p.Ww[t.UWU] = [];
                p.Ww[t.OQ$] = [];
                p.Ww[t.WoV] = [];
                p.Ww[t.uV$] = [];
                p.Ww[t.U$W] = [];
                p.Ww[t.u_V] = [];
                p.Ww[t.ouo] = [];
                p.Ww[t._vU] = [];
                p.Ww[t.V_w] = [];
                p.Ww[t.W_W] = [];
                p.Ww[t.Qww] = [];
                p.Ww[t.Wwv] = [];
                p.Ww[t.wo$] = [];
                p.Ww[t.vuQ] = [];
                p.oUU = [];
                p.wV_ = e[7];
                m.id = e[9];
                m.v$o = m.id * p.wV_;
                U.loaded && (U.UO[0].v$o = m.v$o, U.UO[0]._UW = 0);
                kb.Vouov();
                m.VQ.uvu(e[3], e[10]);
                p.UO = [];
                for (var g = p.UO, d = 0; d < e[11]; d++) g.push(new uj);
                for (var d = 0, c = e[4]; d < c.length; d++) {
                    var h = g[c[d].i];
                    h.woV = c[d].n;
                    h.vWO = c[d].s;
                    h.VVw = c[d].a;
                    h.V_W = c[d].c;
                    h.QwO = c[d].b;
                    h.vUQ = c[d].d;
                    h.vuW = c[d].g;
                    h.level = c[d].l;
                    h.UOV = OQ.OOUOw(c[d].p);
                    h.W$w = !0;
                    (1 === hh) && (h.woV += "|" + c[d].i);
                }
                m.o$O.sort();
                m._Ou = ((p.mode === F.WVw) && ("spectator" === p.UO[m.id].woV)) ? !0 : !1;
                m.$_o = ((p.mode === F.wQ_) && (p.UO[m.id].vWO === F.$0w)) ? !0 : !1;
                m.UVw_o = ((p.mode === F.Uov) && (p.UO[m.id].vWO === F.V_v)) ? !0 : !1;
                OQw.set("starve_token", m.wUU);
                if (0 === e[12]) {
                    m.Oo_.Vu$ = 0;
                    C.oWo.restore(e[17]);
                    g = e[14];
                    g[f.Uwv] && m.wW.Wuo(1, 0);
                    for (d = 0; d < g.length; d++)((g[d] && (d != f.Uwv)) && (d != f.$O_)) && this.$W$([0, d, g[d]]);
                    m.Oo_.open = !1;
                } else(p.mode === F.U$O) ? this.$W$([0, f.Wwo, 1]) : ((p.mode === F.Uov) && (m.UVw_o ? this.$W$([0, f.WoV, 4]) : this.$W$([0, f.Q$u, 3]))), ((((p.mode === F.VOo) || (p.mode === F.Uov)) || (p.mode === F._Vo)) || (p.mode === F.U$O)) ? (m.Oo_.Vu$ = (new Date).getTime(), m.Oo_.open = !0, m.Oo_.value = e[13], C.Oo_.UvU()) : (m.Oo_.Vu$ = 0, m.Oo_.open = !1, m.Oo_.value = 0), m.$v$Ww = e[12].toString();
                m.QW0.enabled = e[6];
                m.QW0.Vu$ = -1;
                m.QW0.label = null;
                m.QW0.now = -1;
                OQw.set("starve_token_id", m.$v$Ww);
                m.reconnect.enabled ? (m.reconnect.rotate = 0, m.reconnect.enabled = !1) : (G.wv0(C.ooU), ga && ga("send", "event", "Game", "play", (("S" + G.vWO) + "A") + G.VVw));
            };
            this.connect = function() {
                this.WwvVV = 0;
                this.ov_O$();
            };
            this.ov_O$ = function() {
                var e = this.u_0[this.$wV],
                    f = this.VuO[this.$wV][e].i,
                    d = this.VuO[this.$wV][e].p,
                    c = this.VuO[this.$wV][e].ssl,
                    e = this.VuO[this.$wV][e].re || "frankfurt",
                    g = "fail";
                (1 === c) ? (f = f.replace(".starve.io", ""), g = (-1 !== f.indexOf("server-eu")) ? ("frankfurt" + Math.floor(1 + (3 * Math.random()))) : ((-1 !== f.indexOf("server-na")) ? ("toronto" + Math.floor(1 + (3 * Math.random()))) : ((-1 !== f.indexOf("server-wa")) ? ("fremont" + Math.floor(1 + (3 * Math.random()))) : ((-1 !== f.indexOf("server-au")) ? ("sydney" + Math.floor(1 + (3 * Math.random()))) : ((-1 !== f.indexOf("server-as2")) ? ("tokyo" + Math.floor(1 + (3 * Math.random()))) : ((-1 !== f.indexOf("server-as")) ? ("singapore" + Math.floor(1 + (3 * Math.random()))) : (e.toLowerCase() + Math.floor(1 + (3 * Math.random())))))))), f = (g + ".starve.io/") + f) : (f = (f + ":") + d);
                this.socket = new M.WebSocket((("ws" + ((1 === c) ? "s" : "")) + "://") + f);

                this.player = {
                    x: null,
                    y: null,
                    id: null,
                    angle: null
                };
                this.respawnCD = Date.now();
                this.socket.binaryType = "arraybuffer";
                this.socket.o$_ = this.o$_;
                this.socket.onmessage = function(c) {
                    if (this.o$_ == a.o$_)
                        if ("string" == typeof c.data) switch (c = JSON.parse(c.data), c[0]) {
                            case 0:
                                a.Uo$(c);

                                break;
                            case 1:

                                a.U$V$v(c[1]);
                                break;
                            case 2: //someone join
                                a.wwQV0(c);
                                if(window.MainSetting.Hacks.Visual.showconnected) {
                                    window.MainSetting.Hacks.Others.connectedArray.push(["[" + c[2] + "]" +  "  [" + c[1] + "]"])
                                }
                                break;
                            case 3: //ur join
                                playing = !1;
                                joinGame(playing);
                                a.QVw0v(c);
                                oQ.player.x = c[4];
                                oQ.player.y = c[10];
                                oQ.player.id = c[9];
                                c[27] && (World.blizzard = 'On');
                                c[26] && (World.sandstorm = 'On');
                                break;
                            case 4:
                                a.message(c[1]);
                                break;
                            case 5:
                                a.wWv(c);
                                break;
                            case 6:
                                a.vwu(c[1]);
                        } else {
                            var d = new Uint8Array(c.data);

                            switch (d[0]) {
                                case 0:
                                    a.Ww(c.data, d, !1);

                                    break;
                                case 1:
                                    a.Ww(c.data, d, !0);
                                    break;
                                case 2:
                                    a.oQoQo();
                                    break;
                                case 3:


                                    a.$W$(new Uint16Array(c.data));
                                    break;
                                case 4:
                                    a.wUv0_();

                                    break;
                                case 5:
                                    a.oV_OQ();
                                    break;
                                case 6:
                                    a.W$voU();
                                    break;
                                case 7:
                                    a.OuOQw(c.data);
                                    break;
                                case 8:
                                    a.$vOWU(d[1]);
                                    break;
                                case 9:

                                    a.vV_oO(d[1]);
                                    break;
                                case 10:
                                    a.o$wvW();
                                    break;
                                case 11:
                                    a.Uvuv_(d[1], d[2]);
                                    break;
                                case 12:
                                    a.Vo_(d[1]);
                                    break;
                                case 13:
                                    a.UoQvw(d, c.data);
                                    break;
                                case 14:
                                    a.vWo0v();
                                    break;
                                case 15: //died


                                    a.QVoOV(d[1]);

                                    break;
                                case 16: //timer
                                    if (showtimer) {
                                        window.timer = 5;
                                        if(window.MainSetting.Hacks.Visual.autofeed) {
                                            if(imPlay && window.MainSetting.Hacks.Others.feedType == false) {
                                                AutoFood();
                                            }
                                        }
                                        myHeal --;
                                        setTimeout(() => {
                                            window.timer = 4;
                                            myHeal --;
                                        }, 1000);
                                        setTimeout(() => {
                                            window.timer = 3;
                                            myHeal --;
                                        }, 2000);
                                        setTimeout(() => {
                                            window.timer = 2;
                                            myHeal --;
                                        }, 3000);
                                        setTimeout(() => {
                                            window.timer = 1;
                                            myHeal --;
                                        }, 4000);


                                    }
                                    goommer = !goommer;
                                    a.OWW(d[1], d[2], d[3], d[4], d[5], d[6], d[7]);
                                    break;
                                case 17:
                                    a.WWQ$o(c.data);
                                    break;
                                case 18:
                                    a.vuuov();
                                    break;
                                case 19:
                                    a.v_Q(d[1]);
                                    break;
                                case 20:
                                    a.$w_Ww();
                                    break;
                                case 21:
                                    a.uvQ(c.data);
                                    break;
                                case 22:

                                    a.uo_OQ(d[1]);
                                    break;
                                case 23:
                                    a.$u_v0(c.data);
                                    break;
                                case 24:
                                    a.wOQ_$(d[1]);
                                    break;
                                case 25: //if you die
                                    if(window.MainSetting.Hacks.Misc.AutoRejoin) {
                                        G._wQW_();
                                        respawningDiv.style.display = 'flex';
                                        respawningDiv.style.animation = 'appear 0.6s';
                                        setTimeout(() => respawningDiv.style.display = 'none', 2600);

                                    }
                                    myHeal = 11;
                                    playing = true;
                                    joinGame(playing);

                                    a.QvVuu(d[1], c.data);



                                    break;
                                case 26:
                                    a._u_(d);
                                    break;
                                case 27:
                                    a.WvQ_W();
                                    break;
                                case 28:
                                    a.QW0(d[1]);
                                    break;
                                case 29:
                                    oQ.respawnCD = 0;
                                    oQ.respawnCD = Date.now();
                                    a.vQQU_();
                                    break;
                                case 30:
                                    a.OOw0_();
                                    break;
                                case 31: //entity update
                                    a._wQ$O(d);
                                    setTimeout(() => {
                                        updateSpike();
                                    }, 100)
                                    break;
                                case 32://entity update

                                    a.Uu$Ov(d[1]);
                                    setTimeout(() => {
                                        updateSpike();
                                    }, 100)
                                    break;
                                case 33://entity update
                                    a.Vo$$_(d[1]);
                                    setTimeout(() => {
                                        updateSpike();
                                    }, 100)

                                    break;
                                case 34://entity update
                                    a._OQQ_();
                                    setTimeout(() => {
                                        updateSpike();
                                    }, 100)


                                    break;
                                case 35:
                                    a.vOv_w(d[1]);
                                    break;
                                case 36:
                                    a.oWu(d[1]);
                                    break;
                                case 37:
                                    let oldHp = window.MainSetting.Hacks.Others.health;

                                    console.log(oldHp , d[1]);
                                    if(d[1] > oldHp) {

                                        if(myHeal > 1){

                                            myHeal = 10;
                                        }

                                    }
                                    setTimeout(() => {
                                        window.MainSetting.Hacks.Others.health = d[1];

                                    },10)
                                    a.w$W$$(d[1], d[2]);
                                    break;
                                case 38:
                                    a.voQ__(d[1]);
                                    break;
                                case 39:
                                    a.w_OuV(d[1]);
                                    break;
                                case 40:
                                    a.W0wv$();
                                    break;
                                case 41:
                                    a.$u$_U(d);
                                    break;
                                case 42:
                                    a.uvUUo(d[1]);
                                    break;
                                case 43:
                                    a.VOvV0(d[1]);
                                    break;
                                case 44:
                                    a.claimed(d[1]);
                                    break;
                                case 45:
                                    a.OOO0O(d[1]);
                                    break;
                                case 46:
                                    a.u0_wQ(d[1]);
                                    break;
                                case 47:
                                    a.WVu(d[1]);
                                    break;
                                case 48:
                                    a.WvOu$();
                                    break;
                                case 50:
                                    a.v$_Ou(d[1], d[2], d[3]);
                                    break;
                                case 51:
                                    a._oQ0W();
                                    break;
                                case 52:
                                    a.QQvWU(d[1]);
                                    break;
                                case 53:
                                    a.Qwv0o(d[1]);
                                    break;
                                case 54:
                                    a.voooo();
                                    break;
                                case 55:
                                    a.uwU$0(d[1]);
                                    break;
                                case 56:
                                    a._0_Qo(d[1]);
                                    break;
                                case 57:
                                    a.vVvvV();
                                    break;
                                case 58:
                                    a.uO_VU();
                                    break;
                                case 59:
                                    a.uWWov();
                                    break;
                                case 60:
                                    a.QvOW_();
                                    break;
                                case 61:
                                    m.VQ.$_VoO = 0.2;
                                    m.VQ.Vu$ = 3;
                                    break;
                                case 62:
                                    a.uVo0w(new Uint16Array(c.data));
                                    break;
                                case 63:
                                    a.$VQVv();
                                    break;
                                case 64:
                                    a.V$QO0();
                                    break;
                                case 65:
                                    a.ovw$w();
                                    break;
                                case 66:
                                    a.oV_$0();
                                    break;
                                case 67:
                                    a.wQ_w$(d[1]);
                                    break;
                                case 68:
                                    if (d[1])(World.sandstorm = 'On')
                                    else(World.sandstorm = 'Off');
                                    a._vQVV(d[1]);
                                    break;
                                case 69:
                                    if (d[1])(World.blizzard = 'On');
                                    else(World.blizzard = 'Off');
                                    a._uo(d[1]);
                                    break;
                                case 70:
                                    a.uOUW_(d[1]);
                                    break;
                                case 71:
                                    a.VU_(d[1]);
                            }
                        }
                };
                this.socket.onopen = function() {

                        clearTimeout(a.WW_);
                    a.socket.send(gd[Nc].stringify([G.woV.input.value, screen.width + 5000, screen.height + 5000, sa.WuvwW, m.wUU, m.$v$Ww, m.reconnect.enabled ? 1 : 0, G.vWO, G.VVw, G.Vou, G.QwO, G.V_W, G.vUQ, (void 0 === Ta) ? 0 : Ta, (void 0 === Pa) ? 0 : Pa.substring(Pa.length - 50), Qj, m.QoO_O]));
                    m.QoO_O = void 0;
                    a.WW_ = setTimeout(a.timeout, sa.w_WWO);


                };
                this.WW_ = setTimeout(a.timeout, sa.w_WWO);
            };
        };
        var G, C = {
                OwV: !1
            },
            p, m, Tb, U = new function() {
                this.ooU = 0;
                this.Q$w = this.loaded = 0;
                this.OWUUU = function(a) {
                    return (a / p.w) * 100;
                };
                this._Qo_v = function(a) {
                    return (a / p.uQ) * 100;
                };
                this.OQ_OQ = function(a, e) {
                    a = this.OWUUU(a) - this.w_O.x;
                    return this.w_O.x + (e * a);
                };
                this.QvV$u = function(a, e) {
                    a = Math.abs(this._Qo_v(a) - this.w_O.y);
                    return this.w_O.y + (e * a);
                };
                this.sample = {};
                this.vQ0 = {};
                this.ow = {};
                this.uQUU_ = function(a, e, f, d) {
                    for (var c = 0; c < e.length; c++) {
                        var g = e[c];
                        if (!a.playing(g)) return a.pos(f, d, -0.5, g), a.play(g), !0;
                    }
                    return !1;
                };
                this.uu = function(a, e, f, d) {
                    f = this.OQ_OQ(f, oo_.__oVw);
                    d = this.QvV$u(d, oo_.__oVw);
                    console.log("HIT", a, e, f, d, oo_.__oVw);
                    a ? ((1 === e) ? this.uQUU_(this.ow.U0U, this.sample.U0U, f, d) : ((0 === e) && this.uQUU_(this.ow.u0V, this.sample.u0V, f, d))) : this.uQUU_(this.ow.voo, this.sample.voo, f, d);
                };
                this.w_O = {
                    x: 0,
                    y: 0
                };
                this.vWv0u = {
                    x: 0,
                    y: 0
                };
                this.OUw = {};
                this.UO = [];
                this.$U0 = function(a, e) {
                    for (var f in this.OUw) {
                        var d = this.OUw[f];
                        d.$QQ(a);
                        if (d.Wvu) {
                            (460000 > p.OOO.now) && d.Vu0();
                            if (e) d.update(a, this.w_O);
                            this.Q$w && d.Q$w();
                        }
                    }
                    this.Q$w && (this.Q$w = 0);
                };
                this.OWQVV = function() {
                    for (var a = [], e = 0; e < this.UO.length; e++) {
                        var f = this.UO[e];
                        if (f._UW) a.push(e);
                        else(f._UW || p.oUU[f.v$o]) || (f.oovuO(), a.push(e));
                    }
                    for (var d = p.Ww[t.uvw], c = e = 0;
                        (e < d.length) && (c < a.length); e++) f = d[e], ((((p.mode == F.WVw) && ("spectator" === p.UO[f.id].woV)) || (-1 !== f.uw_)) || (f.v$o === m.v$o)) || (this.UO[a[c]].UvU(f.v$o), c++);
                };
                this.$VWOQ = function() {
                    this.OWQVV();
                    for (var a = 0; a < this.UO.length; a++) {
                        var e = this.UO[a];
                        if (!e._UW && e.$QQ()) e.update();
                    }
                };
                this.OuvwQ = function(a) {
                    if ((this.vWv0u.x === a.x) && (this.vWv0u.y === a.y)) return 0;
                    this.vWv0u.x = a.x;
                    this.vWv0u.y = a.y;
                    this.w_O.x = this.OWUUU(a.x);
                    this.w_O.y = this._Qo_v(a.y);
                    Howler.pos(this.w_O.x, this.w_O.y, 0);
                    return 1;
                };
                this.O0Uv0 = function() {
                    if (this.ooU && this.loaded) {
                        var a = p.oUU[m.v$o];
                        if (a) {
                            a.uw_ = 0;
                            var e = this.OuvwQ(a);
                            (((p.mode !== F.wQ_) && (p.mode !== F.U$O)) && (p.mode !== F.OwU)) && this.$U0(a, e);
                            this.$VWOQ();
                        }
                    }
                };
                this.QoUov = function() {
                    for (var a in Ya) {
                        var e = Ya[a];
                        (("object" === typeof e) && e.path) && (e.wUo = new Howl({
                            src: e.path,
                            volume: 0,
                            sprite: e.u
                        }));
                        for (var f in e.sample) {
                            var d = e.sample[f],
                                c = [];
                            console.log(f);
                            for (var g = 0; g < d; g++) {
                                var h = e.wUo.play(f);
                                e.wUo.stop(h);
                                e.wUo.on("fade", function(a) {
                                    this.volume(a) || (console.log(a, "OUT"), this.stop(a));
                                }, h);
                                c.push(h);
                            }
                            U.sample[f] = (1 < c.length) ? c : c[0];
                            U.ow[f] = e.wUo;
                        }
                    }
                };
                this.$VuWw = function(a, e, f) {
                    for (var d = 0; d < a.length; d++) e.volume(f, a[d]);
                };
                this._QooQ = function(a, e, f, d, c, g) {
                    for (var h = 0; h < f; h++) {
                        var k = a[h] = [];
                        for (ov = 0; ov < d; ov++) k[ov] = U.sample[c + ov][h], e.wUo.volume(g, k[ov]);
                    }
                };
                this.UvU = function() {
                    U.QoUov();
                    U.vQ0.UV$v$ = [];
                    U.vQ0.vuo = [];
                    U.vQ0.OQU = [];
                    U._QooQ(U.vQ0.UV$v$, Ya.Qv_$0, 8, 3, "p", 0.15);
                    U._QooQ(U.vQ0.vuo, Ya.vWOvV, 8, 4, "w", 0.15);
                    U._QooQ(U.vQ0.OQU, Ya.ou_wW, 8, 3, "d", 0.09);
                    U.$VuWw(U.sample.voo, U.ow.voo, 0.15);
                    U.$VuWw(U.sample.u0V, U.ow.u0V, 0.2);
                    U.$VuWw(U.sample.U0U, U.ow.U0U, 1);
                    U.OUw.Uo_Ww = new wf(12, this.sample.u$uU$, this.sample.QWvV$, 5000, 0.05, 0.4, Ya.Ovo.wUo, 3000, {
                        x: e.oU0,
                        y: e.UQo,
                        w: p.w,
                        uQ: p.uQ
                    }, {
                        x: e.oU0 - 2300,
                        y: e.UQo - 4000,
                        w: p.w,
                        uQ: p.uQ
                    }, {
                        x: e.oU0 - 1500,
                        y: e.UQo - 2000,
                        w: p.w,
                        uQ: p.uQ
                    });
                    U.OUw.UvVuu = new wf(12, this.sample.QVOvv, this.sample.v_vuv, 5000, 0.03, 0.25, Ya.Ovo.wUo, 3000, {
                        x: 0,
                        y: e.UQo + 800,
                        w: e.oU0 - 2300,
                        uQ: p.uQ
                    }, {
                        x: -100,
                        y: e.UQo - 300,
                        w: e.oU0 - 100,
                        uQ: p.uQ
                    }, {
                        x: -100,
                        y: e.UQo + 400,
                        w: e.oU0 - 1400,
                        uQ: p.uQ
                    });
                    U.OUw.__Q = new wf(12, this.sample.OQQo_, this.sample.UOVOW, 5000, 0.01, 0.22, Ya.Ovo.wUo, 3000, {
                        x: -100,
                        y: -100,
                        w: p.w + 200,
                        uQ: e.UQo - 1000
                    }, {
                        x: -100,
                        y: -100,
                        w: p.w + 200,
                        uQ: e.UQo + 600
                    }, {
                        x: -100,
                        y: -100,
                        w: p.w + 200,
                        uQ: e.UQo + 100
                    });
                    for (var a = 0; 8 > a; a++) U.UO[a] = new Rj(a);
                    U.UO[0].UvU(m.v$o);
                    U.loaded = 1;
                };
                this.uwooQ = function() {
                    (!this.Q$w && (460000 > p.OOO.now)) && (this.Q$w = 1);
                };
                this.wv0 = function() {
                    if (this.ooU && this.loaded) {
                        for (var a in U.sample) {
                            var e = U.sample[a];
                            if ("object" === typeof e)
                                for (var f = 0; f < e.length; f++) U.ow[a].stop(e[f]);
                            else U.ow[a].stop(e);
                        }
                        for (f = 0; f < U.UO.length; f++) U.UO[f].oovuO();
                    }
                };
                this.select = function() {
                    U.ooU ? U.wv0() : (U.loaded || U.UvU(), U.UO[0].v$o = m.v$o, U.UO[0]._UW = 0, U.uwooQ());
                    U.ooU = !U.ooU;
                };
            },
            kb = new function() {
                this.$VV = function() {
                    this.Uou = 81;
                    this.oOV = 68;
                    this._Q0 = 90;
                    this.Q_0 = 83;
                };
                this.Qovoo = function() {
                    this.Uou = 65;
                    this.oOV = 68;
                    this._Q0 = 87;
                    this.ouW = 83;
                };
                this.$uQ = 0;
                this.Q_0 = 1;
                this.WQQV0 = 49;
                this.WwQvw = 50;
                this.W0vOu = 51;
                this.$Ooww = 52;
                this.VWQW_ = 53;
                this.Qvo0O = 17;
                this._Qu_O = 37;
                this.o$Q0O = 39;
                this.uOV_U = 38;
                this.$oW_O = 40;
                this.u_WV_ = 32;
                this.wVQ$U = 82;
                this.ww$UQ = 71;
                this.o$_Wo = 86;
                this.O0OWW = 66;
                this.Qovoo();
                this.keys = Array(255);
                for (var a = 0; 255 > a; a++) this.keys[a] = this.$uQ;
                this.uoQ = function(a) {
                    a = Math.min(a.charCode || a.keyCode, 255);
                    this.keys[a] = this.$uQ;
                };
                this.uwW = function(a) {
                    a = Math.min(a.charCode || a.keyCode, 255);
                    ((a == this.Uou) || (a == this._Qu_O)) ? this._wWW_(): (((a == this._Q0) || (a == this.uOV_U)) ? this._ovUV() : (((a == this.Q_0) || (a == this._VO_o)) ? this.$vQwQ() : (((a != this.oOV) && (a != this.o$Q0O)) || this.$OWvV())));
                    this.keys[a] = this.Q_0;
                    return a;
                };
                this._wWW_ = function() {
                    this.keys[this.oOV] = this.$uQ;
                    this.keys[this.o$Q0O] = this.$uQ;
                };
                this.$OWvV = function() {
                    this.keys[this.Uou] = this.$uQ;
                    this.keys[this._Qu_O] = this.$uQ;
                };
                this.$vQwQ = function() {
                    this.keys[this._Q0] = this.$uQ;
                    this.keys[this.uOV_U] = this.$uQ;
                };
                this._ovUV = function() {
                    this.keys[this.ouW] = this.$uQ;
                    this.keys[this.$oW_O] = this.$uQ;
                };
                this.Vouov = function() {
                    this.keys[this.oOV] = this.$uQ;
                    this.keys[this.o$Q0O] = this.$uQ;
                    this.keys[this.Uou] = this.$uQ;
                    this.keys[this._Qu_O] = this.$uQ;
                    this.keys[this._Q0] = this.$uQ;
                    this.keys[this.uOV_U] = this.$uQ;
                    this.keys[this.ouW] = this.$uQ;
                    this.keys[this.$oW_O] = this.$uQ;
                };
                this.Uw_wV = function() {
                    return this.keys[this.Uou] || this.keys[this._Qu_O];
                };
                this.V0W0Q = function() {
                    return this.keys[this.oOV] || this.keys[this.o$Q0O];
                };
                this.oVvwQ = function() {
                    return this.keys[this._Q0] || this.keys[this.uOV_U];
                };
                this.U$OVu = function() {
                    return this.keys[this.ouW] || this.keys[this.$oW_O];
                };
                this.Q$wWV = function() {
                    return this.keys[this.Qvo0O];
                };
                this.OVVwO = function() {
                    return this.keys[this.WQQV0];
                };
                this.oOvQ$ = function() {
                    return this.keys[this.WwQvw];
                };
                this.vQVQ0 = function() {
                    return this.keys[this.W0vOu];
                };
                this.$wWvO = function() {
                    return this.keys[this.$Ooww];
                };
                this.$0vV0 = function() {
                    return this.keys[this.u_WV_];
                };
                this.QwW0O = function() {
                    return this.keys[this.wVQ$U];
                };
                this.QvQvW = function() {
                    return this.keys[this.ww$UQ];
                };
                this.OVV_0 = function() {
                    return this.keys[this.o$_Wo];
                };
                this.v$vw$ = function() {
                    return this.keys[this.O0OWW];
                };
            },
            W = new function() {
                this.Q_0 = 0;
                this.$uQ = 1;
                this.IDLE = 2;
                this.U$QwV = 0;
                this.wVuWU = 1;
                this.Uu = {
                    x: 0,
                    y: 0
                };
                this.$uWwo = this._v_0o = 0;
                this.angle = 0;
                this.state = this.IDLE;
                this.U_o = this.U$QwV;
                this.uwW = function() {
                    this.state = this.Q_0;
                };
                this.uoQ = function() {
                    this.state = this.$uQ;
                };
                this.update = function() {
                    return ((this.Uu.x != this._v_0o) || (this.Uu.y != this.$uWwo)) ? (this._v_0o = this.Uu.x, this.$uWwo = this.Uu.y, !0) : !1;
                };
            },
            O = 0,
            bb = 0,
            oc = new function(a, e, f) {
                function d(a) {
                    return ((-1 !== a.indexOf("normal-mode")) || (-1 !== a.indexOf("player0"))) ? 1 : (((((((((((((((((((((((((((((((((((((((((((((-1 !== a.indexOf("day-bag")) || (-1 !== a.indexOf("night-bag"))) || (-1 !== a.indexOf("day-book"))) || (-1 !== a.indexOf("night-book"))) || (-1 !== a.indexOf("day-player"))) || (-1 !== a.indexOf("night-player"))) || (-1 !== a.indexOf("day-accessory"))) || (-1 !== a.indexOf("night-accessory"))) || (-1 !== a.indexOf("day-crate"))) || (-1 !== a.indexOf("night-crate"))) || (-1 !== a.indexOf("day-skin"))) || (-1 !== a.indexOf("night-skin"))) || (-1 !== a.indexOf("day-river"))) || (-1 !== a.indexOf("night-river"))) || (-1 !== a.indexOf("day-river"))) || (-1 !== a.indexOf("night-river"))) || (-1 !== a.indexOf("day-rock"))) || (-1 !== a.indexOf("night-rock"))) || (-1 !== a.indexOf("day-flower"))) || (-1 !== a.indexOf("night-flower"))) || (-1 !== a.indexOf("day-leaf"))) || (-1 !== a.indexOf("night-leaf"))) || (-1 !== a.indexOf("day-herb"))) || (-1 !== a.indexOf("night-herb"))) || (-1 !== a.indexOf("day-shell"))) || (-1 !== a.indexOf("night-shell"))) || (-1 !== a.indexOf("day-hand-skin"))) || (-1 !== a.indexOf("night-hand-skin"))) || (-1 !== a.indexOf("bignight"))) || (-1 !== a.indexOf("bigday"))) || (-1 !== a.indexOf("bigzday"))) || (-1 !== a.indexOf("bigznight"))) || (-1 !== a.indexOf("tutorial-box"))) || (-1 !== a.indexOf("tuto-"))) || (-1 !== a.indexOf("-leaderboard-"))) || (-1 !== a.indexOf("-lead-"))) || (-1 !== a.indexOf("day-lava-"))) || (-1 !== a.indexOf("night-lava-"))) || (-1 !== a.indexOf("-click.png"))) || (-1 !== a.indexOf("-in.png"))) || (-1 !== a.indexOf("-fog"))) || (-1 !== a.indexOf("-lava"))) || (-1 !== a.indexOf("pebblecompo"))) || (-1 !== a.indexOf("avatar-player"))) ? 0 : 1);
                };

                function c(a) {
                    for (var c in o) {
                        var e = o[c];
                        (("string" === typeof e) && (d(e) === a)) && (o[c] = new Image, o[c].__o = 0, o[c].onload = p, o[c].onerror = A, o[c].vQo = n, o[c].$Ov = ("https:" !== M.location.protocol) ? e : ("https://starve.io/" + e));
                    }
                };
                this.vV = a;
                this._ = e;
                this.Qov = {
                    translate: {
                        x: 0,
                        y: 0
                    },
                    style: document.getElementById("loading").style,
                    update: function() {
                        this.style.left = this.translate.x + "px";
                        this.style.top = Math.floor(this.translate.y) + "px";
                    }
                };
                this.Qov.style.position = "absolute";
                this.Qov.style.display = "inline-block";
                this.Qov.update();
                this.OwV = !0;
                this.stop = function() {
                    this.OwV = !1;
                };
                this.vUw = {
                    total: 1
                };
                var g = this,
                    h = function() {},
                    k = 0;
                this.W_V = function() {
                    g.update();
                    k++;
                    if (40 == k) g.stop(), h();
                    else M.setTimeout(g.W_V, 33);
                };
                this.wv0 = function(a) {
                    h = a;
                    g.W_V();
                };
                var l = (new Date).getTime();
                a = Object.keys(o).length;
                console.log("Image to load: ", a);
                for (var m in o)(0 === d(o[m])) && (a--);
                console.log("Image to load with high priority: ", a);
                var n = function() {
                        if (0 !== this.__o) return this.__o;
                        this.__o = 2;
                        this.src = this.$Ov;
                        return 0;
                    },
                    p = function(a) {
                        this.__o = 1;
                    },
                    q = 0,
                    r = function(a, c) {
                        if (a) {
                            if (1 !== q) {
                                q = 1;
                                console.log(Date.now() - l);
                                (Ua !== Nd) && Nd();
                                Ua();
                                var d = OQ.UVvOw("server");
                                (null === d) ? oQ.wvWQo(): (oQ.vvu = 1, oQ.VQ_ = [{
                                    nu: 0,
                                    m: 100,
                                    i: ("server" + d) + ".starve.io",
                                    p: 443,
                                    a: "Private Server " + d,
                                    ssl: 1
                                }]);
                                oQ.wUwvw();
                                setTimeout(f, 100);
                            }
                        } else(4 === c) && setTimeout(function() {
                            location.href = "https://starve.io";
                        }, 1000);
                    },
                    t = function() {
                        oQ.OouVU(r, "datas/info.json");
                    },
                    z = function() {
                        (document.fonts && document.fonts.$QQ) ? (document.fonts.$QQ("1em Baloo Paaji") ? setTimeout(t, 100) : setTimeout(z, 100)) : setTimeout(t, 1000);
                    },
                    A = function() {
                        var a = this.src,
                            c = (0 === d(a)) ? 10000 : 2000;
                        setTimeout(function() {
                            for (var c in VWUwO)
                                if (-1 !== a.indexOf(VWUwO[c])) {
                                    o[c] = new Image;
                                    o[c].onload = p;
                                    o[c].onerror = A;
                                    o[c].src = a;
                                    break;
                                }
                        }, c);
                    };
                c(1);
                c(0);
                Ia(1, "l", 20, "#000");
                z();
                xg();
                this.update = function() {
                    this.Qov.translate.x = (ka - 500) / 2;
                    this.Qov.translate.y = (ta - 150) / 2;
                    this.Qov.translate.y -= (2500 / ((40 - k) + 1)) - 48;
                    this.Qov.update();
                };
                this.Qov.update();
                this.uW = function() {
                    try {
                        df();
                    } catch (a) {}
                    this.update();
                };
            }(ua, l, function() {
                ei();
                C = new Fj(ua, l);
                G = new yj(ua, l);

                G.OovO0();
                Tb = new Ij(ua, l);
                p = new vj;
                m = new xj;
                oc.wv0(function() {
                           if(!window.MainSetting.Hacks.Misc.AutoRejoin) {
                            oc.Qov.style.display = "none";
                            G.ooU();
                           }



                });
            });
        Load();

        function resetCOORD() {
            if (window.typesArr.length < 1) return;
            let object = window.typesArr[0][indexArr] || 0;
            if (!object) return;
            myX = window.typesArr[0][indexArr].x;
            myY = window.typesArr[0][indexArr].y
        };

        M.onbeforeunload = function() {
            if (C.OwV) return "Are you sure you want quit starve.io ;-; ?";
        };
        ld();
        Zg(0);
        M.YMPB ? (QWWou = 1) : (M.YMPB = M.YMPB || ({}), QWWou = 0);
        M.YMPB.que = M.YMPB.que || ([]);
        M.aiptag = M.aiptag || ({});
        M.aiptag.consented = !0;
        M.aiptag.cmd = M.aiptag.cmd || ([]);
        M.aiptag.cmd.display = M.aiptag.cmd.display || ([]);
        M.aiptag.cmd.player = M.aiptag.cmd.player || ([]);
        M.aiptag.cmd.player.push(function() {
            adplayer = new aipPlayer({
                AD_WIDTH: 960,
                AD_HEIGHT: 540,
                AD_FULLSCREEN: !0,
                AD_CENTERPLAYER: !0,
                LOADING_TEXT: "loading advertisement",
                PREROLL_ELEM: function() {
                    return document.getElementById("preroll");
                },
                AIP_COMPLETE: function() {
                    oQ.connect();
                },
                AIP_REMOVE: function() {}
            });
        });
        let int01;
     BlizzardImg = new Image();
     BlizzardImg.src = 'https://cdn.discordapp.com/attachments/834460240602071110/885307291983835176/-1-1.png';
     SandstormImg = new Image();
     SandstormImg.src = "https://cdn.discordapp.com/attachments/834460240602071110/885306030861475910/2131231-1.png"


        function joinGame(cdd) {
            if (!cdd) {
                int = setInterval(() => {
                    enabledHacksArray = [];
                    window.typesArr = p.Ww;

                    checkFunctions();
                    window.myHp = m.OWW.QU;
                    window.block = m.Ow.mode;
                    autoice && AutoIce.range > m.OWW.u$V && oQ.socket.send(JSON.stringify([5, 136]));
                    aimbotCheckPlayers(1)
                    if(_Spect.enabled){
                        _SpecMove()
                    }
                    if(myHeal <= 0) {
                        myHeal = 10;

                    }

                   rainbowText();
                }, 1000 / 60);
                int2 = setInterval(() => {
                    window.inventory = [];

                    for (let i = 0; i < window.typesArr[0].length; i++) {
                        if (window.typesArr[0][i].OV_ === oQ.player.id) {
                            indexArr = i;

                        }
                    }
                    window.inventory = m.wW.WQ;
                    window.inWater = m.Ow.oWu;
                    imPlay = true;

                    if(AimBotStfu.isTargeting == true){
                        AimBotStfu.count = 0;
                    }
                    if(window.MainSetting.Hacks.AutoFarm.enabledFarm) {
                        if( window.MainSetting.Hacks.AutoFarm.needWater == 1) {
                            oQ.socket.send(ma[Aa].stringify([5,49]));
                         }else {
                                oQ.socket.send(ma[Aa].stringify([5,53]));
                         }
                    }


                  if(texturePack) {
                    textureOn(true)
                  }else {
                    textureOn(false)
                  }
                }, 1000);



            } else {
                enabledHacksArray = [];
                window.inventory = [];
                window.inWater = !1;
                window.typesArr = [];
                imPlay = false;
                xray = false;
                _Spect.enabled = false;
                SPECAXIS.up = false;
                SPECAXIS.down = false;
                SPECAXIS.right = false;
                SPECAXIS.left = false;
                 myHeal = 11;
                _Spect.x = 0;
                _Spect.y = 0;
                clearInterval(int);
                clearInterval(int2);
                clearInterval(int4);
                clearInterval(int01);

            }
            if (!cdd) {

            }
        }


        function checkFunctions() {
            if (window.MainSetting.Hacks.AutoFarm.enabledfarm) {
                enabledHacksArray.push("AutoFarm");
                if (!autocheck2) {
                    autocheck2 = true;
                    int4 = setInterval(autoFarmFunc, 350);
                }
            } else {
                clearInterval(int4);
                autocheck2 = false;

            }
            if(!_Spect.enabled){
                _Spect.x = 0;
                _Spect.y = 0;
                SPECAXIS.up = false;
                SPECAXIS.down = false;
                SPECAXIS.right = false;
                SPECAXIS.left = false;
            }else{
                enabledHacksArray.push("Spectator");
            }
            if(!window.MainSetting.Hacks.Aimbot.enabledAim) {
                AimBotStfu.isTargeting = false
            }else{
                enabledHacksArray.push("Aim Bot")
            }
            if(window.MainSetting.Hacks.Aimbot.triggerBot) {
                enabledHacksArray.push("TriggerBot")
            }
            if(window.MainSetting.Hacks.Misc.smartSpikes) {
                enabledHacksArray.push("Smart Spikes")
            }
            if(window.MainSetting.Hacks.HoodBring.enabled) {
                if(imPlay){
                    testBringer();
                }

            }
            if(window.MainSetting.Hacks.Misc.SwordChest) {

                if(imPlay){
                    var gg = 2 * Math.PI;
                    AimItemStuff()
                    oQ.socket.send(JSON.stringify([10,161,Math.floor((((curan + gg) % gg) * 255) / gg), 0]))

                    if(window.MainSetting.Hacks.Misc.SmartSword){
                        setTimeout(() => {
                            chestScripts("put", SCWeaponID);
                          }, 25);
                          setTimeout(() => {
                            chestScripts("smart")
                          }, 35);
                          setTimeout(() => {
                            chestScripts("get");
                          }, 55);
                          enabledHacksArray.push('Smart Sword In Chest')
                    }else{
                        setTimeout(() => {
                            chestScripts("put", SCWeaponID);
                          }, 25);

                          setTimeout(() => {
                            chestScripts("get");
                          }, 55);
                          enabledHacksArray.push('Sword In Chest')
                    }



                }


              }

            if(window.MainSetting.Hacks.Misc.antiRotate) {
                if(imPlay){
                    enabledHacksArray.push('AntiRotate'), antiRotate()
                }

            }
            if (autototem) {
                enabledHacksArray.push("AutoTotem"), autoTotemJoin()
            };
            if (autoExtractorPut) {
                enabledHacksArray.push('AutoExtractor Put'), autoExtractors("put")
            };
            if (autoExtractorTake) {
                enabledHacksArray.push('AutoExtractor Take'), autoExtractors("take")
            };
            if (autoBreadPut) {
                enabledHacksArray.push('AutoBread Put'), autoBread("put")
            };
            if (autoBreadTake) {
                enabledHacksArray.push('AutoBread Take'), autoBread("take")
            };
            if (stealChest) {
                enabledHacksArray.push("StealChest"), chestScripts("get")
            };
            if (autoCrown) {
                enabledHacksArray.push("AutoCrown"), autoCrownEquip()
            };
            if (autoCraft) {
                enabledHacksArray.push("AutoCraft"), autoCraftA()
            };
            if (autoRecycle) {
                enabledHacksArray.push("AutoRecycle"), autoRecycleA()
            };

            if (document.getElementById('chat_block').style.display == 'inline-block') {
                return;
            } else if (document.getElementById('commandMainBox').style.display == 'inline-block') {
                return;
            } else {

                if (xray) {
                    enabledHacksArray.push('XRay');
                };
                if (autoSpike) {
                    enabledHacksArray.push("AutoSpike"), autoPlace()
                };


                if (dropSword) {
                    enabledHacksArray.push('DropSword'), dropSwordScript()
                };
            }

        };

        async function updateSpike() {
            for (let c of window.typesArr[20]) {
                c.o.img = checkspike(c)
            };
            for (let c of window.typesArr[14]) {
                c.o.img = checkspike(c)
            };
            for (let c of window.typesArr[13]) {
                c.o.img = checkspike(c)
            };
            for (let c of window.typesArr[52]) {
                c.o.img = checkspike(c);
            };
            for (let c of window.typesArr[51]) {
                c.o.img = checkspike(c);
            };
            for(let c of window.typesArr[53]) {
                c.o.img = checkspike(c);
            }
        };
        window.onkeypress = function(e) {
            if (document.getElementById('chat_block').style.display == 'inline-block') {
            } else {
            switch (e.code) {
                case keybinds.XRay.key:

                        xray = !xray;
                        enabledHacksArray.push('Xray')


                    break;
                case keybinds.AutoCrown.key:
                    autoCrown = !autoCrown;
                    break;
                    case keybinds.Spectator.key:

                        _Spect.enabled = !_Spect.enabled;

                    break;
                case keybinds.AimBot.key:
                        enabledHacksArray.push('Aim Bot')
                        window.MainSetting.Hacks.Aimbot.enabledAim = !window.MainSetting.Hacks.Aimbot.enabledAim;

                    break;
                    case "KeyW":
                        if(_Spect.enabled){
                            SPECAXIS.up = true;
                        }

                         break;
                     case "KeyA":
                         if(_Spect.enabled){
                            SPECAXIS.left = true;
                         }
                         break;
                     case "KeyD":
                     if(_Spect.enabled){
                        SPECAXIS.right = true;
                     }
                        break;
                     case "KeyS":
                         if(_Spect.enabled){
                            SPECAXIS.down = true;
                         }
                         break;
            }
        }
        };
        window.onkeydown = function(e) {
            if (document.getElementById('chat_block').style.display == 'inline-block') {
            } else {
            switch (e.code) {

                case keybinds.StealChest.key:
                    stealChest = !0;
                    break;
                case keybinds.DropSword.key:
                    dropSword = !0;
                    break;
                case keybinds.AutoSpike.key:
                    autoSpike = !0;
                    break;
                    case keybinds.SwordChest.key:
                        window.MainSetting.Hacks.Misc.SwordChest = !0;
                    break;

            }
        }
        };
        window.onkeyup = function(e) {
            if (document.getElementById('chat_block').style.display == 'inline-block') {
            } else {
            switch (e.code) {

                case keybinds.StealChest.key:
                    stealChest = !1;
                    break;
                case keybinds.DropSword.key:
                    dropSword = !1;
                    break;
                case keybinds.AutoSpike.key:
                    autoSpike = !1;
                    break;
                    case keybinds.SwordChest.key:
                        window.MainSetting.Hacks.Misc.SwordChest = !1;
                    break;

                    case "KeyW":
                        if(_Spect.enabled){
                            SPECAXIS.up = false;
                        }

                         break;
                     case "KeyA":
                         if(_Spect.enabled){
                            SPECAXIS.left = false;
                         }
                         break;
                     case "KeyD":
                     if(_Spect.enabled){
                        SPECAXIS.right = false;
                     }
                        break;
                     case "KeyS":
                         if(_Spect.enabled){
                            SPECAXIS.down = false;
                         }
                         break;


            }
        }
        };




        function _SpecMove() {
            if (document.getElementById('chat_block').style.display == 'inline-block') {
            } else {
            if (SPECAXIS.left) _Spect.x += _Spect.speed;
            if (SPECAXIS.right) _Spect.x -= _Spect.speed;
            if (SPECAXIS.up) _Spect.y += _Spect.speed;
            if (SPECAXIS.down) _Spect.y -= _Spect.speed;
            }
        }
        var cd = 0,
            qf = new XMLHttpRequest;
        qf.onreadystatechange = function() {};
        var Na = "https://token.starve.io/",
            Sg = 0,
            nf = 1,
            Qb = void 0,
            Pa = void 0,
            Ta = void 0,
            Tg = 0;
        M.u_Q = function() {
            Tg = 1;
        };
        var sf = {
                access_token: "ACCESS_TOKEN"
            },
            hd = document.createElement("script");
        hd.type = "text/javascript";
        hd.async = !0;
        hd.src = "https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
        hd.addEventListener("load", function(a) {
            M.XPayStationWidget.init(sf);
            M.XPayStationWidget.on("status-done", Lj);
        }, !1);
        document.getElementsByTagName("head")[0].appendChild(hd);
        M.fbAsyncInit = function() {
            M.FB.init({
                appId: "642017356260407",
                cookie: !0,
                xfbml: !0,
                version: "v3.3"
            });
            M.FB.AppEvents.logPageView();
            rf();
        };
        (function(a, e, f) {
            var d = a.getElementsByTagName(e)[0];
            a.getElementById(f) || (a = a.createElement(e), a.id = f, a.src = "https://connect.facebook.net/en_US/sdk.js", d.parentNode.insertBefore(a, d));
        })(document, "script", "facebook-jssdk");
        var lc = void 0,
            $b = void 0,
            Uj = function() {
                lc = M.gapi.auth2.init({
                    client_id: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
                    scope: "profile"
                });
                lc.isSignedIn.listen(Sj);
                lc.currentUser.listen(Tj);
                (!0 === lc.isSignedIn.get()) && lc.signIn();
                lc && ($b = lc.currentUser.get());
            },
            Sj = function(a) {},
            Tj = function(a) {
                rf();
                ((void 0 === Pa) && (void 0 !== $b)) && (Pa = $b.getAuthResponse().id_token, (void 0 !== Pa) && (Qb = Sg, M.u_Q(Ta)));
                ((void 0 !== a) && (!0 === a.isSignedIn())) && ($b = a);
            };

        M.onload = function() {
            M.gapi.load("auth2", Uj);
        };








        function playerEsp(o) {
            if(o.OV_ == oQ.player.id) return;
            var who = checkW2(o);

            var color = who ? oldColorIndex.AllyTracers.hex : state;

            l.save();
            l.fillStyle = color;
            l.beginPath();
            l.arc(m.VQ.x + o.x, m.VQ.y + o.y, 8, 0, 2 * Math.PI);
            l.fill();
            l.restore();
        };

        function lookbetter(d) {
            switch (d.info) {
                case 17:
                    return 1;
                case 18:
                    return 2;
                case 19:
                    return 3;
                case 20:
                    return 4;
                case 21:
                    return 5;
                case 22:
                    return 6;
                case 23:
                    return 7;
                case 24:
                    return 8;
            }
        };

        function checkObjects() {
            if (playerTrace) {
                for (let object of window.typesArr[0]) {
                    playerTracers(object)
                }
            }

            if(window.MainSetting.Hacks.Visual.krakenTrace) {
                for(let object of window.typesArr[66]) {
                    TracerTo(object, "#ff00ae")
                }
            }
            if(window.MainSetting.Hacks.Visual.wormTrace) {
                for(let object of window.typesArr[76]) {
                    TracerTo(object , "#000000")
                }
            }

            if(window.MainSetting.Hacks.Visual.seeBed) {

                let objects = window.typesArr[41];
                let nearest = getObjectsInRadius(oQ.player , objects , 0 , 99 , 0 , 99)
                let near = getNearestObj(nearest);
                if(!near) return;
                let ditrace = DistTo(oQ.player , near);
                if(ditrace < 50) {
                  DrawSomething("You On Bed", 0 , 400);
                }
            }

        }

        function checkEsp() {
            if (esp) {
                for (let object of window.typesArr[0]) {
                    playerEsp(object)
                }
            }
        }

        function aimbotCheckPlayers() {
            if (window.MainSetting.Hacks.Aimbot.enabledAim) {

                for (let object of window.typesArr[0]) {
                    checkAimbot(object);
                }
            }
        }

        function antiRotate(i) {
        }
        function AutoFood(s) {
            oQ.socket.send(JSON.stringify([5,104]));
        }
        function checkAimbot(o) {
            if (o.oV_ == oQ.player.id) return;
            var isAlly = checkW2(o);
            var me = function() {
                return;
            };
            var compare = isAlly ? me() : AimSend(o);
        }

        const calcMe = (p1, p2) => {
            var dy = p2.y - p1.y;
            var dx = p2.x - p1.x;
            var theta = Math.atan2(dy, dx);
            return theta;
        };

        function DistTo(me, enemy) {


            const dx = me.x - enemy.x;
            const dy = me.y - enemy.y;

            return Math.sqrt(dx ** 2 + dy ** 2);
        }

        function AimSend($obj) {


            let nearests = getAimInRadius(oQ.player, window.typesArr[0], 0, 99, 0, 99),
                near = getNearestAim(nearests, 'aimbot');
            if (!near) return;



            distTo = DistTo(oQ.player, near);
            AimItemStuff();
            if (window.MainSetting.Hacks.Aimbot.triggerBot) {
                if (distTo < AimbotRadius.spear && AimBotStfu.AimItemType == 2) {
                    AimBotStfu.AimArray.push(near);
                    AimBotStfu.Dir = calcMe(oQ.player, near);
                     if(window.MainSetting.Hacks.Misc.smartSpikes){
                        if(distTo < AimbotRadius.spike + 40) {
                            autoPlace()
                        }
                     }


                    let rot = 2 * Math.PI;

                    AimBotStfu.Angls = Math.floor((((AimBotStfu.Dir + rot) % rot) * 255) / rot);
                    AimBotStfu.AimArray.splice(0, AimBotStfu.AimArray.length);

                    oQ.socket.send(JSON.stringify([4, AimBotStfu.Angls]));
                    AimBotStfu.lastIndex = 0;
                    AimBotStfu.isTargeting = true;
                } else {
                    if(imPlay){
                        AimBotStfu.isTargeting = false;
                        if(AimBotStfu.lastIndex < 2) {
                            AimBotStfu.lastIndex++;
                            oQ.socket.send(JSON.stringify([14]))
                        }

                    }

                }
                if (distTo < AimbotRadius.sword && AimBotStfu.AimItemType == 1) {
                    AimBotStfu.AimArray.push(near);
                    AimBotStfu.Dir = calcMe(oQ.player, near);

                    if(window.MainSetting.Hacks.Misc.smartSpikes){
                    if(distTo < AimbotRadius.spike) {
                        autoPlace()
                    }
                }

                    let rot = 2 * Math.PI;
                    AimBotStfu.Angls = Math.floor((((AimBotStfu.Dir + rot) % rot) * 255) / rot);
                    AimBotStfu.AimArray.splice(0, AimBotStfu.AimArray.length);

                    oQ.socket.send(JSON.stringify([4, AimBotStfu.Angls]));
                    AimBotStfu.isTargeting = true;
                    AimBotStfu.lastIndex = 0;
                } else {
                    if(imPlay){

                        AimBotStfu.isTargeting = false;
                        if(AimBotStfu.lastIndex < 2) {
                            AimBotStfu.lastIndex++;
                            oQ.socket.send(JSON.stringify([14]))
                        }
                    }
                }
                if (distTo < 20 && AimBotStfu.AimItemType != 1 && AimBotStfu.AimItemType != 2) {
                    AimBotStfu.AimArray.push(near);
                    AimBotStfu.Dir= calcMe(oQ.player, near);

                    let rot = 2 * Math.PI;
                    AimBotStfu.Angls = Math.floor((((AimBotStfu.Dir + rot) % rot) * 255) / rot);
                    AimBotStfu.AimArray.splice(0, AimBotStfu.AimArray.length);
                    oQ.socket.send(JSON.stringify([3, AimBotStfu.Angls]));
                    AimBotStfu.isTargeting = true;
                }
            } else {
                if (distTo < AimbotRadius.spear) {
                    AimBotStfu.AimArray.push(near);
                    AimBotStfu.Dir= calcMe(oQ.player, near);

                    let rot = 2 * Math.PI;
                    AimBotStfu.Angls = Math.floor((((AimBotStfu.Dir + rot) % rot) * 255) / rot);
                    AimBotStfu.AimArray.splice(0, AimBotStfu.AimArray.length);
                    oQ.socket.send(JSON.stringify([3, AimBotStfu.Angls]));
                    AimBotStfu.isTargeting = true;
                }else{
                    AimBotStfu.isTargeting = false;

                }
            }




        }

       setInterval(() => {
        if(window.MainSetting.Hacks.Visual.autofeed) {
            if(imPlay && window.MainSetting.Hacks.Others.feedType == true) {
                AutoFood();
            }
        }
       }, 12000)

        function playerTracers(o) {
            if (o.OV_ == oQ.player.id) return;
            var who = checkW2(o);

            var color = who ? oldColorIndex.AllyTracers.hex : state;

            l.save();
            l.strokeStyle = color;
            l.beginPath();
            l.lineWidth = 3;
            l.moveTo(m.VQ.x + o.x, m.VQ.y + o.y);
            l.lineTo(m.VQ.x + myX, m.VQ.y + myY);
            l.stroke();
            l.restore();
        };
        function TracerTo(obj , $color) {
            let color = $color;
            l.save();
            l.strokeStyle = color;
            l.beginPath();
            l.lineWidth = 3;
            l.moveTo(m.VQ.x + obj.x, m.VQ.y + obj.y);
            l.lineTo(m.VQ.x + myX, m.VQ.y + myY);
            l.stroke();
            l.restore();
        }
        function genImg2(a) {
            var e = new Image;
            e.src = a.toDataURL("image/png");
            e.width = a.width;
            e.height = a.height;
            e.__o = 1;
            return e;
        };
    })();
   }, 1500)